%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: manuscript_v15.dvi
%%Pages: 33
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMSY10 CMBX10 CMR10 CMBX12 CMTI12 CMMI12
%%+ CMMI8 CMR6 CMSY6 CMMI6 CMEX10 CMR8 CMSY8 CMMI10 CMMI7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips manuscript_v15 -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2008.07.11:1501
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
30F7B5CE2041568C18D8F66D36C31B003C916EC1494C3FCACCADBDCCE2286BA6
E45CAF7F45495C98D56FFB74D457DE124DB3721D2D086ACD758AD2A5F7A11467
607911B26E5074E389380974E14954483E10B344D1184CBAC835E251249D8472
E56A5FAB84BB6E4AEA6E370D6EF65CCD99C7552A00BD905BF325286F59D91E16
608B8DB964F8A15E5AAA077949DF2273D8594DA00F942F5C04D66CB835CEC7A5
001FFA2B340F0A2C53F9BB8B9DF315DEAD2D65214D02B27A3EB50150E4DF8029
6959F4965DDFEE07856A921B9500373CF75A62F4A58D7DB1A4352D6B3674D294
5AEA649C792C554D856C7287EC93FEB643A5E94CD4128308A587C7C2AFE880CF
CF5DA8954E82D117782072B7EA453025B5BAAD2F927E5A32B0B5080609100F74
BC79F3312BC1E92C73B6DB0EDA086310D0F51280CB512AA62F292C3F9C02C596
A18C5E3FE2D1415DA2B43A871D599B7939EAB12007BCA6F72773D7CEC556D2AA
EE349AE2DF20694E2C2E334D2912CF28AE1541206D65C99AC7EE39A03699D017
0AB0F95B578D3F75E9C00BE2422F1DEA2A38AD8B85544C21E1DE327C034FFCED
61B08080942D0101B120BD7A6B7F5555627BDA5C2F1AFFCF3CFFB8A63628522A
1BC9FC980D84B831F6653CEA71652730BFE6A5BF93284E850DC3CE0291CFB207
1FC6FA5768826AFE20A5CFE90E1E7F67B1228631F024FC94EDB823454E52F5E3
558180572645A1656391C67C8629B25A98F5443444F2BC3ADC63589A35D9F4A6
DD02918FC18DFC2ABC7DE52C6131F673490AAC6DB92262350E11F1C2D2E49195
0CA896E3E89A17DE2E67DACAAA5F3BA276556A103D8A748CDF81B4BF3424B32C
D1B1589C5BE35178AF805C75A0C239F01DB893BA558DA4FB07D0F3A0BC1A5254
A994C95EB665F44D5526650DD0A1692B7A5FF2FEFFA6EF3FEA3C026A7601E17D
1510BA0EEA41B0FE521A1605C03137FCF196D68FFBEB30DB59AA034CD665674A
2E1291E5C9470982201C83824636772ABD0B7371C6347297AB75B4C98F3CFF4C
F195E7680D3DB43DEC0245C7ECFAD23339BA5ADDE6AB1F2C7BA9BB6A2A2E5695
86E1CCF83CF181FA2D6B6F9D3543C92F6BC82D8BEEE51056E7F2E82B4A9AEFB3
74EA5265CE2CBA404A3A1B8BE94BA3062663EC88AB49CD128B439C71A38B6168
8D465B0966D3F8B136026B39927396A081961A0636EEA30F0785AA386FC6F863
C0A1CA672F3D92AC1CEFED9646FB2EA3AEE00B3E84C449DD095D367B962DD548
1C6CEC446D2C4378F5903D8E216FC52C0D1C8B12DB5D71DEC63BA691EF0C8A77
4357453447EC45C5390291F22BAB6FC3007DDE05D919554D87DC7CCCA7B3DA87
EC7981998F0F7BA54D33F51AB38BA713F1C9B04916706AB240931A022E8A56F0
25E43F081F5A606B3272077CB33D71AF2FD3FCCAF620DF4F88B924E4FB2DC77A
7E2B50007D918B57950CBE76D7D624484260109560D62ED7D25C8E6E7B7A527B
8F6EF18FFB8BA16CB4461B43F4249DA9B177E2AFD9393E76445FAC3922A27F53
9336440059A3B29C7642F26D8D70D3EDE38FD0F7EF04C987A6EA110B4615EF22
E05C387566EB299843CC23E213C45BD8784F22B4C3643FDAE021219A46DED35A
4FC9A9AF0C53089A904B7B0914FA236C70193BD7E76BD73656F4478143737A2F
10DEA4A6C9F547ED8F29E662491886D7B9D45C3AF7D4497745B633BAB76486BB
887526155EC1C112336A8CEAFED17FE088A02D6A76BEC9FC0D98EE0D1D6721D6
5447A0BDAF935EF38DE1712771B398718E8E679EE6AB81BF4A1E7B3CB316D491
5BF4F7A379EEDF91058E14C58487A81AD8A22897FB22E3BA503A2B7D517533EB
D5D835E4E71FE5949693CA1504B8C7562066D51E324582CC538E67D49075C155
6E087805CB840D89F9B571CC846C21AF1A66C8E620F528C349CD1674DF64AC62
7C174D13C6F2C760E9431A70F83082B0306625F037FC2B8C8DAA602F8425BC9E
7E15433E45400E8988DD94A807F958F0F3F0598BE8574F62CD55A5221F921FC2
49B905E3270CAF50F82B32A55EFE830BB4B2A343E6FB59A682F6CBFF59DC38BA
E2D3F3AE0036BF1E36D92E9EB6005D25E97BA367D7DADCEBF74FEACD2CF49B98
2B101580AE67A7AC9160384D0E89000D956D04886675789A28C77B6852692EC9
282A503DD9F86F141219E7CF713E52D72F60AD5DEE61033DB674A07913815A60
24506A32F8480EF8CEF3D681EAC502DB9A841AA40582EE85B1D7313517AFE36D
9F1F2E1BCC67D8CBE44CEC46D0EF731BEB732F83D5DC102D9A458EBDAE561A1E
BE9B1408EF9DF40F37DE0D4F1858E96E06AE15270A87819AD7741A842FEEDE3C
369EBCC19D310F97CED040692FF054C8758D3ADE55515A2D3CA2188543A66C76
70567D36BD2CC084EE990F47BBD6880A12ECFD039847927CEE824A7D06B14F9D
28C06791BF36134649C04A1E6A95575C5368BCE0EED52F91157A07DE5D0AFE29
E816CC9CFBC96E003D334E4910EC70F68F8252874A261529E21F9AAE25C84739
F43F4BBC0D6A6ABB8EF708C93F49A2D91DD584560578D4A8FB000DEF84F14487
7BCEDF5972B73C5B9A5A79971ADBFCC07DDD87FBEEA64CFC86A0283F05775218
3B7FB4940E6E171E92229E121EA4C6FE56AE5BF16414FE71334EB40D20CFCB42
CBDFC58E0457CE7602A225877B08844E1B2904E6415E40BDFC4F03D3FA4C75E1
0F09AC54856154DB4CA17665E78D92B6622AC2C28B39C69298AD070B622D6CCE
1ED121C62447CD02CCB2A982799626635BAD4C710B8ECC51037CE49BE76E4351
C2478AD3440B879B232B174D004AB705AD756405EE6F21CB6B381BEB143A0EDD
8239D10C6AB67923017D609101FA244120259AFBF79193B2A7DF8B84487C99C6
1AE91FE7DF12C97AA776965F18B8A61894CB90916559BC3583CBE2AFC64B7F9D
89FABE1DDDA79C2E32AC9B81D5C847E4C4EF5A79B3FBD4A0689D95E9E7A0AA79
42135E0E93EEED07E46B783807BF69E4057570F6FB275C79566CA062FDC8BECC
07B300104CA31D515F066A12B72342CC500E5F96B9E9D5F58F6B38C11BB798C6
581333B7555C7EFF9220A16E4DE2C4696BCE5569E5F6221D8E85CF6B1933FDAC
D78B04EE76DC4941557CC64F040B2DADAAE4C3BD574B152AD2BDEDD43336ED4F
422EEB3A78CCEE6EB53AABD07A76C012055C4DB27B62B9A01386CA1994F22CC5
936E598E20F24855B71CD06B2487689F2DFCA95AC34956A9912A263E5D8D5861
B9C54473E3FCC56FD20F98F33073586EC2C803C33054217AFA444054E457B010
264CBA246207E70F7B92EBF252040DBCA10ED3A30BA436F253A55625E486BFE6
2FD11758F54F9738C0EA164353B3EDD3609120695A0B45BBE8208D9502501665
E5D6F37BD0A792329C01DD8290D76A423CC91E4B49FE67EFA62FAFAE9AAFE966
EE72CE6555748477A2F335A80FDBF127DFC2276420E4570CA2D45870870715BA
99E5262A1A13B709318BCAED950901A8583367FC4D81C3E62F60EC295D17A1E4
DE033DD1320454392E4925A88F564FDEEC1C480A56A0C7FA34F026D25C5126B7
E482F9F84D9FCE86FB10D6185751FA189457CA023DAA5EF11A78768CDF45B08C
7579DBD31C77FFD78F510F99A658F68F3C829A321125E44C0B47466497C85589
0EC2F7F7A83CB9788D06D8262E699DC6654441F77887828EE06A20AAFC934780
BA32A1F07FF0790ED7D89DB28225DCEA9C9C8D9C95BB97B23C6519CF0F55A6EE
9204D4A0C37338D4C363CEE88991B5037E6B4AED4B871F732825204D590762D0
D80C24405E865A6206E4C45BA8FB184100E4E711B688AD1A216872FC8C1788D6
5ABC917C53E192F61C69BA53A5588B8C01FC3AE118683B1C2BC06C7F0109ECBB
B6B75020961A1482E3261088EF7FD4D3CA94984E2F3F0593BD3278724B324484
F3BA1288D9A82BC048861A2552ECEEF9FB346EC34F79CF6C4D8A4414C983874A
B56D2191B5D4610A2ECDC2AEFCACD793B4A002A1781EFCD7511F19D20D4A4827
998D22AB558B82763097126401AC9BAA416668D9BB5CE18866DAC17FE404C504
F8BFDB5EB3276E47C84E1FB2365822D4E5495C99624AC4812846FB1A4028F59E
B9E19916A3B8B0AFCE567E29A188CEA47851741FF75A4A3297BA2087DA8DAB60
9040C5AAA94A84C448D5DC0EA08E4A6073F0638DD09D80EABFB9BF63F8034AF4
D87515A6AE1B394B0F6EE883E665B89D8A1D785754540F04FCCD715DB1100D65
57145D371B482246488AACD33C3EB3248E7CC9B98CECD68C7CE5439C97038CB6
C0E25F8CD16F4DF4A07662D6B367123F6C332224F44B2102E84E6DE77083E33C
AB94309C4E9CCE6FAA84CBC03CF10D517DE540CB16E67D67A44D78AAD40C61D5
BC8B3F94D32F0E7FEB12508F9D875A73A8899E0D07E965E492DFA974B361E851
28796E4CC6A35C3C67666DF158941C2DE422017BBAF3A15A3AB4F62F3ACC8CFA
CF86C16DB2920FB5A9AFA4E2EA3AFBA43ACCAD6AF0ABAE9D5FC78B03090F2991
FEA1C6E55658AA7D70BAD8985924EB74BE6F44D7DA1D52F250ACE81C09B28B42
C84ADC06CC429CF53AF927FC64E4EED5A935ACBADB684C29ABCBF4B4F5290CDD
925525081ADBB3A345FC1FAA105029ADEA180CD2099EE8D8AE09B89054CFC8C3
E57E9B090D18431B8E98457027B88B1A4CDA886D13AEA851C749D09FD089BC87
F131C06035DF96E1A7F8A3C819E4CD4F7D72BC3FFFD4293AE116A7FEE5824EAB
AAFEA08409CB0B8371715C6AA230A4D1E9941049DC3D912B7D6F00F4ACC9F23D
7CF02DF100F62C7E3FED3FAD1EFEA9B660388380FCA878C985181043E03644FE
7535187379F7505E0C0EFDF2B6197CB3D7EB9812FDA64F7ADDF788AECDB196DB
82DCD480188FEE89F3F6A8847F863C8377F798B8A9BDF34C8276E301B30F89DB
41782DFBB91BCA4E56FB64A49580C1EFB1493DE1CA425A7F6A114165D80FAE57
F63F9B3DB4C02DC0CD1AD9B8CF44444D01B82CADBC65D373A3BB77807BC246DB
2468F9CF1C8133976263A7576CEA051F18913DA979D0652841B399E3F0BBA495
02454B3F4B68D72FDA8AD0D5D41996A6B0CE323BE9A4CB01D682420AF380A6EF
30EB89C0E273788FA3F4F5D6575645607F7735110580C0423137345A0C788E27
CE0373FF70997F9A1984898A3A4F07B705F903900B215E8469EB478218D67D36
4FF050A5DF442C6F765A393BC040F5FC7ECFF5CC955CFFEEEDAF826A16EA0087
53236AB8931D0838706C0A7574C29EA57F3A5B26FEE8C286CB136DE40E426666
6E0D893223CE80BA69B7E453093BB563C3568CBDD9F8EB3CF11B41FCEB86C7CF
77F5F059E37FDF1B76DCFAFB45696FB5032A762D97322614F959FD5935F4387A
D9CF1EEDA0B2B9074D7CB1915301552B9466C14AAD06C07EBC4711D7F13FD49C
2E528342415FC06B4CE60F02E1F96D2E62D6B84546BAF6C1860A8B8B04F16970
3E7E253B01216409BA0B9D8BD12481275471532575269E5B2AC6688A646748C7
899716CA11EB9694F120352659EC3E9E141D5A296F7C1386F1127F9600EF0D5F
13AE56D1A4F1F9AEEAA8E82E4B75F2FD7577AC9D2CC75ED807081FB51E497B83
86B9174C37AEE850C551F9394545D93584A9017320A1EF479BF16FE5EAA842C9
5C2CF060BDE80A2CB36C1ECC3062CCB414A2B138425B0A76460A0A8B41863183
5CB5EC3E8F7B809475A7847D64E21241B1D42811E29532393A337A524E5AD7BB
7FE935BA3C85CA3F39A37C7AA87FFA43DE93593BAC1C2C5B5228BA6E7ADB55E4
5F3F4DA11DF20F90A3311E01CAF338B75174E06CB3F67506F619919223F58BAB
1B9CF17D3050FA9D44C614F9BF5B71127C5CAD8DB1011A7D9ADED9BE453D6DEB
783058A6C6E76DFA9913C61D40CA896112968B1119F25AE123C94C0F4E161886
8971E3A05E0D89346CE9A4241C6761F1EA463D9B46C6D53255AF1A87ECD8CD6D
DBCE0BF0D56E15572E7A1CEFFE9CF8D308F71DFF48F9B629F75E8819970766D0
208CCCF8D6E8F229785C549292C236FB9D751F0DC20882FD89193EFDF660B478
68862A534D23FF6490518AD58018B4A19C963FECE1BCCA57423729926D595F4A
62DF95FE828B52657775367E170254C94BEA12DA16B4B36A80607C52C73CAD02
91A27CED5AFA066F92E780621F2F1926606CB93F7A513FB7CB2D81139CF9EAD7
C246E6DA4EA95D95629B1368F0AB59F9ABB1BD8CACD87D078F84D1057EE3713B
02B34FC0F20506C1E95C12E6C85744D32D7DBA4CCAA4BA34669E4F5315766C16
479134816276D6C6BAD1293321FB3F9591114F758A989276FC76C1C7A9D43835
87A3BD1BE775271FDB2E740FA83E8D899C2DD8EC30AB977A98028E66AA0CA048
0631D7F879A050B72BD8E6DFE82D83CEACBD20D7A01239EAA7C72A37C8841038
531C148978880738EC6A1F0F5144835D0AC338026896BCF036CF814842D22D4A
D1FA30A91E7535400EF5852CCE4A4C943FC6CB56CF1B18A2DDCB7452E7B2E44D
97EEBF02670C8A0CA1424DE04305566CF57E722B808919418B67413472754BB0
D16F90040212D7F6AA5677302FA871A45A4CF8508209B5410083B9276900C6AA
5B0AFC7ABD34DC806BF38AC2EACE983025255030396133A140D8107EB2BF9FC6
74E5FE99E6C8652B932B570FB851C475894A7B6E8D5E70DEF56F7B01DB3A269E
E042BF34D666879E1B0FFE76705062110CCDE647DBC95DC83F0F2FCCC14E679D
C806E36211CAF8634F43B4B6DC425C0F29F6958147E94216A9F725209E5DB30A
C734AEBE470EDCB790FA12F842826212849C5FD419F319CF9AADE1E1CCADEC2C
F887616B5C3FBE5672174786A884152725A0C3C4E6E9CADE681DDD0459A59059
90EA0C2CE968530026A4F143098C313AF72C4B7FA55CAEA48D783D89E13008D6
45B9287FE4712E28F1FDDDDB74CD14CAAAFA63532FEE3D39761CC14D1AF421CE
13C44BE8C7682D7C09CB9A6995F268A08ED4C6D326107E199F6F5CE1D7624CA6
D32C3DE7F948414EBEEEBDCF644DFA86C711FED4868F78395EC1FE3D34592DE6
1A7E466119657ADAF273FC37E5A1C2B08D666C3A9C00E438A23A9139D70222F5
2924EA8858C0C712628CA91B29779C96CA16E221DD864316F5098E7A647E0196
E7F48CB341C99B130F6BFBADA729441A3986F6FE6B9B6B8F315741C6943EB36D
1A2C7F826E67E48DAE5AD0BA7CBA0C0ACE80FA128E7F4894F27F2F17FE0E663D
72547DAFF402690973A66B243F5B1E330E279CDA8402DA76E4701FCAE29CF419
FE62F0EB7EA8FB4937CFF56B0FC362582F1CAB8FEFABB6C749A2936B8750D6C5
21C1CD0CDB4C0224288ADA66BCC8326FB1EB8E84D0388F9901B54A2ACA42F8CA
F66AA48AF19D5E127D616F2AA6BCFEED9FA6B377BE63337D7838D315E0520FB4
976C3CEE63DF7832C9627F811D890C327F1F58F6B93FA39934549C1FB4E261AA
379B00E0F9C3016BDF070525D44E722DB4269555DE0125E3F5EFAAC4B220813A
71402D8D824895861E0083E80BB3E67155CC09A69DB17704809665921AB640FB
F87BEC453154E161350B872C8A5634F1DF48284787017C26FDFD20536ABD90BE
5B45CDF89E51194B57321FE790B1100B68606CA661AAC7845B82D6941CA758E2
E44E2807ECBC442257009603D4A02155AFCE4D8F1E883DFB987460799DA38C3D
BE9C64ABE28CE5550F0A665FF8A1CA9F1F58D8A81D28673479AC58C32C6891E6
C6D55CCE28CBE27588E193F27DE4335ED19248F5FDEC96B9E027BCEE2B822E6D
3B619549301BFAB61BA0144791122793C05075897CC773A5EAD6F5FB58654EE5
5C192F6D86062A0FFD8C07003817E0CADCFAF380802D875B3237A0B7B42A005A
EB06B8F302296BAB2432DFB61BE5115711604D5CC26089F1B87EE346BC78E4A0
FB8C580ED06D15480265B60F51BFBF6F275B500D73F2862EC85FEB0E7AD586A3
01D9D4BD3D1EF45B99D1697BFB733177F61E07F7E86CA04CC71AE4EBFCABFA38
EA863A1BEC4E4D3120DC9C0C79BF26804A5AC7FA966F3398C082B34E7AD9E961
59EF4C26CAFA13BE3E5669EDD42616D8787DCAE159EB4EEAEB5D780B3465361D
4806406041C9E7CB708F2F1D8F06307A54108BBFC2A67E5AD2224637A0B585D5
6049C8FB978049AD3799EFC4BD72D82C441DCEBE36A2A60D16C765D796E5BEE4
362FE35B432B9DF2C4EA812E31C1B6D2CF8824E59229DBC0E80CA1AF4A0C4F74
CB320AE0434102D8BE10078863C884A89C8C54D4967F4FC1191FD8B11D5CD84D
4C94363EE721696C937142B984F44BF7AE33B055003F588C03A28274234CA70F
2BEE18C6F61A3F157F7BCD8BF898BE98DB7E0274E899D084555DE4E44A537729
C90EC438EF5F68C30635BDC73524231EADA39E5104C1B7A6AE777E546587D188
34CE67B7192F78C4C7E93B4094A641CCEED836A2523264E496191D4BABE839A0
D65E038FFF25E2F8498035BD3D7A2D533A9C24A1BF829FF66085C7DDF58A9E21
71B05AC465F667CAF05BE3FA57F9C61911232889F2C674BD3A046741E621AF0F
ED91E3E20D95E77C3ABD595ECFDC5D5F3856A586DA3B2D7F0490C1C291C8E773
ED46B199D16EC6B5789040F7AFF7C95012E8291AFB4E88D157F49CF8969AE85F
351AE070D56A90F62A56F7FEFAE229FACE97BC30D6CB1271BD25F584B9D2E205
5E93BBBBAA02FC4B5A5BFB7D3DCD91B0F55B2BA6A0459577EBDC6D280F12B168
29DD9C4DED679CB86819F48DA3590ABB404EE0614F3EC9848802F389F1DBF416
3F5188E6B70DF9C6EF59F5CCC1E61D2EE74AABE8860AE97DB5A790902F55C8DB
7F7C64C29E1B724F53BD2FAFFDF10084B01DA3937507361DE925556867B21F83
19D69313EC281DC71159606F237DA799E2BF8E88650860B2226B11671F182F28
662A9898760C54B3D45FC22FCE1B3A6DA2C28BAD8A4A992469BC1F05D2D08A25
3245AC48EF5B044FCF42A0EFE13CE2D0FDBB9B88BA3EDB9AFBC20CA9A0347D31
6B379629209ED5EB94EE6197FC00ABB94DA3416D81F00AE345B59BE4C773D8B9
F7C6681A651E5222CCF8C3ADD14866E4D28514275CD111C8D3597913410E96C4
4B9B2B3688586027B77AA5632D50BCA8507D3A71D1A58E5689510184640BAF85
703B4207450957C90572398A7F8515754A92E1477A38CC0CDCDA748E1806178B
F8DEF43A7E6D005FECB245CE4CFFCB433DBAF7854196C8DB64DB2A3581ADCB7F
9ECE09034E725C9753395323EEF07473EBFBAF5B7C880527554B28F91DCD9D9E
9D0C74EC4F72DD6AA095EDEE79917DB2E6AF3B7C46D3FE878D974AF01C5B874F
53FD5839859D57DFC71B4A2FDBD95EBDF2B5F75F42D9A11C92AA3B18293F0E1E
BE804BAE450D239618ED5AE28588787A1CC9014341443FED251FB2727AE5B39E
5FD2D80B147114D72F7EEF78E7E9630BA7B3B7BE3774642F446F9D75FDE2E80C
E99AE82E9EA60E3B3BFB92412D29E768107002BCD68B3231AD6336B1DCF802C1
2BFC20BDC9D0E2E96F17DE12FDB8D81B184CB8DD9F32DB363EA70FC04D8F4C53
91D53A22C907BCBA1FC8466F47D29852AD4746146F00102E1F01239403867874
13309940C1351E210825F9D5C543E6C6FD06A38474EEBCA3ABB32E072A3E011F
D6FDCF4CAC880EA26E152BEF15D456B7D87884ABF3F0E24B5DADEB8139314C2E
7A3BF74782222DC73DABF7F247AF1A077310ED447C271E34C072393A39B76197
4B664B42A04945CAF0EEE6BB31C9E2FAB50BD42DD7FB155754888B2591B0A26C
A3C9B32540B154CCA1AD485E557857A470C1751961BA929A4391AD1621E75014
CC6C9F84D3CF080AFEC02D2E31FC49B349FFA09801C1B4E8756A8AE507C631B3
F35381F3D21E7003CA06800428DA7F986A8C5341FE9F2B3593BCB4E2E9538EA5
A9F5A3AF84FFFB828DB2D16EC4F80722BE625BCE61A858E7C8A2AEC176C8DEA2
1BFF86F81901ABC3B951A092AB3DCE0A998ED1E6731EE2757C3A8D3F8D1FCE8A
B49478F4F61605F4D95E08522D4DD49F5B0B1306800CB1F8A85917C891EAC2BB
2FD77E9990C709684A1B8C72113321DA2320987AB54A6642674FFB8CF9228406
39D9400E8F5AE39B6BCF1BC66225334AA77CE6BCBE989BB321272CA12EBE7F7F
4CBCCEBFDA05560FB9AB985A7970EF9E5F6141566AF4B5E930C13A660B11B303
CA99CF9E431307FF58F85A154ECCFEDFD2AA9EF055EECECD48B798AE9908AF32
9A3C33F2AA79B0BABFCC1C48FF3FCDA2F9A7510021065FB144446F45225931AE
5963611971FEB86680C7964BF9BE8C794BF0B13A627F206D411BB1DBD16D8DE5
8EB81A3AEC4D07B59A0E8722F5C70EFF7053A8AD73E9A1FF6895952A64393174
B9808E452A46C8C923B972D472D348D58B22F6DA5DD629A82542D0445E09E2C7
8A976E7BD7291D801A166114572DED00292A3FCBA3BCEBBEE9CDF60D49677A54
0BCAFE3E6BF2842E6C0091742B6F4427BED1814088AF5A11A27A9AC21D567241
CEBCC1824C1FC40042BABAE78AC02AC470145C6852D3726539A1B441B4AF8774
50B87F4AA0D247BA5FA025699EFA329DC66157278A6B657E37BD3C0DD6B82071
5C9712FD1A7B8CBA8D1D4C4736A24BDB85E80C8BBA0B3937E3B05FBD1BA5D0BA
2DDD1566A386C2C921BC81174803040928D7B5A8952F4FD4DFF8B7DE0BB29165
DC2BF04C694CA77EEEBDA696F17FE96F21D532508D30922C73BA8C90F5A10941
2FDB10E4083992D77BC54722CE022DECD2F49BD8CF66C16913489CBE11A2ED98
ED18A9CD9440DBEEDF086DDFBD90605239032DB886C67E58AB1963A1FDEC7C2C
0237B2564742D4B39C84B382D500D52760BBE3FE2345FACF940947BB6A359CEC
4A8BEACAEEB85876A705738E0D024B2F87CFA226FE2AD1A797FDFDFB45457730
552B415A8B5C326CEA502147F51F1E5740E03301537F6A66FF89F104940A0642
2215F675D353F7F5A84FAE14479FC95D8C785C00533729B5B36ACCD433E259A8
03C07E5FC13BEA88D70793F0C7DFCA4261FBF6330B3E24C99C4EF0010E524F68
80A0F6D68D5FC128BB4321D6B5B15C186709BE4F80EBCC561A96D24AFEDA2A31
AAA76DAC16F129F3F8F8FA0BB301EB5C71CE755D3FB20BD4974734F07BEA53A3
444310B298A3B6FF65CBBB36C3298515EB2403A4E700E2A8CDEEEE683DA05970
17F51FB24BF6C4899104EC9081D64BDD09A0F7E5CB091DF78BDA5BB3998F3B3C
9237761F7C1B66EC23FE1478A63456254AFDEBDAF5803951392D882737B887C9
E75416509ADDB0F7FABE7C948383342E04A1EFA49D0FA9CCA5E47074DE5378F1
42E4F97283107A562B1A5B119B80735571E090EC4B3A2FB8CB014CA2C43755F5
F30B7218D7C2B07D61FC3DAFFE9CE4AF5F523CA1BC48492EE0B5E7AD66E906EE
74EDC59AED98A158EBBEEF9AE014D76A6205C8DC6385D48DB81337416630E8D8
EFE1B62A21B7CBDEA7EC5FEF48E3B4F0563A8B303FE3D86B86F8EC7928323A8D
E71BFD0F6D49DE7ABB70534E72B5C1A252E3FBCBD00834BB92EFBE8E9C3EDBBC
FCE9CDD9A1BE1069113D357980C5535F94CAB76C16DBBB0D3A9293282FFF0E94
41E1842439252CBBE689D24324AC0215139D42B5D8DC6A7565851CD8D7CDC531
2CCDECBDEAE2C8131228C7525A2B6F3A270A864329028A78D2213CF263D88A86
FEE8CF79277BEEE857E9FCB9A218AE111095BADA925B5C7E88D121F67AED4B18
BDCCB1493624318C2C69D7C036025BF4924E5F25580D753BE65430EDC6EA6B1C
C10829F03A9F204FDA25A978629E20A94E7808561402F39804DD03C6744D8D80
2E764D92AED4EF5D035052BEEDB07F773566386E3543B1472489AD9CFC5267ED
8270F2BC7ADCA3BC0C268EA2E79D5740D1374ED4548F3D417B7E9522662A9310
775269DBA2AFFA5260BFDE6307EBF6ABEC2B875B97A46E30C18D3B1187BC17A6
BFBBE61030C1FE4CEB4B99F0EFBEAC04EA85A12D702B7F59018B395D5D46E8E9
16CEA82A2F2A449CF8C997A5D05013922C406A11845815744BE0D9AE94C3B283
998BC755EC43C9FB09C8598FFBF930E064971C922E38BCB830CE3A8F9BB1BF48
D1BF5A32B706446258AAB0CA22476811FC44AE7D838BC8A95C861C5758897081
ABE64F3BC29356B3CF00D4D228B1974FC17501DC24B2D927E9EB0B80A4AFEC43
027C71ECAB263C3FCCEBADCEC0C945C90AD47BEFD31246F2DCB0BE26B0444E7E
156D0BB39D63C5D8455A7CCF0B333A61E65F0E798D495D5BC4A1DD919616D8C2
EF1D82B32FA981CD3FEB22933E5762CB48EC25D21C86740B247D3ED346C07E47
CA3F2B82FB1DF65885FD6C0C41644BA1CAC898D70730D878CCA063414C5068A2
2AFECC68B21138E4480D9E2C15D51F11842F838A6E82DF64699F4A553E53E12B
F3C19628DB1B9352B11ED17139ED99626F5834E8DB3A2E6957C96ECD523C7722
2794DF8ADF17CE0F01E82A817FC3A34F6682CB82E323ABE89C0593FE5EE08AE1
613275D6760B088BD125E937A71A16BAA4CADB168C955F2E1393CAC51FD966C2
912DC23E55FA95B1296DDFC2B8643637B3FC712C39A642A1886AD87BE30A994E
BF64BB0C98DB72D5A48A93ACAF4AE6254F372087FFADCF16EC8511AFA0F465CD
7DB845741451D82873248DBEC2BF251E08EB0CB84D0F327B56171ED5EE876AFC
EA996D66B134D15BF7C7AAD097ABACD74D85E6D3F454DFE6CA8B90985550A05E
4D3ADA59687FB60095B2A262CC5D1FE8650D5D462CAEC7A2F871D6ABC53D74CF
FBEEF37CBDC4A0D29EBC72C984C7915AF178A69A0C8743F3D6B8F96CAC9D44B9
207741E1A8072C4265A92DC028A44DDBA84410828CDEAED9456C0D4D92109ACD
0D950A117BC9E30066C7138C68E16920FC8175EC6828942E93CB0E3BE64360C1
08A245B32905A8BEFF867B863C47764F6CA9565BD551A103E5EE54ABE76D2007
68CCD26E16CC8345620AD66F842F49396C3D7F114DA907CA7F882663C0C0851A
A43C2F3C8113E1A20E248ACAC6FE7DAA36AE78FEDAD591E26C654F809023D65F
CF908432B0DBABFA5019726176907D4131B5B4677955CCCEEB548A5A4B4A87E6
EB02AF70A37ABD8B7224DD849BC555C2EE6FD7F7A630B69459B62DC33925C6B2
A8D024DA3CCE17E152113C48807F4285F55EABD36A5574C1F18E0439A1F6C05E
772C8AA791415A2D85A02D81AB39A8AB9CEED97A6108E85A46E34E89588BF7E1
88F8E68B83512AC1556978BEFE9AED46529D888DB7705A451E8C8DF08152663E
6F485EA6245BB145FF1E42776754B18282AAE8366DC489FA1DDA7C39CB4E0887
62538A831801B07A52E4E3EF258DCD21410F1C633A062C48DFC54F8FDA78B415
C28D68C99545F052981DED5CF1E901944EB5BAED4429BF71A19A46698AA8FA6E
0CE91AEE2CAA36CD0FB09F3D0947047592A6361C1B7F0CB07BFEFC3F839DB31B
2C17777F4B78B5D7864C92E947997C54A99A5B71D588841ED668979476183BE1
FA68F0ED2816C191F380279C3B87CE5F521D33FB700510838CF2353ABF3A75CC
6FE560D0144D77BEBE7A73AA571CCEC51EFA77FEB8E9F6BA015374DC3FE26566
88C2460E12E6FC07DFE4CDFE210AC080247C094FC1F023C0B6199D617AFBD4F2
669AC3F4BC189A07A2385588D7CEF1CC1FCDBAC620560557AA75F2282DBA4AB2
7A5C760C91D7D56F4198994FBDD223E4EE2126CAC16E8183F6F2435DE0AAF902
938F75F064ECFD09D88A4F8F9B9820E029ECDBB87CF7DDFCC36502055C45356D
D959C87DE80D13F892F119872E2810072C209BECB98501151F7A0326A3227898
8F069D5A41465693F0AD1DA147662BE0D5EB61E48EE5A305EAA42182AFFB1ED6
697E53ABF590C2272AD16002A880C08295CB6E67B3477F0BF61651C15C099DAC
A04A40BB3FF74C722AD2F65175C45EC594A5C2254C97218F4FC1332445F5F39B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 72 /H put
dup 76 /L put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F099107F
153E3FFC70BED6D04DB4820FDAC002428C6741B91D8206296D827D3171351E85
39BB0DF1C2457E876D3A2E7E499D9D4104762FD19BA0526D38D2BF751EC56EB5
C80EE2A7AAF2CA12D1EB4548266CE8C0D2F93158A6728EB552FA09202865142F
E8D1300D637E64C338DCAE28398846CB3752FA92F87103C231C0D072E20D0E00
0DBE4A0656BE7F021DB863F63DE612622FCCA2C5462EA92B205DD2FB6D547ED3
D559010FF2C4113755D38F0B959DD34D98A0D0401AD3156A3B3D6FBE90EA40D6
F8B539EDCB0A1EFE2AAAEC6B56780F9312CE3CF757F815AD506873D2884BFED0
EEBBC826E2C4F589833F5EA07CD65AA558F72555F8061BFAC39CF05FFEB8A713
A38A6FFBC9C160912580275C2798AC4914F4FE26402FF8E0DD5E05A2797D32CA
927B17A043D2C98CC8D7CE4361A530160D6800FA73D978E1796541AD1C5491FF
429219E5FE8E29DDD1C2F95BCF4DDE686FCDFA4FB85C35B69B35AE7C537FD5D2
5484B3B15DA02F10D3A742CA1EE36E9F066E8A511FD67EB16E0B5A8C31791343
BADA5C89355A821D241362DDDB5024B0CDF27CB3DBE48F1612FDCB83EB5B1B6A
4C46811C5A972ADCB1EF6C2195B117009E9EA4FDDAA731CF3623407482590692
8A524A4CA039A0F0DCE1333AE1E9FCEAE1120CDE2663ECCD818CD77CE2E73897
CDD963E7B006F31B79C9D5902B82626D1E34A9002E9E0D2FD817E7072D80C54D
3B4953D263996718AEE486FAB44DCD9A4F14EC808AD3D37353395C673EC14E0D
0018368E79712A5C14D095EDCF814CFF45BCCEF2195F3B24F14A8D01E3BD9E4E
ED58DF16C1613993B4B422089200AAF810D8FF46413A8613E8F58671CB12D7AE
552215F5D852051C74508024FB1A4E23545846F99185C6EE3B36D9B14BDAB070
C88D869C2713347B0F7193D4BE3CF2D1C11C1CA08BC250CD1D17569E6CBC449C
167DE6319B8CEFC9E11DD3490C26DBCF241EEB4621E32EC8F4A720BD5FCFC619
B7B529DDCE12A41F9D40514D688114366BBA0564BA6B6C7E3E766EF4F0BDC564
B676BA78596D7E69684FD9082EEDDAF2B4ABF29CCF648CDFCFF1059191331D39
4B5D70D6A4695594DA40F8E80D60A31541AAE93170AA51936946F94292CE9B64
304580AF567D02B8D9432800F9E466CCF90392B1525A06333DBD12B1E422D4AB
75B44F67E1F21EC3E5727C0413989BADCF0592482924D60D07DB89F7F30E13A4
F3C12791EADACAE8FCE6BE9195A7B0D29B0EC7B1294E0D57D23BDB3CC42EF663
8DE1F341886A4D29C727908DF65268BFE9D5C0BFA570B9B0962CC5CACDEFD3F8
CDBBD5833F5D03B9C1326221D2A4916CF7B2DBF50906D5E603A5289DBC86254A
9E873D04F595E6CF46374DEA4790B6B1C62B4F8AAB5AFF71127B99E68311A447
5050F989E7028B00C418BF52BCD7C4F9DBF7849DF131221E3AA654774A26266E
9BFB267043365689D2D6F7DA4C21B5C166546F8C9B0A3E7D706C69173A81D8FD
09F7D50DF8E6F9A58C65CE9ABBF0D010D3D9656FC1B2F6528F9E6661EDAC6B1D
65E4B2C1E2BE7CDA9D76B30C7F8069D0033BF2C5A3561A2DB95BC6345EB40888
D7E5A019B2DFEFD5608FBEE0B7DBF60FA4AE5F13B8C409F34BAD0EE57F0CF0A9
F2E7260989F47E866F5B84A662D322D899D911C16A8EDA86D9C26B0F7E101C6F
9D5C216902D3A5A6E4D2B05370537886B39E960F7E8A780FCBF780C5FF117FC7
71E3F5626E1D16AF838056848E3B1817581D1A578983B16810BC205E36D16BCF
9FDA269031EF74C2EE0ADF2A2A253AD1419BC7BFE113995B4252B82EED06EADE
3A81C8263307716C0816183D4571DFABEC5300D1EB51618B81313BE2E0FD360E
6AEFC0B24308EB86A720E24BA56B4324FC12E365269666A958A6EFC55A2E86DF
6B465D4428F077D1EF3A6EC84A9E54178166EA0FDBF9C6EAD876FE92900A04DE
48E82516074726AC26E8421C79451DE31E97BC3CF07C005357426F039EE8D3E7
366FCEB33E58C9286FFD2BB3AE1B12A5540E1D40F3FD04814E2F93CC9656AD28
4D5E0C6895BA84165007A566C0516CE5F5C4841B3DF0E0791CBF2660A35CA517
BCD12AAE11A87719E1647C0E86FC074171A9C64405CB7AD93B606C5514FC86F9
77779C66BEBF4FCE543621A2A42BEAB645990A14E65A9DD3405173165E9BE5F6
F67207866998F7850D7D1DDB5287343995589361B03857906F7AF2B982719529
CFA74E9387E38E78DA0320E80536E967F0E8D9812DB706F004EFD4FB3312B81F
0863E79952957F623F551152F9A71E9AA94E249F52F4215DA70F16D3892D1BF5
09AD6F3ECA68779B99680B80BD09B8722EAFD6540773EE41A5EF216CF902487D
BD0429CAC3D2C5A09981D7B27C39A21DFB28D7F1D6C5ED81CD398EEDB7606DA9
8EE3FE94C3B0C520B56BACB69F86E4059D6B51531BABD1C45AB01E7DC26E9CE5
E6E16766DBCF0CF9ADCF62AD69866B64303162AE5F61451FAC53BD09A193EE77
CCF32CB91934343B83697258B6CEB54F2B9172A0F265EC293DB0C98F36695DC6
4BDAD3388E5B26C5644E5A0DECF9D3C4C5EC491469E43E9E8489915D4CDE3C3E
B47DF4D4676DA3C7C6B2D55919144B3797D73F66425796385DA3C1425F142D25
13ECA2210F4D6232D4298136DB4FB718A7AE1E78029151777760CAB183B837B2
7AD6FFDD9640ECAE59DFFF81A7D46706102AE3A682D8535F390DC813D23627BD
135E4FC84D5E68C605583EA31F19B282040EDF228B0C6BCB26B9E54DFAA33EF7
DE364E0983E8CB15212DAC7884DE909908905A1553AEE34D0BD61D7C4F7A8118
C9851FEB0C5012712A90CFD82452D50E2AC3D39EFF7893E0F9D89F97A3F3C350
434061975BB348E091FD46F0996B24A4ED7DC26EB93178FB6142F458C4BD8193
0D05EE8A76E8DA3B177C7EEDD43E6BD8FE1F41BEF951E73EB73C9700F615A985
50BCEB7A075CD9143AE94427ABBF5AE13F1ABB3F872A3BA205D4A0B5F79D8A08
D034BD8FBD246B1B51AB901E3482D33DFD331F22B9C78A73F68CF32564C65D20
C21A22E529F6D760CB24A795BE0C194165BE448AEDFBD71B1A28D2904DFF65A8
A4BCAC4484C8C5EA9EB4DCEF1B88E338D192D47D774222E29432258FDC438F0C
84D9D9A3D7CF551D618ABDF36C12DC7B46921395CFE93DEFE31C976ADF0EE87E
FF4F2C75242E64014FFA5D8F1B56D46649084B97DD3086534D85E1F9DEA83E83
C85E84EFBF466BB2AF6E6ED60F15A25DF8FA53C4FE9394E3BF0F9F58D41FDD18
DD737CD369ED79E41EE0E02F633CB708EBFABBE45E4ED7229B18C6FE453C7403
D9A8A9A25254BDD5337F38A7C9B321DEEEC108584B819BE6D41066C2A507950C
854C72CFD871A2703EE3FC0CA6B3F568E7F6570104C0F534735550CB930395EB
E5B6EF5E9878ACE55FA6106DDC5449B60B23F9E6565E4B5516B0224E28A80A4C
B03A49913CCF9D228DAFCD6872267D96E839F55BE79A11E51D0F728F19DEB0E0
3CAD20A8225C01B8B6F79FDDABCEA9020B25FF1B717DDBA3D5506515B6EDFBDA
11D7E23418213F2205E827E986AC93A86ECD80AC472774051F6F2ACB39C60680
69AF93F4C7C567AB27123BCAE84C15845D02F79BD7975F61C4C3A31A16B0EB9F
98EF6AB2D5182636CC8862E8F07C3466D4B305DED66B17AA8EE847FDBBE06F32
21E3DE0D3C69BAEABBEB44AE86E1D73D01282C261141FB6D81D4F9D188B5082B
5417D70BD46A5A42928C44BD5BAFB786D5CFB1EF8B4DE395A914A8FF911B438C
22073D84B8BC620234137943197D415E3519722F9077372DDDB9DD711D8C1994
463CE517E0CDAB51A50665FEFF615414B1B94E073C03D0DE201230528ED60F3F
CF69559DBE9DA585D0FE9D01578D764520D38A5CE4CC9F308BC7105786423A7D
87DFCD85E53D4E5E0EC2EF31C43A0B05DDEA45A50C67FDBA5EF8A1AE8954123E
AE733E10B4E8CA54FEC4519EBA3ED3B7D37278D7FC9055FD0A0B64D81D83D1C1
CC2F8CDD98B78D5D380C8700418FC743136AF95DCAF32741CAE5600FE17026A8
D131D95CFE8D0C825C2418B5F31B3D78EBEDDEF300BA1A851AAB49F6100D31C5
294759878B68AAE4AAC0804BE43C16370879E4901857A420BB6D3F10C9F9445C
88F8C6C54658E35E5F186DCD6D24A1405CF98F6CBDDDD2420328682C9558E9C9
CEAB920D3E382FA1470A8975AA8B7D2B71B2BF998913733D8E338B2D49A2BC31
8131985FFE18AAD4462D9238D0700DA7264DD738B73F157E6ADE2C65A9E0A104
12FD8726F718D9319366E850FADBCA77EA38391D4D5DE310CC55F30044BF4055
511437BB92A6F4F4D4C27B915E520C3A95CA3C23A75451BD3F469000FB9D4C1A
2B7FAB07EA72A018D92D621AAFE211A225A2466389681DD3F51E3EB658317774
B4F0391D44C8B0B0FE91B47F67BA3A00C4127D5769375894DF34FE02B08CC1C9
0D35FFFCDD623019FF5E16CC86719D6F5474EAB13AF801D941983DB9C0C48F20
E524F067BFA7408BA99C53C1FEC4FBFABE1C01C768E48C4D9657512B051146C5
4F4360F8F5D9BB0880F3838414F02AABFF59F5EF0143C3A98F30AF3828527762
2175F365CBAEDFDB0AF9976AE76B86CFFC2D5E10D771104279279EBECBD84E13
94AA683E9CA1A80A37E2F57D17928F26DE3E1CC68704F1E7A5F6996CEDDF9B5E
751FEE2CCDF671212A7C543587208F20E9F66ADF821A5E3CAE5565F79FC1079E
A30B53D60CEB081523D7295792F4AB4F12B8E0D86CA6558A666966F50F429F76
419D65008B35C4FC1AA38AC9DFFB09AD1EDC3C163EAC844D1D4E80FA8791FCF3
0BE6E4C9B54854AE4AACC8C203994E367F46FF33B05C1556C5854B055EDB8D2C
B25883EE2FD55311128E143653D6BE9FE37E34AA2B7C7D6CA2E04FB859AE218E
45D075B1C01A53A607A4E3F46E848C396D7D19D5BC371CB4882B8DF6BEE6FD29
3A32AD1061818E35DC0ED8B9651FAFABE43C89B9C50CD2192A6FEA3E5A6E3DE1
0E3E9E6410FAA3039C48FBFC21A3A84CCA4D1846EC036F29229085F400AD62E3
66D5C2317FB755C8D30827922B0D47309D38A35CA349607D7C5B810A4E0EAB6A
EDC076528F779CFD2225B841EE60A693921AD8D7B2673F59A56B922462A78D6F
0D16EAD9A52CB139A102E91C7658FE693D18715B5E793431B89509933643EA13
CE830CFD4900D9C7D712404A4F693C0DAC4ED36B2D4A9CAA2271C92075BADC10
0B71B4ACB9201BF4E19A78E3CBD0F32F5A46E5106694B0A4C31BDDD6431CAF1B
078C3DBAA54A8F8ACB577472655BF0D8C4F3F60D9372272628370A83EFFB9D95
1D4D6C86EFDE4F8B691959A7BC7B41F9191FC7014F9F621C5921A56B6A089E07
B9A67A54892E97AFC471FAB7234B2D0067C5AB0EC3C2A411DAF6FEE32277CF5C
3C1DAFC1C0E39BA8BB5B7FA4389E0C939093EA42C6302048D3D110D46B502F22
6A1AE0CFDFDB8D2BF68E82674DCEA31CDB96209418CD34352FAF5C6C60638338
14D3492DBB51FC38C98F047FA54A36EB0B01AD026D4E36D08FFFC0D9ABF377EB
71D91997DDBF8D8D2C51BE8E81EA3D7BC83E9D5DC290651B03F5DCB71E1D31F2
BEEBED6D956DADD916B2CCAA9BE09A2F4D4C03F1A14C58E17059D57212AFD317
76ACC9DFB0D011B7D699805168D4070CD0D1B58B2747182ADF58DC5955824C94
91F4786A8B3A45A12F8AEF36196C39E0F8EA00184940DF6FAA32A81B0D7D8AAC
07436B094251CD00DE8F62F1B80A6ADB463A95C575735677A7A30EA638822F4B
6ECD67D68C5C2631B036EF4E679E5DDF970AA1CE2F4412004A8B3F7BFBDFC259
C72B8625E1C3C1D6AFCE83DE4F61A233D5B0678E1B773D69E17B42FE41DA65FF
51934908AA3F0291E51F19CF7897EC72B2F3BA500718E5F5361367DE9114BBBF
BC02E34C5078910DE27450FF03D483E5945A05F940E84DE66114F31B4155E261
EA7331F01C8C2C51A5C3B64AFA4BCCD88EA14CA598B228583C4AD666DD008253
A895F2A4B7F41255D45CB6089D78A655081024D4E98A3100E1AFA4CA9452DF2C
33A262E9EA043259B64A86345203844560A696CFD3A53B823B2CD7E4E46B04F0
D7864B3BD5EBADA696A3F56DB7D784E3F4F9857F444091856333FC81578487F3
B19A5FFE53A3071B18F2E1385D38A04CA78AB84EB6174A4FA5BE346A336C283F
F11965A3526977B70724C2382D22112788B664EBE3320C08408674D99D3B61E2
AAFF2C5454F97745A271C062614417B1BEC817E950B89AB703147DD57D5D2724
34EC273129F45782F1BB0C387C3031328B2F0F802B9606E88F55B4A41417B96D
9A380D4DC98B7D2344FB0AEF9E5C1864FFD646F005D85B79F54FC172B782F6D9
8464D8050812F02475213D3FA605AE4543AE221BC7A8C6CAD2041AEF2E76368D
19E538923BA7D5A5C5A9DE5C25AF4466269AE1FBF8391D0678A20F394011ADAB
4133F09CF2F3D5931C52A805EF14825A22D941567272CC0508278C4D4CD7FF2A
3F464DFD9BC834E8FDE78EF98C9D7C31EC8E325DC1039D28F9A15E0F912146C1
39FE8298BB180A4A7051BFDBF04879B118343539AAFE3887985231EEFB5BFFDA
5C31C7C5A51CD4B816591A176192D81750E403C614AFCA898619930FA04AF572
6362F5437FEB0018DFD44E669F30B0564DA66B0083CF5ECE52B093C497E2C8E1
095E9F5E0338A9391A840A402E52A165060D12B26663E4BCBD22BEC029A8BA61
6D3636AAA64E3A621D4ABF6C409F2E19C7B636143FF97CC2D0C83FD14C5EC653
F2E3E69C57D270E663700ED95DADB77C2942AD6E340BEF977EF4E2E89AF6CBF7
E89408CBC8F6D6ACD3B609358D647EE0DEEB7BF3C3A8AB8A2906032F981F4B76
E053DE1F1204BEAE2CF3C627029EF9181B773C4F69D30EE46D8ADF504C5A4D97
2A84322A5721A6ED74EE46B54FC40EFBAF42E564E08BF00AA8CBE5222E7874B6
B854715B293A145C0FFE9BF4729ABD759BFE7CCB7FBEBBC9E2A2494FAB39775B
1FA01C10D47F62F45870B7A5289C3519630B5FD7900C5A9E69D01CCF9F3425A5
772B1ED3FF3904667C4F12E7B10094420E4A4626E2D978BADEE87ABABC9F4C1B
D411A31E4CC4F2F0845167B143909844DEAB839EC7477860A5DF9EC6AC354393
5019A3829276A8220BEB3D7C9867E6E8A53629ADC5B326342F971915B20A8423
B1C74728470E4FB59A50440AF3A1A886DD44FA8C688D91609BD41FC73582F863
AD608EF4A8A73304BFC371AFB508C880B7F3D7CA8746BED8858871FFD1DDB81E
A585FC861CF827602E54700877E42FF9168F3C0308ABE3228DE8B454EDC5C690
A2879F9F128543BFB90D0C9DCBEF45EE9618C6D851318427E9512F1FC6CB7850
89A926F99BD0AEE1591916CD93038D3147B86D0B6C4E7A0EE761BDFDC6663E61
9A7B6B6F4CDB9D41F446FA609735EA6C11F0CA5C67D81CD7B462454D1B0A5A80
3FE0E7287537A59247F4A4C96AE1A1E44096A654E8A53D54B735597064322FD2
0728F8D6695DC7B5C1BCFDC981935857A605B84192F72E657AEA6FC9E65D56C8
82303CA9ABA6E153BE5D72915510016C8850A087E111612196F2CBA21DD1E7BD
95E10A339283553827729B9636C2B3F7D7B0C698D1CB81344EDE86AC0E5C67BC
EC2C64A210268FFACF5BC878C18C5128BC2B430AEC6458E0EE1824FA1DF33087
7C70D6FD1FCA3AA47B836A9DF4BAE2DE941E5E21C9D4F993C6B3EBDA30EE4BF7
CFC5B0E5F207C12343E6AAE40186907A24638BC78818BC617EA125F0FEB0BE6E
A0C9DE0A739AFB9A840F732EC701B6FF47DD020F3575BB53595EAA11DC295031
DF07252FBE011A67A37E48C213E93AD95F9B7816B2C0BAA23C0BC8B564621F4B
4173E57579DACA84EE498AA9CBD8D85D56DE5AA4C6DF855BC02B11BDCDE12DF2
2D6FC913F81E3D12174C48E12171F00802201BE7CDB69F90AC7897AF0F26B94E
F4DC3BC691122D10E8F0096FD6298A4C60DE782F5C3B08D72177BE03E7DB0FCA
4CDA495102ECA50B47ADE46AD3C45AF0083D99DF111FE26EAF6F0E93E8974230
AF8CB8ABE0F7A20B7E1E6E7791C232AE826E86A677FD21A70EFB9F52A56B7A9E
1F4E0C67C596C28A73860C34E0A0612B8905AD047BCCDDB19BE98274C9B6E3C9
EC0F9AB27C283227BF616983D3DE4CF8081E66CF42830957D5689F75164DA23D
0C6C8CD3D9B5B5AE30330A81EAE02B1C971B43724554E6A807E6B24D11F6F761
22D9E04BC2E9E413487AACDBC374ED24AE1B0CB547A805BED9594CBCFBDFE7A7
10C666750C57394BB0F9073851DD869B4A51AFC53236E37286DBB0E35606A03A
01838A5688E379199FED4CF0541B545034A4815C4FE42263DB04D777ED744ECB
7DDFB75C54F3924D2162271986119D2D420D24CBDF1A347BE8268FE668D0BA85
39B038A7EF5DDA2CAB2F925DFCB2185A9E05ED17975538DB4586D1034394CC10
3BE90F0AE0AC953AD3D919D8AAFC44632272F1BE78ABC6DAA115921E79EE6867
BDCAA51E34BDF742722E2904C3C737E84B7993369FBBEEC168476B5279320A9C
06E1D3714CF41F486F510B1CF906130111E992322097BFA40AC18EBE462B9396
4BB8A5E1A41860BE74763BAB32364DC6FFCAFABDBB906A514DD1480F42DE9410
4287D6AD798ABEF12568523E0FCBAA75FEB9C37BD4B85DFA52F58A7C5DB39643
ED3E77E759C0CDCC76AA9AEDFAEECDF63DB014DE0F1081035C99C2E98DDA2671
0BFCBA1103B0C0B65CDAF86D1668E2FA1FB2602E505A561695BA2FEBD00C1CE2
4BC6619260A86D6EEB40EB1C8E0260D4DDD1FAD80245D0FF76C6607B8402C992
2DDA48BD60FDFAE601469E0E847AB7A69A26BFF3BD4FC25221FC9F210BD2EBFC
9868468C16AFFB3FF5A471491A11678E72A192B92D19470F32BBE5356C86EC94
04136F3C5846BCB018D87208A88172948BE50C4B2147827D5A654689A4DB9B1A
588DE23167C9BD61E7E1DA9449CC45FE17A6599FB90193A7E000F3A1B53D31E9
02208FBB701CCE1350AC05C5BC8DA7C3941EDD752D2029AFF5D63B77EDC4BC54
6F0B0B85C6DB60773FB6BE9D0CF28188B2051C97702D0033408CA6E53CD4DD68
E237
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 99 /c put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC194F782420BB447DE705EAE7963391B366471ED59BDB56879AC67F7
D87B016F0C5CE0C6509ADC4F65EEC432E0FEA7E9E06C5024B65D26A953EAB4E3
71C1B13F47D93AC60903CA03716FA6795A3B33C204DBCBFEFC9C50D2089DD678
80CAF383F95C2CCCBB5EA3BD5D066A81DE70C6576C2117C10833931A7E5082ED
EDC0E6A1AAB2A269B555D3F02DB1B8A8FAC5C28B189E8314766A61B21AB689E1
790181000DE83C62E71D1D42CA543807ECC0A2D9F502A24764849C76548BC070
597A9C92E3AFF3084CD05F528210DAA247EAB3CA81467E3149670B6181ABCAFB
BBAEB18786E73F27EBA2F891B684A0DCCEBCC9DB22CA1046AF168E42F7AB3E49
6B6BD74ABE888E7807FD734BA6835580BF78E77022B687825411A8F174D36BB8
057B5F8DA3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 6 /plusminus put
dup 17 /equivalence put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 24 /similar put
dup 25 /approxequal put
dup 33 /arrowright put
dup 49 /infinity put
dup 54 /negationslash put
dup 67 /C put
dup 72 /H put
dup 80 /P put
dup 99 /floorright put
dup 101 /ceilingright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 107 /bardbl put
dup 112 /radical put
dup 120 /section put
dup 121 /dagger put
dup 122 /daggerdbl put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570370531B9EAA95D650E5C23803BF5C2
75082A9BF73D0F7781F7541D64AFD7C99AF409D4E2AC42AAD5E7E86A6728D134
0A9E2596DB05C582C3CD6360A7224419C99D6D63D5A03767AA63C1FB127F2279
6954A5C1EF3C8E03DF199A270E1BF40D6CF76FE8932D2CA9514BB4860BCC844A
5576960249E247152C18339E09E5E961464A46D61F13B439BCEA64C3DA9E19AB
8610907C68E6945519A62BCDE420AC4EC78311F0A507ACF0C057942E76FFFDFC
D7A8DD00DA01195524DEE56413E552A4B3FCECCAFCBBB1B60A1E72505EFC2C2B
9A3514D5DEBD35BE9C31F2702CD691CAACB68BEF0F25A430B4E98DD25BDCFC48
BACFD9DAFD1F676783D2D571438A8D0004FBC19BF9EA126A694EC264399669A5
0870588C8CD51D9B4E9FE896BD770E60C56C5ED0FE0097CF74418354F486150B
7F61445EB59F289E089F6A786920477DDCD6618967AB91997BE9597808A073D8
CA8E0D55CE36192445E5EBDE8C0E85F4E12638BE1821D56A4105E16493C05596
90052BC89AA4C90E667539C0718F1B6D8C5735D53F470CA5F2AD07CD99B334A9
69F1FC783429FAD49777059DFD6E690CAB14F146DF825A1032AF8B04505B27DE
EA344DE2AA74D8DC845B8890681DD971295EB5CC67962396DE6D5121ED42E239
26C164DE23681F79448250F479DB2380E6D68A8A4E02FC0ABF88D99BA0EDD755
E30B463118182DB1E2D07DCA45EA978EE0E3EC567B469902024656222EC1F825
8855C290E517B6E0B65D6826F4B2B0A1F403898FD2AB42065C0FFC2E90437E19
8CA05EE8C90EC19DD8300EAE8B793C81AFF8270B676697D3B587AA808950884E
9B2A6471B1E5F4227A6AFC66429A9DC0F14B1696E8EADB32B81ABD47E5C6FAB2
B6DAAB2AE750C46920F90E6E4709A56FEF4F7CEB3ABAE1EB7B3EFB6DFAD7CCFB
85C413B3AC1812AF1C4EA3191BC8263EF825CD882DDA46C8931857FC6B538D2A
36871E4D5305B2A9B69FB0569D20C165958C3B6C7051FF601730B80A31897DC9
1D7EC79777D49A7F41FC1390FF9F1A3929A4C7CB6E7AEE8348827695E7A656D0
06093BBC4C62B5BEB5B09D7187982671FA0C559878038E8F59DDA2BE4849543D
3CA8DCA246FED039E1C687FFFC72333AD560FFF932861A8F6F4A1DE373C26638
38CE038E9F6CCF6E14BB49FC54DC71DF94A19E27339A7AD8206D9AAB6FFF9C8B
CC87DB4EAE88CA56B2721A2413B1B6DE403CA1BE1E6B96C6F358164D8CED9E4C
FCB50B9F3EC1BC1C48A922EACFADE913C0952E907C950AD7CD74A10982ED552A
A84050037A426CCEF0F2DF4D117167234430C5555E96E3A8AA21CB7F6D7B0458
B0F7B0282F454A7DC915031484D7D7875EC50904F9BE86CC9C00CDD7EA635F7E
806AEB4871BD6F09805B55035FA295B132FE7BC3B6876993E41B1CB7AD310C84
DEF7B001441A1FA44AA8CDE7A466F0FDF8DB736B2C7E388BA30EABEDB1A1303E
A7AC4B5856C70B45DF6F2887CFC222B8B6BA659A7A0C825981F281B0FDAD841E
49A3368BAC0F2D54A6F3290A57AF29F5FEEFB38BEC271FBD9B2EF838D552E373
F9F65F54C6A8874405E29B8FFEA789099BABE1FA8687D9924D8616C5E7DFD5B7
55CDB02FFA21F04D98E77E14FDF88C8A3B45D16C4DFD42EE633E3DC1A6267D8E
DEAAF3AEAF228E48AE2A4D5E03F19DD84C68D201135D2EA019F92C7A6D077140
87AA481E4AA96D72A22454D07278B59E438BF7B810836CE88A9218FEA7BE95E7
2713DE22459C6DA395C6265ADEE128A441C25E0609969F483FC4AF574B33E28B
EF253590F661CBE3D65F126DC978FB127A161711698D3BD1D7DA62F8D4D35766
42ECC2A4BE0487977ACBB55502DE3476250FE00A66C1FC351AED0084345CE7E0
E8DDD64F87A7F1A28051FC4BA4E02A422F68838E914440DF7DCDB67BE71F99B8
62F6ACECFB408F224CC26704EA18631B0E2532EBEA08F698B875F0EC0644A2BD
8A38B3D7F90738CB3B3EF093B786E4578B9C994D94602766A29F8E246AB767F8
A13114D90C96686C9B50BC51E456113FF9743184DF8857D6375466FA6D279633
DD922BF260436D5E329E0B1EA44CA61992AF5C9D45292B83CE4FE98B084D453E
570B7B472E53C553B99D1364D3DD818215F2C94B4F674A145EF1AA317F0F5577
28692C9D8EA0AFD6DE10C8CEE4A353B4D688CFE17325049179427F7FB26EBDCC
499E5938F024729BDAC554156C4D44A17582305037E688BC403187A9BC2074E2
9CB47077E45815E6975D8B2D2D3242920F161FB713D3C78E4DC93562DB39CDF0
EFD38DED5056F8AAB74C26C86360DF5EACE12CE8C74F41ACCB612B080D1B99BD
615CA49E3FC51C46EE6CF6BE5FE74C0DD4E94A93A6EB0815221802298E5E5B0D
2A2B1077FAF2F274848BF7AA010DA8B24DAF39255A1C5D5FC99E490AC6C71358
3735D6B6BAE49F95A309DACA11D28481CC48A927C45774D48F12A5755C1A6E12
21D5FE2F0E4B3512ABE62295F01F81F4B8B9EB05E2E2FD46568D7ACA2163FF1D
EDDEBD332B3BD7156C8616492A1968A030B8932CDF892F854F9C4411889F12E0
97E8B1E6AD5F507D6C058B27ABF7F49DF544350889F607EF3AE36D79CF34EF62
DCE39233C53FB6CC984EC7F912D906D214CDAA9BF98D2B720C81F1EED4BB31F4
F542C53945F5197EBE547F64148E5254A26D99243F247B0C6F45595CD30AB823
C4CB9C3079107268BF02F3B6071955D4B0905806BC5C8E70210001A2BB2D04C1
87928773FDD0EDE3BE3842CD77E64EB7A8249C55FC4A93FD5E436CF3861273BE
0E9DE27D112A3C405E8594700C816614745516E2BE9B3AEE7509710FF559B74D
0DC9AAE9DE70993ADC6205EE96F4D801B0135484B533058716C2EA1B3DB3FA5F
FF6EF6CB70950A98B8F8F38F6013A05E86F05C39913F6FE3C16179ED4ADC1C4C
8CF3FCCCD1F020779192E99FD7E4A525F18BB731F4E7217DE901B602699F1823
8983945DE4C71F96F8E3DE4A98AE5AE424946D88456FE1EB7EC71C8768DDA184
3CFFB6C24900AF1B0ED2B955B9744A179BB5CDCA5A0C28BA7C58D5B615559259
C8F9A9D5229E25A9F7AA7BF221781C4EEB3AF9BBFA3CB5302C07F2CA0BEE9CD5
B7FE2289A7BAEACC5C25395D74554BC816FEC1B1A4BD764272E0A742D21D12A2
652C7960F1233EA1BAA91F915CF401F05C752E4193A3BE2F86EBEC406D10C060
6DDDFC9054795A6AD3EC5B5FA34942A6FB6CDED8A75950FEAF1739FED15BDCD0
2AC056288FBEFE7C22E533CBCD917E862219511E35D15576C9ACF595C404E353
89E2C8B88C70B5CF66FF89CB9287C877A2E4A71ADB7CA90B215849F10C890F53
325DE5B56515A97FAEA8FC8D4ED033A153BAE8CDBBA064D3BE73E78419E38C69
530A28310FBE2EBFC3024811CB8857D9DC2F288ECA3D30B5F1D1F59BEF429ABC
DEB4A6F8E6BC111BB7D417CD14743F1D6DF44ABC115AC4BB0526D3A85F84A53F
76BE6589BB83BABCCAEEFB3569406C584F0F087C41674FE698AD39A92FD6171D
01DE17F19F5255A7B7E2EC9DD672963330A96466D8C1347C0E7D34FBE2D9CD1E
086A0A87839A2775E6B1C876B7CF903B2FE0953DFF7D4EC4B42B5310BB12556A
69E38FC1A3772D3C07AC99BCC2EFAF3B5F3928D2C9324523B24193D94DF614E4
72E7C564A64134DBCCB87BA4CD8486E5FB7FE539FEE2D5A88B67418BF09AFEDB
DC7AF389AFC782C588A38D7CE88BBC66DC70EC489AD587BD0F2D9E312CABCCD3
2487EF6B4D0467475774FA183657B5E433A0890789109D03CC5E5012C8A7031B
B8C9CDAE35B923D5660C9BFEB51923CB25D028F79B809D82930E2E4487123F7A
F680B938443036D7F69810CD77A54DB7EA447EFCC1D1DDE31D146000D4938037
AB88EB89C108C81CF2314896AADF979FB65AD27A1E359E8F3F7E4FD8E63333A2
7C2FB47E1558F35819DA1C3F3EB879ADCB4DBEFD285742B309EEA76E2FFE4D5C
C6E4EE88916240650D1AB19B699E55D6D23C60AB754968215B6AA101FECD0933
7F5B078D0B57527957186EA0AE0DD29EF17745632BA2194107F33FDDDE4898AB
6632414558555955E64D8091D32C382C25706616CF3BC15BE9E6C3AB89B75918
86D2FAF15142382C9856664BA1BC8846A874855CA4B11692C4E6E39C2CFF15E3
06B88B1849FEB2477FC552D91F642525C2A721C7A19E5C5DA8E3CC3B46FFF850
787B10414D896AACEE05D445EBB52C8F4BCA45FF92533C7D91A126E51352565C
9E2C678F615AE89B825E44A9D2D1AEFC65459001D60EBEFDE413DEA668529CF6
4A5BB9A2EC226C892291FD95CCD9BC25E2C993699AD64024FE015EA98C1F4168
9A58554D6B4BF3A88E200FEAB47DA24D3014217A69BE31CBF8EE57EC0E970B73
3152075ACF7080C3B2A30699224E8B63C54A0788A22A36ED338987BEE9F1510C
B1A4A1DFBFB31EB6A77BE3F2429A035EAAF0F559DF0EB1C9599B0513A0478ED1
9D7E33EA9D2AB4095546C2E6E7BBC2976E280E30E05F9AE9640F029486F643D3
898ABA74DE3051EB2F65FF3ABC8C37AF0BE760680CFA344D36D92802BE82D549
A94999ACCDA304695B5C83F114EF4F7569554DF72ACF07D3947DB551F8E53965
E24FEA126B581B99153556ECBFC69C0BFA29E6CEEC193C266962075DBA61C914
2C9CE5F27D0469519D2E85C9250141CCD70E06544ADD9A536A9F3C103D2791ED
D4EDA186D255898F67C7EF61B5A316B19BB2D808584747812782A6BA08F79A84
C0401ABA29B3DA7389E23538603C0784D6FE679692EDE751D09853322AFCDFAB
1BEDC4A0CBBB5A618BC618F694519CF52007D8357DDD4453F65E998895804075
AA9E64B844EC9BF578675C023AE27D89E821DF013503B710180131CD3C4BC9E5
AB53ACF2C864DCAE6EF80F44FE6FBA5C5BACC92E77A09CDD38B21AE8638DE3E5
202DE8FFCC97EC80C3821A29CB274F5C07C1111C9D836E039F4CB0DF795A1E86
5D28135E942962399AE3F984947615125AFBE1666AE218BF5C992829AD03E561
CB0CDA85A8F754D65A501309811BC49DCA8972659F0914F90E2DF9D5AB6AE0DA
E6293FFB31678C10FDF41EA306CBD7DCEB85190D03D3796D9333697A89EEEAE0
8B004946CAB6B2923B6FE66E9541D0EADDAC6102D19EB1F79F1B1C8AE87D6C26
D7DDEE0C5F3668644F2FDB81E654E6CBB4B90E1DCB5B651324FC3E4E9F265832
34913F0E7486EA52E4F9C8F5BCB054440B6D91864F2238B03D40B792109358BD
5EE002061039223977C87720735BB1A7C16CB5CF1A02951C1402B1E1F61B95B4
AB39FC8E24AF49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176671A33FC55340CD04C2DE46FD812FC2711A85E21703E2272E8625B80E
38544A1C52552E226FEA4BC24969578ACC4C26AADE08F03550F0B0C28D9169C6
4203BC5793BC5B1BFAD2F5575BD0487FDA98B80D15525BA52BB78E2D7DC5AC1F
165AAEDAA0FD9C02A3ADB599D46C90C0ACF02CC4A35FB5FAB768A65E02538D9A
325E52BB398A4FDA3D4FBD27851E717F2375079831818D930F9BEC01F1249E61
E7BEDE2A8EC040D5B61799DA127C0E5EDE58C0D3110C85E8465E46DB535EBB6D
872218F270198F87760AE4BD169DF8DFE8F59B92030BB4ED1BD81D698AEE9F4A
4416E18D605A0BE3975CCE87B59888775889795AED1EC5CF7202D4898B4724DE
CFCE2FA6E02F0A6D3C34FFD77E3E33B955FF618CBF64DA7348AEC6B22CA7C1D2
12F8FA5CED6FAAC496C1BDB8C4847E4BEF9B138697890A0BE28C36CB41007D7B
B006552F6D106D9B819B77F222154E647430E68D8D51B1480A3BB37FBF0E1929
0C17A40BC4A19B9E17282B7FB55DF699325D46D8EC1EDD62D205CAD811653645
7AC12BB9D8EFA98BC30AD2A8862DBE8CAEFD08C9198BFD2AF9E4EB3CAFAEEA7D
A28BEEA138BB6B61C7BCD42AF1B62050FB1F2FEE71FD93845EE007BC203AE910
1E88E26F72674455FEF02723F04F213799BE944F4B4DDCFECE026121F4ADD9DD
10ADBD0D6F9B14AE488054A8ECB330DA893AAF03313C2D9CF810590A324D2BC2
E6E3A01B58AC449AFDDD814FD8AE1D6D34F83B6C896844A93F54EA84694C68CC
CAA4E5107067CA3CC401960594F5518B3A3B05885CB63533AADE0408B0870E86
D0989142DB5FAAEAEC72238F5A1897DE959FC5B4EB6E08C7E0C6E13E5485C2F6
7D227784930F2537491560A2D6611E1D0990AACB3CA8F4739C37671DE3B01DC3
5DC48E1D5F8B94838F1CF017BA203DC2E295CCA1DAE2FF265E5E0E487E0B907E
B09ADDD6FFCC57C054AA87CEEB8E259EB5BBDD5E9E769ABFE9C014F9070666F9
1B2E9AE77F099B6D00AA002BA9A92EE741183F0D2A42ECCB948CA9F660E9C268
B208FE2BE124BB29AD940B2652A531B319FACF23412F414709B76C021C404AD2
967635E68EF8665D89EF344F397CFA41404913843581CE3F42B958EB3EF9FC9B
86D01CCFA6289CDECF112694984FA6B0C174B332FEEEC5368BECAF26A87CD80F
6790DBDFC0FF3093025AF5E9E3AF76D843CE6CDFD77C92339D8BF0317245F90F
4127338292FF6B9DB7753B79BA451383E60E6C146688AC40C9B1D08576AA8C7A
7B475B61E9FF57C82DF1AAC1504274F922538C8DC825A6F179A436326F575BEC
5EDF64501F109E749B207E4AB1A093B2D2573133B8C3A10E08FD4332DE707122
AD7A95D2748A1BA309A124907D65D8DDA64274EBBEA77C2AB74F885EA5CB0A49
64CFE035CC1E8FBB2D7C6001C19A10757890
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 13 /gamma put
dup 15 /epsilon1 put
dup 18 /theta put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 25 /pi put
dup 33 /omega put
dup 39 /phi1 put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A525FDE28FB8FCA4F0DBD8BF16A3F1FD9A9
CD52473E23A90E6632D39EBD39223004B2382EA7B1CE8E90BE77C69CB5B9F659
009CF2105EBACE0CF9BA0295F1937CDBF7F718B6B85C984490D1E560E9989B89
D7905696D5F64BFD9BA1A7CE898BF3C65F0474C8D72FE45C231EF90C86E14C74
615D2E9A57D848467627807915781EB7E8C0365187776732E23F8DE6B7FF9728
76C4C2526F6C573DA11F7606C5484FB0E9DF7EB39C9BD47B5D0710BDE6BE3B98
0A7ABC119779DFBDF6FD13EED6976950AC4AF5B21906B6E84803AA6824BD46D2
37D5AA012269135E586D85A70DDE30C76F28BA11D53B99742B2F552B7AB37A5C
66D519670C89691517D8EA1F6EB91B15400EAC8A995603B6A01D3C188256E271
64D175F08325D19B043D6C4953B4F1CB9915A64EF273CA7BCE29866A26CDF8AD
1DFB826B01DB939659AF92E9606476F54446797CD20753F196A12A09781F4BC0
6848F7F860D97C462D2C10D3674F72090CC15AAD971B63A482723EB02C980C4A
2C3048043FF23BB1B8C34F99BEDF37D3712A88590E36B304030ADA0D2ACD2B57
ABD9E05E8D349627FF4BC3D6663890400C2F5BC1E1A1E73897CDB96970C17BFA
4C6ED49CC78D9AE7F0BFF3A92B473DE07E53CBD35B02434555D99F2E2C703B01
36E0B3C29DBE7626520C3D5B005A6B6FCFBECB2B186204B4623EF31C52733478
BCBE4174A356A8C25020EE242C5A3737194E9447DF054C2851EC948E53CC5A8E
43F2417BB1EC999B3584C4ED0868D4DFA37AA7CFFB1F54474C2A9F0247973C22
47C77EC2326C84798BC84AB49DF04FCE8710E4F3D621652E816022AA04BC6B89
3BA13C1A07155EAB53871FBA3ADF6D46ABA7DEEE9681779BAA0DD3C72D4A944E
53CADC23FB48D414841C97E2D8E90B04C74657B72A77E33C31AACE33019AAA88
3668F3CC1181A14D5C2F627DF5E0E06E79CCAD899A54A5B225EC3F850A86AC98
95E0DF932BB0017AA744E857B82D535393BBEA5FABF6BD5E8E7E40BC41BB8062
33CB6CFCF142A36696210035A4A49FAA1524CEEF81EED8664EB8435965DB7556
77EDBDA9103213C3E57B846C9B9C1074F2558327B3F0B4F8BF82EE2E543ED88A
70BF8655B6677BB98AB1B9A580F41F30BA5299DBD88028A4326B8C9419A0B5DF
FA33D1B102738C860977E22656DB55B76042C3A7AAAC93D0F9F898BE7B1215AE
EF3795B217483B20364E6712EB132AF29696EA9E4C1BF032AC8B7BB65C1C5596
626F8148E9EB5E6B7931823B3593EEB8263A2EE46728AF3B460A3819CEBFA71D
28C37F430A5D332A31E2A0B02288C42837811C083CABF504272587F176197F46
610D02D332947B9CFCD8975E14703A3357B278B15005C84326E34EFADB9A3898
D447C2BA4C88C576818912911C9F38ED5D98EA664CA03EC2D16349D76A6DC12B
36A2FFCB081EBBD28222D141A4E3D819FE7416A71B70DAE9FA43EB64F54C3028
9B34672FE42EB9F23A7B658B7FEFB33AFF4D10A61F390A3C5671173DEBDFEFE0
927D08A2DDB8524A3D52951D49982D4EE9F6AFA3F71FC323BFA0FADDE5DE86F0
37131EB0408D5F0784C4F2D715CDAF056FBBA72900A8557BC940DBB3847169A4
594BF0F52BA017897D7549D01CEF6EED3D4451EA45F75698F5313AF35E573C30
B825DD21BF7BB4C282FF7BF750666C28C12D5A73465153717DE47880DDF79C68
94DF1CDCB72018263067FAC280192D7CB3E4F1845AD5DBB25668481E6A11DC31
278014075EA757D8F60FC52F661F21A65ED03E1F0D4F8347A338ABFCE5A93160
0966BF5694E46A6A49BF87AB1947331C6D13116362687FC5C42FCE5CCF554CF5
1F0179F9CACB93A7AF01C4E487D3C513D85A67FFAE77524CDB9A1AEC72C5811F
486E625CDAD8AEB37BBA80969F787CC24B11D945A0DEE6267C89252F16767DD4
941D45C74631A7CFEB792A39ACF8DBBD0DA9FF5F9F50DB3AE78A98BB4A726C68
DD198633D69AB7838C170A2808C6CB3F00D063E3040BB70F75481E675E8250D8
C71C53F5D38A6CDC15EF2F59687D6359F9C261C0EE8DA0E3C3923632C707A4F5
6549A8B6BAAD3C7CBE8656944E8E7A17B3A807E0C3C181E36A1ABB80FC583EB5
365A39920708EBBBB8E8DD5F5E5D18497CFE0D8796C3F02F1032ECCB6364EA4A
CF2D116AE95479112348E2AC52051A9FEA0E2EFC1D40C75DDBBECAA34584085B
F60C4AE4F2F0A37CF17C9DB3BA7326919368CBA726A29BA1B5899FA4660B79BA
A743447C80E3FFD6D70445CC9E15C085EE5F1548CEC21681CA7E09EBD353A142
30C94E85D6E0F6C18226EA553348B45108BBBE2730A077B8136869FCEC0B3D2A
7430F55490B236BF9C523388957845F464C181003F9C0860EF64BF33CE8556A0
826D0FB323807DE608F5E355A6497FDA9436101C0E054F845F45DC96B88CD775
DA52B808ADDAB1995C482E803ADE657187B15D8C58640239B74AE57EAB67F848
AD4E04E6399A6559BE03A914E42A39D130DD30982E23570C564523138360B84B
310D1AEE7E70A72A2B7A34239C7CF61CB8DCAE8384EBFF863DADA14FB6E46146
35B77BFF72B740E6170295C215C38759E841B28E7CB41ABC3FB3FA7B1A0D3CA0
99DEC308412ED78FEC860BED3B8194FFEEDEC47A5839EACF0128F0D4AFEA26E5
AD8A629A3F82AEEA692F3A65C554E2F753F1A41BB970DD4DC059641343FBDC0F
8C0E485983AD407103F5A139476A811CFEA8E338FDF59FB0C90C4B4680249410
D897127756A9B84C35275303C44D21663B1553CFDE7FD100F03D486FD34E58B1
4AD907F383806AC1BA88B9C1B349ABC8DC7D5F6D53519CFFB402DB590DF56C0E
959C2455A1A1D62E159BF01400BE1D2DEF02E32044EFBCB2129093CAFD52A5C3
337A41C09E19C6E33658E193A8125E0940D99C78B2085D73D9376DDE78D83481
CA14187E03B2E0C4A02E2DAD62F41A885E38A22BB2BBDCB75616D143E879A0C7
57AD64864F3CBE24CA09768E4F634D9B832E66D798A4237AB171F867173A959D
51A3BBB2CBE776F185E9D34C5C8EA5A47FBB1E30C243DEAD69578F58B66279B2
60B50694C8666F9B14025F28395089238B1F6977D9A03E16486F2A3AE38794B3
AD43CF3A2A4E488567A7B3261FE97729EEA13E57E33113258A9D2E5E535CD66C
E7BEBB38A8750D7D5DE4850C6B8D3E532065395AD65945345CFE0C55D9FE3868
596A000894B5ED425F827FE196AF4023046B4DDC4617D3A76F556F5003E2D3F4
50A5466A53F0668767B5C21F100FA6D70BE2DC5C1B56C54077EBD958A5E927D3
25C6AB0AF6E3D51FB1C5941CB34A3ECEF00264081A9719857A042D1D776D9669
A5F2914E06AA27C16B128249C1EB364D315A8EE4CDC849C85E49558A881F4710
AA84F5172F52689618C9D0A175082F879BEC5675005CE9C1AC11BBC7674F65CE
C5232D567BE48A9BEEA724893868F387D7521D47A3FE4B809AE8059B87BA07ED
C477467E6F8A1B466B57739A38FE5B238B3AFAB1FE555D8274F5E42FEC8AEBC9
7FAAB7FAAFF94208771024A14F6EC243FB80E5BA5E61E55A7A18A9542E83147B
B16366DB44879837229091D33273FCD70696E260BC784EEFFB9FA3356EE0E194
68746E4D6A5A842A97595EAABFC6A3C19B5372B78AD0B0767B1BF3E6DC866CCE
9107128F7EB74064C45BA5D5222BF66581AB20F9080185389518118B02DEFF6E
CC3F2A07DEC0C90E6CB2924AD9B646DCC2A84B0A20BA9981C9A623817FFD5732
8C870F546215D3A75B622169F25E280F7C89345884478927CEE5D59A4467AB3A
DA2D6E0B74B9665BB63ABFCC4EB9BE35BB9FF4CF606862C9FEEA18ED93C412DD
99DA51B6B35473278AB2BB5D93AD8670E4756AF05D1FA12B063C1FA3B7027EF4
E07F2D27C187500BD7791BE4D1608778D30E9ECEFF26F52F9B2A2683F8BFA54D
3EBED498E99DFAB3E62417C9F9579F09C71A9A1D991A15F66DD94BC013FACA50
D13508E1AF3208CEB487889AEEA853C39422625A8B263CA2D7AC64B8617C510E
D8700E40509EDE06FC4C8BDDC0642FE9E24D0103A397BC7ED98480C5D25613FD
886CD1E679273D04A24825DD05F005196F314ED7096F33F7B434F29577623CCD
5E2D4572E1393EE18AB7C92A2C2B6B227EBED65FCE8DAF61AD35E56B33DE1873
70428A0410C3B595F10BB217C485FF456A654163C19804F8DB44D151CC2464A5
F4E8BBA69C8B9CC379F78DD39E2BBFB2AE014C9E27B8A757CC119B560DA9A182
207C01DFA7A520C1A57A9670DCF91A51117CF65FBFA1090F66BF5EC6D185AE26
632A464329D58880E90C5F38E1E2C602C78214736310E8840590BE1F0B8A438E
1C9482F8B71E1A1292EE7533989341E547CD7DDC78382460EE9F05939C8819C4
4C8DC38E6649B401B0D4FA8116C50ADB8715E6281970542C956F8516302D894E
F1C57E74BBCE9B813E8E3D82B0FFADEFA4AF32D148BED75BA91A9F234A7B0E77
88D6F27BC2F65EE8F77C5C9A7C9E8C8303F95C5D0FC45B2749F5A1C863D28799
2B5F7FDF7AFDF71FBB81F4C12A1EEA42821067920D98CCF229457CFDAC98D15B
C6FCF88C7289AE49EF91A0DA0EF52FB4B2B8796E7F66E324B2B26935DCEB333B
4609F1195193AD5A6C2319A4512240436ED9FCC2E69C435C7BE3C52EDCFB7E59
568C0DB601966B6E95DF9F0085BC3C2288C2AEBEF433BF8738257FC352043AC4
E29B34A1EC9F2E14F84C8CE52E360E82F366E9956B94B19FAFDFDD3CBAD9705D
633369526A6D284B268937529EC70FF4CD3F762A7A5A429686F2C57755785527
88F7528EE72B86F340759B74EB260B2C71E1A20C2801E4095613B0B9EDB2917C
061B918AAF62A2C324E0FE4316ECBE73441A24A49EAFD33CF844CDE1D9F42458
10D751211A4408866895C78D77C2F3503A1DD7867F7A5528F817A73C36929E80
5FDE5D6D862054685E2114ABC4409D654339AC92B343093368587D47592C95E0
C27CB83295E915B344F810D99A36F9C254209B3A53A680D698ACB1E7A6DE7D75
C487F32418C693FBB92CA1384891D2A988C74FD85D028FABDA921948207AE860
ED1586FD4B36F1097E914D6FB8618DB1D9FE8F2CD4ADAC7B9B2BC9E8E89B5FB5
250DE136A0D23DF7C23B3B07BB98E7596F5BAC2A11B85883E199DF91ADE6915B
83E81CBAF0A95D96DBFB27A1C498DEA2604DDE227D6F57E2ECCCFDFDB5445613
3860C0567321ED79B44D1F5B12818DA62EB2C03309CDE0997714F5B315DD41B6
E565F7C23666AE432D1FD65D01549DAB9167A528CA38A774EED0F3CFDE134F5E
70523F52727D907F6783DD89EF848572A8A204855EC2EBCF6EFDFFBE47C14675
B40904E12B4F40EAA821C6C3D11EE2406CBCDB8CF6008EDF51F869174CC91991
E80168F2CBC201DDF8C9E283D1237C11BE07EED840A38123F67F9EBFECB90784
BCF42DDCC79F873C5B137E81348823DD4615C48801A6C22A8F684439A0BCBEE6
5A2751F780415E786F58A130EB236DC474D566EC169C8A9BC01C31923F3BF32C
18951925D2FD85099C092B590F8164904BE1F34347E2BAC39DF608586D8173DF
3559DBDF64E730AA5E4D0A11E71036CAE5E16DE5F14C53FDE199A0A0251E7A24
F25F1BC09F39480ED7C56C0C22DFCCAB09D78FFDD19C085AB16BF7DD4C50A815
99ECD14FCE6C84B4ED1BD285D15068405046E6FC0BE0AE595CD2FD56AE6DDD00
D90AA2A11E91BB6D2FFDAD646C4D5224D2B33484424A2316C0028BDD835AAF61
0927ED85F9174092205148A8D5550BAE777D6E831929F196DD0637075013D711
867AD89A73F9600A41B84E7519D31A0F791FDE0899982DA58744D281A596886D
8516D5FA4F8565E5D7B4CA84DBB710BE481F4C6517D6E57ABFC67C43FBD2E565
4C2A3581949948BA3CB982C628A6C7F522E4C481E419797BADBFA1C0A83BB291
062AB336EAEFB146AD90091B36306CA08465501069431E77317624D19CC2EE09
71F2A2571BABB5647775962B2E3CF646E29C0FFCCC084E2472B703AA398164F2
AD1464A900A5D43B48A637073158C7358188A3AAF9B83D8A6DBB376FD94F1F8D
CE02A03CFD619BA26322675F179DF3F65B66F11222FE1F3CCE886DB4EAF17573
F45FF44361AD8218AD8DC7E735286BB0386DED22D33762C5389ECD888393EDAF
51E887677C0C252E91C3FA0DB6B5815C93A88EDF6B99908E95DA353157CC3147
715081C763096F175DB722C7FDF66472E27FCEDB7891F75C9219F0B2C294412E
6BD9DC9A13BAF94C3E7961C5EA8332EC8294676C77FFD66361461141302B1183
9DE0D47E5C22FF60612293C67422223CB0618A94A358801E544BE52DE3932A8D
D985E5B93C9CE34C8CDDDFC6EE0578A7D2625843D2B047A22EDA5C92818D6A6C
72C5DAC51109AE34EF1DF304DC8CA40F965FBA944AA65AA602803E9B361ED319
B5479A636F51D8B84194DF50632D4254780324C03020C05F46D75B9FD2DF2B55
A0C2AE7C9A9B8ED939CB69293C336E0EB4695B2DA88E59403980170EA6819A50
D993754A3B6DC097A9DCBA172D2E83C5BD748CA306373E4E3A9246F0AC9DA41A
E817393411C42895FAE9EB4BBECABE95C32BB77A690F122D5D305337054B752E
A74E52AB3FDF9CFB04DB70EB4A52C726A33384864545B2C65430B5BED90ABC5E
37B6E27B5386A751528497F0AD6DC54F08B253E15BE3E4B235C649036E5E2725
65FF3E1FA6DF23B3A4AC4D7C988CC09C06EA9455A03E9B8219B6FDE0802C4DD3
98A70D159C85B8742818651575D02B04C49EF3BFAC9BE36A86F93D7190487AA6
A66A107AC3920FFD561AE1B1213F4B1469F00CA2917EB8246EFA0461C17F00C5
257167BA8906C73273A1CB501812BF9404401F4C1F1918A502E5EF1D87B2988C
F5EDF61B9327CA470010F17B172C2F5C9827F3C93A0C5057D225867D2ECC46DE
C8A2DC7648FEBBFA241FC488EED736465F04550872B5C774B3BFD12958275771
878A5B888DE476289FA9A8AFDEEBF5258F8855E21A2B4A2C892A81BF43B76DC2
783340C9DE4C0AA338D64F9110D1873DB170D5D1801B533B2A588635B8069FCA
57A9E0E55BBF5CEA9636E566BCC675A7022382851F51552C6ABC58DFDC634794
45D18DC47ED4B016674D60F2FF04DEE63A97DBF9F1291CB3119BA8B17EB39C7D
1F550B3517E94C85A3446599E77C0F8C8DC97E89ED392317CFAE779DF95B14F7
D4049DE651B07D07CDA099FBE5DE245E0B57F52AC21D31DFC540F96D6281F5C7
B05BFC44ABD7F69B393135FA3B767ADC8E9C817710E7B8A4D1CAE5C9CF8DDA66
DD064791855CF065BE8E96FEC45708AB112B3F78683444315A766624A373CD12
CFC7470F617F2D93EAA04EB8078983EB05A1FCA6D153FA4A6004E07DCC205317
000FC0AAE2E2EB2C709EE3089C2E2628A9D5F8D34B04C6020EFCC11897B5E375
A2D8AC9A0532D89323B1BA22F32D8F21CA98D4D5022164FC77C87F9D68221562
E579000FE1CAC66DC0715983A25B7C9D09B01A6CB9F21F0C87DDC1BE990285BB
A0C1AEFB7A3188ACEDB03292E52F4D05A2F1CDD10077EC8A03C65E0337C38888
E24D45212F29760108AC40F616CD060F55CC02BF0300E0B6B4DEF29855AEEF03
CC42A75F7F2A02F4273275814F2DFFB2525DFBD22083B73AA84931B65631029A
071E12608FDBE8E25DE83B29AF5C3270B24E2C8AB46763D751A7C450B8FCDD2C
462240223FE3F44BE34DA7ECF3A4D1868DC4B495C8287582180F08A33C5EA182
A521AB32FFF9622F9EA64AE49BF560AE817AF14D2EC26C86420D0758D9B35976
736298789AD9397059A78D7468624C41C1D0725CA488B0F36EC77E27FB8CEFC8
DF584E61C1F0666126373A04BB3003CE0868E7FED4A52C764E0B18F3F5607D46
820341F7A5C72086D3523D54B0199D2C1A4F8D3FA8BF381E936E5EBA81106220
0A8C98DCCA112B06B5F15D7D5BF84D7298F1D781ABE94771DBB31D2AF3AF5231
C83CB67D8F45CCD933BAFFC71B301CC174A6B3242C4B4C20B2D65D2BA68A339B
1F53B18D5382B812D81487E5943A5A7223F4F174C08A0B21B05BAD56B7F5346E
5962F6CD7833256E6D06C9C5653A1EDF7F885001BFBA3E118DB823C5B7C4E314
DDCC5D666BDF91EBF10DD942DF437261805715190F397B553B70C04CEA121AC1
021F2C772CAE6BB57AAA8CE1D7B9F5826E97CE45BC8404C88C8B531D0046A277
509E0A6BBA355B458B2818EBCCFA5374B7AD4D2BEC37602BC5B86EC98A6813AA
09AAC6D589D68CD2F1E3833003702CDFE2BE952F600AD68922F8BCE5418D8F99
E2B0880A6586C7D98FCBD232E2562EEF38F5C32D4664B66432C7111F9AC73B31
86DCAF80C7C474C2368425DA4D8F711CC7F4830B118D20E18960D97B574BC5A7
0BF5B3DA2DCA39A0F5CA7AC85C0CFBEF38FBBAD1712949626AE166237EA09213
60D5A1561F62F553008E41934221B4C298464A951EF6547BE8FF8B026F504F22
99B4E1BF9DD1A9B974A8F16ACD1C3FEA94EE63342B255A125582C40337947A50
5590E9CDB198D61E8C4E80C0265A399896E543C0BC1EB7C3F39F6973C20E2C25
0DF8D62D5FE79720CDAC63641DD90FA9753C16FB9EEE79741DD6ADC0D6DFCE31
FB2484BE1FBCAC3D6FB7BC870F81AF8B62E24113023B85564C619AFDEB445503
B5D6643EB02EFBBA3DE6044FF32BD87174D35B7773FB088597D4248C588A01FF
D7C43A5E2122B932BDEEA384B6075986A00865CBBF1C7FD33A2350348E574070
3B45035469C466F682C396420DF0A04CA4D790F6BFC479F23308B38DABCC0973
23554BA9CBD74E4A375D22F30103BCFF99C4B4586E56008EA19F35E7C3084B7F
C6507CC7EA1084647AE17784A4DC705C5F3CE6150B5FEDAC2B5A677F619BAC11
4CB5E4CBCB1BD2AD7E59C5BA20B735193D38349CE649E8C507CB546775E9C5A3
BB4248C1244677AD51ACD7FE7AAB1FE441D7E7C3B9CA0883BD9BA4DB63A5FE03
411786DB7B098BC1FF3C61D5ADA633C279C64D7CCE5C0AB00F61A3D85917B56B
ED856ED94B0912A20CA7EC6EB37882E126147E5E4800D510A33C680E55B16939
7751F746D217D75817DD97198E73854627611FE2CC265EC77D266C4E9CB6F1C1
0E8A40C20FB68CDB8E5596C14287487B453135238D239F743ADF65771CF2E43C
2B179C05CC55451CB71F78CEF6EF8DAE82DA1CB3D00E15F7D3940AEF2A13C594
9E61429AE2BD60E660DAC1F6920A96B637A342E9BF9A5AAE5B08BE2DF609340E
CD88C648E869094E146DFF2C4A6C295ADBE865F8BFE75DC0EBD4440C89A4FCCE
7BCB322283FA4C41F8C62F2ED2AF66F866D25770AE288CDA3AF38F6048C95310
CF1CB4F3DE553F8E769C97D4B0A4714AB6D07B7A3C7C9C5195531DCEA9EC2BCA
84187BDB8BB513E8EC9A8B99E510B16527339D0BFE55FCAAF815B160FF269381
9F5248E41B8D34A4E6CF453A8734738A393ABE32184984A5C5F358DB634FFF59
4D6F4F6303D75A7BFBBC420B58F5970A592E49DDDD22EED238ECDC3B5A53A15D
E8FDD7762B91F435078EA601BB1026099B161C889D8C66BC30E4F811D3237524
5916B835A563FD73C4B9DC1D774065E24D3C670075F2B0B6E2F1E76F415B21C2
A97D12286ADBFBBEB1368453FA588A52C39BD6EE6BD508FD2D88923DAC6EA21B
1024625751AD8CF0CF77D10E7ACFFE9C5430C11F1A311E476558199FCBC3EB67
5E36A68F9CBCCEC46B515E7D95BF05010D12808F4C84B09504E6418CA20B5B5C
619BE9A57127E7B568BBE68AF105910D1593CF39EC47866276A091FF2E6C10C2
8F2584E9EAA7571FE422EE506FF5B29D6651C3088C9A5F5FB8FB9BEABD7172EC
8649D4EBF7E4F97DEFD6B4F425A744EE0516AD72D91D8E25C4E89AC9C7310400
9C7E72480AC8F6401111A56799CD3541F9DC3DE77C6CB677020F5680868D281D
D7A9C0420705FD8865687720976106925C465C8CCAB7CB22FF6D35A9688F30AB
FD01CFF3F5C2434D5E8DF8F7D16EC414A6295B894F67CD67EA63729FC906C96A
684CC68FA1C21CD5423DF8DF1E44D414016A7C88EDEDFB1567369742B60009FD
5E0452DE1D2689F30783A218E9B2607A5375194F090B2E2BED060419AE42AFE6
132FC192961692DD81ED48FEB2FC07610C7EEEE17636B2C70173EE7234EC51CF
35B070EADEB0488088CE26C839FE91046B9647BAC5A1B71721AF3B013A52A7F0
446F81C5AC88B0DD641B28DC6EE0F27572B2A403C49272FA8C403C1A794CC1B7
3069B9F7784A1216F1A108B1C29C5E40271813B2D52C7FD43E59CBE226A8E1B9
F4E35F26B01776439A080033BB4FD6C8AD0C7D64BCFFCD997E80AAD1BCC907A6
3F23557783C92EAC01667E0F89557C1E6B8E8332112CCF1E2229601EFCBA2F6B
E2154303517D6D46E9548C46D1F9B9120BB2D81D00E5350A9A690B5420B3BBAB
3288B4A323C0F489C901F289CEDB730F42B36BD2AFCE7B39AE42839F8DAA4721
C3D8F456EF1F90FFF6E6237640A8C1DF0B695941C8EDBD33954312B83F5C6C33
6429B223E5CA05F97A305D1A153E579FE7E7DC1788F49A111E5A2FB67F6144F1
E0EC8FFB777F962A69A22C4BDD2FAB73B5F1A0A480EA956F4C439505B7CAA8D2
69345E91EB186C8D32664F9B94DE635610E865CF003ECC555551C78E470C4748
A725811BF3CD8B68049F6465C36B4288DA4F93264781DED368568002B8ABFDBF
0865C0A2958279910C8D1E4F978C0B3E545188D52968452F34DBC92DC36F2F69
46DB0F369C548BD0C8968259CD4C00F9150B7CB87586367301BBE63E4BAADF46
FED15571A0D1E7E0BC75A0CC23B38B74589E402E9ED55761D403610E8CE07243
A4511ECFB91F2497EFE520E4E0A28991378C1D175CCFBAFAC453295FA2F74A7F
58AF3AC7D61464760C1F24EE45236A2B14007A0678F3AF7CA6B2E89285D5895A
366D0077EAD47454BE45BC7775D6CAA2072BEEEFCD9E6E0D91288B9D193C53C5
52C846BE4F74C963DEEC6E7C630FB8F0553150CC5C72F1460DC8EEF291B9362D
DE1639252DC293E65F8AF1952170A6E2F02C8F7879B9226484F6A8A954092AE9
16F6C9F0488AB8A135618850AA8B62C0433AFF53385EBBBBE2CEBA6627A3E528
FE9771D6B4E5A7F1C9B8BE9348127C220B1057DA4623D78D908FA6D3A66F0F96
DAC415A4DDB5E504010F0E48908EAB70BB2ED427762D1EC4E199887445201FAB
BE5FB6EA494922E6BDD93C4481F4B6E623593F31593BD85782F60F1D4CEB0573
E8D9C457181B079F5DEE2B21747FDF7834F1302CB76A6C4027EC4AA04E069AE1
9680853B8987966CD9AA54EE12BA2A652794D40BF8C17B5AB8634D20BF8E7209
693506007228B78B708FB1D1C66670CE802E770633F41EB769A3362AD6D39135
DD5CD57C8147155555E3E531D98D95282B547D09A953E74AF8B27B445166F847
554CBB3590E871C867CE41214EE4F4F07C65FACEFE49DAD12F526C5AC6A0E41F
5F098AA00BEC70F1708169C3ABA42A75C509F99F2E5F0768C746D8A29EF73E92
EE3F5D6FAE74EAC15A03A006993DD767BB1854FE7A1B64C4891A83E3F894B2C3
63AE7052985B22EAD50B2A78326ECD485737EFBE6A1B8DC90413EB873033C549
F27EF2777096B1D1ABE57B9F45D7FC2BF82BAC420E0DA3A718BF3EDB595223D6
2E06A241F6CC2141BB5E03EB7DD34CCB1A65D8F1EAC415045BAFD0C84C801543
929B7C5A6E266EF0394E3110533A61C95CD2223D17BE305A3A05063A2B231CB3
A86D3A39A16ACF5280FD3FC88682E56941882731D81CAB7E43A1C81F6E4A1D9C
375E1ACBA3FA296DA7B6B8223CE606C98D43D6AC8406E95D524F4F5F6E8DF2FD
C29AB6A9C70CB213FB296B7F382F5817147A7BF5D0BBC60D9954DBB2BAD9A2A3
7725A080824CA7D3F566875F7401388F80D7508497C0A6BC859293E9BD1DA271
33347A7B69D66FE2A0203AEBD14F7DE7C576EC5BBD8DBF0BB0537017BB9E1BF5
D710693759F90BFE2D36A3B25ABB1B573572C4AF5EFDB18D499A2C3A09F183A4
004FA2E652C8F09E50368FEA231F9B1888FEBE5D773D2E6EABF8DF8F2DE29535
018E4B4313676625AECDDCE93ABA03F15AD68C7D87B3FA55D1054F5F976DF0A3
6E0B3F2EA2FAE767D5C01CAA0AFD8C8C95BB75B9D0739F3CC9F1E611C062EBF2
BEAF94E7028D0E847C5A151829DE871E64EBB4230C4CD64C050D0871D0F34C23
B5C378A77D4BE25031DEB05EAF0A69AEB53C3B27C920E152B82D9A2C7D472272
36833DF178DA4153D77EF3AFA92607F4151BD72C63B6A63CBA17D4B0F0A96A46
E912B33ACF622A2D3DBBF97BA1E415BE4E9E2750D0F7A00F4E6A5BAC8C73629B
C47446ACC2652717AFCA4CADCF64B272E706714458E8946007A521701D6FD10B
1341192CDFD5C8579E78EE4449B76183B64B03818DE3143E5C7CF22ED47B4560
F27999BF8212B032EAAAAA871CF2C5AB88361308939C71C66E8FB4C1F9EC0551
6F7FAA80C3BEA981824057311A9FFDF6E1BED1BB59FE06BD449E27B305DB7576
2B4C8DEE0E93D375F19A2067B5FF819AEE265C6BECE0ADC706C3FB8790DE554A
277F42A3E92DB3A6EC408F8208CC45C16217E9B343A26CA83424467C9D4B988A
6E013CEB5A458F3A69D09A111082B18ED4B945F92C678361D254F4953D382D26
4A118993728D3854380651D9C7071210094AA12625648EF1AEE68CBAC4CEF2C4
F067C3B90B1946F0E536103A56FDD6E02A7C8246F227BB9433E026B6C76F2756
19666A6E5BEF10FF838136CD8AF4FF6874C2E65C673C9C7D05E198EAB3BDDAD4
6E3C5D94025E925EF8C6D71E099C7CAF0CBAF0048638E09BB9F6AE0B008BB2B3
4AA9395032EB79C9B62A4A73D214529380AF75AB608BBD44177DFCFDD69BECE8
1AFF00C27792BFD6D0F6022A49C797F1C8F086251802F893B4C4A1C31EAC5D49
C38DA519B9D1B42443F46ED20657289510147C3090A3638ED2B424052F77241B
61B413EA612724BA28D077D364B8C68991D0C0E928828CD473201F58B292A70E
243619DDC45864F9EADE4D913D281F3B1FBC3F10C76505F02ACC65959D517580
EC4A3E6475F3EE5515C8C0F326A03DC9877E163C73E8626D4C35740139C065E4
5EB050337D659AA0AF1284C979F3729A0551B38DE928152FB55C6CE7FD063F28
ABE7D028170804AB5033822F56A42157D5A974C59349209D1710CF9D2CD4E849
81CBA29B226F81F870143679512DD5925AD6AFB2D6976BA01647E7110FAF8C10
A3515EBAEEF8B98B418FFA1366894B568BB59D14522AC80A2FB581E0779AF53F
A877312153B5B0041C9BE84CF3CF67A70515C3F447438AC712751D6FE550F39C
5245E5B7F7FBBE0BB3A130A95F4DC45FE704BFADFF1950F521DA30ABC096ED8C
CF82E4CC2E77BDEDDF18154DEB90F70630AF40CE455C56940CE968765E7B26F8
915D7C071418109645507C8CBA00C7DC69B6F6A04328220A0282F0CC6649AA38
ED4E45F3B0258FA4E29707C37C93354B35D1E38C363EF05C77C68283D613735A
FF79364A972C6D6CCB1E1D9FBF4D65212EE6F89D8A2B2DE26C5254F3237C7595
19EFCA6F516F4FCC09F25C3EC0112C3F39C6D0085F39B7CC1BA2EB545C34D9D0
6E6F33C83F41C038316EA7151CACC7C935A9E37157B32FE2DDC400AC46E02AEA
B90420F4B803D08E41AF498E03A9F12909A551AF304CAEBBB5980B54992B8B71
292C764DD42CA7178EB51E3A54839EA82A22FD564B71A23CE0DF794A355C6B45
F4F09A0FAE1150DA0BD582C5E5D68009585AD8C8911160939B7DED3B8BAF94E3
96E928DDBD7F7AE525D5FC45FD0E60AA720626AE4E513E0CB49738A556E2BB6C
A729D6CF2232FB2DBD7FD1B3A809CFAC4DDD28AB36E3FD503461F65A9858208C
4AF42581DA10BDDD7A220EDBDE1E95DFB5E7839E072D972201DF7D488159BB17
D3157119653315FDB651090289018842088626ACD23CB7E345C31EEBAA7010DB
107C416AB57CDEC6D066A0A0777B3D524E76BA7C95C557FE2FF53D457F20EEAF
8A162CA5C7BF3C03366CAFE6FDB8EC8EF7C258E9BF190666A79B35754FDE49A6
88C81C42C4B323150FF42505B04A9A0B2118927D4D5F29578B298AA798163821
302A846D266B80536678AD0C4AFBAEEEE2BD92E0FEACC6DD5B9B386B39432C59
EF8EDED5626CB2EBBC1C210C74F9BD5FF00CBCC9F4D9F230BFC9E815EA0DEBDE
CCE4DFB67A774B1C886843E3851F6DACAD92FEDFA3840486A2CC695587E34CA5
87BE99DDFC3047162B1CC8395ED16F0C4C26967C94BEFE62D6848F87DDC311F2
15F1F578AFDE2BD8C1FA23FF38BC8BE4B04A037D0D149CC583FFE5341434B672
A682D5AE530322AFA2FA6034F503F61EBB96626661E4D28DC08DF5DD42952D97
19EF6478A95CFE4C1AB61AE5BEFD5669899F08B67A588BF063013283CD9FC7C9
DD286EBAA7D2BA4FA51660E1072308CCB3B5258756F893520FA6F81972E1F509
7F456B042D34D3F511831C8882C36DADC05EF7478FEB03D1D695B4E017E6556A
D674340F9454C68B30491559E49E5B06BB474176755B775823C313650D63605A
7CE3A87BD1544621D59C7DAC8A4F8A89C63A9B827731BA60ECAC6EC1C50AF0F8
46372A6E5339F73061C7E8B64068A5E6B32A9FA98D9DBC9E63F5F70E79D8EA31
132AFEC8667CE7697413990A9E7A44789903E1D1A8B6C54D89CCCDEB64849539
549810E7E0B152C377F9F8530282E9C8B20EC9D2E4C8459F4ACCC595D920E433
B8A173FCD455B08676692D641A3D418BB52DC6936F636F5442F78E2D3EAB2C63
0CC3B792FAFD994CB040B2F64CAB4A5EEEFE29C5FC182E586FA8D7110F7870C4
190543738C2885E9E8961246B42FA6DA55D07E107C8153836973DCC76792B9FA
650080388E19546213CFA800F3B6873996D75A4F3D40C52FBBE33522FC9884C0
9EB4330B98A0E66368395637CC5B6DA1E4DA018B271C16E7B96FC9E7C37BEE9C
276C20E22244858D2B73439CEE8C586D8731103EC4554EB9F0E2123EEA32CCE7
F4AF7C5CE2F9F80AFFE94657989DC2B6ACE69C84038696FBA80ABDD04A619A70
B709D60BE03EEB2EFCB4CBFF13CA4CA4C22EB0F5782274BE02A6F71FB1A00E06
71947C92334FB1D000F751574597E3B33A9D7903CC6ADE5496B34EBCE559C47D
531A3A4FEBAC9C996A02BC502BF51EBE76A1ADEA209E57E30D72CDEC49D28398
D009F05DE69027A5BBF3BA493937998F12B2BB20815B664BE4B93762AEFB4BC8
514FCC8B8319D8B14EEC60F962776B768F1362C351CD7B4C46E1B828AB2A4BFD
08CB098B0997D365B2F559CAF153002B8B59BC68A45018B91C30C49FE7F7256D
95ACFF32AEFC3B19DD5449CCAAA41C13C50BBE4771D057C46FCFD5B02AA909F0
2B7E30317CC75760214507DBD92849709658FCE7575031309BF5F0ECC39CC4BB
B02EB91343D2BECE2154A2DC7B5BFDC08A6CB129417D89AA70FC75DDEAA35B00
16631A2F18B98E4B282868ED63884812404457B444784A89A25B3D83868CB6E5
2F89BDB66FC3B5E5C5E64A2FEC03E4E12A929369E70D4D5087FFAA16AF0D7BD4
F33B724149CED15D1EFD414955FE86B1EF2BA8C2C220FF3FD51BDEE6BB8F6FE5
64DF7DC8640875A8783C98CA9054976C7F215A5B2A74318AB1D353812AF6FE94
03670C466CB5FF30FA6EDF9C409365E11150A72D4DC94A43134375EE7431555E
CE4034A60E84E64F06F8EF71BD56AE9B9513C55781D957554E28C5B6D92D46B1
CCC22C0561962CE965006073F7509F1A483B4404B2AB48ECB7252CD630F84941
841768264719D4D1FAA6AA63301FF95EBC6A1ED7AC6A3FE479281317FE994A2F
4943F26706CD09E3176767E20598E0F5429179E83C8CC8801392245E0986D1E6
71CD868E9843F4642D12A72B6ADEBD7A6980A3C72E2D3B67C95124169DF3AF08
9F93A96CCBEF6AABA543102327146F1A470A760EA81940DCAF2F46D98FA67709
8BAF1E383C2DE9482C8F1A448376DAA20C4B05A2C8E2E8616A2F890954519191
D56EAD91A628FACB2A680BA01E8725FEBB5B2316A231B1AF35F7C4B2B12CC8C5
D3CB2198DECD8A41BEF54CC548486FF57F76165B4CCFFCBB7BB0A3244F9D34EE
3092CD97C4A7C9A31806B1F3BA21EA4905862898C57FC04E7BD3E1CD2AFA92DF
F2F7D8DE1369432E9A4A9F6F645CF2792017B1920D28172BDA157396C0078C7B
F44CBDE87472CE96E129F9D59C93DFB35F19AF068A62E2CD8D9DCFFE8EC20E7A
01FEDF0C2B7CA32CAE6BC54F9D6D343504926BD3777E71B44591D69F2D6667F5
3C29F62A3184472F3041AE7FA0D9E231CD85DD3F3ABC2C7AD84C3E72BB1C3E5D
F8A3400EB0E517330C45B9AC723B953D839A12191FF4F5D156B2835D5928CA24
8FE83407D2AF36EB475BD0CA744166972FADDA4AE67F0D802D95D148CAC19E78
B276CE37B9C46AE89EDEA016BFC1699F50DF2B7EF45BCC794096D09E4AE1B625
36356DFD4A84B5D19000DFD210ED0A60CCACF043D8F52CA9CF1BE424F3E7C7ED
2CE65F7F359604EC5323C9B56622C17D860145A02B7AD034284AAB19D36AA950
FDAB801A43CF107C955227D922EDB302E8706C9C3450C44B45CA332516B54679
50680E0A28B64B5A5723F8BCE2EA1AAAA14B11A9299E4B45752E8F4309F76A8D
D5BF925620BFACDAE948549F09C15A7802265789CD9F7CE8D6A6A852715C2B32
F9F2E05F1CBF387658FA27B3CC20CBB1FCF0BDE8A17C98973A98DA08D02E70B1
6197B4872EFD69AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7A1224C6BE4
AF728BB274604F92DA3D78AAE6ACEABA51C59855BEE6027B7D1E63EA41128517
2C6ED7A840105522B533FF9818CBCD5CC794A50FC90E8FCF00746EFE5CC36C8E
FC3A4757AA7159BDAC8DCEF82529C7A5E533148CFCB71CA788B16E150DD105E4
1D28E8201B111F1DEBCDF1ABE22FBA48085CD9B8CE9A91C1D84DBB9BE80113F9
E11AAE6621C158A911A8B728D220653F84A53F8AA1597A7E86A89D80D448B5B7
AF1A1F39707FE76E271C78DE7252A68A7C05F7107BF01B5AD4488D69DFA2132D
A8BCD94D70CB4C705202604FB2337BCD9A29B860652AF175CA7A68EA2C662DEC
BF61328B89E5ACFB0D34C616F110DE4C7BDF4D1FAE818F63AD2723CF9E6631D3
29B5B29DA989A33570A21C723D1277505B5C6C975ACDCE8B88234954D6C4974A
090AC593688156FF9E0E52261EA4E0E869B2CAA6EA3ED7422355310F116D83BF
9B8EA3DDEFC5902F6C9C4A2C6E8407B58B3FEC9BFDE5290D17D89ABA710BD5E3
29E0411A49D2AA609A21AC0D7DE23CD621EC6B976E8010E4017F8153FF34D9EE
27D84D4663ECEB4D955FC43F9285CCC71B88D8160441CEFA6055D8DAAEE0D78D
2D3A181FC71BB028584A0D54B20629EBEBC4A119F0B7C3264CBB908D35895621
93AD6BE8532DAEF39F2F579242FCD8C4469626077A1BB2A413A1FDED019A725E
4220F3B406909C68AF01C8AD362E304191DAFDC85EF70AE34307FDDDB6B9DA4F
46A104EC1C06E274982420CCAE70215654C3183B885A2C6F04590FA75E6DC015
2CB143FB607A8DD71F5D7AA2DF53CF636EE67DBA61CE6D84BB5EAD2422F0F1F9
DD62574975A10F3586AB242DA9EC942B3C3C9532B6F2DAE7FBC2B42848EC487A
E63E8037D84323559E152DE6A4565C947C732901C0EB2F2D3C68FF7D9D82EB3F
9B9F5F26BC057E4683F52DF6053C9F8E71356A19DB7CABF7D870591BD979D62D
61003FF60735D35E76761D63EC950EE6C26207FCF9335A7668DE876BA3EE8802
6FA4AD0D97BDAA4116AEB5FE927803F2F64983BBA95D0FB238F7692AAB3E3D64
8A3A82A1576CD004E9F5C57CB5F3FDEBBA94921870950A98B8DF57305AE525D0
AED502F922C1E2C0B5D69A1125466C637DE2A5B657D5AE590C73C980493B31FE
8EA7E880D425D92492503A10CFD192A68518AEB5BA292C7CCED6CB208DEE51D8
3886194E62039F53B5F257205FD9DDE5F19C11DA7B1D8DF5A90FAA3E5A7F0E81
2597F1A89EC0E410C70D89D623588236E0FB67FA3744D82821CFE2C599DE17AA
E0BA85CD7B831FCBC00DB9BD48A4518147700C30200ABAB6510975FF51589847
67C04BACA78E407D7C2C68E869E2460954EB72B1A658F026FD12EFD2275617C2
B9594A1BD6219867B1E115C9798A0CEE17C6D91704E541ED1D8679C91BD60079
EFBBE2A6A2ED97E64160C3C3D4F3E60584FD33F1DC44481993EED55BA8D58C24
CFF058F214B7334E6DDD0C2AF0D26B1119B56238DA72227B0FDC0DF5C7135FB1
D99361C65E56947FBF94012A309702B53110A1C12544B709651C6DD45E58C188
B740FEA1001FCD6E4568C1CF0EAB46A5D493D4FFB552D9DB71A9469198459E49
635161C89CCBB590CBF0B6924F06DE30A26570BC69F6DDBAD101B3F92DCD185A
6F93DE1620555210516FC6A91A8799B56C8A568FC06703DC09BC773EA3BDD4D4
814537FE23E6E4E7FB6C297D8081DF752F98ED955A0FAF2E367E23684A30CB70
B19E515FA555E51D512CB1050B032BB5C5C5DB977DD155EC672B24ED2D9FED78
F168B2BBBC18F15B8FA101A9FE9BFB422936DC5AF26080644E6009F314776166
E61ED382309576528E38C0A10391334DA587EDA65E554129C62FACF58F977BE3
42C55D89A2DC3860970DAFFCE34EC0AFDD0CA9873EF44A9244483B5681A4FE4A
8366B9B52C0C488DB4DDF4F82058F78164882DC5B34396B6B973E488D74DF650
5B2F51F92119A191C93F499125F30CC0F7DE14CB2750873BF33392C7CF1CD88D
01D67A4C3F01F17F4FFC541EA5111E0F2AE2BBD70896D6A5DD89D808F3897A05
8B1450832587338EC404FF67F4D2355E5664EE5867E8E4E8FFA546DB79694B2B
0ACC43A39E60E748BE36EF0C8B9416B032FC43FAB4042C041D0B8DECC3644AFD
B742B134CC2318695D862246140C23BC1BA8166940D1881C996F344C4C3ED047
C003F8B7A34C8E0C829C2D1B03676BC95BBDD1C223DBEA196A6F48352AC0822C
E3BE4CCA83239B001A631E7694DDD162E4C5B2D0AEB14F8712178D646F3E9EB2
1FF1494B9791B5734A97E6313B118C039DF429F75BA8D9CAE35766B9EF846E60
04523B591202C8E2268D09E256BB4EE6B6F79C3A2E288F88AFFFB427785CE964
1B609D33C66F226894E6802761FD8ED7DF65673B4E27B3DC44B5163889A61FF1
A250242089DE159111336651A93CEA9CF4F6FB0F7409797ED83DCEA2AA36AC71
876ED27AACE1F67AD1218D25D98AD121B0BE6C9AE31171A3B1D7C93C8AD7A9E2
4695BA6AA8B0FFC0ADD38967EBEC73AA3C74A6A10061760234818C81DFF7E30B
598E3B731B528B9DFC8B3DBA73744C6140C7FD2567349F6D32E456BAFEE2C1F6
BA9E31B0F8B9D811E6392979D1BEA2FCD430BCA09589C954435FFEF3E8FB7187
E9CB2FC5778723EA6C7B8C91D47E6E1C552DECD44C130CDC3E59A7DA3EE59B71
532C64564D3EC9115044AEB1E932B4FD271F724E1A9C47A4F146154AEB671804
91D6285B4F0BC3E7630B8EF3BFEA24C860EA8CFEC44A08627A1568D0FCAE4D82
24433E510EA694B47F3F1A65FE49F33A688FF6460D67D11B401955CECFA74875
4DDD471035AC5F83753C668EC8205A65FB60C60B39403D977D6DFCBF99A076A2
5B41CF88CE5A248DD53AFD572FAD9FCCCA10D250D1782B9EB22CEDBBF84B5645
BD5DFEC581C7D44682C2776375B1891FA53B9AF7FA94B82EF6E7D092FCB9EBBE
85AC55D3E8B2FBECD187315E0F7EC7E1E389F9F793DB3DCA25AC891A13C79101
14B3A513608D66C4507BBEDD22CA55351D5181D7EF70EA8B55A3CC3148C53571
AA6C70F80EA723C36F96EB1022B57F4F6BCE30B75034CCAABF56881D1A0913F5
8B4BE7647CA5A8F7A757339A58BA1BF8E42A1DA9085E3508B172ABC4A487CFDC
54913FE7BAEE8D108256CF8FEDD41825330D5D02DFC7EAAA3654D6EFDCE337B1
7D29C0D487FE8496661D3F8E62F28AE1EF01AF00C88FD3934A1D1C38DAED4301
732377FA58D2A4F88BBECB5AD3DFBE00477AACC02258B7DD12DB15108AF05F49
F0E071892A010175817FA81616BE2B478779FA61F0C988968A288521E1AA73CE
901742D61AE43A1ADC241B50B7468030D6824049DECD44E0E1C722C460E1C326
06BA655D3945367D92C4B5A98658D2CCEC38CCD62D977DE4438F6ED9757DA157
14F1977A6AF63477A10CE81856431F5C64539E0A3AF39C3973E7218CBF8FB0E5
854928EEA6180688ADF2C62582BC43C574F06927AAB193FD5230F6936A1752B9
D1A84A778C50D0C7A732AAC2040E02D7A19C59062741E381965C89BAE2D1097E
EE4E772D2772D33EB05B35BA3EE9DD4C7EE5722B2D43812B720524DF2277CF4A
B2E4F68FB4C3BC802A94D2954CE4DF6D594D62D7E6A1E00DA31233B2A8476679
37060A1DD1F1CC50995C958B5F2C5F56825C772C8FDF8ECA9414D0A1DBCBEBCD
99519232C20C329E59120D1198FA466759B6871B9E1CB37A54148D860AE7FB69
ECB5C3EF7E1FC942A90AD11C3C1B7AD025F26B0FF2FB91F3EB6520638A10ECF8
B74155CCAFD14FC3837279EE5090AAD41035FA3337D67BADC1251CAAEA5C50E0
E68A0C4EFD46CEE16CD5987B570F9E5FECEB9AAD0CEB86F3FCF33BED98586D0C
C34EA7C31E5C735EE7C39F6F018C74C0B6F9B0A16F4C4D1964A97A53227416F8
74E1135530A8690B635BA0EC6B86B1DE467DDCEC58D19DCA3F10290AABA7EB87
1BE5CF6AEB5E0AD32A8EB5936751996C1886CCBB33B5F33F47CFAE25B9945B17
E333F26F4D94CA9610A089A16CC14519813C494949B6C8E1F2571289D12AF2B7
432663633974BFF3A14DE7C798D63F845EE7399CAFA62E2CE0DD2F9111D96076
A725060673F99AC3FE0AA7AAE78DC6B68EE4A8D0B9930603A49041A6C598B5C8
A1BA706E17F6AD021AB9F435D5D408104D40CC21F316BE4B5A76CCC53E60EF40
7B029978F9B0A50A092CD90C09D65B5B947FFD0F6B5AA895EA34D07593753110
DC181D8A916420C60C5207864A878E0B32B6612D7709A252E170C04C5728B823
4D020FF6D3BFFCEDA9335BD7201646AF4E1BA8C4E586818F8C3B143149A08783
90D517CFC3E428A0450A6F8A977DC817F491F54C0E33F63B296DA4689FD3C6CC
9E1F26FD965C0B7BC3423F5A7EEB474B060D99CC7BB3F605D47FB57F34C186F4
AA232038AD86A2BE17309A209CAA506045A83653F8C0E83527EBDDC92405668F
6F41A7CCCBC4636C86A6C027B89F76C8DA5771D1B247AB3287227D12A20FBD0F
B8F3A8F8D3A976359759C69E37E056CAF45849D4F6CF47907F0CB8FAB3B5F077
6D4814E1408E6C202AF880129012604F397627D48CD7B837FC78358A5D8E6F93
C728DE953F64DBBBBA39CC06A9D1306C837B36DF29BDFFA5A1561033FCE6499E
A48E75019D4A8BF087776463D232952A172DE485C030BAAE6B9D99FC2786E71E
A29B5AA0A3D2A1193F3705538AE4FAA4C45EE4A4CB5B78A090D87BD5C1ECA906
22FC0A0299EF654F94D4F211C8CCB573BA08FE08FAD966D4CA6CB2E2A2966AC5
8D7093FFF35E3057CA45EAB8E835D09CAF3EB2AEAB50FDCEE7BDBD0AD06DA15B
67CD8AFA638894893543AE23B94A7C5F22379DBB938BB6E03E94813389161CB6
A4E5BC36AB875B00B9ECF6E81156E8D567CA756CAA68C595FE1685D32DE6EDD9
BE132977F65DA07FAF804D66E1EF7E448ACBF20E50395B5FDD892A73603963FF
08BD741C76AD326AD41AF33DE3F120F7CD21B961698998965B16EE0842D1E04B
044F640A9B7973321E9B72A4A53B3FE4BB51652109978A4F793F1DDF559617AF
DDFD9E7BBDA8F1AF508FB9F1F46129E8599FA7C1350448F6682ECB90226B95BB
718F779E43C7C02A6A2D9066A489B4C52AE0FDD8F1E3685FC4684D1EF33D1BFB
C324D0F47A00C575BB80C970A4AD1D52AD4F151CE09427D0A2A145DBD5A9B388
97ED4A82AEB6C09A377B2DFFF5E2292DF1A01BF9FF8615C17B6FC3DDEED91BBE
B65CAEEAFA0C18A367D9CFF060A9E8FDD16B5680DB1E3E386CFAF7FB74E418C7
E4FC591067E4B0ABFF545CB21BD91AC49CF03C6DCAADCA2D40751CDDCA21215F
786FFC5A762DC5575ED58C0F73263C1AC0A6D9F202C998025685694219C534FB
950BF7D0407038B27FCF2751BD06E4317808E03E9630DC46672E21F1933DF0C5
95D76F63A4D506B2FD6A155DB712CAA7ADBF081B0789CAAF2C3378CC405E47E5
00FC5EE8415606CD0E734A0F3D1BFEBD186C021F60F5571BCC6EA6A0BA4A28C5
56228F5A72583942C641D66B33E509681F9E2792DF08DCAED7633721C7F62D55
86844597383894275C6CFC396B2BB9E1DE524CAEE31E8E3E906DC17E7B594AF0
7FC3E1B407E20C83FC0D4D776760924058C4DF26B2E4B6047A0FED7711383FA0
B1CBB6B5CE4E49A9777012A09527B80482E03945DD6AF1D669AF935960C42FD8
DDB19CAD197F0664BC6C9D4274A08B0C84ED621A921C8E768BC0683C0DFD2E7E
6DCCCCDB927996949F1BD2B0046C1FEB6801A46C83173E275F23F387E7AC8289
21B81D60DD61F077E4F54CD17906ED168587062661E2765ED4D856B6FA0E1F0D
3F99856A17610111638A745C0478AFDD2EFF2745375ECF82B59C453BE85FBD47
CDD191F69C493F893B59B7232B49303AA411A3B508F9703C8C16E9D722ACB889
9A6960D8D188E5F1825E5648DDD2C86D3694966898ABEE7584CB070891F5F6D7
A4051B3ACA3A7C6FBFA445D771270235A042ACC257D16E4E46F30AC6ADE623B9
495C2305C7B5D88DE107090C12412AE077F2C899A47BD7FCDEC9DAD07187D2C7
EC9AD3406458107459228AC0B0B9CCCF9656ED0935383351358E6D7588C87729
6D020759CDD221A4F65F9C7D1859F955089B45B4BB68275EFFEBE176A7BAF0F0
9E9E7548C2424E45B081FA909C4A452DA52DF071B27E5FA7754F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 6 /plusminus put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E933025343478F7C50B4A98A7CC2A3183D2
EA771388AB9173A989BB9C6B85B2018E3A3060B1E1D136A650C4CE2F172B364E
0B1E91ECF9FC28E8DE1F69192D75C60E816BBA4F0B4ABC1BFD7DDEEFAA721C4C
BA2218BD37CA4C1C88B8622E5C78C9A782C58F301F151A04A7A59D36CE4AED26
BE43D3F05E735B49B3BD85AB271FDF78906FD88930D38C0EFC3C867EAB2AE823
64F62ACFCF17CAC68EBA066509D6D9F517B33E72915BC9A2DD2F859646203EB1
710020FAE91D68A97BA65C38A6C4B9ED398318A8FFE1433EEC40BE3BF57E3CE4
2109BA6A032E022DDCFEAFAD7C13222B403BB2A606185AC7E4DB0EE7A7FDA6E6
C3617616517ED5B840F313FDBE2807A0613F6F33333634A611AE8F67AAB87932
A0F654DDCD66422EDF0889807ED22343058DAFE6C76ECFA470E95D06E440848B
487DF1A962909C94542B6FE9C9D0F5F28B8FBF3C9209E24B424A62FEB937AFE8
76D0BCA42333BECCB92E7EF478DB8034913D0932D6E7FA0E8070B5AB721A9250
683E353B00975E0CC8BFD7594C0B1829A61319611F9BF50766B01774ED5DF5F6
9DCDAF12CA788C7EE1AE7552A2A3DB73F86D9E646010D8862E1BA79645D39A18
D19A31B1C4DA73B8B67245F9A7371280C18DE885D013F369C002DAB8F8900109
4CC0C9AA6D217C5B0333E54C96BBF50D3ED4D532B5B75A93802EB42F204F4084
25362D64064285ABDBC79EB2D6AC50C1609918AD1FA5110996E7B61B69616BCC
0B2D84D4EA813A73F807C6A629D536AC1B85E56785F5CC397CB3A5DB8D0BD4A2
C8106DD0ECFEF2E0F5DBC50898CCCCC83C69D8A4ED5065AC6FCCA9A5987FCEE9
4CFA0F7DFA6B3CAB6F87E2584C38EC167ED9635693B26BC935EF37696852E057
DAE138F338286DE4773D17DFF9BA3A4E358845284C7D247E9F37168B85DB6C32
AFF8878A4FECCDC43C87ABD75C9A9F7041DE20E0D28AC99960385CE4C5857225
72425E701EE7DBDD88D48705106B3FA4C01A660BEAA52A5D9176A45DE99EA655
6BFD1DA0E108843E53D4D172622BE91AEF6FB9D2839079B8E0BE493BA9532DB6
052AC79F0E3FD5EEDA4DC4295F8194CBCA6501CD3563F7F90E5F3369FA199BE0
D0B015ABD915AD71B462D06F96BC7882E612B210B35A8273ECB23A0C9EB56DE6
28FF5246E37AF853AAEDDD68BB986369F7D3CE7D5509D6DD03BB6381A578A579
AA5BF62B205FAD58038BA6DD46A8A24C45BD006CBA1474DC7BBE974E13D88349
A942C3203FE453BB0246097C4821B39C06FD3F0F0EC64D3DF32ECAF56A913CA5
51AF680D57210223BD6C246E0092927302269C70D81CD40225D874
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 61 /equal put
dup 65 /A put
dup 68 /D put
dup 73 /I put
dup 80 /P put
dup 83 /S put
dup 87 /W put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B92991321D59
9ED432E4FD82FE5C0BC464B62338FF098EA89B85A4FBDEEF3169927F6D6D93E9
798DAF263E4F605433756AE83ADE33744B7D3A8B1733DE6295457DE6ECF57F07
524F871173B9413AEEA2AB22AECE5271DA7F3544D72B860A7D49F26325857462
2F1898027487CC45AC8082D749F39D877BBEA339D7C6220646CF6E074563EDA2
84E8CC7355A621D114764BB198C285DE9DEE0E0DAB7C19D786E627E96A139693
66C9723E7A4BA58726C82CB27978F9AD688E7045DA7B7F809119834199CE62D4
ABB15417B310B86E24B64EE78B1294A5FC2AB2FE15A65645BF429607F9CAB4C0
3C2E29CEC2E901A5C6032D3D6158EC51F1AAA8FF4DDBC65773DFCB01E5654F78
B3E748559E9C3104AD6165C7E1121EEA0E8389B5D74B4F94948A99F9B2384B8A
BA3DB30DD197A1E3C4BFCC4564E046E4ACBCA39E03D32534DD71B2BD9211057B
8E27B12AE1F39A35D547411350A654F5121667E5607A619F3A8C7F83D475D663
BAB30E740463AC57607BD067F4EBC3ECDD29910F868109865093750F771E3C10
9D4CD57D0465FE9FD2FCFFAFBCF33F07474841DD973360B4EC0A63A0C953CE5D
884C494C8888C245040295DEA344614FF074F40F9F2A2BE0EE3852D19E1D5950
FB3742D651C82F541A222D0250AEADCEE92824C4D81D68B72B5053DD60EF5FB5
9D57C8D73BEFAB33F642166DA2F14152EA9D5197DA0BC06E382B5CC966E228AB
E8D458BAA6BF700809D2C09296A8F2BB7097721F90C8A6FB63BCB9EB574AA082
C71468559F436C84B9B07E568E9FB6899D9A09A1BDBE7F94C08583F15ADDA20C
802FE685642D450863B86D36DD099BAE989CEAA1368D35803C6E6498E239D456
65C10CC29289BABE471753D142FF397ADE85A91B0AE5545F273D759DE76657A6
95775FA9ACEBF13E2A48C8643C7FE0C416DA5D9E19CA3888C1C59CD0AB30C203
B3C5E3F2FCAA6FE752E3AA420177D61F9F5CBC045F4C2053FAD407EE9B674CBB
9660170E8A1FA3DE135B0DD5C546AD3ECC5C543C901A92A192C521540F2AD864
782FF139BB98C5D5B6E4AA33E679553851A536B1A12EF8500BBB6F4F56DCB95E
60374A874B22A31372262C2501B92D600B8B74CFB54F29BC705A195667F5E12D
CAE9C74FCF2352CD7C2B7E125849089B399453E08E06760DA1354EBDC000FB39
66CDDB581DA0B33734AA4C1671C6D0D0EFB47257A2795242B415A54953E2457D
8DCD5AF6A0E43C531313FD53D6F6F5CBFE570F98A1231331AE3B9AC0753B18DC
8191A15F30DA80C2B6E0B18183E05BA54F5B7C667E73955D1D090A491541F6F5
FCE2134F3450E28644B5ABAD3D79D758EC9FF2C8FDD4D2401A28C70DBC1C6A4A
5172E203CD44A0D3C156C3B997988B5C33653B34EFE744965AB8CA5353957E39
AA4BFC7B4411CC7261AD54298865885B1151C384086F1E342CC26D2AEC190992
79D801DB1D77313A1E89BD70865C10F21D7033C4E0202BB3168A55C357F70C6D
B0A015ABFAD390F702FA23469B6E7F849FF2AD2A6CC89344AC36BC6019FCC02C
B7099C6EA59470CAB20BC48009465AA717E08244931470766F28C141B48C48EE
3A2BC54B6E9128E9F28FC2A8499655FCF63B6E89E1388C45C3BBD1753C8DD1CD
1D495D41616A035D8A5E2CDABAFA901CDFF0389880C126CDF8C8E77D89B3FDD7
F0B2ED5A6F2C82DB4995554CE76C6086D4CB52C4C473D3CC33EB80CCA9C0327F
7588EAFD1DA40BEB7EA7F922EA6644AFCAE0201AB56C838AF07E24538A8029FB
9640385A4EA4C45A99EEF5C27279978001B0105DA235A4E42D18165AC850DD14
554A75734C4694E3B492052DE7641C2BF6D6D8F111C6783BBA409F724CA4CE44
03EECE84CCE3BC83CF43C046BCA2A4EB7DD43C2F7FF1A3646703B2F849D167EA
86DA39857A551A9FF2989B737995621447C2518D51F75642762A5C5E1BABA363
9ED21FC5EB2D239B1FB26D0106221D1D1D18D45C40A93C74E7C93C24EC586AE2
B92D6712723EF8B2A8D95236340A4195F1CCEDF4FD1A01DEDE3A38A16B508BC7
A5B1A9E13C2E3EB423403731A996B0FECF2E86627D686BE86B7042BE26592B07
34C7927A70416EC92009B5D79F5958A13417DBE48EFB32215DA0F4432252E43F
2516FF6DDEF5351328D47CD1D252DB71609A26C2B5AACD4E4EA15ED06D5DEB0D
DDA40E3A90501603E57F56BE13850203252BB2AD8411C2FC95063C0109B41E61
AE6F9AB5E2DA64A854AA469C348DFA15001D8ECD0E1733E62EF2AA2EE01F9162
BF391FF222892C01059915F5B1C00CC9F8CB0729C6E8964872BE5EFEE18FD292
3A2BCBD9CFFEB6D6B5F4209C74E9C783FF5D73D29864FAA4D869B36D4C11C6DB
F33D2BDFE137D1B67474290BD5251937DB5D45F794343A6239EA656C18A12063
95A2307178B028A9AA1616B14ABA2ABA49A95EB4994CC7F148040CC58AF95840
5CD36FF721CE9132EBD9CF82E63ACBEFC65115A227BB05B5A9D322A4BAA8AE52
4E126555CF38C59979139F23CB37847F00E25BCFBF545469D0AC0A89634453F7
76BA48A241F57E2BA096BAACC3DEB37842430CF18C002FD9523523F041EA5AC3
8E998C244EF809C0B9D40FE50FF3BC86587DC69B64967E26B1AA27766B534641
91B544312B4D24F23E411EB06DB729E1A22D80E48C9E89841C93F72BF7A809CB
089CA15C13CBA2E664BB0A35C52FEF82664E6A30083B392993DCE03A8D630F91
4848B4C8A46E0FEC486A87A0DDA52021B23D42267BB80B4C551134CC1043EEC9
81FFECC0C50C61779EC5B04FD66A195760B00C9DE2184224F87CF83807B78A07
8254C6809D914BB458AB827E2D4B11A718CDDBF45AF6BDB62CD6194C4318DD33
C811232A01C714D212DE5DE94D9BC93EC3AAF9E9865C230D52FFDB2C473DD4B0
62D77976AD574D0A26A732DC41374393DC311CE0951D470F8017A60D178AA12D
67973C22825F55AF8484171090E7108A694FAE0F214B2290ABEE1756199F8CE9
3BAC1F22F45EC23C84798B53A2AB406A265B3F8C109C783DBF841162D1706EC2
5BE83045E30E69EC7B983E6C9DCA5812E488AC8751BF9CA4627D65F32D3C0E6E
6127E3C24D3860E6B62444765CB010923DDC680921C94EF2E71CCCA74D65AB69
D4283CDE583D751F1DE1D833685B906311DFD952B6902ED11DF845C19E129B6C
CEA167E23A90B277929AF2DB0FE6D90B36AFF1EFBE4B65D85C011EDF8FAE7143
957B3A6CD421A360EEDEC341FBEF1F65294CC0025B87194A47907E54721A1E1C
6DAC2812B0E776DEE7C4181CDBD285E587E1B1022A355EA6A32DB548ABB71143
D8E7C04E7ABFA07A16F86D31B5D0D573859B876D19F078A9ADDC60A6B81FBF9D
ACDB9FCAB41FDCDC3E86AAAFF87BB67EF470E184BE99042BDA0F22BDD00493B9
E181851B1139745C4A4C923400812B54050AB584E9A16557E6EAC1BA7DEB4864
1CDC8131C61B7182A6D9B540337CB3F52A88CE8C7841D9E74ECDD8D4477C3BB2
236CB14F474EBD7EE069D3650C626E954965E107087DCDDE08D41769872EAC2D
AEECF41ADAA3BD600B7FD1E37333111D5E34D0712C6725FD74BDB96C5213F9B9
B5CA864EC71A59FE226F6BDC9B0D160B81BE60A7D1FBD4FA1964E2152CE75871
524C3001204ACDB60C2408AE85D830F8F2C02B34DC21627F7E52F8F44FFF4239
DA6D96BAFF76BD691221694E3C71CA476BC84473A539AF336B71B374312523FC
2A1276450C9AB3D7821477E19DA369F8AB7E59CBB4902E4449C90B7F59EB476D
6346FB51CD6DAB49227BFBFD51264B6570AC5469502F9E46A97412901CB0AA7F
B9336A22667C5D06F8CDD61D1C7D81245406C146A2A5D68A110B95B25CBB111A
C6BAE552872D1B11E1E1A3B0EB1639942CC5ED9C45FE11816017C6F3916D3390
3A29095634A71DACEBCE22DA9B133C8912D8858267BCFFFDF377B4235AA12EE4
10727EF90755FB2A0A13555E29D602DEC3F45FB323F414A3F0A747373441979A
E487F7048DBD12A336A3E5C9A318E9805EBE7B34C79A9E674D7C7BA649852473
B2113838DBED8A443980E8F651B18AE9BFDFDFE9A74B70C7368D58CD1FE7C3F0
B81E2737EFE265E0B9ACDB72A884ECC686D7B82052AE4C51461A29C9B44A5DB1
C94F845BA66DCE700BF20C3C4690DD0A3A1C5BF3F77E3A5CF4FF26028345868D
1200DAFADA11CCAC542AD7F406D2B5E13D976D72F37EE956CEBE19B7CD301B32
5F987E9AA9120F3DBBBFA3DB58EDEF6B7710B41AB1BB815A970895CD0F684B84
A896020D4291D8A4A10688F3B0F246363C9C7E04507A1CA8CFCDB1F4923BE05E
184BC409416E4231B3E1D8E0B9ACB2904E1EAA574F7E4CFBD9B3DD272FC550D8
6C730651E25AD1DC972A9FBB1C26D1C021A723F4B517224C23F1E43DCAC595A5
F821A5B58BDA99F574B2F3BFB80446CECFC76B48D4BC2465795E98589AE6F968
F1CD95165E71E14AB0FD257D2E125F14052F853AC32E2C54F3BF6C7F02862CAB
B1FCC7524EE53C9295E12218E96E00227E3F09EF3AF73302F07A51144F697088
CD74B200E2DBE2AE6D8185A52654D51EB04E2D660053B5D13576381E05FB33B1
4F2F55A7ECA47D4B5E6119B69D0E2F14D8BED103CBFF88722C575F6B4C4BED66
890D0A25DB5920BD9AF0D8F956D16E49A2707B24E400FFC332A06C2CADC3A353
6B49378BF6E0FCF35B67281895CCF2B774C1A5B796832F73C88F02BCBABF4140
FA72ED72E78597FDB284B6B7F444FBE8385515424366E0BE6AE8D0A33C2389B4
2446C804EF52194C0E62E6F3CC16BB485F7B3098B5D930E928C0E63F4CFEFBB5
3099EC8EE6CE910339F0AC82947C419EDD464D197C18A9C5957E5D3720EF30E1
FA9721E15E38FAA52597023BEE6A5380062F97A880CFE6624CFCC76644BF5714
5A0895D6E1FF752744304728216641664E5496C466BB80A074B86F26A2FBF0BE
FC7F7C1E99601D02CA3D774A6E3B8C7DE8897CFFC6AD034399F3548E2ED908A2
6651710A2D9EFCADAC51D06786B07D2335396A8D27A828AECA16E04401B68988
CD60F4ED517D932609E94AAF48B39C9988C6633B30ECC9346E41852D291559F6
BFAD945C0158AAFB9B051371E87733F6E95B0AE5CE8896124BF5FB7D7D28A14D
8BD583FB2EB7887CE3A7B64B1CEABF3412BAB5AC873BA45FE1D2A773549EB8F4
D4E37AC2D24AD0DF93C15F2080205655357201DD808283C5C385231375DF0BA4
4B118C318767ECA619ACBBDC8C489EB50D5500D4EEFD441334482BD57D677BCA
5FAE3CC3409766BA7E91E78B91941874E6ADB5A29557B30E7278C911F69D5B88
54795F03504B8A303980E947CD0B0B96895F7865B48E443184584EB1E7FC8764
7A382F8A0E71A0E9D22416C3DCC34BD248330714EB775772863623F071003095
DEFAB1750B30DD1FEBD5E60DBDE9EDFCF1084D76D929304050ABB6D473EBF047
B7EBDBFD377B5620EECE187E1AECE0F17D75A7B6530CB6F96A7DD852096863DE
54E11C5BC2A0C1823CAC45344A601530E08AC41236C5034D9632A20A967F3D7D
4104D27D9307793A796F252E46C190E441CAAE748EEBB063E710B55BAEBDBF77
BCDCB2089681151902DEE16C9985478BADBA10501CD7F2E23ADC57BC39446131
EFC756FB0AFC710886982592191D0A431030438A435C9B67975E8951D10DD18D
9E741D7C074CF9526E9BBEAC1EEC3EDF9368C4B61920EBE20E72BE6CFD89C413
7F1DE0511CA957CB44102F2F786393701C20E81E2A90FC05544099E73BF87544
1C8FA31A1C001BAC2C4994816E9EF4D1B4F8A5EFB0A13C87634D0D3522D4E422
E4205ACE46198E2FE73E090FABD724B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 2 /bracketleftbig put
dup 3 /bracketrightbig put
dup 12 /vextendsingle put
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 73 /contintegraldisplay put
dup 81 /producttext put
dup 88 /summationdisplay put
dup 104 /bracketleftBig put
dup 105 /bracketrightBig put
dup 112 /radicalbig put
dup 115 /radicalBigg put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CBBAEE2BB90850F7151E01EA5BD583E5AF51B201EDCB8EEFF89369D9
E58CDF131AC4F00F9C2FB8E3293981DA5AE482A65A8A62F84E10346CF111F52D
BDB2EA1B796B2F9CE8FF7E541ABDCC6B61DBB64A639519FFE4FB4493773F0388
8E07F5E8C8BF375757D8AF56F94A21123C42DB283D14D3A6C60190717F774603
8F22F695CF4B005885EECAD9356FB802E9FC2D8D49F1CD10A6EA53E8E5C2A09C
085304E2EC5AE93DAE9028BC5B8ED547F2485EFAE68499F752FD403130327374
B8173BE9B1251A21365800645CC1F0FA9A5C2E66205E891C7654DFA73DB944AC
1CD307C6D8FCEE579D2E99A8EEB009324886CDC81ABD58EB94E875E7AC3FBCC5
093AAE6D22FA1B47F7311D363107A3D30FCDD79F678F5C4DE7BFA678D8F3D3D8
2D90E6B1B5791246828D2F529A5CFF9DF90545D1B5F6DD662D893D2DDF06E6DF
8BF0220DC28C3F46E0B5F9B28DFB205ED22235C373925B0398C07DB639F2BCC4
B92D470E3332A8A09BC7989C7196B9CACA75DD72B4A551BB1C555876A8EBACD5
851D7E7E1C6543CCAD0607C093EAA95B05425D85FD53E0E17AEA0C51246178DC
C6A7BF46D4885785DE91E090E466564CDDDE280D20C4AD9EDD74CBE50B4C0015
B9555662E9850F3C8317751E5F41ECA1F918A234F4FEE8D34EE2E10BE56E1DAA
A7185021F1EDDEDA307AF475D4C9BA844C6536DB944CCF0C526F77D4DA56598B
5FE82AAE5FE682ECC6ED4810ECF80AEA16738336F0FEA9C2C7B2DA8E6C8FA597
8492C59DB806D9DB0A4EF6F12173701D2AE2DCAC6DEBCEE9F934C1936A8BF507
690F056F7816AC8F89173E1F405AFD51E0B85D706C02B02C435638AEA211D2CE
818A048F8D9713126076C01EC13AF97791D85AD36A7EFA2ECA1B10F754FE8666
03677C637FE0EA1719A8D975F43401DF7D57AFCD267D32CC659404181B11D030
C9D1DEEBDA7D381EB92E9A99F8E4240DA5708B6E4BB27652EBB07482922F9D31
778618481472634B045539BE99A58BD59BE9F4B4402183E2863DC77F8ED68489
861B1C6EBACD671FD76B32BA3190CF16BAB4741B91BC7FCF26C590E9FD06B448
702327F44715654AAB0548B8A58FBFDBEC3B0F465D302FFC96D05617DCFAD54E
2DD26B47B79B269FFDBE99FABA9756EC892029F6F4AC793FF3556221542307C2
3B930BD8D8F1D3954CCBF46C5B6F07BBB912F2ECD14E2618D6C9FDEAAA527CB1
94F6EB667EAF8E6C203908321E8186CB184C6E2FE1FD155F73389BA366E7F4D3
F5C9A4241755A250DE97312B5FC60A88ABBE5350C43B564F67550FAC78F23496
4BAD2E2E3D98B511B8BC1A0E860C387891FD496347AC4D85313E6B83DC6389D9
DCD1AEE52B5AE76748A3F1E827A0E2CEA73338F2A7611B1502EF6C6BD2A5451B
7B3312499DA45D69591D53CD78E46EAFC4BB81AAA46CA918568FF4F62246F130
E1EAE6C5A8E66C1A65D5D419C59E33B72E34D4C381ED9C0D39630AF4D15D8AE6
3FE7C5D363422873E9169CE6939FC11C061A0BBE5414444E8D4045DDFDC19CCE
0CD9623835D52857A25E97070E313D389ED9C83932B6524D8721BA916FABBD72
91A8E4547D2F7B7B3A66A14563171714F7F63B699D965E00788B454E507B0684
9645A63BD96DFF8FC9692A3ECDAB7226CA5741A43613F7F998F957C5118E1654
2EFB70C26FBDFF3C967321D7BE7154D3B4325F9B904130906332C9B3C718C7E0
3D08F179B59FB7BEDA32E8C6AAAC869FB47689458AA24B3CC2F63DC9EDD1D414
73A9F30557BE64EAD57DBCC89956612899BE42E7D8B2838CE0647826E206D026
E3039A2D6EAC22434FE017F01C15BC8ECC5BAE14BECFCB85123D97D2D33A02B9
2820E1454E2968657D7EE76AA1EB97387DD5CF83ED23EB799704F74069F81078
8885762EF3E50C77B846F4F71C1CDC7C69F981A5F66494795FE52ACE8FF5466C
B156B575F10EB5B8E40A97406CD5782C628BC5D722859F3287DC492946D0AA46
24ED3D7B4E1C5BCCF8D1C884F2A9C486AF5DF6F13700B3B5EDE053F18CBFF8EB
A85ECADCD7A31A4311B60A0CC721855CE23CE0AD6E97621CC412A311861AFCC0
B534A2C24CD41C4327CC3CF8346CC2FCBD099D77161C1D725FD72ED68BE7855B
BC06338D9D4E996ED70BCC65BDC8195D7A0F98080503950A89DC38DF304A40EA
15648F8626A63CBF1F2788DBFAC29DFF96DF99AF0A19715AFDFEEF41373D657E
921BA263AE7D6F7D901E820EAF9F591CA0EB5887BA9650DBE734FD95B35BA4F2
F8A4F94F1E0D85D678A985F33BC50BF82E190BC98D9F8E50FEA1EEF6B0DB6FAE
9AFFF79DE776D8F6A3B5368B98DB54834597173816A31F119F35EF96CE59E1A9
742CD7BBECF5CD952F9F370A3755A21371A333C867BAC69C1FBC146A9B22F5F7
B8C24058EAD2FD620CA77951CA556C8FECA0E4EF6020CE15838762C1C83D96BF
0AA08C731F0818B0369DD0CF226674A956196CAD6A67F05D361C746BFB3E72AE
259894E27A282765574D1E33146D003B68407C8646A5C3D918F9FDBA6A6FFBE3
D8037E15D5EB6E4D25730C5D00B591778685E15AA314692B77C767E2191B0526
08AF17A34816FDB9B2E90484180877B386E7A345F30C118C9DF47BCD3DD229C2
784FFFF7314CB0926F832AFB77D91B6E3CEFBF826D35911D0058E336DF87B00B
D195A47A779D9520507BCCD420B42D7DE7B9AB7C7DD70AF6496712ECECD4EF94
D7A6DB1CCDA4790EC0198E5768BAF4A9B71918747ECC640BC8C37D14030C1854
E8A8826C26478BE54B44FB04D83D588072F8615DC3873894992CF568CED6168B
79D823FAA8C4758E693C5B15303AA45B2C433AA8B41948E619D321862F28A06C
3911B63888C9CF024F9186020FAF1F5009A7B25DDDAADF4B54546AA3249B3FC7
0F22C046CE031453536F9E2D8FDD1F78BB438331678F2E44B455284F89D46CA7
32DB18F4C8E834DB503BD73CD1EAA0B5A87761991D44FCA2E9FBCEE2735E4FAB
6B6555B58668CA411F0A184991AD3327BEAD83CF258CE136C22EA4C775C108B9
34CAB7F398115122C5755512AD7F227387C36C5F23FF4B5CA6C68BD90662D01F
176FD5F4D276E83B4D174F908339AE4D276F5E1F4509F3628B796C549A2C357A
3D9D58EE0241E4628E734CB979FFE350E22FC32E73BB965294F4BCD4F9471D1D
E5DF579939E45873935B4AE78CD3927C1EFD42B99D88D33BEB21F88E27754AC7
A9F93ABC729416B77AEE5C5D87620B582BA1E6ED02C62B65E8E4A5E263BB09A9
65DB8B48B08B33EC8C5D65489EB9B98DCB43931FB3FDA8089EC8324180CC9DD1
95A984AB75F5EF439DC56CBD840516AFB4523BDCB34F7D692C79DDD1DDB2FD85
AC214BE1368574C168AFBDE9DFD404831D724CAC53B07E8070D3C57330178459
89BCAE4FC41D91313E2376F7E64E4562D12316B1AD4CBC28E99CE57449B61831
C06248F1CFEA63BFC1456F4722CDE3D73C38DA7C47303BC0C67DBA78C69C54F2
C29695E4EC1FF504E2F13B76D21EF4CF6FD1FECF585A3542218355E7197EE359
D19D9EE7E795371EC1516916317D34CD56752AEB60AF96477494D6345C91AD8D
384B1DE3A51C02F351F38F71E2A05358955D3ACFB01A382AA3BBEF5126A86FB6
D6931F5E910DDE3C7AA8347D7ABC5CBDEF6669B4FD456773BB86F01D839D8C54
170CC7311A9541F40A2E7A84D806EE5126D58D6FEA07E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /phi1 put
dup 59 /comma put
dup 61 /slash put
dup 99 /c put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{11 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C726B4D833E4D8BEE1C6CAC488B0D6776B30202516A6354E179D72EF5
8C8EF86DDE2685968B46B6540EEF635F9B1ACFBFFF73AD0645DEEEFF7B85264A
92EB1080153199CC63B7814E0D23C6DB72B2C1EB1E93F4E22903DF1B878C21C2
C4667E772BA3982F7CE067C5D358180284F05A42F6B187E40D75D523154AF5D6
357B1B5EC68317CDF6C059B89672A095F0700953F42EEECB34267C22A457BD5F
5F727822A76856EF655E82A1118CA8E997D6039483E891306C05C54D496B23C0
8B273C3D3D5006A9D7FA23C13819862AE5D9E89D25D2BC2709B8A43DB87892A3
58A1D77DAE3A3E17E3978155EE17551D3D9C75689960B413B1F140001B6C035A
A912F4F512400617F0EE8959AE3A73208BCBB7B229AB8C58AA62F2F64D036AAD
8F6C975B4E76A931C276752E8828F1502362903B1FA5982DFAADF7A0133C033E
013AC2F7829A8B3D00FFF07032B4A03C04CCEB7F7AFD7D47F801E58EFC48EA36
DB07482E0CFF6A291F1620A8CF87748C31A1BDDC6CB86F0F142B8110AC484C34
915A3F64E079164A77789978A9439CE537572172691CE84DA9426F524FFB3D16
B9DF23FD0F5D7176A1BFF8739D7459B9C36B1D81601E7B80C62C3335783ACF8F
A85FAE5D85B19DA4E23F24E7A23311809188F868A89E1EF9DF8D685737BC98C3
9437CD5916525950082DC6574424400A2DB570D03BD5319826CB6EA5AEB68537
EA92C25723028933068CCDEE70CFBD1CD5D6348D8C37B95F5BB173C9FEA1D19B
BBEC58DF8CB9871679940491F6954557E0EF3546464B14C154196915374E3430
7AA5BF558822A6DD16CB86BCA300EAC8ACD3FA02B64E97BC7F54D87C83D7FC80
D54D9BCA17A9FC316D3F509042EC9238E89D2AA07E7CED672828BF548E1CF62A
EF3347C7B22919B4BD33047B16A96BA4FA0CC0EB89ECE21D9451D47FDB1837C0
10666D298ECD1A76E188129EB3B4FE8B7D1551630FC50135284157102810464C
EBBF819417393A7E9AA58DBEADFC920D79E9AEC71B0BD8B5C9F641F5AA41A14D
6AD24B1957560267DB029EDEE47427396570E0F5C77D2D45BF4FD7106905543E
3D6B25960386060017EFE38572854B895693701A95FD13602C471004111EBDB3
B5A604FD71136DDE81FF2EE88454306786DC72727FB226ECEE4195DD33F3954A
9B9F624FD12DFF102FBA17E9D26851B4A9C4EAA1D18E87603C8FFF32312C4A27
51F74E7806FFE243BDA97A49D82373F4EEFA5073A9959D2A2BDD39BCEAC72C04
B46B744155350741FA5948C98B24A02CEC61AC454F9B8220151FCD61ADD01298
654C38B811BBEA4303E108C2DD26F1DCD3309E2CBA996109FE00F3321638944C
B916D0330B1FA53AE37AA5A06987AC3F5155F75895CCF032B64F3855BFA7DD44
C261CD8E3DD8668C183D562529ED2449A75688FBD9F02937040E1FB34185D05A
30E39EA765480E8D738576F01C823BAD284CC44661AC97A24E4008A375FD5F4C
72C523B53F87D4A86CC5F828FA452D590B9BECEAA4A22343507423E09D7A467B
C002CAE2E223E291D801B07CCA86FE88664561642E8BE6F31FF4FB37255CBE3B
065FADB70FACF2C0464A13748C7376F0FB3CDFDF575A7850CD88CD9A5A7B9493
E4BDEB514D5C321572CB6E1BB31E5A622E366DC5CD126C0D830A7A0FED0C2874
32519C6B91898F64A57B9363287744A34401EB9C71629E20D8B0383DC7796FC5
178E2638A3BA999D2EF4F00C97C65441616AAD06465BFA6691A5AC8D8018C7AA
FCED717D3C7BCEBD27148644B385BBBBA87503B043CDBC6C40E0F6A503379E2E
CA490645C36C4169F9FAC076D8E18E5E2E2931BF3810589C82A3E48B0583251C
299AD5DD8D1F4A0FD474A3EEE5B8C2E024E2B4D493AF57CB12AE9425D891DC9D
BF70308B4DF061362F519EFDC420692C9575CAC2A6C84F47397602A7F6FAB98B
753A59BB6C97FAC613D2B90C5CC2C8F132F2F85809E92115314899CE54A486AE
68B28BF2C8F73617F26D23FD5C2CF27ED73514E1C1C7D2DCAAED8A1212E6BD9F
F126D41150C85811CC46E36398BC6DBEDA474A75C07317B6133BAC0E82C5EDD8
D510ABACFC2E544E155BAFEEEC22D8143A545496402AE9C524C1A69C69ED91D9
CE6292215727B5E5AB184894E99E14909705B87E76B8512DAEBD58093860E912
CF5B86AAFB6A8AB1B567F5C05B1E4371B56C5ABAAA92C94E20DF414CF497995E
325A5AE70F70DA15E3BC755EB3FB4CE12D4219E872E6873387480E7500205B3F
5832EA23A8ADF40D3F023EBB63B9ED7C6B43841F68F3E0EDD5D02738DE957326
B6C5B9BC9A9C10B6BD0ACF86901B2A33D3E336E344D145A66BBA5CCF8A2D8554
7BCFBD29DC9FAE17B2FF14622CE3AF8D601E7F204422290B38F2519EA1DF7E48
FEEDE5B324015DD2924B9581CD53CBF043E13429A1891C59A0D8A770729FE066
8A93FA1DFDCEE82EC8DF791CE6CC5EFB8AA67BBB14BF8AB4B5C9019BB80906AE
C5A987BCECECE7710BA5CB043E3957820BA594B9B7B53948BDF497
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 6 /plusminus put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF6BA1ABE5F0F80D96571277EAF86
A3AAFCE3693728E396048C32573DAA11E6D2F036BD9756F1F0A5877DD15DC64A
A9C2E20B570464B31E783692E6D10101828C4F6DF30A155808A7697D24C5854D
DD1D111B4B4FE343E045B128BA3239DA461712EAEF711974BEF5C84449D055EE
EC9CE456E8D59A2C333F28E40E557E0D4A26902DC166C7FB4ECB4B6EF00153E8
33845AC9A8D06B4C7280853916F53A7F2FA0A056441AEAA24B418F53925EC10C
26F5D4733C8966D1B939EE28DD6DA1C7BC9E4B37017A82E97FF1B9FF7E706BE3
D21981A0693B230A84A9980CF6A2BC00B35D46E82C2403E0F6AEBCBE7D1FB034
E8219DC4707176D7CAA1ACE6BCCDF8912E94FF813229ECCDD230B67EB5D3F28F
8AAE4107F21D24C8AD71649A134FC0FF6BE13A8583F28795BDC2B7F8746D41D2
5292F52BABB07F886BA77CECE2412BDB5DB8EE428C1A79831517DA7DC01F08E5
D0D2E1171C35093062A5E16CC1A8F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB638A6C232F
38ADD3B13107AE3C1435E0C7C213D6BFB82469B17553949A9BCB0572AB07A710
12FD9CF9C018D50242D9A6F7C0AB2489DF92A271920C329A01070838C16B8537
71184E03B5A3D7D8FE910838B3CC9A9B6DC6C0F9614ED8CE66B24735D9BD7A0B
B706C4CB6E5F14820EE93E4853027B63C8E077963553C55A4765270B676931B0
71DF39EB28EDCC83320AF72EA9B845FA6D3AFD3A5BC59CF34461F884421E6ECB
22C105C3064FCF2BB0C980BA8D85F3616A94D4795100C3770C309A64E75CB170
67F35B57AD07CEC0B473D17D7F936A2B46A63B756A844973DEC111B7CAECBAA1
6D5375BE81B1CA71EDAA75B0F8FEC0D35B608C1AF6B2A3DBFD1729F68CA8FF96
A061337A5D3204A8516BCF64306156D0FBCB889297B1A95D9B4D3FAB542ACF6B
F7D97CE67064E433AA3972667134766B5AFDC08CC0831509C99D3E5615ED5506
574CBD16438ACB6F82C8319240F27049E70E3179CF3B21966488004CA977887D
0DA9DDFA30B07441F6E5754C856CB30FFB0425DAE61E9C89A379BA43D08F997D
1267B4CE78329CE6EDA6FC2D909DAF3A403BE0F089988DA67C4179F2B2FE8CFC
65557D5CB023BF659D36DC2B3F8EA54F1966BAC61EA22BA9BC713C828DA5E974
F033E871673E1F2E5ED1E442B115D53B6EA703A6AFEEFDCAC2751CB67451D900
3BDEDD8274F4775F6E60AFD8073B5846B33735928329792959ABB96BD3C5E226
3C29A3BC86D58A9FE589B3E34FE86B9D4A1C2198A6D87F34D6C940FE0B5E64FC
C58E3B176296D36292338E438891E63CFA3E440DD34B7DD0B791622887BB5A0E
50D26CC15EE9ABCEE9E4F50CE263DCC301B7FABAEA33430494C082636C472249
0102CE82B0D77DA3FBA582F611E68B9DCF87441F13413BB3A72D599A2DECBA46
C9C1ED5F2B8E5467AD876BC089A4100CEA830AC958DD6F9D48CE72428BDED3BF
C72CD0821BEDAA09CFC12389F49016D3F42411B60DDC4C2224186AE096A5CD89
504C68970B90741A5F592463D5C69DF19F4EE7D3C7F2C5F3C17628F27D0A36AF
4D2D55030281E23E33D6FB0203ABBD650FC4A2A56C768E49C3DE1FA5F33C481C
BF77CAED3FCFA7FBD3032596D0420942FF0A29DD19E573DA0CE519EF4B238AC7
1E66368C21797E5E4C0756725A201FB189B0F02F1FB1B9DCDAE79F1F82227E91
65DA71AA8D1D66EB00A1691EB2421601F1B8E5AF40948507D024C5E038E67014
62F60C1F36B3C0EC874578EA5C4DCD7C9BACB95772BB1C14002DE47227E4DB5C
9FA0B7B8414ED6C77752BC73393B93DC81EE7364B4E391BEC2FFEA0FB275CAA8
C75FBB99DE2755932F07E63420B9E0E149FCE181EAA6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 20 /kappa put
dup 33 /omega put
dup 39 /phi1 put
dup 59 /comma put
dup 61 /slash put
dup 62 /greater put
dup 66 /B put
dup 72 /H put
dup 74 /J put
dup 79 /O put
dup 83 /S put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DEB4D6B1F34D50F7D5EB409B8B352FE846571B8F33FCE6CA9DF2B1B
972B141DA61A3F868555CD480405D9A53DFBED77A184344515321C0354364ECB
2F3348D15B026821487F3894A7CD49556FC1E62B6A88DE46417ED4E29A943280
DDEA4FD59798F8D2A8B212B36F8A133FCC80FF443E0C51AEFA3F2F9E4B7E0696
0A132F3638F8F363AC771DAC532C4A40BD91A0D784176E2A9892143DA233BD80
B3DF4A83E2DC31130B31EF552D88103014C30ED788D9AD00D4E1AB602CFC82FA
EDFB5E14D59DA84384699ECF5698D815C30CD34132D5CCA56CD2405ACDC6CE4D
B93F9ECB627ABF858437C964C306D5574F77D4DA1DA420AD5C5C2074EA07CE19
B09C75B716ADEF85954C418EBE47813B8EC1F9FA2A3375D0BF98521888D6DEC6
5633BDD91BA7048663A36BBC7C9E3C9C99D384E4639B7848A6B412A69C3A964F
C06B73D5FDE6C816C6BFB0C37CA32CCD3690FA2F82AA6C74A16DD1F18B079694
BE85FC5E519B77CBA8358CFD80357D24DE46A0EB36902C38B3A4B00A80AFBB93
2A7B4CB505A8429D6C51041353C989A20998E74F4267E30A153223C7DC6862B6
D23F5B6642C0DDAF81A37917969F4FDAE96FF25FB4DAD876CD2137379E94F056
0AFC4C8D58C5CFB39114EF90ED00722E74DD94B0E59A4D316D50CCE52DB661CD
5FA29CD9DF07FA6F1CA0DE65F6D32EA7F7C090A26C5B184371A02688D388655B
1FDA0B23F4830A4F56937B856AA8017A312AB40224B453E931718D86C98CFC10
1BE0A1FBA6DD34F1A42FB70BDF69E949EBC36551DA7CE9DB9504D77D38E546E4
1C7AE9798F50C3A375C19E4F3C8390ADB9CCD6B1A2DC988C3192C7C7F451D5D2
762685F3F8ED6E39C8BC8BF98675090C93B0DBE041424E35DCD6EA261AEA06E9
8C7E2F5DE60290163B18C6664B039925CAB52D9C1161646ACE8309FCE3D2327D
2E211A68EFF5D795364CF70F8CCB510452087D9FE078BE60C5F71996089DF1AB
1885621420889FDF7052BB1B54B8CC8A48D533CE0D441301572A14BEE8F5A127
63D448687480AB8CAC55008F3040044B01FE022C1923451BA82D86D490810585
77583DC793EF8AF63459940B2260F363C5FC78F405F429B2D680AD48A90F8CCF
E745FE297FD91C82C17EADEC74063D969EE7910B6D443DB7C8CEA6EB737B6EA0
8A63BFC5E741E7BD606BFE76E3107F9C47599662FC36AE9970008A5C980660DC
11DBFB15A3DF16DC67D68D0FDC43E0FB75743644B89FFE2BBA6B0029E437430E
B888B08307CD7513B9F731B233A2C71AED6312C331DBA160CBD047C358219A67
4421711C1522D821FECD1DA22631D09B52D7003FD20A2D66AE00756F5B4155A3
12A33BD835B4D38C4FDCCDB2A2B3A432E734672800EFC4786027F0E717656B4B
E3197EC76DE88BCDDC0C8147EB80BD151F8B448B2246ECCC1EA533A53A3A3747
9CE89CEB22A6CFD4570BBF35999482BF2A6B2D2341A95CA7679EEA7520DF74FC
59EE24DF3F888E004EC5E23CE42AD5F0F0FA2C7A2A9DF416B791521902786A66
75120E478AC8834477AF4FDAD2F065B1DDA20175329C3979A2BBC4A573A8CF62
49C6006DC79FB83DDD31F0D23AB28DE06B9529C177FD0117BB3A66C0DA84721C
E9E746992B340871894622A41D59B0C70474DB6DBEBC7A986B0725943F1DAD35
63CFA9C15C8DC4599EBC71F84B05260286F6BBCFC79A92D49A53794FD5F7CC19
B548C7450244F2378D0E83CBE5DF3734F9F86CADF42AE3F7703749BBE41F9876
DE1FBAF6A0EE5E4D64FD345994CE01875A16E83BC8C45A8EBB8FB6DEB39E1C40
F9D576CF579C85492B5951C7150BBE59DEB1490FA58E8FBCD11D162B5B62BBB2
68A00C229E9E29229E3BECD31872B202362B96F918478C93B035A0802C14018B
154BFF09F7B504BB0520D7210B76688B604696B64682B67A94D69CA054DD1EB2
B39DD8134E1A5351C6DAB014CCEFB9D847BEDA01FC4A04C1F6C37ECE582F9D81
E3154E2E2BBBC82F7F3A9AA7FD50A62485D6C2A74FBDF75F1D51BA9C6FEDA58A
857A6A126D8E2B9E86203291C5B6E5B4E8BF30A86FCF63402DD91B95ABD09F50
4986A4B66AF6A1F80350AA997317845040A70FD830DD08DFEDC4C3B61AACCFEC
4C6ECF03AA64AE95FCB9AE82EE955F57892B0EA1A9F3AE89C027CF9D0D475AA5
483AB050F2E2321A86D57FAFCDC1322FD32CB83BB3D6E69D92700EBE1C9D3DEF
DE0013634AE4177F2EF41D754DEFC291E2E570FDC5366449E00D99268EFFBF16
69350FF8057095DC50D027F43CD8562EE077F8273F95C26081F6F733DB3DA541
5F8BDA6AF8E8F6FC7AB31A5F747CEB4B04DC59DB7CF93368E4CC8622216D6448
B5AB2AAE3214F66F86DDC5FA2D326C832A741CFB0A9BC037B56F610FFC6DDC6A
95CB43FE66AEA76BE7E5CA2F05BF81D76049F63C699C5177702586D7251A7265
7E41E841EB83880B2479E7A7B0C662CC3B5C4D1DC1723EE8C12FFBF10051F28E
0CF392A87B4AEC50DD433B47BEF728140FC107050C52DA6E2E17E03D3FEE8AF0
EEDB1AE55CA39F6A11584DD2E94B9D9445637A7AF95ECD82AC7ACFAA70BE093E
9EFC893FF3B8B59FCDC177AB7BE17D5695E073C656DF4020179565565C6AF6D5
D396C76122B10BDD0E96E2A2C5351B8999F25F44FB0E006E4FCC83742595D3EA
63A1C0E154FE5117E7B4F46625AA2721CE7DB4A60519EA0947DBB7919A92FBEB
14F35EE7B4B041DC2058E5650C39092381C614C27C8C8A1E09C5BF1ED3B27D91
BBD704D91D06D1089C6FCCC31EBF842349BC84A3BBC2AAF55D1FA5EAB0471788
2296080313292017DBD34E58A4F079E4CE546921CD4820CFA91B9290E014003E
29D3478B7186E61CD837577537AEEE3B3C6E40A8BD5B04BF1D6A422878DDE27D
7F4BAC77B634161B4CA9F72D4361D7B7C3AA91D9E23751FC8B3D461CCB14AE3A
8ED59B2F233F0649B5221C2499F2D39F7F1560CF3A54606581688EF3393C9094
0A12DA5CD8BC1BA3D3115A865A7BE117E768DF7553F4D5FBB9B0F2B7D5021705
DDE8173B1BF4A598881B0B48D5429C31F5454E64A8456D37CAF76736BA864DBC
5677F8B9D70AE07F5FA8B57E2EA6FA7E99E7D0C46D2DDF377EF91CA3B447325A
817D845D29D478C7A8358AED1B84B6B4BEEEBF3F5C0A2508006582D665EAD955
EB6EAA742E3E79322E33FD55CAE315584F8FF8637ABA26A6E86CFDEEB9AB57F9
FFB6436AF99D1A6448F4794DB9EE528F4DAFB3C150A9AE9427DD0B18D3F902F2
849752D869186144C2ED972E524008ECB425EB8C843E1B0B2731523677A29137
B8A56164B4480E317C94F6067A7E9F8956500511EADBB5628348078FA8BC558D
EBAE9296AEBE16AEBBE67209F3933B9D39DF015635F760A07A5D04A5EDD5FEBA
A3C5F8C06FE3913BAE2DBD302604886B042772AE69F458812384F700F82F5726
768867149ECA6F8163CA100E452C62C6F63A955F0966C53AC0FF5C49A8A06C71
7360DDD96B6C8583DD70CE4CC43EF6663167D362FDF09E5B57B7BEF9500AF582
6516F9F32CB1688623C94B498AFB610C69199E633CF387285A24DBE391620324
4F088903912AEB99011369291BB499A3773E574F5796E2B5FB82E157E0340AC5
FC4DA3191C5B9F2675BBBB9015D1E153BA55840510058BFFFD41F67E78F4EFA7
925EA2BD2ED4404D181C119351099F5E5E20792E7812E789AACB0D3712668184
9DE14D467C79F7D8750AE5188CBDB05F61D9536BB59D5486CDE654F14CA431B2
97F05DFD8B77FB79B23947CF55222DE6988445539176646FF1DB3B3DD60BBAA9
DC2F059B6AAF95CF8D0397DEEAA99867D195A1D412E0DD04E27E38007296D06A
B18A784DF3E382F1855A67ACD76B8AAC917210AD56774A67DAC3FFBEE7E7F47E
20DC9573C5E24F3ECCC94226859CD05734E6C2D9A86C5CC8DD3F139B744C1018
94E8A3B52DED30E9EAB1A28496F9122E8A1C12AC44DAC56485746095FF73BDA0
71DA585D033026A838B727A006D236111752A78FEE4BDF8BB9F0C11F9696E13B
B3DFA462DAF9E0DA2436392D372BA6E0D7BE17CB899A2BE0EAB9CE08CB261FFD
6559FEE7A816ECDDB5A86F5230A637566D50C9B8A52AC7D1308E8E4BC655F65A
ACB30A93C68EBC6ABDF201E85E9761B98B6C8F549310102214ACA69D3BCF6FE5
97CBA3A427764964CF1F2753EBA7A88B67D3196BD1A2D4842D40B0A013F43262
4412D6A8B77603D56E529B507F1140B96CD35ED42E1F1B7BB062467C57A50943
CF69A2BE9F46C461B73D29F3D8E5087F07DC3B9C4F0EBB1DB5BF6D84A2847B1D
22C5075AF82D9CA4A7723EA29B63E6759E0B149B9FEFF5FCF3CF69988CEA9610
CDC65794EF7E6F09ACF0817F3016EAA0FEFCE25276F78EAA3FD41782129DD5E3
86645D6DA281A182F3D6D9CF6EBB9899EC6CD747785BBF09ED9050BFDA736D6C
73992DD265CADF11B837FB694687BDA39044FB3FE8611DE0D68B49BD3FEB67F6
DA9588412127AEDC952C2F8FE5826B12D02EC60CD8FD43B6511D7198FBBBE27E
AEFD25E612C2395EE35A6548191094E13ACAC3D296ABB1929C513A1063C95EAA
33F0A9FCADD251AF143B58243380344503AE20C91B28681B37B781225A0B9A33
2F01F076AAAF52382D197AB96D0F8D2B4A1E1FFB798BF54D8200696514E68A69
FC94496A93FD81ABB909B1AF74A2011B073A8142C1CD08411F9C08DECE5818A4
C3070319432317947E3C1FF3A4C9C38067F27304425131DCC5E05187CA83B4C7
A19BA7EFF9C23AAEED1B10A5C58C7745278C787DF69CE06BE5D46D3DBE706714
15DF676DD9F3404DF584B92F04EA83FF60EE01F41A1EC067A0FB97F948E4CB59
3371278B916C456D0D0BB315E481279737EFF2D60011C485EEFCE2196C0BCB45
0CDF4500A5EA072BE0B107A8867E4AC80C4203FD8E90DEFB1C3C07FFA73E8E08
FE310ED604772594C698CDF0D76084B8CE432814251D23E4D43DCFE29BD639DA
2B48A9F4369DB6CC9BD09C4246ACBB2EA026231E9E2070B61595655D1FA4DF14
F941A104AD02BB55F766D2739EC8E2AADE223278C20A36743741D0E0E1F21DEA
2F78675D0CDC2A06BA5717B09CB294C99C17E71729535C706E464AFFAF4CA497
7AA0961681DA6030912B3EF189A211A098A197D36707409087B12F4B8055D1F9
06CAC658A7FC959AE8ED01FA740444718893783166ABF91D3EA44BD5841F85BF
F1830F2368A3C5C1FD60A1462E8109946D5F9DDAA88B6CBF5D2CA4C221CC0781
27F16B6E453C68C62B616BD5F7CBD137260718B5967B9BFED32661D6F72C7C47
48750870A4E4BE379594C2A06C3C73C863AFEAADFBB602DDC25C0302C5217709
032BBE7804FFB2488EF1ABF460AFD6D941472FEA9D8B8F899D14DBF5A6781AEA
3E83EC17075A3CEEB916761B2ED5274B67F7D0E2ED385AE7CE1F4598A2B88F2F
A57E762889F048AD4C8CF8E1D521A132A40661191D5B2BF13DF7381E6C42BAFB
67B3FC42A406C4360AEF939BF33FE228BFC0DDC79B04F39EB3CD21415A2BF237
0AE8E96EB784C7D500DA20FA4D966F37453E2A9CBAF4E9112626F2A4096A32CC
4CE08DAC7098E6FE80F717546C001E91C43F17AA59E263B2BB5155F6784FAEE6
77B3E1480469D513F59BC481DFCE9E9C0D2DD3566F48E129853E27C70A9D13CF
7D7D01C28DE1D942C23E5EB1CE9F4FB463EC0058D20F8097631D385510CAFC45
D29FBCB373AD9719BDE609A780D785D8AEDCE4B1A16DF2C1EA7AE1B3883BA0B0
D47D0D3DD07E0DA1E733CC4976B32B66D66C8A99AD4FC09FACC5FC632EC1CFAE
F398DB16D4F9ED841AB0D343C1E1981DC3C5F50FEF25A2983EC3C360D089FA1F
0C063B6CFFA4D6376CC3D0B01BA53AA716C91BC84FB1574B6E0CA0CC5DBC7F92
5E7C7903EEEBD4C5B8645DC0704CE80FDD966940A586A2D841AA20A29965A441
2FB1FA1D4BFE2F0BCFD83CEEBC653CB3CBDC26489C7A7D20AB25716FA3E749F2
62BF1E68AB10C0E9847985718080504EDCC665047E475A4FF86A4E2DC6FB4B7E
013B9C1B984BA41D5D38A760A16F819DA8EA9BAD88919F2547D28139D768409C
29618B52D4D940FCEBFE5162BAC7D2302095AFC62C5C2DEDFEA22B8842FA5732
7ADA1C6A09C7E547DC18FBF1D25F28B2F2AA5A532903DEF90209376291CC0EC5
D180D6BF641CE071C68703F0343BB3ECF762CD0C125B5C5755D147B5CB095A1E
148990AF9B112E2E1F41F6F0F907D1B0573F8B20F42A31D9634088D94C83E242
4C8B00F8C62BCA5179063C803CAF457CED95770941AAA73454357F25CDA23D57
8EC9A56E1C0BB1215BC416CAA5A2F19553603A2A4BFBE84043923DCA9CD2FABA
B06775AF240AF9C17866112ED05EF0ADBF01895C4AFF84D0CE2DBE50875973C5
6ECD6EBCC56ECBF13DE7B70030ED0D073D0D6A291D5F2C308E8FFEF9C797E20C
B2333F17C477B3D2ABB17217A880D9708AAC5BE9A5E8D58759575584D07AA5FF
6D0A529F0B101B79E3218ACC71A0777B12A0DDDE3FC45C74855AB6EA1CCB22C4
64A61D2C852A9407570CF3D044EFB29B33064D99ACB85A7004335BDD49B45A12
846DD729D162F90E452FAE92123E99AFBC571AA8C5A9673F332325B5F85F998D
E1B2FDB11DADABF290E65C5AA0D2DCE358A91C0ACFB8E3244BEBC70351240D59
397A21C33B410B174FC72AA6CC7E840754F17C1E7A929073210556FC1416774D
FD29AD4379DED4F11B5D69E545C14CFE8AA383BAC8E82478C1C0614B53CDA85F
27FA8AC3B44BB540D40D18C6BF2141E2702473C05365844A363A55D5EC264103
EE24A9EA677BDD2859AD862FCD48E2D6AAAD59F83EA40B59674B356D30A9A06A
8DCE691D2CB4F754ED334E2DED9A720AE472AB1333B956A866588C5A4421655B
0DC355B9EBDC30C8A4E3F23283E9DE2BD7C72068811B32360C9FB261AC419AE2
F227CC8C3BFC1A3A71B47DF4002D69809041886D39323192A97088944FE208F3
50A67615C36130056204F0FE0C55B107A66D2BD760D3EA0AA93EBB7374B60FA3
33C6F90C62498E6E37D32A3C7040071D3354806B5A54A4057507ADE581752FF0
362647F4CF4DBE0E46D469DEC064970C393E8EF5D442A6882D1F780626D426A3
FE768253DA162590D3BE73FB4094790E2320A1F8E742A7A36507E8D242AAE770
343661A99E0BE191F1F463ED9A94CC26669056DF67127A0859A40B7310CC7643
38A735252CB99BBD852A89467337AE119AF2F8D549BEBB10505316FB40E0826F
1DD0BB23B789282624E677D9490ED17B2CE761E08CD70D6E1057506C18625625
A6F5E492AF0C6247393B1D3636D56B8D67FB071173BF956A24C014BD8A1BFED1
0150DF19CBCB31BE4552A9AF9A1D1058757C8A22825B390A8D96623654F638C8
7D4AD8E496B00FA59CA9E0577BE8DC4F8694160AD7358210E1AD98D4CD7ED326
5CADD483495B500B0E5311ADB169D36EFCD86C0E0EF7A0F854B58AAA218B1318
741866C9621A5446A5AB6B85C49B236239052B0F3BEAC91AFA7C0FF789B21728
B7A319864294F8A1C063F5D6613EFA355AB79712D939E26C75BDB7ADBBD1F94F
EDABF5D104A269622909E79C77E07622715B5714A173BB641D191D6AE0565D91
CD61BD9C4448FB3008C82E9ACDAFAE18C1EE868F473340361A917519925441E3
EE1A9036BC522EA4B21F79EFD1C721C693A763226C1CF58541EAC710B45FB946
99F4125BB0695C82DD2A4C350AC4606622E18B9503E599C89F258F6E1036B7C4
FFA933228BBB17E584554C5AC19F497B02A706E48BBBF9842350004E8501435D
7C9C4C0752A169F79163D60932BD5F62237374EA252334C90ACB9626C9A0B4EB
E6FA7DE795910BCF95774F9068C3D203D39BBE5D1E1A7D2C745D8115FE336C0F
7C50BBD3225F6D2E2AD9EFA8C276E265AB10685E3504036763A6294A7475EF62
69962AE0F728C191A9578F44E25C6154AF6E32DEBFF192BA2253867460D7F152
7EC3AE9AB56705D5E75CEA659D9AD10785538E5645113B78601E16999BB675E1
E7BCB6217839C525D8DF01F5FD60D5902A66F4E1843E58120CAE965DAE21C4F8
34691B89BE3B7F03120203C6549684A480527D07F84FE0D0D24C6A5FA36BF7AD
9EB4CDD28E7FCDD142CE72A53BD54DEFB5FA6F2B30B6E34A23A83793A2F83564
7508DE1E773F4CEA72E4C0C4CF92193C9E1970B3E86AA4FDD4219B1ED41CC191
7FCCDC2A77CCA69BEFF03EB9886A97582FF4E9B71A49F0C11887F0B803D68E3F
0BBFFED71AF89C830ED83ED757F6B2B11D5E3E05BDC9D8AF697EACEDD02285BB
6F98D01ADF266306DA6ACDBC980A6A4580DD15E1C811BF48AC7E42E377791D78
11C36BAC01E738966104815AC67C52CE4656639C526F71970FA3FF40300D96C3
D34893D326F5F8679DC787FF5ACE9B2D3FD4F0D115DFF99F9A1B6184B31C1151
5EF62313F7A9D3E9362AC18EAC0FF1A8F7AB5F127D656B2E36B9D872222E9782
83A6BA7128F47F0EC6544978EE94E472B4EC69A0F1A4C5B945F51C751AEBA235
EF4BE3A861B9A4ACDB3FF7E8C90261AAC778708F348D1287417283B4445D5FC3
40FB7D8B87214E9AEA9B6898E20E4CF35BC858200B96898112D9FC25AF237B01
CDFD0CFF6D4BA7DC4391F05F643F2BC6F81B16275B6076E18B5923B0DB55C38C
13BF1C975554921F78AE29F40FBB126964F9018091F4EBBFAEAA5465888A3006
E3725C273AA22770F444E7972E524008BFD7B7FC749AEAFBD905E2C677B9FD96
086E6E0E43C883B5FB7DBA25BDB0FF81F5F289063C198ABE456AFEEA0655B73F
1B43BA4B4E3F4F8CC6BE36053F2B2A41CD98F4EDA3A967B5B4EE4196F09B8334
246A849927F4B086327BB7945CA53D6497381F926647AB7D007A8ABE8E680DFA
C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EE5A3DDDCD392415AF58CE22EA55B7F47031138C6F27798B40F7E18FDD315912
BE99F33ADE0FDD538A8A3E5DE58AF68A54732AE69F188F3F7E0458D848205648
CBE820C287ADC2394520F03BBB97DB893F6A12154B1B7F8626D35CE6B70F8524
CB128DE87821A0E32F1E825F6C50AE8B4BE37FAA3183BA4D678E896CC7E61CC9
D0226FC38B9CAE0939D19149D987979B96A86EB69A105807AB426639292FF5FB
EFF0817FCFD5E517884338F7022610DE6D0B9253553DC65B2DEA37DE13186BF8
5A50CCEF6E38BED4865864B40F41D642F716A5DBBF6E168CD4E27783D4665138
A27A1DB2016F5A4F980D7F1DB7FAFB949F2AA95243B37CFA104B620018ABCFCB
9226CB69604CF66A651F9125352B3E875C4DA8611EF441C3ABCAA76E44493D9A
B5AA7D966566820EAB106F2183E0954C7FA53AEB064E62263FAD6C8AB07CB851
32D1A5D03D74EF3878BBE6A13ED32F089F12EA09113C07AAB4D0594647D70B84
8B71D045DD1F1A6BF424A283B2D5E1C953900392B9243BA6506C8B622338FD7B
A24E3A501A2A406623612B92CA4EC9BFD45599DC093327136865975304493DC7
5BFF69DE7327B78CBCFCACC93B920C3D501786FD376BE33BB58C3BECD8AEA5E4
D4867E9E32D59498FDB2E228861F188023A4C4D0504928B09A8946C19E3614B3
34D029369F8FC5BD400D2102E866B06F03EC6CF6124DA1E8BE0F60C983B6DA7F
9DBAE2A5F9318EDA9E6AB1F9DF10BE52D633185D449EA91543196EA8D7F37BE9
5BBA28D4932400B7E6B045C4AD3076DD793ED0DA6106610E51174BA488B2FC7B
22FEF1977D46DAD52B8B0728ADEF3EE9E905351524C8A6313C5CAC9900FF67A4
9E02B3D10C6B03C19BCA513BE2D7D7862550F475B88FFCCB54CB6977E49F4922
6E38E9A219B7B86B0617091AB9425E276FD7DE7300596ADB8135BFB9261E42E5
13E4E5D9D75E69333F39BBE94491D1716FA8E2A6083AC97278E3181DC2123938
E616CD5EB950FD75A716D441E1D8DC1813F65D7161ADA8B4A9AE87DBBB7DE745
5EAABE825AAE99A7F3D61379030BA0CC9DA9DDA87777FAB95FE41B288D9CD9DC
EB6CC26607DFE32A4CB03AACFCB9269A2E3BBA34DFBBEFD3F958D41586FD5AE0
53A90B9841C4CB416BA0233CEAA6AA97323986D073D78FDF8AD5EF5692BE0D22
64CE48DED03AD9B73A4CCEB99F65920B5A4EDC239E804FE36A2AD2E91D7E39D1
61A5B54CA40B0B9E584B237A9C0AEE9DB72505B42B43873544459A36D8925DDD
F4ACA8CADF22225355C90D383E29230CBF5E4C3F4B573A6BB74B210B904BF8A5
CBE6FB63DB333E9F162CF8DC4012A5678594480A5C33EF435D90382FC1254420
8C940DA06E116B5333246CE620CD9552F357CB892C7059EF0CE331EC08AD6FFD
540A4CB9E43F408CAB578785B50D4C2DDD9C3634B0DA26F318A071CDECF32322
A07C751EF9F1C64A8A412EE10FFB77A735BEAB230E5F684853D956199AEC9290
C9FF1FE786590C80E97F888A5B4EC26B340FF066BAEBF3DE74D6D9D899364F27
9D1A349D44F3FEAEB163BF960B66D205576BD048C09A14CA2D50C644A10AC9BC
AD3C90A663FD41C25BEBC4209916CAF1EAF0B104689AAEADFC32CC80A3470C57
600DB3E01CABCD04CF471E1AA52FCBF7CB69151F5E0CD651C95ED7095FE8D232
3D5BB3EEB1131DD1E14215BA6A1AC2E1323D010169F37F6F419EF2E5AEC8D9EE
0A2956931A53613435537D220A6B372868EFC991FCE8A57470BF65F25AD77B2B
CBD93634D1B62280FDEB0778F97BBF78DB8AD8567AFF51B71C0F29078BDD72AF
729B09E4CA9F0460BCC5203CB4682555508B3CE78DA78E282AAD4E04FAF7374F
8E2AE9ABD737F1D134FFAF5EC4177243E8ACB7626E1620590C0308A425424C55
A06661DE2B5592EC57A60019F5DEF66BCC7C7FB68D4863346CD02AAC3CB55179
B1D54F1C8975D0C2C0CA7DCF160F9FA38E0E5CA60065D1C938B258CEAF781BD7
0E08C9506AE0A8BA37696D3700B6C6F2377F048CDEDB05DD715B88A09536DFE3
77798E0C74D3049FA872AFFC43D46AC9D87FF975BBC112EDCE5C9F151AF84EE8
7FA3FDFFD834D543487E8FB39E963C1B961D066BFC0FABFCE6A1ADC539B29F6D
E548838DD68F95E29D164294E91696F33E79CEFCAC6AE00A85C809E32179B336
6E372D2AC7ED1E6974F6BAFA6F62A2B3DC68B45ECD9BEB145AE42D890F81F59A
16ABDAAF09E3738FA3F872877A194DBF3A56E8AE32C8A35384833400812DC6A3
F5F6689916B51983746AA5BC4C4BA11F9EA303602C019F97BB28C0ABA3A62ABE
D97E2BC8EE7610460058147AC9C3489AAF6D75CEDDD5C65D04D86488CB3BC26E
D9BA9D103007AEF62F551536A138766058D47C729C628D3F94BE9A6CE6A3B0DE
AAE9CB9FF10B20EB40550BBDFD80B3C50EFC6A57E0BA0BAB5C7627C4D66A83B8
29E8BC0A181D6BDC8E5A2CFB2CA989CCE5C56D8F783D84FCBEA2B91C4D438CA1
BC70FD7B40D32320FAE6EE3A8A8ADD913D2E4B605AC3296E0CEC1BDE2C48CF42
99A89DD0EEC49848420E043E80FBB7D33B1CAE23EFCBB1BC55F361E2F2066C89
2F390101F62EEA8D0BA0CD32C94CC8518F36A50B814207DE1BDEBEE016A44FFA
AD5D09E830341E9FF118F12B4CD1C6BFEE3A776ADBBC1195D788720CFDE57E7F
6641B172DA2B5A479997CC21BFD4DB92DDC8071C758494429D6AC2EFFA01B0FE
F2C4BE55AB6A232634FC71CB27C6EB3AF8F2398DD6065CF614A287ABCE896001
B2A731ABC0E671F0EDB281FBB8717C8D06F90307898EEA492AB95A056069D58F
1B4066CEA80C6384FB51EEF880B13EBB507902826DC941490D2C6F42249946B5
A767DF322C94A69C6E4D5EBE6C38FC28942D2F7256334FCB2FBBD98269A88B39
C253FBCD8B0F17CFD925D1A09BF73427DF8506EA6DFC3124063472991C514E9F
4638C56CC9D1243100937EEA8DC9F93A5BB4DFE98A3E1AE4DCD2AEDAA370F73C
2A56C8BA743CEDDE8320952C62A826BCCD4E47CF6BB421C0DCBA066A132C2B68
281778CC322FC95E62F1D4841BF6BD5D8464186C07989C530A318BA8AFAC7AE9
F20D7E594B7B72EE3773F99F78F2650DF612DF2D32B8E6FFD4D1AC77F6B3F769
F2DCB08D55E51184E896836B442EB750FFCB6D4AD3D0E1BF5DD50D0D7E505B13
4CC7E9D6A0B5B6C749A6170DDAE82ADCA008E9A3BD10C235BFB2B4FF09081CC9
F421A85C44FFBFB33553CEA86A609904ADB885175F8C9374D38C271959A88891
48D99A03A7F27B3DE1D47F150A928CFE81A68EA6234DBAD690E765124D10E7CD
CED21A525743DA5D674CB7D4B49B6150AF153BC6B306B969AF0E67A44E093E49
8CE1EE0FF43FECB136D513E2B6CBD8C1E695FC8AD09CD707A0AAD79A1508343B
9884E9D03B11ED349D2AA561D0B39AA6DA506E4EBF3EB7A59BE7303ADF082A91
8C4D17725508821273E8047124E9E117F6549F35A38EDCBDC41D49DD149A9DC2
6EC50F555CC7AB6B290ED0717C54E2DF9373BCB1CD41FDF6B211BD012ACACCAD
25908ED3119DD6163E5467B38E80E3D004DDEF47088F0B9B9973B14C583E580B
F67FDD42710D91DFAA777C2CBAAEF4CEA086263BD36C4F56A62F6E240016591E
D6E11173DDBB7F6625AC133B3733CBEA7621F3679A7A85CE2527CDF3F878C9C5
CB8E290BDFA0CCCEB382CD80D780C07554D7E6A8C79DA701ED0EC5C909002160
73333BEF66660CB7A02E39F3F573A82DED7AA88622586921CF22368E2A4FD199
DA2A18F39E81E8DB24B0FF9DFC5FA75F5D31A402510F1B4B868374F7AA1C6561
A3150EC5378D81C16780C84BBCCDBAECF25050EA7A930EB0C4FE5A4436662C91
49A0EA749D7A313093B0AF9D1E4279F7002054127DA46D6852CE14DD066DDFA5
07A58A742EE5413D1D9EB30B494D616B068B1EC1195B835B293771C69B87A2B6
791F882359E44E04EAD44B8198C9E35947BE78D8BCE1DDDB1842C800EEBCE8E0
5CF9F35F15F3E6C59812E60C84FA2F3557DA0178BE4E974A57B4E5847347CC56
E877D0416EEC08F227F41EDC9F152CE1773AFD78AF0F4EB1B2AA66B5D60A6D17
A96A0ED34DBBA1237C392EE03B54CE5BCB880C2C262E7D3B8FD4AB0AD48FE6CC
181D1D7931AB64345A58892FAC2A8C23DDABFCC711B7A22EBDB4C63333F6FC72
4DB28BE27F6485448FA1D49F224F0EC6C97E26B782FBCBAEB982E4C831FFD6F4
415D618D1BFBB3B6499946DD4FAA3A7248DBE0EF9E29A45E10045E56A20BAD7E
4ED391B632967F803BE353697CB90EBE33FF7BC6818E09ADCC825D4DB1F231C0
3F48AD04143D1FAA67BF64B74E45A9BB0ACFE9F4988FB752B83A2458FF9A11AD
1023756774014FA759F5D9BD8825FA5AFE46B34E93D91C20710C7AE5A71DB400
CE446040DFCA3D7809D5C33EF15AE8ADB25C55B85E651E42427CBAAAFA5F0A44
95F346A5BEB43C95D79E8AD0884D0180A9C990A005C46E35C697F29D7E19F79B
47BDB1C4210BFAF8B4D9A6CA57A0DDA40EAF6B44A75A10EA99750A4DDB773316
CC1B4349DFA0ECFD885F1CFD8432A39BC1B996DD54B48F95B2FE4743FA7D3EF4
35A6D6376FF81CCD1214B809E9D9CA2EBE3809677D2C92093256DC9E6CC0B135
EFF4526E07AB625FD39E8B76117C2B62C492DB8F7274B5091157ECE22CCEF56B
EF7B8264B3532E433429CB6FB49DCB62A422F2C863E2D0C57D84FF1ECAC345DB
B2F80A638A49A22AF2BB956CCE0FA8457DC6DA7E581802896D1356099A73A498
C23CD44CB9CA93710C7A0B136FB59DC914376C0DD03ABB1AB7E1DAA33775B39A
B9311B25D260920CDD9AC89EFF340F48AB670C728B5F86E5E29FA7E353A292E8
46417555B7677631CC2DAFF1EE73F5984C791D5D50B0C52905C158DD5C6F3491
938468FFA6541146B8B13317D05F2CA436ECBD588B65000A047A399A0CC4277C
B0F991580D5DD84C95EEFF81D9D9D8494D361C8778673F8FDC685AC5531E2B28
4CEA7D9EC34A459523D45612C5013871390BA0210902D5D5B4B76449BEE19FC2
CAACA1DC8912A2C901BD6BBC7804A6B7102466D4A69462D009308C4F9EDB7B56
D938F19F86A6CBF0C108556CDE2C13FDDFD8CC4AB15A1BA8EC29465238F73FD6
30D6936A38F2E1785B814E83D522C1BE03F00FF4E9D91FD9C75B08DDCEC0A87A
75E425C70B3D1562660A7A97496F9674AE1E8AC8AEED40F8E5C306A27FAB0C4A
EA97AB83CCE849FA5C026641C1293CDD223C9F0783D50F59116CF461F60AF6CE
FD0DB7C06C00CB57646C8C1521DB254C1EFD52733C7F7136E9C96FDA043DFCFB
CC73A787C0EE0F314459437D6ABE88AE4629E5C3B5A4FAC1A98381A20C98319A
279CAEAB018ECFA45C5B9A0B72875E18ACAB320F0A38F56899E4E81393ECAAEF
F55AF50C9D9E462D3C8A34605AC97CA938FEA1BD1CE304EA5F0D52E87DD8748E
27480D252D9CFD10E9F4A080C80B0DC8A7727C049ABEC26F2A318223833D4076
028AAA8B9D43C5C8B143EF5EAB127784354FCA7563F111D9ECAFE4408700835A
42A92AE79E7A6E0CD383965390AF31F6E7BF34FE0757DD2E09D594FD7530F6F9
8C34690F6A37525346630E610326A909AE5C957A73BCF896FC36BCF0EE30F1EB
01E5A82C302E1947C86554E6181CD5CB26DF57C8599587C06289A03F4D4110A3
F3CE5CB13CE0E63E80DD67095B9B391EC7A8F1D594950534D1918EE73F9D135A
9E7E7D83E3BEFFE149E726DDB459A8BC4F9AB380D2D7278C68855B57D3547E90
D3A60335C694DD404A8AFE6B70B19D6AB04E6DABA95437CB6BC21E70A2B3BD32
23D3F5A32550F4B6DC1C96D395B6081DBEEC1F91C8F96E6DB3350FB386746388
BBA0E1450E5648B4908F0F860DC55903FCAC71C55335F9535A12736FCA83A170
8547CF418C7FEBE165187A3148297D77CC8EB3B6615FCABF5DA16CC66D020091
0047F852931A135AB30200E2BCAB179EDC87354F1F7AAAFE17A4340433723ABB
0E1C7F06CFEA3ADB5BC21E43BAFB68E94BB90D337616DC5BC169AFD6F103DABB
B5FAE1450E0BD63C9A11B22B812C2371DE6D06336365723A425E0C1809A46061
DEE13E8BB2AC2A4AAB2F045A95061F29D1818154B80F68526605C74C6BDBA9D4
F10FEAA22912C520D6E05967277F232EDE3A4F20B5E116F42742EF49BA892625
85831857BFEBC88830D05B56701AE16AAB9FAB35D529076A2087467A6C2AE4E8
2CDC3ADAF88CFCCEA7328C2BE8135D130743EC9DA0B318B445B3E417EFF6BFC6
89071BAA2B08EF0101624C3549944A34F963033D374BA42B564646424F7FA79F
2C6811638515A2861001DD5C17A2F55741CF41234E31B5D9B7F667E9E684E996
BE5BB09673D1AD01AF9B90F74D49CC4AB2AFA7BFDC2B697DD09D506D1268AF76
CB5C584072E839D59513904A755DE5E73C92B171058F1FB744A15F531B53AFBB
11241A8589B8EE8506AB56C3F4E472C0127DD66EE08527E533E6312834B7EE87
F41D6F899B2E8DA3E90F4D5DC27711EDE96C7147DDC11CF995C3C0A682FBD923
381E66258CFF80FC62CE92F7EC7E5EFCE3CCE0412FA1679D134ACA1DDA1C2C5F
EE962069EC54E44631034C54CD42E6E8E7A274C4DB68AE252121B8CEF0CAE1CD
F94525B5B3E3B06839B6E0D6DEF18B37D44F91385095115827AB812D753FD0A7
BFB8146EA4AEFFC513F710154DC54D110001A976F813469924B553EBC751FC93
A9550542B86281B0A24179A95F8D14D4BB3188555F4838E467B0DCB3BFFA4C85
76ED14D957F28DD72DB7D597A47397D4AF942365397C40B7FB2921E76B3E8913
4546D3F594560FB8D73DA44D23FC8BBB661100B478073F4B1368774EE80B7DEF
80AD978F061C390D8139614FD6A64BBE16DC622AE944AD3B631D62CE0DB70861
883B41C2A722C9A04A235D306E5A2096E8FC6C85EC7AB427A213AC5507174EE9
5890D9E860AA1D895E4B6272AB19F3AD9CAFFD3CF5008BAC3B04F0595330A790
2E1894E49F5BE2D64D0D64EB38F58157C91EC92237BE4D7EA6AC2113BB1C1EC3
4E62B656BC6AD4B22B44421D2017266908C7597742B77B90D3F36A565A9DB5C7
EC628639FD623AF4C09DDD40863945AF437F40E1E7E57135CCF3D35D82C0E689
0EBF76A5926F6AB9975C2ECED322E1199A6C45D5FFF2B116E719549A20DC0B3E
500B819896DB6709800EE3CD6754D07ECFFD8390C46912919BF3A8AD41FA9100
B5E33D68E9F998C9F79CD1AB232F9C6E149716A8B8D9EE5C8A97959775190515
B3375993D2269D2B44894BDB5EF4C4CE53899A66A7A993350ADD3F99DB285819
5762E339F1DE0B26C46275764D63E56AF14E253DB97A0B51983CF2D4DCFCD2AE
FC0FB8A462D206625E713AF6508E36E756C9E64B913BABED2D35DB09874704DB
35EBA1A95801E8C5070B3F7F92C29283B038F7411B6C19C89F02CD8047F00803
5FEA1013CC8280AA0A9A9392C69014E53567FB80FC5F73AC51A6A5E7185F9739
2A17CA18BBE9C5563375741F46D0BE54DBD034BA5093242224D19ABC275C9BC3
89979AA83F065752967C442E02E05C53048253623B1B70774A029D8D99C7FC2A
46CA5FD759A2BEEEC1B2F05A0A70A806F0417166EB5D54A991BB2B26A851B49B
F5CBFAE2B67BF13C7FE52ADB5838496C1163AE5D96348090840E28B24B76455A
77C5C35136AFBE03CE9BD7297FA4650D0107A7AE92E39E79BE02E2B84FFB3041
EFB25A92B2943A928FB53A15853AF39FBB2FFB1A1EF46365A26AAA1791F83451
D9F410EE6CC5C65CF9518F4B2D264BEAC7AF6488BF5B135390BE76C4ADF52CAA
903139E2D5388D2732B7134CF6BF4F90C50B2AF8400F2222C5293B99C27D9F25
4B8F8C7B449DC422D66F64578E67B716DBA57CB25B0068314FC80B8B8756EA9D
97E2ABE06A87609D163DFD0D8415A23F96CC558078859637539FB20F641F6FFA
0B1561FF2D25BDA5D35BC2B3BEDEB72945EFBFFA515F7805F2E35C154898AA61
51CF9F87FEF487F0783BFF57B76DBD36E0E1BC2C4EBDADE128633195DE3661EF
A3C4A7D67328CAB9B47AE9CCA239CA78C017B311979B53712D8C7EBEB606D991
D44FA4AFF5D3989E698251818AFAB31EA4C192E4B07B5DD898798B3385FD613B
69F92224C44939FAF2F9E027682347C7F990FF9CD9F67645355991D0C362D15F
A3824E3E6B1EF86A4CC16B77338D86CA4D980D3E8D3C150B267EE03EA32A1509
78AF789C64BB9023E1071C4C1AEA735B021C58CE780545045CADB409BD913F3A
572A7CCB3EC671BDD2B927A307F1525835D145C7D8ED8ACF595CFB209C7466DE
5429DA972C4A49B9438E03CFF2D731184A6C66919A826848C4437007984EA7E1
F3D2B8E8F829F13FA1B3203A680095423FB1AF15607AEEE3D0F8D720C25BBC9F
CEC3A50ABB2858D9A72FF578D28E89C1282A5EFA274CE529D526A6D27B8A8C64
91A12E3EDD9882FAC348C4E3F7B14AF135BC120A79503D82B34AF25404E58C18
CF3288463CE8477724D8610EEF395DF7AD7EC23271C22D96A5F31F806902852C
B751D736AF36C0F23928D7873CE7A6ABDBE101D143D59F95BF67E2207DAF1D6D
1D70EA28F882D30047793361D86F90A31F55B7A8AC874D404484D9DE80E4F262
5198E60BD234C877552C1A069B9A62848C27E024B5498E98218D6D482F487188
E6CECE26D1A8B3BDE9FC492F5622AAA4A2D70D7BC32B5EB11DA9202C5A04D7A8
06174A9368DF989BE476E1A69E9EB4709F8733A5E886C8F1F54BCA5EF956DA2A
5B783CBFA644871B77D19FFC1825CCEBBF5021C714A6C1D53AD9232ED97039E3
B7D1DCA255DB809269B968CA42E7BCBE2FD11ADA8626FFDC3FF0D7EA12251890
4FC559192AFA93D953833D225E2A9B9AE2E8578B03AAE122EE62E65C0136819A
D094C16490A07C9EF31EDFD02A0C374014DF3C4391B5E982C73996A677603E95
FC687A03E303EB7AEC63593FA1D152DB8C2A0E5D5E3DCAC349EE9004C48C82F8
57F1CACD19935E11CCFA51AF32060000AB5CFD4E603F02D100E39572E9DEEE70
23701237CD87D8C9797A73BBDC19141D6CD1FFF68077131EEDEF88F9CE28EAFA
5C47F71EA8C2EF36164BCEE053A5FBC977D4570584617E1BF236AF34BCC5F273
36B3021600BD08A04E0B7C2A66DC844704B13FD781335B984FE78A7478ADF80A
2A733C891E6B520A43BED2D44EF59647F65C03A08CD761084F309E0657C8491D
98E3BCEBE64A89F5EA4A4E8652DAAC1C9FC66EB66511CD7F38631883B5D3F597
46DA16242D471B30EEF4C20C000D9D5208206EA59918A572C60D0573688C7DEF
53D4950007D2981DF4206BD99FD2913CDD89AAD3FC59BF23EFD1EEB5CDBED391
148EB31590075EC7ECCC167B6E0AE58655E364DD964F4FDB60ED4C127821C108
FA896ABBD0F7FBE606A7C012D168F852F555664247215EAC761954AC336FF997
236EDF55FD2C36C028F49E9056F19B7F0A7645DF144DDCD31D10C385DF7EC36D
762896209A98757D86F7FF19BDE3237ABFD2D443758D96873194A78B4B7ED93C
D0D614460659A6A08266ECEC57FDFDDEE2D4E3EEA9F4460AFA7BF8CEC9440C95
D838B9EFEC686384587220CCFCB44B739CC05A2E24481864465115BB948BF013
230036F63870FBB572FEE74C42862470E56EF1EB7FD8057FCCBDED55660BD7F0
705E4CA47791A347C6FB52A2764EBD4F963C9002B3A4AF575A9650CC4DAEFE00
285D9596CF66B8F7A853851CA2EC6ED2D8FD0DC61A30BAE9075736A5E87DB035
DF1909AF4AE7DE154BDB4A4F3D9C40507AC3EE2658FB67E8BB126C4F54B6B3F9
A3F01D9625AC80BE08E09852D8E60EC28D7FAA72EE9CDF707E8D998E839D242C
0E66A2DB761F843E779F6B1032609446E33A5F4DE6315324F1D8EA8FEACF21AE
97BD650C568CDE357E3723823D5434B699043FF178A97C16B88601B620CA833C
024AA69BA041EB9F04E4AECCCE62B8DDE161D0B115784D63E47C5B6090D48AA5
0D2C2EE052460FC1375AA5BA7BF78B37C2957EF6C1E2AE75DEB145D3874CD67B
59297FB9CBB1C963C86DD934569C32F1BA574BA3C2BFB798DF05089383181589
B429F8C176448E6F4977B38752FB88ED85ACBFD7343BF9A2AEA960F234A06161
8BEECB7F1B2424EA06F38FF153333F6F7C90727E36D7231543B8C7FDB3B474DE
802DD169D26BBB5D85A7EA3FF54FA8AB6095C6E563ABF2827B43986AE52E9B2A
657A6793C1B9A884AA09D9AAC414F3623F8AA7F07F75EEABF007C3B52F8FB17A
A525AE1F37ED35BE51418D89180736FE6C81C564D97F9A093E8058B452FB70DF
1D0B4E20BF70CE6DA40C4D7C6985079CEDE9B82446EB2018FACB20DC878CA2F4
4100740D42E69356CB7B6290647D0A74DD49D01539EBAED94D71E4F746A0871A
3704C8E55E4B43499AF6B1F86C29332DD0524F7BB115E5AC4D7F69B6A6416D7C
5FD506FD736C2F07B1B7257AC21ACCC2F6B5A180D46E1B17D59FC2C7BCBD0BAD
EA136B78AAA853B5723102ED1F6439278EA24AC8F0DB16D7A0507DF2A378761A
EDE8AADA40C0DD083EB7B2113E5D873A1711AF46902F9A839218C458EA18A215
8C5B28184F14936DBCBA0012AAF236477EA3100DF56ECE984EE9EA2FC37E9CD6
95B363B22E947D9FCCA29F773CDAC2063D8185DFCC74FCCF1F3EDD5514816717
E72739EF1F9199609F0C326988754DAAE56B733B1031E071DC17D72FD6628741
3B3CA763541BEEA6306C55B2FE4619B4490860E8F1BD30615938961EB0DE2BD0
DDDF8EC30C1686F3574D5E39B78DF84A92E81C98D5EA209AB1CB417C9518F47A
03143DDF3F073A2EDA7C722AB1F4722258AA0DA5E80929089FA5020993414838
A585633552911C40FC6063AD26933164A9634970A6BD5A73E85F611B2AFD6074
A990C682BB3C7EA3785BB7331AB4F8780229D49E3B621A92E5A4B758F11B51EB
02CD3C04A2C3BF9A4BD2BF4DAC28B26C74D211CEDAC9909D2C01C9BE1FBF4A9F
1633580FB8D36E3960050203269D2F88B8EB02746A3479EFB11D1FA6CB69F297
C01F9B1263B6A06DAAD5A0AE0BC40EB8827E73746B725EB2E868E53C0F1A2EDA
8DB13021B7BDAFDFBBA7BA0BE35E98F5254681F3F0188FFBAA42A879540B69BD
97ECFFCB7AFB76A5E60FF62D4A3FEF7412EA1A06987844D36E4FA094ED27DFEA
1E5ADE6EFB252715CACD073B99444A3C701AC0F207CD2BF7320D40FC965E755A
B18E1D8BE711E763096624AD5607BE64A18FD82EB2681E83B8C846FA1CC642A9
56E0C78CB7861752376E38404C64CC9EA0B875D301D75EFAB4D696835F47CBA2
3244F0D906F643FD1AD9177A302CCE3961873A660E639D8B85D6B1F29534BF24
D3A9E9BC2F35C92BCCA825E7B3FEC617F5C280C8406C588D795AD30EA49C4B5D
013ACB3EA469833DF841DE134463936F6B07114175C5A66B9781ED9454E57B53
DA0EDB34492398C63514C492F03F136C222C8927A69E5ADC3F8150ADC8C957D2
D9C83A69151CB981036F0CAC7AA82E68723AD39650394954774D7AEC94864070
EF89F5630778
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 22 /macron put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 126 /tilde put
dup 127 /dieresis put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E8D8AE809B6110DFC697E53A46C2B97AD7A2B26DB308F581B779C881A6B52D6
C74AFD648581FD5B0B17C850CCBE5509196F697974A75F0CFAF5A268F4FAD930
97CEFF590F74EE706C349BC7BE44394508A24FB847FE51151FDAFE459F9FA604
D1D4D76F89E31CBA8B698538D049BD4E301357548813A3708A8FF26BBABAD38E
E260D016FEB7AF3BF518CDB34F76215187A01D16F5EF207D275A13E336A681C3
9ABC45EF7ACA31E1C19485D3FBB868312B651FC3F9C224C6632A653BB734C88F
6C5C2ABDAEDD8B14CEC8127DD1628B40BBA41199E2EE2A824ACE6445969D0F55
BD803A17A603C18FA98A9ADE10B209AD7ED3376707576EF45013E00E573BB027
25B12B3CB712AD0BEA1BE8AB95240F0E1BA231D5961941E7A12EDA7BD765D873
492C2B760BE8527E000832D4128D5D881F818FD4CE862196774A8238C3C8A92F
34BC2D86AE0BDB0159EF43AFB5F92F6B0617F19F47E7B1FB90B4E6063680E946
023D4B15DC808F30A00BE4650C5535439D014E12903292A1096312E7DF3F9C36
68A73E099A8DC395D5FA7D71B5447E0EA8A8272213499F1EA24C11913575ECFD
A391B2F09F2F3444E9AF1CEA8745142A303A20F8059C319CB1B090FD10F6C55D
860EB9EF4AC7CAF220D2EBAFCB28E52D0693BD99982618533CECDD87D953CA6D
0F87254194F54748AA792021A2EBD97A9718A2D165F063CB129B3BDB87B41F53
5A3A3359D740A7EBD2A7F0880C9834038C4E6C6DB6AC5EDC6947E4B30860F9B7
80CCB0133477FFEEE691482874C38050B732BAB4108CC540E2F2070E8E8E93FA
6207181D4AAE15946A3E6CBF23A40D3D18046969D9240F262DE80A3E750C6900
44999289A71DF6486CAFF258181170814B842CD08811877C3014F368CB496661
F6AA52BC995DF1C6AAB4F50D626A809934BE57167F52295494AA54898D1D576D
0F72B05B93837B6C870B70FF7B1F350763C1A640D25D822D917596DA460DCC20
DC3D35040D6494D95B86D0F968FAFDD5406B342AB992D4B3B20AAD4FD51992F6
863702C578EFEA6A6142A5386BBF311ADCF158C25096BCBBA28A1C1DFB1CEB0A
40334278332157CD8BBC1D483FD92BCFC683A7919DEF1D53AA7761CCBA0EB180
FAABAF244C37857C07896BD9AE9ADB1B5D7D3AFE299AF99D7B4FBEA4DA984D62
03AE15FFB0490DD012C57C33956F50907093B1F0C5CB86C81B710D5AA295D886
90EAFF3F27D6242CC9AF52BFCC8B19476AB21DED17D56AB81316E237BB5143EB
4A18885706328B940382D4083A35770CBDDC7C2BBF0BDBF76B62CBDCC11FC73E
4A31DFA64CA04C04A7BDC39D3DFA86155342C9791578A352B961D2E06B7D905C
602B6F4D2C73EBD91C87B3BE65A8340B7AF90637C311E778183F46D5CA325D43
AEC5D07ACF5E7CB4808232996203CCE72B7A8B15F765DA286DFCB17EB3B2C3B2
5FEAACFFA9FA3C7EEEE3DCD4EE4B6ED3103BD484F95C4405ADD1E3F289A303C7
564C04FDCB6B348BB5F3F62549B36AF4E7166FA42EB5F6AD65CD73BE4380C4E7
ED6B6DEF234F97C889221F4BD2D2C70609F618CB99FE9716DE175269D7BC1B9F
052891F9CE682B3B63215C14FEE391011B976941EDE53FBF2CCA4554F1A0B1BC
EFD51B37452301A091E9A44EEFFD780D708D39FE61510496E9311C828B834ED4
EE8780C5DDC8029EC3EBA0E8EC4931A7442BE426B113274D3E2B055C807A00DE
E3A4B153FE376C852C0E4606CAB33894C8E45268B2677CA266EE9C3EC34ACE12
AD4179CD5248C835B41C02058DC600CCAD106F67DA955A36F8D4C7759C9301B3
732F1E410246DFAA45BC9E65764FC9AFEF9C38EA25C04477715236FD245D8217
6D70E399B82FE2FA25AE4D9A7D86F30B9842ACA81F690B9A6E045BC5A0BCD3B8
7ADB10DF4D5BFD4518E2048CD872F02197998BDE790F1BDC76A23181F5510B59
3CE80720542CE99BA2BA40A45FFADF641B12BE274B74CADDA2DF2EABFBBF8CB6
D1D35DB404CB70DF44064D7572F11F11785B16FDF92B95F3FBE4054FAF9BA541
AFCD0EA309F440C9B094B365F1E766560607CDCD0772C3D9D25609F3E79DC9EE
CBA45110C1A23A13AC96F3AE7AE8DC6E6B428FFE8621A866B9C17C7D7DFC237D
F3D3DD81352D2CCC8308DB9F3106609AA124893C1076EE516F4300585520E566
F6011D1BD247933EF8B020A9CABBFBB71AC73934C2CE5B09A298F214B7A364CE
AE2E508150B5F77A0A02040BD737937B0CFC249D1DA1564E0BDEB1F983E0926D
1B60FF4BE7435CC82C845B66AE271462CD606A7B05182B61D9CBD0E432A435F4
B89F392E828ED1C5DD853632F8FF226FD6211BFF977BF026411FE62A44AB2E29
2DF1A01BFFD9C4D6D3E99BEDC4FE2451E181DCC8CEDC3BCCA0AC4E0F637276FE
37E91F157586894A00F2D6FC10CC1E04DD5E982B196EFBEBC924D5A01052434B
6356686BD66FB34A0728759F52A4AA202DF7D076A4D4D4D717091AF3F19D4727
36D7C125740C1519F84B7249574E13BB5A54C4A72F70EFC67A2FF7ECAAAA2D58
71359C5B1F04E018E3383BFA9BCDF75F0BC27F3F84C6E831A43A6E92223DEB30
E80D32F8CE413BAC9CC0684EFCE911B3E453BEF474E584D35F2D3DD887032594
AD27F48547420D1552421861B5FBF8BDADC7DA1C6434A4315F7F870ED87EA2E2
81B7D11AB55CA79CD8F7EE51C6F2AFA56735D7FA76DB22341B09ED55D1FE9A69
D7B55570301959EF8913A1676C6225B0D6EAA68AF309DBE723A09DE5DDCC925E
6B4424B4191DABB8318E2A5BB4C41E42C5D4ED822458F2BA81D5D7445C5AC871
B39427CFA5B8AF1E020CA9181F7660DFD4707B32EDFA52301AFC6853989F4B39
FA8384DA1ED9AD79A7AAF5D52A5022FCB9A0662C6D149C01336E8BCE33F776C2
4653A277DB7ABD4917DB251AB74CA70BCDD48D9F6566A1659674AA225BCB1923
30CD6358412A0FE7C341EE0F6AFD2CF8B1A8038C33564B10D29BC149037A2A7C
6C77FB8291862C484B0A957004F0F65C8B3D9766247AC8ED39D146C74AB245BA
E1B4334203EC67692654F6979D0CD1CBC2487B0015CD7BD8281ADD2097D516F5
8748DF050ACE4A247F575D391066B63E3E4237A29C9B8990ADBB7041915AA9C9
2642B8E2C64E538AF9397EDAEF90749CEB68C00B07C32660EE9365250EE7481B
BDAD53716B8472294C1058604256C9FC9D45D087690E2349D09FAE575E069E3E
14353C4FE92E67037E3814BF730A37E73D254926B90305F041AF3775892B7EB3
58C30F49D21A02AB50107EB0DB251CE7AAFE8512D9DB1ADBAA26183C2E31BB6A
1C6EC2C14E582A9EFE3F71DF7C15330AC4D0A8A1668F1F1FED4FC96E79AE415D
4CF3938F6AE07244E508BC7511F9788E3B330F1AD853B76735A28957503FFB23
2127CBB9184A59BADF2379312841D8EEA84C5BFF813DBF6A3B59C02F81E07D46
9BCF57BAEE0E0D15D633F2ACB9A993A926BD9DBD877037C9AB275D7985E0C2DA
A69349BBEB72905369EE01CAE0EB0B54EA5B2378D1F16AF9B310D1A712FB38B4
B222FDDEB165443B03858229D06E9908DAE80326A62D37D7D6428EA50372F2A7
8E891686F6B189160C574B88A5FFE1F4EDE69398667299F54BA9F42D3EC95E1C
ABDE2D625519BF14D24EF946E541968686708E938CD6361EA00F27030A3D9018
C413C87EFF84ADD666C68072D16A6A0FEE24A8ECA1E7F559D8F23AB1CCD3BC00
B525F57A6D081F7A867745214873AE7B1D232AB2CD0318047B13B47B333F5FCA
F7D5E85EA2711845CA468675CCBAEE1469718D7653CA4A635C02743DA82F3ADA
2B2714F82DF6F84C75EDD93E00D113BA37E2EBD29139D3C9B6D4DEC1C95C4BA6
566F81F183C610899F23FF9D2A244E0C46736F0627ED9BE728418324EBC778DF
DB28E104A100891CEC67ED193453F761AF8755D7BF4BFF28DDFB6D93F74785A6
7DEE02A4E1BDFC5BDB4A84658A52833DE4BB27C3A892A1CF89EBB731F1FD43A6
D98EC99DDC6AD77189A92D58B2EE3EC369C026597C28A8CAE7C06E817C64144F
E26B4CDE90F0B2F6DA6BCEE10220298536D82B579724585B45E6CE9690A3DBBC
1B0A38517E2D83A4D8F25524AF0D508B220CA57C63378CCE68C82B19FF71DC60
5C6186DCC0303641C138AF4CF69385ADC62262CB57E41F59AAAB1A4AB4EA60DB
DF545B2C36625914834EB6D3083BD524B2C2CEAE9A9BBB8663E40EC3A8D8C737
13687EDE515774E5F0324C9F0E659852B86B929A53EEA0C96FE1C164D0879371
E27F9DAAD438A93C5D9BC7691F9C92345002C91AF464C0194AE11315F891CDA9
4241DD983B0FDFA2CD0D81A4CC0E265A53E6C47F9FD181157BFEE8011E4FAE5C
0CD879197CEF3CF7581A158E799D338E63281C467B6A74B8B140739195DECA07
483B4717536618A0663208CA33FD3A4DC335A80AA2576B856F9AAE3299CA5BC4
6C6D6FA68EDA91B516E97400EA879E12D9F44144A38430A0D80DACB03AA5D1D8
761924775880DCF6CB025925675139B3C360AAB6B34F96A62C38F0431BB8118F
A0FC755F098B01ADCEECA687FD23E7ECAA307609B831520D9DA0195D9AF76AA0
D3B05434997747A39D5A94BDD32A82A47381AFA47C3E354E04C00E09A513B52F
1E28B900D02D6195C278ED104FC28703DF93174FC4F64A0CF5A1F4996E577291
27E93615916BB6AC684C6F1BB05683A86EEAD49337FF3D2748E8F42B757F4A6F
F034842D6F3776022422E85678894DF63955598BDBA9C7592FFC2E9A6ED81AF0
E476B38F70FC3548F7CAB1940817BFD262BA320ED3989E1B2569D0B718A77CB5
2C1A2FC694E9C28DF178CBB3DEE73110150AB52C55B0AEA87D9B706C4BAA6507
4C993AA858E073882C7716EEA997827C70B19005CBAAC0F1F74C6C2BD253845E
0B3E7AA933779D1D475D38A93B3C4ED02A86769C8013232E5A13D9CABB8EEA63
356833A0FA90C37DD7DB3FFB7BBB002C5244C003F58943559825EBE39ABD1CBA
B95AC30341E8DDC0CC1AAE927A3B1C2A63C97BE72D4B22EC89AD4C8F129A83C9
B6637D3CF8DEFEB6513DB7A95933E7E6C848314CF145FA1656F114367ECB4755
47E5BE15F5C0EE59A243B027BC98E5E106469A0E5F7E8B5C890C8B2A6AA3B7DF
44F31EC7964044DF2613057C6110B4C0E1073930D960E0FE50E8798463A54772
9F47E560CDFD595E626A253586ABAA0DD05E6217474B40B78CCD5965BB7F916D
29C60AD5D37CB3A326486AE32D7DAD6AC7DA3537A04933909CD1DD7B515D88B4
7A74794C45600D18EDB0C28CB55E1B24A58F9196C11F07ED55A4392BED064BA1
414A07E16A8AB48FF5EE87AAA02E4F483DBBC73C77843AF62AAD3A186CDFF174
9EA935DAE0246534CF0E9C1014736B2C2DDCA05092E1D44B9E4C23E7A2C0A7CE
4CF5FD576526A0F20EB640490C2A2EFEB26F015D194DE7EECCC7B259B6F9BAF6
BC92B414D4FC0501F4C5EC95BEE3B91F2DA227C35C09DC61B98603D406D75241
91AA10E47E230F3E7DC404DF8C0C111917CDADCD812AB03378ED0D93E611CE67
F22F2FE1D3FCE7FB9A87F2289A9134E6C23F2B4AAE535B6B98982107AA76DA0E
409DA3E1EBB340C2D9709DF49E570728074349ED72900FA5A17A5FB51FAB2AC9
0AF75E8B806883B87CD957DB62C9C98E3D77A6D4A95AC125D5FEDCFE1CD8E6F3
1576A659ACA4035105C57F2588FA5E6121EA9FDFD9E6A5FF052402F26B593C76
3CE1094CDEF11BC9D1E4FD8BF8AA122CE25494A21554BE36C0D29DFAFFE2E9AA
F200C5D817921F788C6F899ABC974DAA1BE4BFF7699FCEBBD3FF5088544F91D9
9F8AE18F62967FA040B6F29F8E5E67EDE98B578F04DAB47F3038A15E8B7E8500
E464A908BEA51C3C254F7203ABC978A3962661E73E47E087FF3770471937FC15
2E7DE5A301CF4E850254B0A58A21612B2F932C186AD5199BD6067E3C4705DC65
273431135F72CDD133B01BA46C01DFDCE40FBCB43E1E9BEB6FFFBE959F5270BD
54D2C4E460FC5E3CE3874767D2E41529E8F32DF3D2D3DE1B927B14E40CB5D074
5EF642023176D706134CD48F069429506E70F879EAAB9E6363FCB62E793B870B
75DDD59C140DB57A6B57C149936322701967C2BC179B904D93309D39C95CFE30
BDD3E76812B87FB2EB82B1CF1D1A8C6F0AED950069B445C609FF3C6097DF46BE
E2C19673439495A6216CA0975D22C743F0A46A4633FC7F9352EE1082880E3011
BAA1A2D8C89CF7DA8C88D89AAD2FBB252AD1EEEB4EE644EDE3EEB91B8548BF0C
B6BBA5DD67FDA8C9F388CF779FCA0966834E3269ACAEC7D8DA7D581550692C02
92F8A7CB755CE521745120110BD478B31D9C7AD49FB2F7A8FF7A01E83D6004FE
EE8FA2E32E3CBFB1D3A0FA88DA423A152F22BA001FD1EB94D3BF31F871002551
C5E8D8E4C6C31EE1FD378276161D9EBE4ABB6797BDA8565F22707B0F5B3B28F1
FAA620C66D0E77D45537A9DADBD82831FCABEFCA63C392AD317415B055F5CCC0
48F050167F0B85D697433AB84338F6DC31D6BC7C91B794F4DBC477D87394047E
87E668E4EAC53024CAE0F6E033B7A6743934A145F999B0605792432E74C4789B
C228F647043FB1DD1CFC4A9750D31B1DC73ADF636870F7637FC817E741D8A2AE
304B25DDCEBC948A5D87930FBF1B3017F77DE47A823D2BB137D5EDFB153039D9
A54A170AABFC30527C5E7A44333D58F66EC1D9D1D3963702D23AF9E82BC08FEE
3D5E01B7F07DEF04D51B93C2D1E4970D4D6F19EAC4D95E735CA76BA5ADA4263F
F3D8C9C0BA8EE8A36B6D3B7EA11B4876D27BEEA65529535DF74B31B3093E6401
69BE7C0BE84E8D3B9F877483038C28A365634A6441C7DD108C28E80138F4F0C1
C02C4E1032DF247BCF9000FA42787EFBCEDA7F2469C4C681B7B29424190FCDC1
67F960D9B1CCB6E0A435126A82FA601222F241C84502A1694158BA5994AA3581
6B1C30D7A2833E37F986C2A218E41B73C9F9551D096B11DE1DB896374CC7FE8F
8B7DA10C4EA6BCDC8F97981CC2BD107D8650CA851475C8D4AB3E7A5E786909C4
6036952D049A42A994195ECE74B310E291FAC39349EA2008B716897BF1866F48
1FE2FDB5D271BABAC58A4C4BACDE6A28BD21CF602E81F06A0FB5E61084B49B87
621BE845611DCF9A55B32BE8326132C3485B210D5019FA4919C57D3003C7AB5D
A8A7C100DAA1576C5232C119BD94513C006DF36A98C0B3C91032ABC3896BFB15
9B5535E9825EC4B5B47483353100EB7C6AC4BB09FFF7EC070AAE3FD327F9DAD8
F8CB7323B1BDFD0E191B39B3AD490BD921BBD5C443C2878BCB42AAD0C86DDB48
BB84A6B0FD92D69FD4DB71AFCE87DED7712B4847FD63E1B21A6F42420BE167A4
BB3027BFFB7FF84240C1AC8722922B8BBAC55329AF0800FB064E0AC8AAE2BCDA
53F67D2916DFB76EA3911B527929B20D904E994583C011F8044AD7C9DA87645A
3AA9F9ED64337F4802299FA85405B368A9CEA525FC74E53686240BB9773D63A6
407B2870AD0171901DB742DE8BC21CC9EC31B9FFC726A7164BA10532EB66CAF2
AC0237A4DF715C4FE4C1DCE0D66312A906547F9998F484379FD7849F09539262
C74BC5B4AC812127B6A16E596F8B98022B814E22FC1CB4BA9CF46C40C5E3E971
122E8AD936FD6B3E455E7D277E8E0BDDA6A251A1FA3E821F9AB466AC24577257
EEC5BAFB4E1B0E977906FE2B3154CDA9491DC1CE9B63229CC917268FAEAD7C47
E585A5700CF804FB4F141F2F1966817E2E5771DAB1121C4C4187390037129A03
F8DB1ED8D0A9EBA9D0AA10E722F056FC70012743DA3ADD086EB1C96AD6ED8BF3
1C62B588AE5201C0C6B2361523C65A5DFD58773DEBA1292BD7DBF32423C036D5
FFDC146CA0D1B87EC06F03217F3402252D2D7C9B28C885FC7325CDA4355F9EF1
CA3C7BC4712A5435F2C5B36B0BB670DE53093DA715791F0922B3ECC401560F6E
F053375187527B65F4271E6626B43119405C10F87EA3375CA514FCF81B3A5260
3D21D1833E9FC6E5F5D8F59F444204A3A250DA23D9C9165609991949429CFB55
3B166E6AFE68DEEE95B7F94543675B3E932A411625826AC98EAB53134FE44159
F6AEA277505C0C39362AEDE946029A80B244CAEA59C91F4608927534CCE5D89E
3B23A686DC15C4ED604A8BEA94C8AC4066C41F2EB0CD89EE7CF7416F4B0E49A9
D66A799094FE46CE520C9C01C9EA8E0BCA665F9958519AEEDFA537AD7811E2E8
22FFB46E17200C0283A3C7BD345A83576CDBA8BD28CD715349332015F91E76C9
96FE3A69AC0010C7DD7E78077508F6A08976A6ED5D7DA87C917420B74500C176
F8CD8814127F078E1CC1F058A501D21BC65894BE85C893732FD42E1EE8AF3942
8D573321D69C72FAC039BE300A539638E8A747FAE80A0F9F3D5D3247F94B8F9B
632F2C70B827B0B9E4BE9974FD310743D549B7DF85D6BD82B0DF46AA88CDFBF5
3ACEAAB9EA2DA59097344CD7798D9D0DA465A01A74D7853D4E67ABC82F23A3B9
8AF5D83878F93F17BCDFB77F1D9089CFCC55390EB3759B165750D21B85B42498
442D5A773A1A9C8B2DE61CE525C08B54DD110AED833D3B760E8BF9B7E6777D46
27DB560B90107FBC7D5B04201384B157E8AB741B2F6F170D1FDCF52D92DF97BE
3A1D2D43AB86644633C2E33FFAC4FA8E73C2EBFEC05A74A220358DE4A004EF36
731331C77C71D12F7A7B917B12F67B8F1BA8270B3477E0FE0F5D89084B2DCAB2
B280F6A7BFF4B3D90947750A62315DDD25EBAFC0D091057903C91B251D2C8B2B
BECE775249CDF9FCDE2A0E63619E878191D08CC9E935B2430E17DF8A053E6710
C68430EDE7A1724417EF103F7547D51BF0454C8EAC7E136A2F4125B1C4AF2CA4
0EB959B441FA0D2A06BFF9A03557476AA9160291FF83EC941A99AC25FFE6C6A6
54DA8DE433C3902897DEC88EA4E00AEEA4CE548EDBCD5CD3CF791BE9CA9B3BE9
2C41DEBAE7E40EDCCA8C21B8513AA05D769396B73C98D4E56549F91A76DF182C
FCE7B5C3067E988EAADEBD2C395AA15A6BEBA7682169CEF8CC233B53A78D62BE
D2DC111CE481872749F0C97B72EF52BD380555E11DE0358E988AF3B7381954D6
97C350F009F6F57CC419E80C156471E2748D2C7BAD310091F3D2BB8C7D459789
CAB06A0C23FB64D65DE321EF9604110A257234C720D8E3C6E2AFF5068D82E3CC
830BE1FFC346E433D806FFC308DF05648391AD96A7D38A6C87D037E516576A1B
84807020A9F50323033898FA681DCA7EC9BE506141C9F1076DD85802C63E245D
8CA7220D696DB2B34111F19F5255A48D056F94E14975390BB39850BD458A27A4
90C3CC3E2812EA0CF6639261B373A7CD508E2AD7B27AA897C71360B476274A97
129E892A7BC0AA5556AD45A65285D140F3A0A0A305EAE613E22A22B8F53FA668
94152B35AF51318E53CA6F08DFE6726687DA99D3236F812A4FEB8AE07633857C
AD52AB0F5D84CE65AC94DDD4AFE0FA186FF7037B58BC481710C74A504E82167D
585060D6F66A86DD7A28FCCAF7229544EC95B647B7885D1B5E00C082D5407EAE
3BC13B43E9772755892704E49D241162C8CFF709EFEF6D4FDCBA3318A79515C2
797EFC23819B8B68616601ED41E99CDDEAE86BF0E7C5D1A993963EF05A480D04
D5A542EA99EA3310921E49192D3DF55ED2F3123E341C3B6BAF95A4494AA7D18F
BF7FF79A16E004FDC68D7D0252C925C94C3F4410D1548301B2CBC2F579E535AD
98F49D4D19DED5854849B881AE1CCA975F947388D2B651D41D9A62EAA46EA62A
CAC3E48E64E2012109C9DF8D31CC7630B66BE5D6B43B9BDACDCC64B4838C1DD7
99E8928B2D014DA5E129368D11A131B419444548B9433C0EAFD3C6642DA16A96
914C50483CE7CFDFA74A081A5A17D172C4EADAB6EBE01D1D1166825C33E75D68
B0BE9750312D2AA6DC8D4E00AC9E04764E78D561D946C603A91AD572EEFA29A8
132024C8FD7E9AC85954E809C975FE65458B185B16B39E00B7C9BFC689C812F6
3B5E728BB695D7E73D28580A925A9C6617B493FB849C450D1FA1D57142943645
6C3CD372493B79EA50AEA1436CB4E65F7C49B5C3DCE175AAA0601CB59D3B260C
DEB5AEE735BA0A576D3FC9042C5917D0004A64CE53534E5966BB7F192FCB22F6
D673281B5E34450C3564BCABD3DCF8A4018BDC81086694414DCD05D9B19951D8
D4C3EBAA22435BD731C3B223E0900CB6823A56FF60EF6698714E6E260DE75C02
6FD82F4DC01C4BBC4C9E8395C9535EA13F738FC5928E8FE38EE7F3D9B6CE4E19
C5C0624EB0EB2D2942F83FA70B91A40448957380251DBC7FDCC6ABEF61233E8B
B2CDF27BCA86B0F576342E42A6A7EC2B48846BF77F983F528F2F324B8117102D
68C0B07FBA91022886E72A6C82833A291EBA81FE24BA4AB19341DB5F1401E2F3
4FF951776507F2354506011337F4ECFF8D4F6427156A831B597969EFDDCC24C6
1810D28A3B9AAEA6CDE17853D61A4883036ABD5A74ED39B867F5AE2226C40FD6
91727CA869A72B09E7977C928C76B7B5F1960CEA7D54EFD786E41471104A5798
84D02BF89D7B888055354DF0F91A3D4649163CCA179D62A7287A82A71E557A62
BDA9D1B7AD699C317698A800172976896746BBF33490FA312D4EA14F2DCCE63A
F2DD01E83D463411D30F87F81F9B1AD37104E0AB6A94709D3320968E12BA4EB5
BC4039EFBC4A51ADF447C74DB198F5E0BC00945C40793136E51A8D690EFC979E
3D4A654680EFEE6717CF5EF4D9C66C6D4E2B6963ECFFA497429926FD9B0CA14C
C110D8936CBB2E1D0BDAD20CF6EAB87EC94A88B0A59B9EBD67DBB8B900B03E0C
7A84A827B8DC9DD117BC2AC3342348CE5B5AB7CFC606E94B0D8738B9EB2068A0
15E8DB2D020E98EE1B0DC27E6B3A5998C70CF41B501CB58598D76BBC66164D9C
7B1590813F0C87C4070B266E89FDB99551372C9BB08AF169EDEFCA3A7B8B772D
A42FD52E389D58CD94494B08DD62A5D816D6B38B32ADB50CEDF1231DC5AF3082
A52BE2D6E318474626A22476283AFF03E494FECA371DB4E624FB0716F89DF629
D87D5C6C7163E7BC284919F4D70630A45F1888C81F11D4EA6F0CA55AD04F09BA
2D4B8A3CC551D3A9AA8B620E2D2C92F06BEAA8817C521212F8C9AD13759C80BA
CE39E91F4DB2D0F271D5313DB2B27C1E45CEB65988377183BC252E26AF55BA61
786D6460D1A90357B65BFBC1FE41B7F7CA6D6084A60EA2A2D57B3D85EBC5C3F6
C7F263F0E787DE006FD4274603E647D75F975D68B15E9C6BB0794CF2EA04913B
8B4A48DED69E4550BDB8F9B4060FD28E8FF165B6B74E844043E6ADD5CA5F724B
5569FF9ECD0ED31D6AC61CCCC0A9BCC9794ED55F9813D6A4384F472D45FBAFFD
312D4315BA82CB82C08D2130DD12690058351CA3FA4F8D69436A827E3887831E
F2C0F3E2CBF845619065200B76ED7B7C29B2945C52FBA557D874E28A1AF958AF
5A364F0F1D02271958EF747BB813F7063A1E4578E73F5C7E6F024BEC7F93BE9E
F7F3ADC0333136595A813162D7E7979A817AB78E51A52F2256F03B033A184258
4FE99B32893B7FF666F5F82A17DBF7947E7C0117FF96C868399E4137695ACC3F
15C6FB828A6CAD9877B9A3C03F1E90361DA4515E4B270130BBA73D8ED77138E2
14636472F5E836228AB25039A5BAC8CC2370D27D23788C11D96A7122BC365AE3
F21AD8C3E5CE1CC97F0D65A9CEE6239B6A0AEF3B61C1ADC6E9A9DE8FE62BA47C
569D5016925BE8FD023FD72B7D77A990179F32E01EDC7089DCC81970163F0E63
8A1EB9116D50A5EB1FBB2E00594AA83E4132C70DEBF8CB3E7DC4FF13B2F675DA
0EC6A414AA6EA323F8EFC9FAD0129C2082464B39D8E4FC210E8DC2D4193D6D95
FE0C6B403E9B68B17C3836223A2D130191C834BF0C1D6D4E1F1E4A9760E75C96
A019D429A42D36535DCCB8D38A690C91BF36DA4E9413DA287D0DBF8A00BD38B2
D54B9A798C900C6235CDEE8F8AEE582C453A44563C3068A872B4EF47AB167F54
C63CC6930CA93DA37FAF279041473DD51E8413A2E8FACAFAA45074A088E8D3D0
345E11E4E878C5A6F6663094ADAD5CE815363D1FF58EAF0864823F0DE2477340
103329C9674F626A0D5DC1B1E41C3C8879990A5146120435E1D365A76B619477
1AE442438729AAB287CC5236DC02F27EF90AE2E484244E9EC42BB7639480EC85
2E58BA68BFCBCCADFF6268DC13BA42B977B72B9AA56FEC2109EE88FF9EF24B26
E43CC8E9169D0FE5AB5B40CFCC74B16891CAC08FAB2B7E304BE7BF9327D471A7
C1465B01D700483251D08FF923E8DEBB1FA5D9F3DB0487E554502E5DB66D4477
758F34231E73232F0EF85DB4AFE45231335A2EA602AEE52E5F35F095310092F6
88A2D75C2FB8D3F68803545D079AD0B78AA2FED241DE534BE46FF8E0939F47C6
BBB02CE69237CD302901446DB8DB655F9CC061E44E5946BAE985FB96DC721ED7
C294940DA2C707B50B5969E1ADFF49242C0963B238C52A12564E6C665BE4B345
BB04CDFA03F94900B8CE4BFF2D0612831FBEDC6DE3F4A8795CEDA740B8584264
FF9FDE50AFDECCCA55AA97331E63BD2A5F0D157CEF30915478025394192DFFB4
1449C82A72DA0BD9A704506ABB54A1CDA422FE15446F05AD407D0CD0B767C7F7
FD683D110632C5260763E9D9CB609CDF5F3DBF23A37DF324C51B6392D552D9F5
FF8B5BA9BA08352E7E4A6A510A1DB17300C46BB604D21E8D2C635EADA17927A9
E7EF3E5A32A8F2E13C34F0E1DAE1B931E76F2FCAA460DAF6EF2C9B5D0431D741
9ADDDDF025954D26B29820595749F01608849C9F782D0E2BB4A88AFDE234E617
E723F408B0DA098822362AEFC10CA76D79B7D7D5FC2358131A45CFBE6B5D95B3
A09EF32496A708FF2A222B86FC724F23A3D29D84BE7D16BC88F0BB0CBC22B50D
773AD17A4B4A9EB9D567DC8D0C1B5FD87445C6C524594C615617207B4A7A0F14
FABD81174341CD4E234A85F3A7B643680164BF8090A7B2395A006226603DE15B
3B516C246A45AE86E8E1C732ADE26F579B275147C86128F9DB282B1504B04B52
702033D624A3DAAEBE3F37774838E7CA1132FC20081E9D34D6685F173A5936FA
3DB443F49040487B163A64B1C9FA77DEC17AC323FC6114C1C24785BCF47A54E7
4D9F9D56A13CCAA0685B2D61F0DD970E53A9FCF3E211577E48B03A66D29C1F56
44332B5A177FBE5FE140115C995F452ABB6259A6A50F6DB3BFC1646F7B0804BA
37342C9D1080E03A9CCB34EF8C45205BDE4E8B76FEB2F717776DE0D7C9AF7A27
FD53F32B9214F04B752B8E7BC6ADDDCBB991AD0B6AB2949D065BFA0014451A4F
03FB20B351A3CB68ED863EA9D80D74F433A2470D35CBD8DAE7712EAF0C82F84B
E47CFA6E09298F7B07A573BD097BBB05D03C4EC41603357838121551C87F37EE
74DDADFE3C07AD673CE679C562340AF3E3033FAF634455D1960142E86A1D4F5B
44369AFE5FDB8320F74FA23BA084F9BF4E8377480185D39F89E360726E01EF63
87BD9510351B0B6755227DED7C4C56623301AB97BD3A097C40E2C0063AAA5C15
57C6BE890DF2177EB24F65A5268FA749D396FF05D6C1819031638FB691B7C796
CCEF7A0A94AF0C3D4F5707B5475CCF9450CD6DE976DF91DBB232F6B4783D58F9
C8B52AFCCDC4B237009D02C84A3CE17465CD5BA6CC48D5A0AD6F3AB606568103
07438E8FAF3A4CAFE049CEC37CFC0D129558836EB29BAD9910620FD6A910DD25
60548D329CF75ADF62FFD4B731B4D7F091AA16E97BF226FE5DA8F021435DAD04
5EE8D78A7322F9825E3BEC38ACB5AEF937C8F5581EF0B0CBB7D47C237BD0BAE7
1DB64E6D3BB827A4A8CEE5DA2F2221263BAB5D9C789E141FB443493419931512
96444EC94D607CB05B9712B0B5528C7B3AD3BAE29C16B63EC9E7851010A9C2FF
ADDE9DA3CB409DCCFC0B67764E0BC2598B48FA357F3E2F8A4A562EAD31DF5042
B09DAAA75B51ABE250066ADB72D466FAF81EB2FFD9C0F5AE6DC54B3C3841C668
5A9FE172081957C48AD83D063135EA39EF3D4220CBF0BEB0362E9913D4EC78F6
F96BE891FF7C304C1D16A1086C909E1110DE5AEDB3FED0EBB1B776E746EBF6D1
5AD6E3E67107D74BFBD22C84ADEE0955F8914E2AFD0C1FF0B593AB3F018D79B8
5DCDCD1B3B191FCA9A44F788A03A32EB0556D8725482316C9542CE4F706D7196
1D7214526C137D384CC9F3CCA552352C2368C83F7D7BBDFA8294B7DB931E26BD
9D6F178338BF724CCDF5FC872C6E7D5802AC907CEB2F626498CF077C575DE7FE
C126D5D835ADEEDCE0153569FDAFABAC5A75D08AE4869683C58F8DDECCA43A68
2222B5C08D8E51441B16B000CC42557B46198289110C51600C8362FCA1C5ED38
DC3C11E105A71BC92608ACD3F0176AA30C4AB7DF3DE41BC562D1D31D955EB2E2
B9243B20E72E9EEEE2DEAE4A2F8F22B729CC145B5ACEA87C85682F186A9837A4
61BDC102F34176A34EF2B794A983CAC2C3E44A218EC78EEB3A6D3DBC57F61F0F
B5F9404C449136DA830722B1265B8086A6AC80630CEC246D25ADB7D0B17A5029
96058004EC3C6B300EE101CCA3AF6B50BC4222518B9254DA884951D53BA67708
179279171640F94D9316782BF4A04D30E0B2301D859455CCA6BBF6763AD27F1C
FA07C93B220CD877AEA7BD7C425043F95441CE27A25EF799CBF85511C70BCF4A
71EFD2D13533794AA4A760467857D13A8DB0DBD7E52D27880A7DBC8C085E69A3
DB0C81740531490BD4688F9317752A4621504FA79A37C129FB5CF9AF8BE53FAD
EFC010A2ED2A70D59E62E7FCA67EAD9F16DFAF8E1FFAF6A96A6E0DFD2A6F6C27
5BF975A0C1558E3A9FB4910A60B4FB44BAD5C663D46FAD99E94F426329A2EACA
F81194B17636D4D0ADE73BBCDA0438CD9CC41AAE376656E672A1A95E5287FD69
DAE116AB34D2E2DD5855034BBC34D21F3A033337EF14BDF79F040F536EA7D3E9
73ABCAE3C8DE4BF481C7E47A004E6A35B8335BE86E4002A43D6458931A15B951
6242FC26521C8CC4F5FF089CC9EEEDF90AA0118C56ED2BBC91D428AFA4011888
38DAFC13F0DA11D7EA37B9D35F74616FF94F07F93C4B2724468BCFEDFC0353B9
6E1D89D303A8CCEBBD6F928A01A7DC0CC0868D753946175BB87E6191CD9F19F8
362533A410ED3919988EC121BB44CC2B0E13994437492C98A3CF27996D480E79
539BFC14A88807995A4CC2283E823054E55C85D19AC30A79EE7FD0E10CDA549C
B317BB85CA5F2402F1AA11C7A1C9FE3B4B8B6EDDC3F6B4F4CC3CA72207AC9FD2
5ABA78F56FF7A67EB59B696657989B298CBDE05D5E5F5D758E24FD4489D02D79
CD5F520BA9D435446B06C2753678A0DEB93FE0FBBA8CBE23E8728E9903713278
B6A7DEDB5AC440A643D82CBE7BACAD8635523F81D059BCB39B73D7F8C0F31CB6
7F3E86A2F10BEDE57CEF3403FE1911D56AB30B7AD2A51C5D5EBD714260F23EDD
80D68460BD9004966F182A12CAD84B794EC803C500EDC98392D0E0211BD028CD
BDFE547A6728F3595F0A6C1BBA621F4491425BAA638CC3D2529D2249D1AAAF31
F163FB6DF3AC49483D2CDF14A81F8D0F224B8732C98CFAF61F3B1A7EAF375A96
68F975230AA4F2FF7FB799510D6E9150659AE29D85326589263F3F1DCAD1056B
4B681E37F8B2DD491ED41FDF03F8ACD4F1106FD973C2D52D26ED3BDAC6CA69F6
205088F9FCF65EB2F3A5EEE2A2445C3CED57942A63715ED779DBC81DCCBA8842
3AC0E87C7188927B7BB4148BBC526B6534448437504ECC9599E7878CF3793358
6B353C247C4469113C58AF03E22A1164AD2ADC6CC96DCAF145E7CEF9961341A3
DCF40818507B42168280964608EC7BB6ED827A50C5643F8B8DB81C09E43FDA90
EB634930108A632E8EAEBEFCBBE3CB5D6A5CDCB03920D006975465AA6E25094C
A1A71C1E406894D429073AE550FE6C9FD0152C91E71DFA448735A643C2F0592D
E2B8175F8A17D6B67E349469A1B01F8C20A253407F32EF485851B0B21248F10B
1692E977E0A3DEBEB0D52DF4160BB2F84CC8589E685B3B1C11594E8E1BCA2062
250974FCF0573028C97946D2C74A23AA90DDF33A48FDCB9951ADA703AFB0525F
2D5C56CC6CA7138EF69530577DAAD7CA1E5E79A813747B77957384C623AAD325
2F763D038738BBD82296500DCEAA1C4FEE2206F8DD80C9FE96A2AF40F7697747
E309D27F6BCDEA922B22BBD938B37A7BC569514F97320B8017A6B2522396C1F9
E37927BC6A2554B3B1CB521B2FE3A71C55720C30D6E4B4A5501B01ED8DEFA1D2
5939F507886A777AAEF2A46D067A5B6C753832FD542793885B90FCDD9D2B7C49
51E14FE5907A9F94506276168601294998DC14C5D8968AEBA04ADDD6F44C2CE9
7884385A3D08D42A2142B04764FAB9085A0245DC2308E197E91887BECC136458
D739373BBEA19B27F214F2CBB5D9240A55A6AFEAEFCCC89489849B43A166BE1D
A88E65B23E35660239EEB54B671533BA51A26D2F945C944BA816B49DD80A71C5
0E8BDF7E5D8D5E7429DBAA895DDE5EBD5A1DF1AFCAD313952C981381052C5A3A
7C88E083339B756FE8574672047AFC139AC33632C2E20872391B48B5D42BBDC8
1E0B4948FEAD217DE58D4465901D2CF1357B9AD78B03425764047527B076DC40
39E450E35C9C622A7C5335AC5B9A850730362C59EE410369E44365C1780E4474
06DA02F1E3E17115BB93EC677B8F033F063A6B402119257A4D724C3E44EC3E08
AE557946DA4336BEDC0C1BA73DC37893B0488656593981F141E28502A60523FE
1DD16E99FBA74CA2AF124F3762D516D4B7F3A7705988F75D6CB2587CDD9B3658
91E95C6A2A5DA183546A9C45630B1FE0A18DDD5547B14975B5DC9BD0A7B86BDB
65F9B1A76AFDF00405BE16EE632FCC658F3A2752570E333863209F9FC9D8359B
93F36D61B84E27AAEAD611E4AE2B5F7AD7AE00F04F2B26994DF052397E70B910
98FA10F5C6346E225A808DF0E85BB2734FB520AD1A0C945BC25C17ADB98A0977
A57B0B4B39C00369CA1CC8F0696F8652567EB99F1591CA7507BB492A456DB4F5
175FE73B55BAEC00793E2F10B5C44B33B0086BA5BC4B9BCF9009958314BD8A9D
82935B03AE78051A0D5618CFEE1CC0058EFA5F340AFF3C1898F8AF49CE8673BA
8F24058176417D6F5A98EE195E7A08E0AFF997DC3772ADE8F49E13BC04A7DA47
EC322EA1B69A32E0F17B661CBC30876DB7A0335D9E1CE040E02E585C8C0B0214
C67E6CCDB657CD73186683A12C7BE2E662722DAC7776F2D172F8F58FF9A67DAE
510DC749B804830FF20C6BC725EBE738096A2A0C69C9F683F1157D62D3BC1776
C156BDB0EA8987D7A8470A2E10203C3291E0C76F72BD91747DA6F9489F8C6827
DA36199C0C29319B7D91CFCC25DF5A930DF291AA1FB7FDAA8DC6EF8FF153245E
D1CB071B2EB7DE04BC393D461A68423D70F387285B5C8C2B9EAFE219412A7610
F5329F0D16A3926F85AFC9056E6644E3AE2099FD0C85889B7791EED61838FDDC
410ED654D2103D700A97B6DB8567C9A1D8355E71B79D6FF2581EE114302A9DB3
B4027BEB3DD7EC500FC320910583F7CBFF6D2872ADD9808C4FA5D6FF8920A170
0277DE3E9AB426CD4EAE24271D5A1F24F5434A0E87CB5A8885B733F0400B505C
4367AEEA4CD56A5E26B8A27B75FD427ED50496CAD0F5DC3509B23EB25AAF267D
152F24F82FD55E19A72B3C14252DA241016BD1BACCC063D11C1A49048D5BC71F
6916D498F94769CA5824E3272B4A00EF36BF99206CE03861E30EE1F38CB92841
216E0945418631B4921C0DEDCFA708B4CE39A006146FE8B8AA5BC647CC513960
8F4AA44FF207972F285908A09516B2758E7661AADA871F686E1803B4973AC22F
E831A3FDE2933D845D28014CD6459A176EA69D887B0E80FE9C5BD9954F672F49
0D86B0040D20AD76E02437623424A79F8458BBDE91A0DF97D7E9C7B25D7A73F5
AB525E161B808EC234C22F33FE724C33B525CF2D24DA5272003F19365F2683CE
690DCE39D3EE7196ABCFE7B56818F42BFA4642695F8F7A8EEED7805E22479945
0B97C9F9B738F291F0F57A3E333505F3717A626524571F35CFA4240FD2C2A98C
F156EBCB4A1098597DEEA51A827ACAD6D447BD20237AB10B868D400EBF6D74FA
9E21DC7551D6FCFC836DB1D3B85205549BD5914FB80AAA0B8F4FDEE650087E32
27FEAF7415F2535BC905FB78E55B82A997ECFC118676E5D59BB8CCF3C337C21C
78F4E77D39D442D03E82B4E0B73EB1A175410987A74D5B47A1BE0E010343EBF1
D6746EB102F5CD9BC0917D32BC88FD371C9655278BCBCEBC90F6247C42C8F58D
A3F10A29C5BEB25C609C6F9B72DC28F4E0EE16FA71A14A43E67DB798C901AEEA
9A8C53F28406208808087B443D822E3F70393C2A61CC4411FC3D7965DE23BFAE
4B16CAF88FF53ECB9A56785D012C2A7DB9E2247FB181B0AB6C8314DDA52350EC
EE97D08F8BCA3C2449B8458101CA957391BDA243D325C2A1DD614F3575F2B3F8
85772DE9A4C19C2416D1B1719C82D5BF1ABFD0762A1853D6541C3F49A642695A
BD4DE29BD77D5C1ABC23B848E7A27AFB79C3268D74E5CC0DA811E3BC4FDDD33E
0216AD0D2C533FD47C32C964C4190DF512B07F4F5D4017DC34E13CE61636D6B8
E707C9A415CE299A1EB59728E302E87FA8F6F25586A4993448CE51DA9ADE50FC
C6194F64CFF00E7E7D11967296C8722990C9C4F7F84DE98B2910826AECB7A01D
B69BE1DAF34116657F36683B66F18B83AA9B2DC3083DABE3FCD3FEDFE5B2F6C0
422D35D2291BD08F8A662B9CE35A7F06CF98BE4350F24A479F821A02B4825DCA
9DBEAD98561764E9CBFBC5BD7F7E9257170EAB8BFC5CC2F4D827BDB2C4AFC938
2D8B1F6BE94CED8D6F8975373B97FB81DC7D33B8D160652A255266F5E3A1EC16
A2FEABB434DCBE48A4FF1B9FF54F9181869E31318AFF2BC17EA64917D0B5999B
5C1617541FE9EB3A99966C22A581A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209608D3976637A
DB9C73EB3A28623DF758C25574D740385B2C3D10086AEB904A33DD76DA2CC4BF
7E37F9117E9D81D3EFDA12D5BDF0067450C5A8A53959C055C5D6087F1FE6FB5D
8306F16FAD71AB986320F1229440C63ACB5FA24E41CFEB12C2BEA2C25E59A3F9
6CA5B7A04B57F2471D36F5B41E6363DCEFF2DFFE9131F044125884739392333E
15418156EEE8DE92EF4C176742032FE8889839755D8D821CD7F8FAAF8A22C283
19F79216C6D454A864898EE9F830DB5F3372B8F47C464DF19C69ACB3BC0566E2
F25E7FF148B2CDA2B90CB5884440F464CD57295728A4415963CC1BC0635BBEF4
E812CA5E0E788035873D05616F7B0F6A30D36BB285E7955CFD860345F16D952A
BF2F7D2702DB352D0874442B2074859EB49313BC27E1067D627362649D82A5C3
A57DC5041B1A13FD2FA89D875019E23C31650A25CBEEC6B93C575C363FAE2164
76ACBDCDFEFC8B7BD24AF41D55196DF6FB2F28DF88349947B448513C7E832EB9
F35B28EF86C231336351C1F89AA9AB1F8C02D0DC35746E97C2B29B7A44CF7418
89DAE02563F58C453F45C231219FC9727D5D477B256530D4492AE7E4E3CBA90F
50E8BAF9435EBFDF819DA9EE1F6F67A0D65D35E3D0EF63274B611B25756461D2
BFEEF8BFD513B0380993B8D52A6546D69773D67A15C059E6A89CAA2772162509
3B054860006DEA20685F5E2937C95B50D07C6316ABC08495EF319B36F8E48FD0
DA482F82D2D981C70ADA2E467608364EC664D151BCE2FDF571BA63FC926CCD72
052D4F83933A9585C0E033CE579227FB5BE2D58E048044B5BB6869ADFC2E03C7
AC062D709CC07D8E4377D75506A96CEC17A90E1FBEF6E3778DE10A910F346C4E
D33D753F6EC32D638BBDACC51CF22379D24C2A0780333AB3CB5A612C14381B3F
B7E42E841B123CBBBA6C33C080F9C6D370A91F29A4CA724B9809042BE9B2EDEA
366C4D17F80C7923C9DFEB1C184DA0C0396BB3AE8446D1FDD7C76397076DDEAF
4FB188394902EAC1B9126016723FBAAD27AD91C44C28F1D579989D8C3B5D6AD1
1647504F2F6C38F1786DB3C9DE2BD6CA02D74451FDF6161DCD51706D62B383E1
A1E9F0D97F9579FFDC844710C4D9EEBC5F048B0811B8F3BF2BBA45C9A57E7B27
48BD0F25113B884DA2D1596E14FCC7FE2B528806F4D61BB6A6D34E85AFF5193F
7B396AE95ECAD67587C51633CB0F12327BB56E36C5E7EFF9437D80C2B337A480
3EAD6F51E3475A8638B233545B633EABEA2EA89D7CD3A073FD32A1C5DFEE4ED7
402DCC2E2CC4AC399619B272A5456E735F1044685EF0EC8BA6C242D5A029204C
6E32D78226FC39E9222F7AD77F162827808F98CEB740B798BAAA7BB865A33D74
7F9BA33CFF09800B9AA6510B69D56879E622C0DA900ACDC80ABF49DA8FF037C1
10E4895F9E7F4B8246CBD2FD28AC913D3B0147C581341EA56830AF49D0B7687E
80D121A40423228D29D5F22A9F22913FBA87B15F41432F959BEED884DB1C93B6
7DE4552BBFFE84C9E2360683DCB43C0E681F0945108743BB6575CB7309C24A67
2425339DD052C60EC1078B0A616A27ABEE7E2497AF4828C7BDB575A58B6030FC
0E85DE84DC7582B90A52A3B92603D9E4B7783927AA86E4852AD73A6778EEDCC3
247CBB6E1BBB86C623C32AE9423CFE9CF0B18120586C175EBC48D9316EA60EB1
A5E3FEC32F161EDCF932F4AF7AA246C3BFE8FF0D713C6DEB68D4C6E4CC875527
05C9DD26AA09E678D71CAE88708E18524FE4BBFF93985D4914C4130240161786
3EA170867A7B84C2AF727C6395F693149205B4B08CF2FFECAF913AADF8E8FEEE
009D99E3CDD6E87EDD3650E37BED4BAB4FC0E7D6492BCBCC5B7BE50E721FCAE9
AD4184AC780A88FDE9227023DBC0D60D47A1307331CDE967B5384758D67D68AC
DFE77637CED76810EEBDBFF5BE7B3E72DDDE5EDAFC0C112D9DC105949B9AF343
F60AC374F17A4C35B1BAC99AF1E897F4E0931B574B69348D42329BA8486541D9
8977C18C5919612C1194CC0DBAD03A2514456D0A9B60E0850B082B1E3EAD85F5
F7F7A0E88EE7C3A54718759E4791CD9E8E0F659CF2223314F0D423151ADA8AB0
A37AC3679F0B449A6B891111F80B5F656F1B639BA1733E612F2BC61EB2FC561D
7F570755DA4BC31BDB57069853A329F96DB79B0BC62EC34CDDDE440F89F72B5A
01084E5E358380A85E0DD49CE5EB0D2D854B7A5808CDFD7D0D6EE65BFAA92397
537A2A18D8D9062206FA378BACF63A2AB05E06803F242F7F0D44B7D9ED0E8B7D
0E38326A92527306BFE035911B407F4E52A3C036BB4BE3F3ADB9381AA6A9148B
BE42436D9C6BB6367C54B5B8723F6D6A313FB1C020C34A3DA5200227E2EEDEDF
50E0EA92CD11E476448AEAFAE287D1AB2FCB2288515A49A7AA6C177E404E094F
4FBADD50A28D9EC02BA53198A90DFA1B0A32540587368812EE69E5CE2A3DE4DA
7EE49D0124C490096FFECBE1C84E657C31CAF3F935AA5568833661EDCF12D007
8EA634F61DF6FCDD443EA994B595F6D273BEEE694BAF1B63BE00D2815DF3B09A
51650B9103C36B83967C7D53A1B272CD0221BC568868B41827EC6104520C4EAC
5C52FA8D40709369FB0B16C6671F636F0B7F0136E077665F380A81FB02EFAED1
69BCDCA9B8B18883475AC4CE73455A5892E90D0FA359B778A55BD835DCEE1082
880E07028E61A7217C1CF8349AAD2B2BCF68C59E74DFA32AAA40824BC9478FB6
B30E20BEE58CA400C9E8F89E875D6B2B358A6C916BE058F33D363537E1243FF3
11F1BDB339D9413911FABEFDDA7CA25C7B769360B335953B1186EE2430243F1B
511B6B1F4016A98F4E56E58F7F0F6B945C59AE0FFA3706A4BC08B9905BB78E70
0DDA17F6BC111D17A1883E5F47846B37075745C761F5CB638C7871B2ACD35FDB
004738456B5FEF221F047117E1102EDA7714040C1A1C489F09D31F312438414A
87BB04D6149166DA0C8718D00C3D7C9B8BBF0CB99DDB32C4B1F7F62F2D9D97EA
A248CF577B9A47EE40028B51D637AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (manuscript_v15.dvi)
@start /Fa 136[81 1[62 44 44 46 1[62 56 62 93 31 59 1[31
1[56 1[51 62 50 62 54 7[85 1[116 85 86 78 62 84 84 77
84 88 106 67 88 1[42 88 1[70 74 86 81 80 85 1[53 4[31
56 56 56 56 56 56 56 56 56 56 6[44 44 31 39[{}55 99.6264
/CMBX12 rf /Fb 206[42 49[{}1 83.022 /CMR10 rf /Fc 156[30
99[{}1 58.1154 /CMMI7 rf /Fd 222[83 32[65{}2 83.022 /CMSY10
rf /Fe 133[39 41 47 3[30 116[{}4 83.022 /CMMI10 rf /Ff
133[54 6[55 4[70 7[58 40[59 27[73 20[66 12[{}7 119.552
/CMMI12 rf /Fg 133[60 71 71 1[71 75 52 53 55 1[75 67
75 112 37 2[37 75 67 41 61 75 60 1[65 10[102 1[94 75
4[105 5[105 4[97 11[67 67 1[67 67 67 67 2[37 45 3[52
52 40[{}37 119.552 /CMBX12 rf /Fh 194[103 12[66 48[{}2
143.462 /CMR17 rf /Fi 133[65 19[69 68[87 33[{}3 143.462
/CMMI12 rf /Fj 206[71 19 14[71 11[55 14[55 5[55{}6 66.4176
/CMSY8 rf /Fk 139[27 28 3[35 39 1[20 2[20 39 35 22 31
13[72 3[39 2[48 6[25 4[54 2[53 3[55 7[35 35 35 35 35
35 4[55 1[27 27 40[{}26 66.4176 /CMR8 rf /Fl 140[100
2[100 6[47 47 15[144 6[94 7[55 39[79 79 10[53 53 73 73
5[33 8[42 42 46 46{}18 99.6264 /CMEX10 rf /Fm 134[32
35 3[24 29 4[38 10[28 37[32 1[19 19[40 39[{}9 49.8132
/CMMI6 rf /Fn 249[48 5[48{}2 49.8132 /CMSY6 rf /Fo 204[30
30 30 5[47 1[24 24 40[{}6 49.8132 /CMR6 rf /Fp 133[33
35 40 1[34 41 25 33 32 32 36 34 43 62 1[37 1[24 2[34
1[36 31 15[43 3[54 4[39 1[58 5[53 3[55 35 1[20 19[46
5[44 12[41 7[40 12[{}30 66.4176 /CMMI8 rf /Fq 143[83
5[28 39 39 2[44 1[44 18[69 7[84 4[52 12[0 4[100 15[100
7[77 77 2[77 77 2[77 10[77 5[77{}19 99.6264 /CMSY10 rf
/Fr 133[45 48 55 70 47 1[35 46 44 43 49 1[58 85 1[51
1[33 56 47 48 45 51 42 41 51 6[67 3[57 1[57 60 2[63 75
2[66 83 54 1[81 77 63 1[81 70 74 73 51 1[76 49 76 27
27 18[64 5[61 7[55 2[59 57 56 1[45 2[39 1[51 55 12[{}54
99.6264 /CMMI12 rf /Fs 133[40 47 2[45 52 32 40 41 1[50
50 55 80 25 45 1[30 50 45 30 45 50 45 45 50 9[97 72 2[55
71 1[66 2[87 61 1[51 38 1[75 1[66 1[70 1[72 6[30 11[30
35 30 31[55 60 11[{}41 99.6264 /CMTI12 rf /Ft 133[72
1[85 2[90 63 64 66 85 90 81 90 134 45 2[45 90 81 49 74
90 72 90 78 12[112 1[120 1[110 2[153 3[60 2[101 106 124
9[45 81 81 81 81 81 81 81 81 81 3[54 3[63 63 27[90 12[{}43
143.462 /CMBX12 rf /Fu 128[49 49 1[98 49 43 51 51 70
51 54 38 38 38 51 54 49 54 81 27 51 30 27 54 49 30 43
54 43 54 49 27 1[49 27 49 27 60 73 1[100 73 73 70 54
72 1[66 76 73 89 61 76 50 35 73 77 64 66 75 70 69 73
3[76 1[27 27 49 49 49 49 49 49 49 49 49 49 49 27 33 27
76 1[38 38 27 4[49 11[49 7[81 54 54 57 9[81 1[{}87 99.6264
/CMR12 rf /Fv 134[48 48 66 48 51 35 36 36 48 51 45 51
76 25 48 28 25 51 45 28 40 51 40 51 45 9[93 10[57 3[68
25[25 30 25 2[35 35 28[53 11[{}34 90.9091 /CMR10 rf /Fw
139[41 41 43 14[46 58 51 31[79 65[{}7 90.9091 /CMBX10
rf /Fx 133[53 53 53 12[60 1[46 46 49[0 54[{}7 119.552
/CMSY10 rf /Fy 133[52 62 1[85 62 65 46 46 46 1[65 59
65 98 33 62 1[33 65 59 36 52 65 52 65 59 6[72 2[120 88
88 85 65 86 91 80 91 88 107 73 91 60 1[88 92 1[80 89
85 83 88 3[91 4[59 1[59 59 59 59 59 59 59 1[33 1[33 44[{}56
119.552 /CMR12 rf /Fz 134[83 1[115 83 88 61 62 61 1[88
79 88 1[43 83 47 43 1[79 47 70 88 70 88 79 31[119 6[43
4[79 3[79 3[52 45[{}26 172.188 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 122 502 a Fz(A)52 b(self-in)l(teracting)f
(partially)i(directed)e(w)l(alk)h(sub)9 b(ject)53 b(to)e(a)1384
710 y(force:)70 b(v)l(ersion)52 b(15)781 1006 y Fy(R.)39
b(Brak)p Fx(y)p Fy(,)e(P)-10 b(.)39 b(Dyk)m(e)p Fx(z)p
Fy(,)f(J.)h(Lee)p Fx(z)p Fy(,)g(A.L.)f(Ow)m(czarek)p
Fx(y)p Fy(,)587 1155 y(T.)g(Prellb)s(erg)p Fx(x)p Fy(,)e(A.)j(Rec)m
(hnitzer)p Fx(k)e Fy(and)i(S.G.)f(Whittington)p Fx(z)816
1304 y(y)p Fy(Departmen)m(t)f(of)i(Mathematics)d(and)j(Statistics,)1192
1454 y(The)g(Univ)m(ersit)m(y)d(of)i(Melb)s(ourne,)1073
1603 y(P)m(arkville,)d(Victoria)h(3010,)g(Australia)1254
1753 y Fx(z)p Fy(Departmen)m(t)h(of)h(Chemistry)-10 b(,)1384
1902 y(Univ)m(ersit)m(y)36 b(of)i(T)-10 b(oron)m(to,)1228
2052 y(T)g(oron)m(to,)36 b(Canada,)h(M5S)h(3H6.)1091
2201 y Fx(x)p Fy(Sc)m(ho)s(ol)g(of)g(Mathematical)d(Sciences)1060
2351 y(Queen)k(Mary)-10 b(,)38 b(Univ)m(ersit)m(y)e(of)i(London)976
2500 y(Mile)h(End)f(Road,)g(London)g(E1)h(4NS,)e(UK.)1181
2649 y Fx(k)p Fy(Departmen)m(t)g(of)h(Mathematics,)1145
2799 y(Univ)m(ersit)m(y)f(of)h(British)f(Colum)m(bia,)1155
2948 y(V)-10 b(ancouv)m(er,)37 b(Canada,)g(V6K)h(1ZT.)1609
3182 y(July)h(11,)e(2008)1750 3549 y Fw(Abstract)380
3718 y Fv(W)-8 b(e)37 b(consider)f(a)g(directed)g(w)m(alk)g(mo)s(del)g
(of)g(a)g(homop)s(olymer)f(\(in)h(t)m(w)m(o)h(dimensions\))e(whic)m(h)
244 3831 y(is)e(self-in)m(teracting)i(and)e(can)g(undergo)g(a)g
(collapse)h(transition,)h(sub)5 b(ject)33 b(to)g(an)g(applied)g
(tensile)244 3944 y(force.)46 b(W)-8 b(e)33 b(review)g(and)e(in)m
(terpret)i(all)g(the)f(results)g(already)g(in)g(the)g(literature)h
(concerning)g(the)244 4056 y(case)26 b(where)g(this)f(force)h(is)g(in)f
(the)h(preferred)e(direction)i(of)g(the)g(w)m(alk.)39
b(W)-8 b(e)27 b(consider)f(the)f(force)h(ex-)244 4169
y(tension)g(curv)m(es)g(at)h(di\013eren)m(t)g(temp)s(eratures)f(as)g(w)
m(ell)h(as)f(the)h(critical-force)i(temp)s(erature)c(curv)m(e.)244
4282 y(W)-8 b(e)38 b(demonstrate)f(that)h(this)e(mo)s(del)h(can)g(b)s
(e)f(analysed)h(rigorously)g(for)g(all)g(k)m(ey)h(quan)m(tities)g(of)
244 4395 y(in)m(terest)29 b(ev)m(en)g(when)e(there)h(ma)m(y)g(not)h(b)s
(e)e(explicit)i(expressions)f(for)g(these)g(quan)m(tities)h(a)m(v)-5
b(ailable.)244 4508 y(W)d(e)36 b(sho)m(w)e(whic)m(h)g(of)h(the)g(tec)m
(hniques)g(a)m(v)-5 b(ailable)37 b(can)e(b)s(e)f(extended)g(to)i(the)f
(full)f(mo)s(del,)i(where)244 4621 y(the)i(force)h(has)f(comp)s(onen)m
(ts)g(in)g(the)h(preferred)d(direction)j(and)f(the)g(direction)h(p)s
(erp)s(endicular)244 4734 y(to)c(this.)54 b(Whilst)36
b(the)f(solution)g(of)g(the)g(generating)h(function)f(is)f(a)m(v)-5
b(ailable,)39 b(its)c(analysis)g(is)g(far)244 4847 y(more)j
(complicated)h(and)e(not)g(all)i(the)e(rigorous)h(tec)m(hniques)g(are)g
(a)m(v)-5 b(ailable.)64 b(Ho)m(w)m(ev)m(er,)42 b(man)m(y)244
4960 y(results)e(can)g(b)s(e)f(extracted)j(including)d(the)h(lo)s
(cation)i(of)e(the)g(critical)i(p)s(oin)m(t)e(whic)m(h)g(giv)m(es)h
(the)244 5073 y(general)f(critical-force)h(temp)s(erature)d(curv)m(e.)
66 b(Lastly)40 b(w)m(e)f(generalise)h(the)f(mo)s(del)f(to)i(a)f(three-)
244 5186 y(dimensional)27 b(analogue)h(and)e(sho)m(w)g(that)i(sev)m
(eral)g(k)m(ey)f(prop)s(erties)f(can)h(b)s(e)f(analysed)h(if)g(the)f
(force)244 5298 y(is)k(restricted)h(to)g(the)g(plane)f(of)h(preferred)e
(directions.)1926 5682 y Fu(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 100 a Ft(1)161 b(In)l(tro)t(duction)0
319 y Fu(The)40 b(dev)m(elopmen)m(t)i(of)d(atomic)h(force)g(microscop)m
(y)h(and)e(optical)h(t)m(w)m(eezers)i(has)e(allo)m(w)m(ed)h(exp)s
(erimen-)0 439 y(talists)34 b(to)f(micro-manipulate)h(individual)g(p)s
(olymer)g(molecules)h(\()p Fs(e)-5 b(g)42 b Fu(Bemis)34
b Fs(et)i(al)43 b Fu(1999,)32 b(Haupt)i Fs(et)h(al)0
559 y Fu(2002,)27 b(Gunari)g Fs(et)k(al)37 b Fu(2007\),)27
b(and)h(this)f(has)h(led)g(to)f(a)g(considerable)i(b)s(o)s(dy)e(of)g
(theoretical)h(w)m(ork)g(describ-)0 680 y(ing)i(the)g(resp)s(onse)h(of)
e(a)h(p)s(olymer)g(to)g(an)f(applied)i(force)f(\()p Fs(e)-5
b(g)38 b Fu(Halp)s(erin)30 b(and)g(Zh)m(ulina)g(1991,)f(Co)s(ok)m(e)i
(and)0 800 y(Williams)d(2003,)g(Rosa)f Fs(et)j(al)38
b Fu(2003\).)i(Sev)m(eral)29 b(situations)f(ha)m(v)m(e)h(b)s(een)f(in)m
(v)m(estigated,)j(including)d(pulling)0 921 y(a)g(p)s(olymer)h(o\013)f
(a)g(surface)h(at)f(whic)m(h)i(it)e(is)h(adsorb)s(ed,)h(pulling)f(a)f
(p)s(olymer)h(from)f(a)g(preferred)h(solv)m(en)m(t)h(to)0
1041 y(a)35 b(less)h(preferred)g(solv)m(en)m(t,)i(pulling)e(a)f(cop)s
(olymer)h(whic)m(h)g(is)g(lo)s(calized)g(at)f(an)g(in)m(terface)h(b)s
(et)m(w)m(een)h(t)m(w)m(o)0 1161 y(immiscible)32 b(liquids,)g(and)e
(pulling)h(a)f(collapsed)h(p)s(olymer)f(\(in)g(a)g(p)s(o)s(or)f(solv)m
(en)m(t\))j(to)d(an)h(extended)i(form.)0 1282 y(In)h(this)g(pap)s(er)g
(w)m(e)g(shall)h(b)s(e)e(concerned)j(with)e(the)g(latter)f(problem.)146
1402 y(The)40 b(stress-strain)h(curv)m(e)f(of)f(a)f(linear)i(p)s
(olymer)f(in)h(a)e(p)s(o)s(or)g(solv)m(en)m(t,)43 b(b)s(eing)c(pulled)h
(in)f(an)g(AFM)0 1522 y(exp)s(erimen)m(t,)45 b(has)c(b)s(een)g
(measured)h(b)m(y)f(sev)m(eral)h(groups)f(\(Haupt)g Fs(et)h(al)50
b Fu(2002,)42 b(Gunari)e Fs(et)i(al)51 b Fu(2007\).)0
1643 y(The)31 b(force-extension)g(curv)m(e)g(sho)m(ws)g(a)e(c)m
(haracteristic)j(plateau.)43 b(F)-8 b(or)28 b(forces)j(b)s(elo)m(w)f
(this)g(critical)h(v)-5 b(alue)0 1763 y(the)29 b(p)s(olymer)h(will)g(b)
s(e)f(in)g(a)g(collapsed)h(state,)g(while)g(for)e(forces)i(ab)s(o)m(v)m
(e)g(the)f(critical)g(v)-5 b(alue)30 b(the)f(p)s(olymer)0
1884 y(will)35 b(b)s(e)f(stretc)m(hed.)51 b(The)35 b(plateau)g(region)f
(w)m(ould)h(seem)h(to)e(indicate)h(a)f(\014rst-order)g(phase)h
(transition.)0 2004 y(Indeed)d(Grassb)s(erger)e(and)h(Hsu)g(\(2002\))e
(ha)m(v)m(e)j(studied)f(self-a)m(v)m(oiding)h(w)m(alks)g(with)f
(nearest-neigh)m(b)s(our)0 2124 y(attraction)i(and)h(an)g(applied)g
(force)g(at)f(lo)m(w)h(temp)s(eratures)h(\(p)s(o)s(or)e(solv)m(en)m
(ts\):)48 b(they)34 b(predicted)i(a)d(\014rst-)0 2245
y(order)38 b(phase)h(transition)f(in)g(three)h(dimensions.)61
b(On)38 b(the)h(other)f(hand,)h(they)g(see)g(no)f(sign)g(of)g(a)f
(\014rst)0 2365 y(order)c(transition)g(in)f(t)m(w)m(o)i(dimensions.)146
2486 y(A)f(w)m(ell-studied)i(exactly)f(solv)m(ed)h(mo)s(del)e(of)f(p)s
(o)s(or)g(solv)m(en)m(t)j(p)s(olymers)f(is)f(the)h(self-in)m(teracting)
g(par-)0 2606 y(tially)e(directed)h(self-a)m(v)m(oiding)g(w)m(alk)g(mo)
s(del)f(\(IPDSA)-11 b(W\).)33 b(W)-8 b(e)32 b(b)s(egin)g(our)g
(discussion)i(b)m(y)e(noting)g(that)0 2726 y(a)d(partially)i(directed)g
(self-a)m(v)m(oiding)g(w)m(alk)f(on)g(the)g(square)h(lattice)f(without)
h(self-in)m(teraction)f(is)h(in)m(trin-)0 2847 y(sically)h(anisotropic)
e(with)h(a)f(preferred)i(direction)f(so)f(that)g(the)h(p)s(olymer's)h
(size)f(scales)h(prop)s(ortionally)0 2967 y(to)d(its)g(length,)i(and)e
(one)g(p)s(erp)s(endicular)i(to)d(this)i(so)f(that)g(the)h(p)s
(olymer's)g(size)g(in)g(this)f(direction)h(scales)0 3087
y(sub-linearly)-8 b(.)45 b(As)32 b(w)m(e)i(shall)e(consider)i(the)f
(square)g(lattice)g(with)g(the)f(p)s(olymer)h(orien)m(ted)h(one)e(w)m
(a)m(y)-8 b(,)34 b(the)0 3208 y(preferred)27 b(direction)g(will)g(b)s
(e)g(the)f Fs(horizontal)36 b Fu(direction)27 b(and)f(the)h(other)f
(direction)h(will)g(b)s(e)g(the)f Fs(vertic)-5 b(al)0
3328 y Fu(direction.)146 3449 y(In)37 b(the)g(absence)h(of)e(an)g
(applied)h(force)g(the)f(critical)h(p)s(oin)m(t)g(of)f(this)g(mo)s(del)
h(w)m(as)g(found)g(b)m(y)g(Binder)0 3569 y Fs(et)43 b(al)52
b Fu(\(1990\),)42 b(and)g(is)g(exp)s(ected)h(to)f(mo)s(del)f(the)h(p)s
(olymer)h(collapse)f(transition)g(\(or)f Fr(\022)s Fu(-p)s(oin)m(t\).)
70 b(The)0 3689 y(exact)33 b(solution)f(of)g(the)g(generating)g
(function)g(w)m(as)h(found)f(b)m(y)h(Brak)f Fs(et)j(al)42
b Fu(\(1992\))30 b(and)i(its)h(singularit)m(y)0 3810
y(structure)h(rigorously)f(elucidated.)46 b(Prellb)s(erg)34
b Fs(et)h(al)43 b Fu(\(1993\))32 b(used)i(recurrence)g(relations)g(to)e
(generate)0 3930 y(v)m(ery)25 b(long)f(series)h(to)e(estimate)i(the)f
(exp)s(onen)m(ts)i(and)e(the)g(scaling)g(function)g(for)f(the)h(phase)h
(transition.)41 b(A)0 4051 y(second)31 b(order)f(phase)h(transition)g
(similar)f(to)g(the)g Fr(\022)s Fu(-p)s(oin)m(t)g(w)m(as)h(found.)43
b(The)31 b(tricritical)f(nature)h(of)e(this)0 4171 y(transition)35
b(w)m(as)h(describ)s(ed)g(b)m(y)g(Ow)m(czarek)g Fs(et)h(al)45
b Fu(\(1993\))33 b(based)j(up)s(on)f(small)g(parameter)g(expansions)0
4291 y(and)e(calculations)g(of)f(a)h(related)g(v)m(ersion)h(of)e(the)h
(mo)s(del)g(\(see)h(b)s(elo)m(w\).)146 4412 y(V)-8 b(arious)33
b(calculations)g(w)m(ere)g(made)g(b)m(y)f(Ow)m(czarek)i
Fs(et)h(al)42 b Fu(\(1993\))31 b(that)h(are)g(w)m(orth)g(noting.)43
b(Firstly)0 4532 y(a)32 b(semi-con)m(tin)m(uous)j(v)m(ersion)f(of)e
(the)h(mo)s(del)g(w)m(as)h(solv)m(ed)g(explicit)m(y)h(and)e(sho)m(w)m
(ed)h(the)f(same)g(tricritical)0 4652 y(nature)i(\(iden)m(tical)g(exp)s
(onen)m(ts\))h(as)f(the)f(lattice)h(mo)s(del)g(\(from)f(the)g(small)h
(parameter)g(expansion)h(and)0 4773 y(the)29 b(n)m(umerical)i(w)m(ork)e
(of)g(Prellb)s(erg)h Fs(et)h(al)39 b Fu(\(1993\)\).)i(A)29
b(later)g(calculation)h(b)m(y)f(Prellb)s(erg)h(\(1995\))e(on)h(the)0
4893 y(asymptotics)h(of)d(the)h(generating)h(function)f(of)f(the)i
(lattice)f(mo)s(del)g(of)g(staircase)h(p)s(olygons)f(en)m(umerated)0
5014 y(b)m(y)34 b(p)s(erimeter)g(and)g(area)f(implicitly)h
(demonstrated)h(that)e(the)h(scaling)f(function)h(and)f(the)h(exp)s
(onen)m(ts)0 5134 y(w)m(ere)41 b(also)f(the)g(same)h(as)f(in)g(the)h
(fully)f(discrete)i(mo)s(del:)58 b(the)40 b Fr(q)t Fu(-Bessel)h
(functions)g(in)m(v)m(olv)m(ed)i(are)d(the)0 5254 y(same)32
b(in)g(the)g(t)m(w)m(o)g(lattice)f(mo)s(dels.)44 b(This)33
b(w)m(as)f(made)g(explicit)h(recen)m(tly)g(b)m(y)g(Ow)m(czarek)g(and)e
(Prellb)s(erg)0 5375 y(\(2007\).)40 b(The)28 b(lo)m(w)f(temp)s(erature)
h(scaling)f(of)f(the)h(partition)g(function)g(w)m(as)g(found)g(b)m(y)h
(Ow)m(czarek)g(\(1993\))1926 5682 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 100 a Fu(in)32 b(the)h(semi-con)m(tin)m(uous)h
(mo)s(del,)f(and)f(once)g(again)g(this)h(w)m(as)g(the)f(same)h(as)f
(found)g(b)m(y)h(Prellb)s(erg)g Fs(et)h(al)0 220 y Fu(\(1993\))e(n)m
(umerically)j(for)d(the)h(fully)h(discrete)g(case.)46
b(W)-8 b(e)33 b(argue)g(b)s(elo)m(w)h(that)e(the)i(uniform)f
(asymptotic)0 340 y(expansion)h(giv)m(en)g(b)m(y)f(Ow)m(czarek)i(and)d
(Prellb)s(erg)i(\(2007\))d(implies)j(that)f(they)g(are)g(indeed)h
(similar.)146 461 y(Secondly)-8 b(,)33 b(Ow)m(czarek)f
Fs(et)h(al)40 b Fu(\(1993\))29 b(generalised)j(the)f(fully)f(discrete)i
(mo)s(del)f(to)f(include)i(a)e(param-)0 581 y(eter)41
b(that)f(coun)m(ts)i(the)f(horizon)m(tal)f(span)i(of)d(the)i(w)m(alks.)
69 b(The)41 b(generating)g(function)g(w)m(as)g(found)g(b)m(y)0
702 y(generalising)35 b(the)f(approac)m(h)g(of)g(Brak)g
Fs(et)i(al)44 b Fu(\(1992\))33 b(for)g(the)h(no-force)g(case.)48
b(This)35 b(added)f(parameter)0 822 y(is)h(equiv)-5 b(alen)m(t)37
b(to)d(considering)j(a)d(force)h(applied)h(in)f(the)g(preferred)h
(direction.)51 b(The)35 b(semi-con)m(tin)m(uous)0 942
y(mo)s(del)40 b(also)f(con)m(tained)h(this)g(parameter.)64
b(In)40 b(the)g(semi-con)m(tin)m(uous)h(mo)s(del)f(it)f(w)m(as)i(clear)
e(that)g(this)0 1063 y(parameter)j(did)f(not)g(c)m(hange)h(the)g
(nature)f(of)g(the)g(transition.)70 b(In)41 b(the)h(discrete)g(mo)s
(del)g(it)f(w)m(as)h(also)0 1183 y(implicit)h(that)e(the)h(collapse)h
(transition)f(w)m(as)h(unc)m(hanged)g(b)m(y)g(this)f(parameter)g(\(and)
g(con\014rmed)h(b)m(y)0 1303 y(the)35 b(w)m(ork)h(of)e(Prellb)s(erg)i
(\(1995\)\),)e(and)h(so)g(unc)m(hanged)h(b)m(y)g(suc)m(h)g(an)f
(applied)h(force.)50 b(The)36 b(connection)0 1424 y(to)f(an)h(applied)g
(force)g(w)m(as)g(ho)m(w)m(ev)m(er)i(not)d(made)h(explicit)h(in)f(the)g
(pap)s(er.)53 b(Rosa)35 b Fs(et)j(al)45 b Fu(\(2003\))35
b(studied)0 1544 y(the)40 b(mo)s(del)g(n)m(umerically)i(with)e(the)g
(connection)h(made)f(explicit,)j(and)d(added)h(the)f(consideration)g
(of)0 1665 y(the)27 b(end-to-end)h(distance)g(scaling)g(function)f(for)
f(the)i(discrete)g(mo)s(del,)h(corrob)s(orating)d(the)h(unc)m(hanged)0
1785 y(tricritical)32 b(nature)g(of)g(the)g(transition)g(when)h(an)f
(applied)g(force)g(in)g(the)g(preferred)h(direction)g(is)f(added.)0
1905 y(They)45 b(also)f(plotted)h(the)f(critical)h(force)f(against)g
(temp)s(erature)g(curv)m(e)i(for)d(the)i(discrete)g(and)f(semi-)0
2026 y(con)m(tin)m(uous)31 b(mo)s(dels.)43 b(Again)29
b(the)h(w)m(ork)g(of)f(Ow)m(czarek)i(and)e(Prellb)s(erg)h(\(2007\))e
(mak)m(es)j(this)e(conclusion)0 2146 y(explicit.)146
2267 y(Thirdly)-8 b(,)29 b(in)e(the)g(app)s(endix)h(of)e(Ow)m(czarek)i
Fs(et)i(al)36 b Fu(1993)26 b(a)g(further)h(generalisation)g(of)f(the)h
(mo)s(del)g(w)m(as)0 2387 y(considered)37 b(and)e(the)h(full)f
(generating)h(function)g(of)e(this)i(further)g(generalisation)g(ev)-5
b(aluated)36 b(exactly)-8 b(.)0 2507 y(In)34 b(this)g(generalisation)g
(the)g(parameter)g(for)f(v)m(ertical)i(steps)g(w)m(as)g(replaced)g(b)m
(y)f(t)m(w)m(o)g(parameters:)47 b(one)0 2628 y(for)28
b(steps)h(in)f(the)h(p)s(ositiv)m(e)g(v)m(ertical)h(direction)f(and)f
(one)g(for)g(steps)h(in)g(the)f(negativ)m(e)i(v)m(ertical)f(direction.)
0 2748 y(No)44 b(analysis)g(of)g(this)g(generating)g(function)g(w)m(as)
h(attempted.)77 b(W)-8 b(e)45 b(note)e(that)h(a)f(recen)m(t)i(pap)s(er)
f(b)m(y)0 2868 y(Kumar)28 b(and)f(Giri)g(\(2007\))g(considered)i
(pulling)g(in)e(b)s(oth)h(directions)h(though)e(their)h(fo)s(cus)g(w)m
(as)h(on)e(\014nite)0 2989 y(size)32 b(e\013ects)f(calculated)h(n)m
(umerically)g(rather)f(than)f(thermo)s(dynamic)i(transitions)g(and)e
(exact)h(results.)146 3109 y(In)38 b(this)h(pap)s(er)f(w)m(e)h(mak)m(e)
g(explicit)g(the)f(connection)h(to)f(applying)g(a)g(force)g(in)g(the)g
(v)m(ertical)h(\(non-)0 3230 y(preferred\))c(direction)f(of)f(the)h
(generalisation)h(discussed)h(ab)s(o)m(v)m(e.)47 b(Ho)m(w)m(ev)m(er)36
b(w)m(e)f(go)e(further)h(and)g(solv)m(e)0 3350 y(for)j(the)h
(generating)g(function)h(along)e(the)h(surface)h(in)f(the)g(parameter)g
(space)h(whic)m(h)g(should)g(include)0 3470 y(the)31
b(transition)g(p)s(oin)m(t.)43 b(Hence)31 b(w)m(e)h(\014nd)f(an)f
(explicit)i(expression)h(for)c(the)i(phase)h(transition)e(p)s(oin)m(t)h
(and)0 3591 y(so)e(are)g(able)g(to)g(plot)g(exactly)h(the)f(critical)h
(force)f(against)g(temp)s(erature)g(curv)m(e.)44 b(W)-8
b(e)30 b(also)e(observ)m(e)j(that)0 3711 y(one)j(of)g(the)g
(tricritical)g(exp)s(onen)m(ts)i(is)f(unc)m(hanged)g(when)g(this)f
(non-preferred)h(force)f(is)g(applied.)49 b(This)0 3831
y(indicates,)38 b(though)e(do)s(es)h(not)f(pro)m(v)m(e,)i(that)e(the)g
(transition)h(ma)m(y)g(remain)f(second)h(order)g(ev)m(en)g(in)g(the)0
3952 y(case)29 b(of)f(this)g(t)m(yp)s(e)h(of)f(force.)42
b(This)30 b(is)e(a)g(little)h(unexp)s(ected)h(as)e(the)h(force)f(m)m
(ust)h(c)m(hange)g(the)g(end-to-end)0 4072 y(scaling)k(of)e(the)i(high)
f(temp)s(erature)h(phase)g(when)g(pulling)g(in)f(the)h(v)m(ertical)g
(direction)g(from)f(sub-linear)0 4193 y(to)g(linear,)h(whic)m(h)h(it)f
(do)s(es)g(not)f(when)i(applied)g(in)e(the)h(horizon)m(tal)g
(direction.)146 4313 y(W)-8 b(e)25 b(also)f(deriv)m(e)i(functional)f
(equations)h(for)e(the)g(generating)h(function)g(and)f(sho)m(w)i(ho)m
(w)f(the)f(solution)0 4433 y(of)32 b(this)h(general)g(class)h(of)e
(problem)h(can)g(b)s(e)g(streamlined)h(with)g(this)f(approac)m(h.)146
4554 y(Before)g(w)m(e)g(explain)g(our)f(w)m(ork)h(on)f(the)g(v)m
(ertical)i(pulling)e(problem)h(w)m(e)g(summarise)h(all)e(the)h(kno)m
(wn)0 4674 y(results)i(on)f(the)h(horizonal)f(pulling)g(problem)h
(making)g(explicit)g(the)g(results)g(in)f(terms)h(of)f(the)g(applied)0
4795 y(force.)43 b(Moreo)m(v)m(er,)31 b(w)m(e)g(apply)f(the)g(rigorous)
g(tec)m(hniques)i(of)d(Brak)h Fs(et)i(al)d Fu(\(1992\),)g(whic)m(h)j
(had)d(only)h(b)s(een)0 4915 y(applied)40 b(to)e(the)i(case)f(of)g(no)f
(applied)i(force,)h(to)d(the)i(horizon)m(tal)f(pulling)g(problem.)64
b(In)39 b(addition)g(w)m(e)0 5035 y(discuss)31 b(the)f(b)s(eha)m(viour)
f(of)g(the)g(force-extension)i(curv)m(es)g(based)f(up)s(on)e(the)i
(exact)g(results.)43 b(Essen)m(tially)0 5156 y(w)m(e)23
b(bring)f(together)g(all)f(the)h(kno)m(wn)i(results)f(and)f(extend)h
(them)f(as)g(necessary)i(for)d(the)i(case)f(of)g(horizon)m(tal)0
5276 y(pulling)33 b(of)f(a)h(partially)f(directed)i(p)s(olymer)g(in)f
(t)m(w)m(o)g(dimensions.)146 5396 y(A)m(t)28 b(the)g(end)f(of)g(this)h
(pap)s(er)f(w)m(e)i(consider)f(a)f(three-dimensional)i(analogue)e(of)g
(the)h(mo)s(del)f(and)h(sho)m(w)1926 5682 y(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 100 a Fu(it)33 b(has)g(similar)g(b)s(eha)m
(viour)g(to)g(its)g(t)m(w)m(o-dimensional)h(coun)m(terparts.)0
579 y Ft(2)161 b(Mo)t(del)53 b(and)h(de\014nitions)0
798 y Fu(Consider)44 b(the)f(square)g(lattice)g(and)g(a)f(self-a)m(v)m
(oiding)h(w)m(alk)h(that)e(has)h(one)g(end)g(\014xed)g(at)f(the)h
(origin)0 918 y(on)35 b(that)h(lattice.)52 b(No)m(w)37
b(restrict)f(the)g(con\014gurations)g(considered)h(to)f(self-a)m(v)m
(oiding)g(w)m(alks)h(suc)m(h)g(that)0 1038 y(starting)42
b(at)g(the)g(origin)g(only)g(steps)i(in)e(the)g(\(1)p
Fr(;)17 b Fu(0\),)44 b(\(0)p Fr(;)17 b Fu(1\))41 b(and)h(\(0)p
Fr(;)17 b Fq(\000)p Fu(1\))42 b(directions)h(are)f(p)s(ermitted:)0
1159 y(suc)m(h)30 b(a)e(w)m(alk)h(is)g(kno)m(wn)g(as)g(a)f(P)m
(artially)h(Directed)g(Self-a)m(v)m(oiding)g(W)-8 b(alk)28
b(\(PDSA)-11 b(W\).)29 b(F)-8 b(or)28 b(con)m(v)m(enience,)0
1279 y(w)m(e)i(consider)h(w)m(alks)f(that)f(ha)m(v)m(e)i(their)e
(\014rst)h(step)g(in)g(the)f(horizon)m(tal)h(direction.)43
b(Let)29 b(the)h(total)f(n)m(um)m(b)s(er)0 1399 y(of)h(steps)j(in)e
(the)g(w)m(alk)h(b)s(e)g Fr(n)p Fu(.)43 b(W)-8 b(e)31
b(lab)s(el)g(the)h(v)m(ertices)h(of)d(the)i(w)m(alk)g
Fr(i)c Fu(=)f(0)p Fr(;)17 b Fu(1)p Fr(;)g Fu(2)p Fr(;)g(:)g(:)g(:)e(n)p
Fu(.)43 b(Let)31 b(the)h(n)m(um)m(b)s(er)0 1520 y(of)37
b(horizon)m(tal)i(steps)g(b)s(e)f Fr(n)1026 1535 y Fp(x)1108
1520 y Fu(and)g(the)g(n)m(um)m(b)s(er)h(of)f(v)m(ertical)h(steps)g(b)s
(e)f Fr(n)2751 1535 y Fp(y)2793 1520 y Fu(.)59 b(T)-8
b(o)38 b(de\014ne)h(our)f(mo)s(del)g(w)m(e)0 1640 y(will)44
b(need)g(\014ner)g(de\014nitions,)j(so)c(let)h(us)g(de\014ne)g
Fr(n)1946 1655 y Fp(y)1981 1664 y Fo(+)2079 1640 y Fu(to)f(b)s(e)g(the)
h(n)m(um)m(b)s(er)g(of)f(\(0)p Fr(;)17 b Fu(1\))42 b(steps)j(\(p)s
(ositiv)m(e)0 1761 y(v)m(ertical)c(steps\))g(and)e Fr(n)898
1776 y Fp(y)933 1785 y Fn(\000)1029 1761 y Fu(to)g(b)s(e)h(the)g(n)m
(um)m(b)s(er)g(of)f(\(0)p Fr(;)17 b Fq(\000)p Fu(1\))39
b(steps)i(\(negativ)m(e)g(v)m(ertical)g(steps\).)65 b(If)40
b(the)0 1881 y(w)m(alk)c(starts)f(at)f(the)h(origin)f(let)h(the)g(p)s
(osition)f(of)g(the)h(other)g(end-p)s(oin)m(t)g(b)s(e)g(\()p
Fr(s)2959 1896 y Fp(x)3002 1881 y Fr(;)17 b(s)3092 1896
y Fp(y)3133 1881 y Fu(\))35 b(so)f(that)h(the)g Fs(sp)-5
b(an)0 2001 y Fu(in)33 b(the)h(horizon)m(tal)g(direction)g(is)g
Fr(s)1294 2016 y Fp(x)1371 2001 y Fu(and)f(the)h Fs(sp)-5
b(an)40 b Fu(of)32 b(the)i(w)m(alk)g(in)g(the)f(v)m(ertical)i
(direction)f(is)g Fr(s)3651 2016 y Fp(y)3692 2001 y Fu(.)46
b(W)-8 b(e)0 2122 y(therefore)33 b(ha)m(v)m(e)1535 2342
y Fr(n)28 b Fu(=)g Fr(n)1783 2357 y Fp(x)1849 2342 y
Fu(+)22 b Fr(n)2005 2357 y Fp(y)1621 2487 y Fu(=)28 b
Fr(n)1783 2502 y Fp(x)1849 2487 y Fu(+)22 b Fr(n)2005
2502 y Fp(y)2040 2511 y Fo(+)2117 2487 y Fu(+)g Fr(n)2273
2502 y Fp(y)2308 2511 y Fn(\000)3699 2487 y Fu(\(2.1\))0
2707 y(and)1603 2927 y Fr(s)1649 2942 y Fp(x)1720 2927
y Fu(=)28 b Fr(n)1882 2942 y Fp(x)1605 3072 y Fr(s)1651
3087 y Fp(y)1720 3072 y Fu(=)g Fr(n)1882 3087 y Fp(y)1917
3096 y Fo(+)1994 3072 y Fq(\000)22 b Fr(n)2151 3087 y
Fp(y)2186 3096 y Fn(\000)2270 3072 y Fr(:)1402 b Fu(\(2.2\))146
3292 y(An)33 b(example)g(con\014guration)g(along)f(with)g(the)h(asso)s
(ciated)g(v)-5 b(ariables)33 b(of)f(our)g(mo)s(del)g(is)h(illustrated)0
3413 y(in)g(Figure)f(1.)146 3533 y(T)-8 b(o)34 b(de\014ne)h(our)e(mo)s
(del)h(w)m(e)h(add)e(v)-5 b(arious)34 b(energies)h(and)f(hence)h
(Boltzmann)f(w)m(eigh)m(ts)i(to)d(the)h(w)m(alk.)0 3654
y(First,)k(an)m(y)g(t)m(w)m(o)g(o)s(ccupied)g(sites)h(of)d(the)i(w)m
(alk)g(not)f(adjacen)m(t)h(in)f(the)h(w)m(alk)g(though)f(adjacen)m(t)g
(on)h(the)0 3774 y(lattice)g(are)f(denoted)h Fs(ne)-5
b(ar)g(est-neighb)g(our)38 b(c)-5 b(ontacts)46 b Fu(or)37
b Fs(c)-5 b(ontacts)8 b Fu(:)52 b(see)39 b(Figure)e(1.)58
b(An)37 b(energy)i Fq(\000)p Fr(J)46 b Fu(is)0 3894 y(added)35
b(for)f(eac)m(h)i(suc)m(h)g(con)m(tact.)49 b(W)-8 b(e)35
b(de\014ne)h(a)e(Boltzmann)i(w)m(eigh)m(t)f Fr(!)g Fu(=)c
Fr(e)2866 3858 y Fp(\014)s(J)2992 3894 y Fu(asso)s(ciated)36
b(with)f(these)0 4015 y(con)m(tacts,)j(where)f Fr(\014)i
Fu(=)34 b(1)p Fr(=k)1052 4030 y Fp(B)1112 4015 y Fr(T)49
b Fu(and)36 b Fr(T)50 b Fu(is)36 b(the)h(absolute)g(temp)s(erature.)54
b(Without)36 b(loss)h(of)f(generalit)m(y)0 4135 y(w)m(e)g(shall)f(tak)m
(e)g(the)g(units)h(of)e(energy)i(to)e(b)s(e)h(suc)m(h)h(that)f
Fr(J)40 b Fu(=)31 b(1)j(and)h(therefore)g Fr(!)g Fu(=)c
Fr(e)3260 4099 y Fp(\014)3307 4135 y Fu(,)36 b(except)g(when)0
4255 y(w)m(e)e(discuss)g(pulling)g(p)s(olymers)f(without)h(an)m(y)f
(self-in)m(teraction)g(\()p Fr(!)e Fu(=)d(1\))k(where)i(w)m(e)g(will)f
(ha)m(v)m(e)h Fr(J)j Fu(=)27 b(0.)146 4376 y(An)38 b(external)g
(horizon)m(tal)f(force)g Fr(f)1442 4391 y Fp(x)1523 4376
y Fu(pulling)h(at)f(the)g(other)g(end)h(of)e(the)i(w)m(alk)g(adds)g(a)e
(Boltzmann)0 4496 y(w)m(eigh)m(t)f Fr(h)366 4460 y Fp(s)399
4468 y Fm(x)475 4496 y Fu(with)f Fr(h)29 b Fu(=)f Fr(e)932
4460 y Fp(\014)s(f)1009 4468 y Fm(x)1052 4496 y Fu(.)46
b(An)34 b(external)g(v)m(ertical)g(force)g Fr(f)2295
4511 y Fp(y)2370 4496 y Fu(pulling)f(at)g(the)h(other)f(end)h(of)f(the)
h(w)m(alk)0 4617 y(adds)f(a)f(Boltzmann)i(w)m(eigh)m(t)g
Fr(v)1167 4580 y Fp(s)1200 4588 y Fm(y)1273 4617 y Fu(with)f
Fr(v)f Fu(=)27 b Fr(e)1722 4580 y Fp(\014)s(f)1799 4588
y Fm(y)1841 4617 y Fu(.)146 4737 y(The)41 b(partition)f(function)g
Fr(Z)1224 4752 y Fp(n)1271 4737 y Fu(\()p Fr(f)1357 4752
y Fp(x)1401 4737 y Fr(;)17 b(f)1493 4752 y Fp(y)1534
4737 y Fr(;)g(\014)6 b Fu(\))39 b(of)h(the)g(mo)s(del)g(for)g(w)m(alks)
h(of)e(length)i Fr(n)f Fq(\025)h Fu(1,)g(where)g(for)0
4857 y(later)33 b(mathematical)g(con)m(v)m(enience)j(the)d(\014rst)g
(step)g(of)f(the)h(w)m(alk)h(is)f(a)f(horizon)m(tal)h(step,)h(is)876
5089 y Fr(Z)943 5104 y Fp(n)989 5089 y Fu(\()p Fr(f)1075
5104 y Fp(x)1119 5089 y Fr(;)17 b(f)1211 5104 y Fp(y)1252
5089 y Fr(;)g(\014)6 b Fu(\))27 b(=)1828 4995 y Fl(X)1526
5207 y Fp(')19 b Fk(is)g(PDSA)-8 b(W)22 b(of)i(length)d
Fp(n)2290 5089 y Fr(h)2346 5048 y Fp(s)2379 5056 y Fm(x)2418
5048 y Fk(\()p Fp(')p Fk(\))2523 5089 y Fr(v)2574 5048
y Fp(s)2607 5056 y Fm(y)2644 5048 y Fk(\()p Fp(')p Fk(\))2749
5089 y Fr(!)2814 5048 y Fp(m)p Fk(\()p Fp(')p Fk(\))2997
5089 y Fr(;)675 b Fu(\(2.3\))1926 5682 y(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 533 1991 a @beginspecial 50 @llx
64 @lly 339 @urx 267 @ury 3401 @rwi @setspecial
%%BeginDocument: new_figs/pdw_defn.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: inkscape 0.46
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 50 64 339 267
%%HiResBoundingBox: 50.4 64.8 338.4 266.4
%%EndComments
%%Page: 1 1
0 842 translate
0.8 -0.8 scale
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave [1 0 0 1 0 0] concat
gsave [1 0 0 1 18 -36] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 18 -72] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 17.999995 -108] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 54 -72] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 54 -36] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 54 -3.8281269e-07] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
366 764.36218 moveto
396 764.36218 lineto
fill
grestore
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
366 764.36218 moveto
396 764.36218 lineto
stroke
gsave [-0.6 0 0 -0.6 392.4 764.36218] concat
gsave
0 0 1 setrgbcolor
newpath
0 0 moveto
5 -5 lineto
-12.5 0 lineto
5 5 lineto
0 0 lineto
closepath
eofill
grestore
0 0 1 setrgbcolor
[] 0 setdash
1.25 setlinewidth
0 setlinejoin
0 setlinecap
newpath
0 0 moveto
5 -5 lineto
-12.5 0 lineto
5 5 lineto
0 0 lineto
closepath
stroke
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
360 758.36218 moveto
360 728.36218 lineto
fill
grestore
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
360 758.36218 moveto
360 728.36218 lineto
stroke
gsave [-3.6738191e-17 0.6 -0.6 -3.6738191e-17 360 731.96218] concat
gsave
0 0 1 setrgbcolor
newpath
0 0 moveto
5 -5 lineto
-12.5 0 lineto
5 5 lineto
0 0 lineto
closepath
eofill
grestore
0 0 1 setrgbcolor
[] 0 setdash
1.25 setlinewidth
0 setlinejoin
0 setlinecap
newpath
0 0 moveto
5 -5 lineto
-12.5 0 lineto
5 5 lineto
0 0 lineto
closepath
stroke
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
gsave [0 1 -1 0 944.36218 548.36218] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 587.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 587.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 587.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 584.36218 moveto
417 584.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 584.36218 moveto
417 584.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 872.36218 moveto
108 872.36218 lineto
108 764.36218 lineto
144 764.36218 lineto
144 944.36218 lineto
180 944.36218 lineto
180 836.36218 lineto
288 836.36218 lineto
288 800.36218 lineto
324 800.36218 lineto
324 764.36218 lineto
360 764.36218 lineto
stroke
gsave [1 0 0 1 3 3] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 39 3] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 39 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 39 -69] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 39 -105] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -105] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -69] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 3] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 39] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 75] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 111 75] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 111 39] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 111 3] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 111 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 147 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 183 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 219 -33] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 219 -69] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 255 -69] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 255 -105] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 291 -105] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
165 917.36218 moveto
171.05119 927.1603 182.97347 935.29776 204 926.36218 curveto
225.02653 917.4266 240 899.36218 240 899.36218 curveto
stroke
gsave [0.31527348 0.51049254 -0.51049254 0.31527348 165 917.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [0.12763292 -0.15397999 0.15397999 0.12763292 241.09846 898.35036] concat
gsave
0 0 0 setrgbcolor
newpath
-2.5 -1 moveto
-2.5 1.76 -4.74 4 -7.5 4 curveto
-10.26 4 -12.5 1.76 -12.5 -1 curveto
-12.5 -3.76 -10.26 -6 -7.5 -6 curveto
-4.74 -6 -2.5 -3.76 -2.5 -1 curveto
closepath
eofill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.25 setlinewidth
0 setlinejoin
0 setlinecap
newpath
-2.5 -1 moveto
-2.5 1.76 -4.74 4 -7.5 4 curveto
-10.26 4 -12.5 1.76 -12.5 -1 curveto
-12.5 -3.76 -10.26 -6 -7.5 -6 curveto
-4.74 -6 -2.5 -3.76 -2.5 -1 curveto
closepath
stroke
grestore
gsave [1 0 0 1 141.81648 -104.69515] concat
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.65625 -3.984375 moveto
4.515625 -3.984375 lineto
4.71875 -3.984375 4.8125 -3.984375 4.8125 -4.1875 curveto
4.8125 -4.296875 4.71875 -4.296875 4.546875 -4.296875 curveto
3.71875 -4.296875 lineto
3.828125 -4.875 3.8125 -4.859375 3.921875 -5.4375 curveto
3.96875 -5.640625 4.109375 -6.34375 4.171875 -6.46875 curveto
4.25 -6.65625 4.421875 -6.8125 4.640625 -6.8125 curveto
4.671875 -6.8125 4.9375 -6.8125 5.125 -6.625 curveto
4.6875 -6.59375 4.578125 -6.234375 4.578125 -6.09375 curveto
4.578125 -5.859375 4.765625 -5.734375 4.953125 -5.734375 curveto
5.21875 -5.734375 5.5 -5.96875 5.5 -6.34375 curveto
5.5 -6.796875 5.046875 -7.03125 4.640625 -7.03125 curveto
4.296875 -7.03125 3.671875 -6.84375 3.375 -5.859375 curveto
3.3125 -5.65625 3.28125 -5.546875 3.046875 -4.296875 curveto
2.359375 -4.296875 lineto
2.15625 -4.296875 2.046875 -4.296875 2.046875 -4.109375 curveto
2.046875 -3.984375 2.140625 -3.984375 2.328125 -3.984375 curveto
2.984375 -3.984375 lineto
2.25 -0.046875 lineto
2.0625 0.921875 1.890625 1.828125 1.375 1.828125 curveto
1.328125 1.828125 1.09375 1.828125 0.890625 1.640625 curveto
1.359375 1.609375 1.453125 1.25 1.453125 1.109375 curveto
1.453125 0.875 1.265625 0.75 1.078125 0.75 curveto
0.8125 0.75 0.53125 0.984375 0.53125 1.359375 curveto
0.53125 1.796875 0.96875 2.046875 1.375 2.046875 curveto
1.921875 2.046875 2.328125 1.453125 2.5 1.078125 curveto
2.828125 0.453125 3.046875 -0.75 3.0625 -0.828125 curveto
3.65625 -3.984375 lineto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 228.31 136.259] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.734375 -0.734375 moveto
1.671875 -0.5 1.4375 -0.125 1.078125 -0.125 curveto
1.0625 -0.125 0.84375 -0.125 0.703125 -0.21875 curveto
0.984375 -0.3125 1.015625 -0.5625 1.015625 -0.609375 curveto
1.015625 -0.765625 0.890625 -0.859375 0.734375 -0.859375 curveto
0.53125 -0.859375 0.328125 -0.703125 0.328125 -0.4375 curveto
0.328125 -0.09375 0.71875 0.0625 1.0625 0.0625 curveto
1.390625 0.0625 1.671875 -0.125 1.84375 -0.421875 curveto
2.015625 -0.0625 2.390625 0.0625 2.671875 0.0625 curveto
3.484375 0.0625 3.90625 -0.796875 3.90625 -1 curveto
3.90625 -1.09375 3.8125 -1.09375 3.796875 -1.09375 curveto
3.6875 -1.09375 3.6875 -1.046875 3.65625 -0.96875 curveto
3.515625 -0.484375 3.09375 -0.125 2.703125 -0.125 curveto
2.421875 -0.125 2.28125 -0.3125 2.28125 -0.578125 curveto
2.28125 -0.765625 2.453125 -1.390625 2.640625 -2.171875 curveto
2.78125 -2.703125 3.09375 -2.875 3.328125 -2.875 curveto
3.34375 -2.875 3.546875 -2.875 3.703125 -2.78125 curveto
3.484375 -2.71875 3.390625 -2.515625 3.390625 -2.390625 curveto
3.390625 -2.25 3.515625 -2.140625 3.671875 -2.140625 curveto
3.828125 -2.140625 4.0625 -2.265625 4.0625 -2.5625 curveto
4.0625 -2.953125 3.609375 -3.078125 3.34375 -3.078125 curveto
2.984375 -3.078125 2.703125 -2.84375 2.5625 -2.578125 curveto
2.4375 -2.859375 2.109375 -3.078125 1.71875 -3.078125 curveto
0.9375 -3.078125 0.5 -2.21875 0.5 -2 curveto
0.5 -1.921875 0.59375 -1.921875 0.609375 -1.921875 curveto
0.703125 -1.921875 0.703125 -1.9375 0.75 -2.03125 curveto
0.921875 -2.578125 1.359375 -2.875 1.703125 -2.875 curveto
1.9375 -2.875 2.125 -2.75 2.125 -2.421875 curveto
2.125 -2.28125 2.03125 -1.9375 1.96875 -1.6875 curveto
1.734375 -0.734375 lineto
closepath
fill
grestore
grestore
grestore
grestore
grestore
gsave [1 0 0 1 54.043045 -150.7264] concat
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 253.25101 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.65625 -3.984375 moveto
4.515625 -3.984375 lineto
4.71875 -3.984375 4.8125 -3.984375 4.8125 -4.1875 curveto
4.8125 -4.296875 4.71875 -4.296875 4.546875 -4.296875 curveto
3.71875 -4.296875 lineto
3.828125 -4.875 3.8125 -4.859375 3.921875 -5.4375 curveto
3.96875 -5.640625 4.109375 -6.34375 4.171875 -6.46875 curveto
4.25 -6.65625 4.421875 -6.8125 4.640625 -6.8125 curveto
4.671875 -6.8125 4.9375 -6.8125 5.125 -6.625 curveto
4.6875 -6.59375 4.578125 -6.234375 4.578125 -6.09375 curveto
4.578125 -5.859375 4.765625 -5.734375 4.953125 -5.734375 curveto
5.21875 -5.734375 5.5 -5.96875 5.5 -6.34375 curveto
5.5 -6.796875 5.046875 -7.03125 4.640625 -7.03125 curveto
4.296875 -7.03125 3.671875 -6.84375 3.375 -5.859375 curveto
3.3125 -5.65625 3.28125 -5.546875 3.046875 -4.296875 curveto
2.359375 -4.296875 lineto
2.15625 -4.296875 2.046875 -4.296875 2.046875 -4.109375 curveto
2.046875 -3.984375 2.140625 -3.984375 2.328125 -3.984375 curveto
2.984375 -3.984375 lineto
2.25 -0.046875 lineto
2.0625 0.921875 1.890625 1.828125 1.375 1.828125 curveto
1.328125 1.828125 1.09375 1.828125 0.890625 1.640625 curveto
1.359375 1.609375 1.453125 1.25 1.453125 1.109375 curveto
1.453125 0.875 1.265625 0.75 1.078125 0.75 curveto
0.8125 0.75 0.53125 0.984375 0.53125 1.359375 curveto
0.53125 1.796875 0.96875 2.046875 1.375 2.046875 curveto
1.921875 2.046875 2.328125 1.453125 2.5 1.078125 curveto
2.828125 0.453125 3.046875 -0.75 3.0625 -0.828125 curveto
3.65625 -3.984375 lineto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 258.12799 136.259] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.875 -2.625 moveto
3.90625 -2.71875 3.90625 -2.734375 3.90625 -2.78125 curveto
3.90625 -2.921875 3.796875 -3 3.671875 -3 curveto
3.59375 -3 3.46875 -2.96875 3.390625 -2.84375 curveto
3.359375 -2.796875 3.3125 -2.578125 3.28125 -2.4375 curveto
3.125 -1.859375 lineto
3.09375 -1.6875 2.875 -0.8125 2.84375 -0.734375 curveto
2.84375 -0.734375 2.53125 -0.125 2 -0.125 curveto
1.515625 -0.125 1.515625 -0.578125 1.515625 -0.703125 curveto
1.515625 -1.078125 1.671875 -1.515625 1.890625 -2.0625 curveto
1.96875 -2.28125 2 -2.359375 2 -2.484375 curveto
2 -2.8125 1.71875 -3.078125 1.34375 -3.078125 curveto
0.640625 -3.078125 0.328125 -2.125 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.953125 0.578125 -2.03125 curveto
0.75 -2.609375 1.046875 -2.875 1.328125 -2.875 curveto
1.4375 -2.875 1.5 -2.796875 1.5 -2.640625 curveto
1.5 -2.46875 1.4375 -2.328125 1.40625 -2.234375 curveto
1.0625 -1.375 1 -1.125 1 -0.8125 curveto
1 -0.703125 1 -0.375 1.265625 -0.140625 curveto
1.484375 0.03125 1.78125 0.0625 1.96875 0.0625 curveto
2.25 0.0625 2.5 -0.03125 2.71875 -0.25 curveto
2.640625 0.140625 2.5625 0.4375 2.265625 0.78125 curveto
2.078125 1 1.796875 1.21875 1.421875 1.21875 curveto
1.375 1.21875 1.046875 1.21875 0.90625 1 curveto
1.28125 0.953125 1.28125 0.625 1.28125 0.609375 curveto
1.28125 0.390625 1.078125 0.34375 1.015625 0.34375 curveto
0.84375 0.34375 0.609375 0.484375 0.609375 0.8125 curveto
0.609375 1.15625 0.9375 1.421875 1.4375 1.421875 curveto
2.140625 1.421875 3 0.875 3.21875 0 curveto
3.875 -2.625 lineto
closepath
fill
grestore
grestore
grestore
grestore
grestore
gsave [1 0 0 1 -113.53508 70.734533] concat
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 282.84299 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -3.734375 moveto
3.625 -3.71875 3.421875 -3.5 3.421875 -3.28125 curveto
3.421875 -3.140625 3.515625 -2.984375 3.734375 -2.984375 curveto
3.953125 -2.984375 4.1875 -3.15625 4.1875 -3.546875 curveto
4.1875 -4 3.765625 -4.40625 3 -4.40625 curveto
1.6875 -4.40625 1.3125 -3.390625 1.3125 -2.953125 curveto
1.3125 -2.171875 2.046875 -2.03125 2.34375 -1.96875 curveto
2.859375 -1.859375 3.375 -1.75 3.375 -1.203125 curveto
3.375 -0.953125 3.15625 -0.109375 1.953125 -0.109375 curveto
1.8125 -0.109375 1.046875 -0.109375 0.8125 -0.640625 curveto
1.203125 -0.59375 1.453125 -0.890625 1.453125 -1.171875 curveto
1.453125 -1.390625 1.28125 -1.515625 1.078125 -1.515625 curveto
0.8125 -1.515625 0.515625 -1.3125 0.515625 -0.859375 curveto
0.515625 -0.296875 1.09375 0.109375 1.9375 0.109375 curveto
3.5625 0.109375 3.953125 -1.09375 3.953125 -1.546875 curveto
3.953125 -1.90625 3.765625 -2.15625 3.640625 -2.265625 curveto
3.375 -2.546875 3.078125 -2.609375 2.640625 -2.6875 curveto
2.28125 -2.765625 1.890625 -2.84375 1.890625 -3.296875 curveto
1.890625 -3.578125 2.125 -4.1875 3 -4.1875 curveto
3.25 -4.1875 3.75 -4.109375 3.890625 -3.734375 curveto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 287.513 136.259] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.734375 -0.734375 moveto
1.671875 -0.5 1.4375 -0.125 1.078125 -0.125 curveto
1.0625 -0.125 0.84375 -0.125 0.703125 -0.21875 curveto
0.984375 -0.3125 1.015625 -0.5625 1.015625 -0.609375 curveto
1.015625 -0.765625 0.890625 -0.859375 0.734375 -0.859375 curveto
0.53125 -0.859375 0.328125 -0.703125 0.328125 -0.4375 curveto
0.328125 -0.09375 0.71875 0.0625 1.0625 0.0625 curveto
1.390625 0.0625 1.671875 -0.125 1.84375 -0.421875 curveto
2.015625 -0.0625 2.390625 0.0625 2.671875 0.0625 curveto
3.484375 0.0625 3.90625 -0.796875 3.90625 -1 curveto
3.90625 -1.09375 3.8125 -1.09375 3.796875 -1.09375 curveto
3.6875 -1.09375 3.6875 -1.046875 3.65625 -0.96875 curveto
3.515625 -0.484375 3.09375 -0.125 2.703125 -0.125 curveto
2.421875 -0.125 2.28125 -0.3125 2.28125 -0.578125 curveto
2.28125 -0.765625 2.453125 -1.390625 2.640625 -2.171875 curveto
2.78125 -2.703125 3.09375 -2.875 3.328125 -2.875 curveto
3.34375 -2.875 3.546875 -2.875 3.703125 -2.78125 curveto
3.484375 -2.71875 3.390625 -2.515625 3.390625 -2.390625 curveto
3.390625 -2.25 3.515625 -2.140625 3.671875 -2.140625 curveto
3.828125 -2.140625 4.0625 -2.265625 4.0625 -2.5625 curveto
4.0625 -2.953125 3.609375 -3.078125 3.34375 -3.078125 curveto
2.984375 -3.078125 2.703125 -2.84375 2.5625 -2.578125 curveto
2.4375 -2.859375 2.109375 -3.078125 1.71875 -3.078125 curveto
0.9375 -3.078125 0.5 -2.21875 0.5 -2 curveto
0.5 -1.921875 0.59375 -1.921875 0.609375 -1.921875 curveto
0.703125 -1.921875 0.703125 -1.9375 0.75 -2.03125 curveto
0.921875 -2.578125 1.359375 -2.875 1.703125 -2.875 curveto
1.9375 -2.875 2.125 -2.75 2.125 -2.421875 curveto
2.125 -2.28125 2.03125 -1.9375 1.96875 -1.6875 curveto
1.734375 -0.734375 lineto
closepath
fill
grestore
grestore
grestore
grestore
grestore
gsave [1 0 0 1 23.15242 -68.695155] concat
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 312.45401 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -3.734375 moveto
3.625 -3.71875 3.421875 -3.5 3.421875 -3.28125 curveto
3.421875 -3.140625 3.515625 -2.984375 3.734375 -2.984375 curveto
3.953125 -2.984375 4.1875 -3.15625 4.1875 -3.546875 curveto
4.1875 -4 3.765625 -4.40625 3 -4.40625 curveto
1.6875 -4.40625 1.3125 -3.390625 1.3125 -2.953125 curveto
1.3125 -2.171875 2.046875 -2.03125 2.34375 -1.96875 curveto
2.859375 -1.859375 3.375 -1.75 3.375 -1.203125 curveto
3.375 -0.953125 3.15625 -0.109375 1.953125 -0.109375 curveto
1.8125 -0.109375 1.046875 -0.109375 0.8125 -0.640625 curveto
1.203125 -0.59375 1.453125 -0.890625 1.453125 -1.171875 curveto
1.453125 -1.390625 1.28125 -1.515625 1.078125 -1.515625 curveto
0.8125 -1.515625 0.515625 -1.3125 0.515625 -0.859375 curveto
0.515625 -0.296875 1.09375 0.109375 1.9375 0.109375 curveto
3.5625 0.109375 3.953125 -1.09375 3.953125 -1.546875 curveto
3.953125 -1.90625 3.765625 -2.15625 3.640625 -2.265625 curveto
3.375 -2.546875 3.078125 -2.609375 2.640625 -2.6875 curveto
2.28125 -2.765625 1.890625 -2.84375 1.890625 -3.296875 curveto
1.890625 -3.578125 2.125 -4.1875 3 -4.1875 curveto
3.25 -4.1875 3.75 -4.109375 3.890625 -3.734375 curveto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 317.12399 136.259] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.875 -2.625 moveto
3.90625 -2.71875 3.90625 -2.734375 3.90625 -2.78125 curveto
3.90625 -2.921875 3.796875 -3 3.671875 -3 curveto
3.59375 -3 3.46875 -2.96875 3.390625 -2.84375 curveto
3.359375 -2.796875 3.3125 -2.578125 3.28125 -2.4375 curveto
3.125 -1.859375 lineto
3.09375 -1.6875 2.875 -0.8125 2.84375 -0.734375 curveto
2.84375 -0.734375 2.53125 -0.125 2 -0.125 curveto
1.515625 -0.125 1.515625 -0.578125 1.515625 -0.703125 curveto
1.515625 -1.078125 1.671875 -1.515625 1.890625 -2.0625 curveto
1.96875 -2.28125 2 -2.359375 2 -2.484375 curveto
2 -2.8125 1.71875 -3.078125 1.34375 -3.078125 curveto
0.640625 -3.078125 0.328125 -2.125 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.953125 0.578125 -2.03125 curveto
0.75 -2.609375 1.046875 -2.875 1.328125 -2.875 curveto
1.4375 -2.875 1.5 -2.796875 1.5 -2.640625 curveto
1.5 -2.46875 1.4375 -2.328125 1.40625 -2.234375 curveto
1.0625 -1.375 1 -1.125 1 -0.8125 curveto
1 -0.703125 1 -0.375 1.265625 -0.140625 curveto
1.484375 0.03125 1.78125 0.0625 1.96875 0.0625 curveto
2.25 0.0625 2.5 -0.03125 2.71875 -0.25 curveto
2.640625 0.140625 2.5625 0.4375 2.265625 0.78125 curveto
2.078125 1 1.796875 1.21875 1.421875 1.21875 curveto
1.375 1.21875 1.046875 1.21875 0.90625 1 curveto
1.28125 0.953125 1.28125 0.625 1.28125 0.609375 curveto
1.28125 0.390625 1.078125 0.34375 1.015625 0.34375 curveto
0.84375 0.34375 0.609375 0.484375 0.609375 0.8125 curveto
0.609375 1.15625 0.9375 1.421875 1.4375 1.421875 curveto
2.140625 1.421875 3 0.875 3.21875 0 curveto
3.875 -2.625 lineto
closepath
fill
grestore
grestore
grestore
grestore
grestore
gsave [1 0 0 1 -43.574142 -12.538905] concat
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 223.43201 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.09375 -3.421875 moveto
1.09375 -0.75 lineto
1.09375 -0.3125 0.984375 -0.3125 0.3125 -0.3125 curveto
0.3125 0 lineto
0.671875 -0.015625 1.171875 -0.03125 1.453125 -0.03125 curveto
1.703125 -0.03125 2.21875 -0.015625 2.5625 0 curveto
2.5625 -0.3125 lineto
1.890625 -0.3125 1.78125 -0.3125 1.78125 -0.75 curveto
1.78125 -2.59375 lineto
1.78125 -3.625 2.5 -4.1875 3.125 -4.1875 curveto
3.765625 -4.1875 3.875 -3.65625 3.875 -3.078125 curveto
3.875 -0.75 lineto
3.875 -0.3125 3.765625 -0.3125 3.09375 -0.3125 curveto
3.09375 0 lineto
3.4375 -0.015625 3.953125 -0.03125 4.21875 -0.03125 curveto
4.46875 -0.03125 5 -0.015625 5.328125 0 curveto
5.328125 -0.3125 lineto
4.8125 -0.3125 4.5625 -0.3125 4.5625 -0.609375 curveto
4.5625 -2.515625 lineto
4.5625 -3.375 4.5625 -3.671875 4.25 -4.03125 curveto
4.109375 -4.203125 3.78125 -4.40625 3.203125 -4.40625 curveto
2.46875 -4.40625 2 -3.984375 1.71875 -3.359375 curveto
1.71875 -4.40625 lineto
0.3125 -4.296875 lineto
0.3125 -3.984375 lineto
1.015625 -3.984375 1.09375 -3.921875 1.09375 -3.421875 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 228.96722 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -2.296875 moveto
4.109375 -2.296875 4.140625 -2.296875 4.140625 -2.515625 curveto
4.140625 -3.5 3.59375 -4.46875 2.359375 -4.46875 curveto
1.203125 -4.46875 0.28125 -3.4375 0.28125 -2.1875 curveto
0.28125 -0.859375 1.328125 0.109375 2.46875 0.109375 curveto
3.6875 0.109375 4.140625 -1 4.140625 -1.1875 curveto
4.140625 -1.28125 4.0625 -1.3125 4 -1.3125 curveto
3.921875 -1.3125 3.890625 -1.25 3.875 -1.171875 curveto
3.53125 -0.140625 2.625 -0.140625 2.53125 -0.140625 curveto
2.03125 -0.140625 1.640625 -0.4375 1.40625 -0.8125 curveto
1.109375 -1.28125 1.109375 -1.9375 1.109375 -2.296875 curveto
3.890625 -2.296875 lineto
closepath
1.109375 -2.515625 moveto
1.171875 -4 2.015625 -4.25 2.359375 -4.25 curveto
3.375 -4.25 3.484375 -2.90625 3.484375 -2.515625 curveto
1.109375 -2.515625 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 233.39461 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.3125 -0.75 moveto
3.359375 -0.359375 3.625 0.0625 4.09375 0.0625 curveto
4.3125 0.0625 4.921875 -0.078125 4.921875 -0.890625 curveto
4.921875 -1.453125 lineto
4.671875 -1.453125 lineto
4.671875 -0.890625 lineto
4.671875 -0.3125 4.421875 -0.25 4.3125 -0.25 curveto
3.984375 -0.25 3.9375 -0.703125 3.9375 -0.75 curveto
3.9375 -2.734375 lineto
3.9375 -3.15625 3.9375 -3.546875 3.578125 -3.921875 curveto
3.1875 -4.3125 2.6875 -4.46875 2.21875 -4.46875 curveto
1.390625 -4.46875 0.703125 -4 0.703125 -3.34375 curveto
0.703125 -3.046875 0.90625 -2.875 1.171875 -2.875 curveto
1.453125 -2.875 1.625 -3.078125 1.625 -3.328125 curveto
1.625 -3.453125 1.578125 -3.78125 1.109375 -3.78125 curveto
1.390625 -4.140625 1.875 -4.25 2.1875 -4.25 curveto
2.6875 -4.25 3.25 -3.859375 3.25 -2.96875 curveto
3.25 -2.609375 lineto
2.734375 -2.578125 2.046875 -2.546875 1.421875 -2.25 curveto
0.671875 -1.90625 0.421875 -1.390625 0.421875 -0.953125 curveto
0.421875 -0.140625 1.390625 0.109375 2.015625 0.109375 curveto
2.671875 0.109375 3.125 -0.296875 3.3125 -0.75 curveto
closepath
3.25 -2.390625 moveto
3.25 -1.390625 lineto
3.25 -0.453125 2.53125 -0.109375 2.078125 -0.109375 curveto
1.59375 -0.109375 1.1875 -0.453125 1.1875 -0.953125 curveto
1.1875 -1.5 1.609375 -2.328125 3.25 -2.390625 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 238.3759 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -0.78125 moveto
1.71875 -2.3125 lineto
1.71875 -3.296875 2.140625 -4.1875 2.890625 -4.1875 curveto
2.953125 -4.1875 2.984375 -4.1875 3 -4.171875 curveto
2.96875 -4.171875 2.765625 -4.046875 2.765625 -3.78125 curveto
2.765625 -3.515625 2.984375 -3.359375 3.203125 -3.359375 curveto
3.375 -3.359375 3.625 -3.484375 3.625 -3.796875 curveto
3.625 -4.109375 3.3125 -4.40625 2.890625 -4.40625 curveto
2.15625 -4.40625 1.796875 -3.734375 1.671875 -3.3125 curveto
1.671875 -4.40625 lineto
0.28125 -4.296875 lineto
0.28125 -3.984375 lineto
0.984375 -3.984375 1.0625 -3.921875 1.0625 -3.421875 curveto
1.0625 -0.75 lineto
1.0625 -0.3125 0.953125 -0.3125 0.28125 -0.3125 curveto
0.28125 0 lineto
0.671875 -0.015625 1.140625 -0.03125 1.421875 -0.03125 curveto
1.8125 -0.03125 2.28125 -0.03125 2.6875 0 curveto
2.6875 -0.3125 lineto
2.46875 -0.3125 lineto
1.734375 -0.3125 1.71875 -0.421875 1.71875 -0.78125 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 242.27824 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -2.296875 moveto
4.109375 -2.296875 4.140625 -2.296875 4.140625 -2.515625 curveto
4.140625 -3.5 3.59375 -4.46875 2.359375 -4.46875 curveto
1.203125 -4.46875 0.28125 -3.4375 0.28125 -2.1875 curveto
0.28125 -0.859375 1.328125 0.109375 2.46875 0.109375 curveto
3.6875 0.109375 4.140625 -1 4.140625 -1.1875 curveto
4.140625 -1.28125 4.0625 -1.3125 4 -1.3125 curveto
3.921875 -1.3125 3.890625 -1.25 3.875 -1.171875 curveto
3.53125 -0.140625 2.625 -0.140625 2.53125 -0.140625 curveto
2.03125 -0.140625 1.640625 -0.4375 1.40625 -0.8125 curveto
1.109375 -1.28125 1.109375 -1.9375 1.109375 -2.296875 curveto
3.890625 -2.296875 lineto
closepath
1.109375 -2.515625 moveto
1.171875 -4 2.015625 -4.25 2.359375 -4.25 curveto
3.375 -4.25 3.484375 -2.90625 3.484375 -2.515625 curveto
1.109375 -2.515625 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 246.70563 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.078125 -1.9375 moveto
2.296875 -1.890625 3.109375 -1.734375 3.109375 -1.015625 curveto
3.109375 -0.515625 2.765625 -0.109375 1.984375 -0.109375 curveto
1.140625 -0.109375 0.78125 -0.671875 0.59375 -1.53125 curveto
0.5625 -1.65625 0.5625 -1.6875 0.453125 -1.6875 curveto
0.328125 -1.6875 0.328125 -1.625 0.328125 -1.453125 curveto
0.328125 -0.125 lineto
0.328125 0.046875 0.328125 0.109375 0.4375 0.109375 curveto
0.484375 0.109375 0.5 0.09375 0.6875 -0.09375 curveto
0.703125 -0.109375 0.703125 -0.125 0.890625 -0.3125 curveto
1.328125 0.09375 1.78125 0.109375 1.984375 0.109375 curveto
3.125 0.109375 3.59375 -0.5625 3.59375 -1.28125 curveto
3.59375 -1.796875 3.296875 -2.109375 3.171875 -2.21875 curveto
2.84375 -2.546875 2.453125 -2.625 2.03125 -2.703125 curveto
1.46875 -2.8125 0.8125 -2.9375 0.8125 -3.515625 curveto
0.8125 -3.875 1.0625 -4.28125 1.921875 -4.28125 curveto
3.015625 -4.28125 3.078125 -3.375 3.09375 -3.078125 curveto
3.09375 -2.984375 3.1875 -2.984375 3.203125 -2.984375 curveto
3.34375 -2.984375 3.34375 -3.03125 3.34375 -3.21875 curveto
3.34375 -4.234375 lineto
3.34375 -4.390625 3.34375 -4.46875 3.234375 -4.46875 curveto
3.1875 -4.46875 3.15625 -4.46875 3.03125 -4.34375 curveto
3 -4.3125 2.90625 -4.21875 2.859375 -4.1875 curveto
2.484375 -4.46875 2.078125 -4.46875 1.921875 -4.46875 curveto
0.703125 -4.46875 0.328125 -3.796875 0.328125 -3.234375 curveto
0.328125 -2.890625 0.484375 -2.609375 0.75 -2.390625 curveto
1.078125 -2.140625 1.359375 -2.078125 2.078125 -1.9375 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 250.63487 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -3.984375 moveto
3.15625 -3.984375 lineto
3.15625 -4.296875 lineto
1.71875 -4.296875 lineto
1.71875 -6.125 lineto
1.46875 -6.125 lineto
1.46875 -5.3125 1.171875 -4.25 0.1875 -4.203125 curveto
0.1875 -3.984375 lineto
1.03125 -3.984375 lineto
1.03125 -1.234375 lineto
1.03125 -0.015625 1.96875 0.109375 2.328125 0.109375 curveto
3.03125 0.109375 3.3125 -0.59375 3.3125 -1.234375 curveto
3.3125 -1.796875 lineto
3.0625 -1.796875 lineto
3.0625 -1.25 lineto
3.0625 -0.515625 2.765625 -0.140625 2.390625 -0.140625 curveto
1.71875 -0.140625 1.71875 -1.046875 1.71875 -1.21875 curveto
1.71875 -3.984375 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 254.50934 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.75 -1.859375 moveto
2.75 -2.4375 lineto
0.109375 -2.4375 lineto
0.109375 -1.859375 lineto
2.75 -1.859375 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 257.82986 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.09375 -3.421875 moveto
1.09375 -0.75 lineto
1.09375 -0.3125 0.984375 -0.3125 0.3125 -0.3125 curveto
0.3125 0 lineto
0.671875 -0.015625 1.171875 -0.03125 1.453125 -0.03125 curveto
1.703125 -0.03125 2.21875 -0.015625 2.5625 0 curveto
2.5625 -0.3125 lineto
1.890625 -0.3125 1.78125 -0.3125 1.78125 -0.75 curveto
1.78125 -2.59375 lineto
1.78125 -3.625 2.5 -4.1875 3.125 -4.1875 curveto
3.765625 -4.1875 3.875 -3.65625 3.875 -3.078125 curveto
3.875 -0.75 lineto
3.875 -0.3125 3.765625 -0.3125 3.09375 -0.3125 curveto
3.09375 0 lineto
3.4375 -0.015625 3.953125 -0.03125 4.21875 -0.03125 curveto
4.46875 -0.03125 5 -0.015625 5.328125 0 curveto
5.328125 -0.3125 lineto
4.8125 -0.3125 4.5625 -0.3125 4.5625 -0.609375 curveto
4.5625 -2.515625 lineto
4.5625 -3.375 4.5625 -3.671875 4.25 -4.03125 curveto
4.109375 -4.203125 3.78125 -4.40625 3.203125 -4.40625 curveto
2.46875 -4.40625 2 -3.984375 1.71875 -3.359375 curveto
1.71875 -4.40625 lineto
0.3125 -4.296875 lineto
0.3125 -3.984375 lineto
1.015625 -3.984375 1.09375 -3.921875 1.09375 -3.421875 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 263.36508 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -2.296875 moveto
4.109375 -2.296875 4.140625 -2.296875 4.140625 -2.515625 curveto
4.140625 -3.5 3.59375 -4.46875 2.359375 -4.46875 curveto
1.203125 -4.46875 0.28125 -3.4375 0.28125 -2.1875 curveto
0.28125 -0.859375 1.328125 0.109375 2.46875 0.109375 curveto
3.6875 0.109375 4.140625 -1 4.140625 -1.1875 curveto
4.140625 -1.28125 4.0625 -1.3125 4 -1.3125 curveto
3.921875 -1.3125 3.890625 -1.25 3.875 -1.171875 curveto
3.53125 -0.140625 2.625 -0.140625 2.53125 -0.140625 curveto
2.03125 -0.140625 1.640625 -0.4375 1.40625 -0.8125 curveto
1.109375 -1.28125 1.109375 -1.9375 1.109375 -2.296875 curveto
3.890625 -2.296875 lineto
closepath
1.109375 -2.515625 moveto
1.171875 -4 2.015625 -4.25 2.359375 -4.25 curveto
3.375 -4.25 3.484375 -2.90625 3.484375 -2.515625 curveto
1.109375 -2.515625 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 267.79248 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.765625 -4.40625 moveto
0.375 -4.296875 lineto
0.375 -3.984375 lineto
1.015625 -3.984375 1.109375 -3.921875 1.109375 -3.4375 curveto
1.109375 -0.75 lineto
1.109375 -0.3125 1 -0.3125 0.328125 -0.3125 curveto
0.328125 0 lineto
0.640625 -0.015625 1.1875 -0.03125 1.421875 -0.03125 curveto
1.78125 -0.03125 2.125 -0.015625 2.46875 0 curveto
2.46875 -0.3125 lineto
1.796875 -0.3125 1.765625 -0.359375 1.765625 -0.75 curveto
1.765625 -4.40625 lineto
closepath
1.796875 -6.140625 moveto
1.796875 -6.453125 1.5625 -6.671875 1.28125 -6.671875 curveto
0.96875 -6.671875 0.75 -6.40625 0.75 -6.140625 curveto
0.75 -5.875 0.96875 -5.609375 1.28125 -5.609375 curveto
1.5625 -5.609375 1.796875 -5.828125 1.796875 -6.140625 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 270.56009 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.21875 -1.71875 moveto
1.34375 -1.71875 1.34375 -2.71875 1.34375 -2.9375 curveto
1.34375 -3.203125 1.359375 -3.53125 1.5 -3.78125 curveto
1.578125 -3.890625 1.8125 -4.171875 2.21875 -4.171875 curveto
3.078125 -4.171875 3.078125 -3.1875 3.078125 -2.953125 curveto
3.078125 -2.6875 3.078125 -2.359375 2.921875 -2.109375 curveto
2.84375 -2 2.609375 -1.71875 2.21875 -1.71875 curveto
closepath
1.21875 -1.796875 moveto
1.609375 -1.515625 2.03125 -1.484375 2.21875 -1.484375 curveto
3.140625 -1.484375 3.828125 -2.171875 3.828125 -2.9375 curveto
3.828125 -3.3125 3.671875 -3.671875 3.421875 -3.90625 curveto
3.78125 -4.25 4.140625 -4.296875 4.3125 -4.296875 curveto
4.34375 -4.296875 4.390625 -4.296875 4.421875 -4.28125 curveto
4.3125 -4.25 4.25 -4.140625 4.25 -4.015625 curveto
4.25 -3.84375 4.390625 -3.734375 4.546875 -3.734375 curveto
4.640625 -3.734375 4.828125 -3.796875 4.828125 -4.03125 curveto
4.828125 -4.203125 4.71875 -4.515625 4.328125 -4.515625 curveto
4.125 -4.515625 3.6875 -4.453125 3.265625 -4.046875 curveto
2.84375 -4.375 2.4375 -4.40625 2.21875 -4.40625 curveto
1.28125 -4.40625 0.59375 -3.71875 0.59375 -2.953125 curveto
0.59375 -2.515625 0.8125 -2.140625 1.0625 -1.921875 curveto
0.9375 -1.78125 0.75 -1.453125 0.75 -1.09375 curveto
0.75 -0.78125 0.890625 -0.40625 1.203125 -0.203125 curveto
0.59375 -0.046875 0.28125 0.390625 0.28125 0.78125 curveto
0.28125 1.5 1.265625 2.046875 2.484375 2.046875 curveto
3.65625 2.046875 4.6875 1.546875 4.6875 0.765625 curveto
4.6875 0.421875 4.5625 -0.09375 4.046875 -0.375 curveto
3.515625 -0.640625 2.9375 -0.640625 2.328125 -0.640625 curveto
2.078125 -0.640625 1.65625 -0.640625 1.578125 -0.65625 curveto
1.265625 -0.703125 1.0625 -1 1.0625 -1.328125 curveto
1.0625 -1.359375 1.0625 -1.59375 1.21875 -1.796875 curveto
closepath
2.5 1.828125 moveto
1.484375 1.828125 0.796875 1.3125 0.796875 0.78125 curveto
0.796875 0.328125 1.171875 -0.046875 1.609375 -0.0625 curveto
2.203125 -0.0625 lineto
3.0625 -0.0625 4.171875 -0.0625 4.171875 0.78125 curveto
4.171875 1.328125 3.46875 1.828125 2.5 1.828125 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 275.54138 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.5625 -2.515625 moveto
4.5625 -3.375 4.5625 -3.671875 4.25 -4.03125 curveto
4.109375 -4.203125 3.78125 -4.40625 3.203125 -4.40625 curveto
2.359375 -4.40625 1.921875 -3.8125 1.765625 -3.453125 curveto
1.75 -3.453125 lineto
1.75 -6.921875 lineto
0.3125 -6.8125 lineto
0.3125 -6.5 lineto
1.015625 -6.5 1.09375 -6.4375 1.09375 -5.9375 curveto
1.09375 -0.75 lineto
1.09375 -0.3125 0.984375 -0.3125 0.3125 -0.3125 curveto
0.3125 0 lineto
0.671875 -0.015625 1.171875 -0.03125 1.453125 -0.03125 curveto
1.703125 -0.03125 2.21875 -0.015625 2.5625 0 curveto
2.5625 -0.3125 lineto
1.890625 -0.3125 1.78125 -0.3125 1.78125 -0.75 curveto
1.78125 -2.59375 lineto
1.78125 -3.625 2.5 -4.1875 3.125 -4.1875 curveto
3.765625 -4.1875 3.875 -3.65625 3.875 -3.078125 curveto
3.875 -0.75 lineto
3.875 -0.3125 3.765625 -0.3125 3.09375 -0.3125 curveto
3.09375 0 lineto
3.4375 -0.015625 3.953125 -0.03125 4.21875 -0.03125 curveto
4.46875 -0.03125 5 -0.015625 5.328125 0 curveto
5.328125 -0.3125 lineto
4.8125 -0.3125 4.5625 -0.3125 4.5625 -0.609375 curveto
4.5625 -2.515625 lineto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 280.79764 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -3.765625 moveto
1.71875 -6.921875 lineto
0.28125 -6.8125 lineto
0.28125 -6.5 lineto
0.984375 -6.5 1.0625 -6.4375 1.0625 -5.9375 curveto
1.0625 0 lineto
1.3125 0 lineto
1.3125 -0.015625 1.390625 -0.15625 1.671875 -0.625 curveto
1.8125 -0.390625 2.234375 0.109375 2.96875 0.109375 curveto
4.15625 0.109375 5.1875 -0.875 5.1875 -2.15625 curveto
5.1875 -3.421875 4.21875 -4.40625 3.078125 -4.40625 curveto
2.296875 -4.40625 1.875 -3.9375 1.71875 -3.765625 curveto
closepath
1.75 -1.140625 moveto
1.75 -3.1875 lineto
1.75 -3.375 1.75 -3.390625 1.859375 -3.546875 curveto
2.25 -4.109375 2.796875 -4.1875 3.03125 -4.1875 curveto
3.484375 -4.1875 3.84375 -3.921875 4.078125 -3.546875 curveto
4.34375 -3.140625 4.359375 -2.578125 4.359375 -2.15625 curveto
4.359375 -1.796875 4.34375 -1.203125 4.0625 -0.75 curveto
3.84375 -0.4375 3.46875 -0.109375 2.9375 -0.109375 curveto
2.484375 -0.109375 2.125 -0.34375 1.890625 -0.71875 curveto
1.75 -0.921875 1.75 -0.953125 1.75 -1.140625 curveto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 286.61182 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -2.140625 moveto
4.6875 -3.40625 3.703125 -4.46875 2.5 -4.46875 curveto
1.25 -4.46875 0.28125 -3.375 0.28125 -2.140625 curveto
0.28125 -0.84375 1.3125 0.109375 2.484375 0.109375 curveto
3.6875 0.109375 4.6875 -0.875 4.6875 -2.140625 curveto
closepath
2.5 -0.140625 moveto
2.0625 -0.140625 1.625 -0.34375 1.359375 -0.8125 curveto
1.109375 -1.25 1.109375 -1.859375 1.109375 -2.21875 curveto
1.109375 -2.609375 1.109375 -3.140625 1.34375 -3.578125 curveto
1.609375 -4.03125 2.078125 -4.25 2.484375 -4.25 curveto
2.921875 -4.25 3.34375 -4.03125 3.609375 -3.59375 curveto
3.875 -3.171875 3.875 -2.59375 3.875 -2.21875 curveto
3.875 -1.859375 3.875 -1.3125 3.65625 -0.875 curveto
3.421875 -0.421875 2.984375 -0.140625 2.5 -0.140625 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 291.59311 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.890625 -0.78125 moveto
3.890625 0.109375 lineto
5.328125 0 lineto
5.328125 -0.3125 lineto
4.640625 -0.3125 4.5625 -0.375 4.5625 -0.875 curveto
4.5625 -4.40625 lineto
3.09375 -4.296875 lineto
3.09375 -3.984375 lineto
3.78125 -3.984375 3.875 -3.921875 3.875 -3.421875 curveto
3.875 -1.65625 lineto
3.875 -0.78125 3.390625 -0.109375 2.65625 -0.109375 curveto
1.828125 -0.109375 1.78125 -0.578125 1.78125 -1.09375 curveto
1.78125 -4.40625 lineto
0.3125 -4.296875 lineto
0.3125 -3.984375 lineto
1.09375 -3.984375 1.09375 -3.953125 1.09375 -3.078125 curveto
1.09375 -1.578125 lineto
1.09375 -0.796875 1.09375 0.109375 2.609375 0.109375 curveto
3.171875 0.109375 3.609375 -0.171875 3.890625 -0.78125 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 297.12833 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -0.78125 moveto
1.71875 -2.3125 lineto
1.71875 -3.296875 2.140625 -4.1875 2.890625 -4.1875 curveto
2.953125 -4.1875 2.984375 -4.1875 3 -4.171875 curveto
2.96875 -4.171875 2.765625 -4.046875 2.765625 -3.78125 curveto
2.765625 -3.515625 2.984375 -3.359375 3.203125 -3.359375 curveto
3.375 -3.359375 3.625 -3.484375 3.625 -3.796875 curveto
3.625 -4.109375 3.3125 -4.40625 2.890625 -4.40625 curveto
2.15625 -4.40625 1.796875 -3.734375 1.671875 -3.3125 curveto
1.671875 -4.40625 lineto
0.28125 -4.296875 lineto
0.28125 -3.984375 lineto
0.984375 -3.984375 1.0625 -3.921875 1.0625 -3.421875 curveto
1.0625 -0.75 lineto
1.0625 -0.3125 0.953125 -0.3125 0.28125 -0.3125 curveto
0.28125 0 lineto
0.671875 -0.015625 1.140625 -0.03125 1.421875 -0.03125 curveto
1.8125 -0.03125 2.28125 -0.03125 2.6875 0 curveto
2.6875 -0.3125 lineto
2.46875 -0.3125 lineto
1.734375 -0.3125 1.71875 -0.421875 1.71875 -0.78125 curveto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 304.34824 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.71875 -4.453125 moveto
2.71875 -4.71875 2.546875 -4.984375 2.1875 -4.984375 curveto
1.984375 -4.984375 1.84375 -4.890625 1.78125 -4.828125 curveto
1.78125 -4.8125 1.765625 -4.796875 1.75 -4.796875 curveto
1.734375 -4.796875 1.734375 -4.9375 1.734375 -4.96875 curveto
1.734375 -5.296875 1.796875 -6.015625 2.4375 -6.625 curveto
2.546875 -6.75 2.546875 -6.765625 2.546875 -6.796875 curveto
2.546875 -6.875 2.5 -6.90625 2.453125 -6.90625 curveto
2.34375 -6.90625 1.515625 -6.15625 1.515625 -4.96875 curveto
1.515625 -4.375 1.75 -3.921875 2.1875 -3.921875 curveto
2.53125 -3.921875 2.71875 -4.203125 2.71875 -4.453125 curveto
closepath
4.640625 -4.453125 moveto
4.640625 -4.71875 4.46875 -4.984375 4.109375 -4.984375 curveto
3.921875 -4.984375 3.78125 -4.890625 3.71875 -4.828125 curveto
3.703125 -4.8125 3.703125 -4.796875 3.6875 -4.796875 curveto
3.671875 -4.796875 3.671875 -4.9375 3.671875 -4.96875 curveto
3.671875 -5.296875 3.734375 -6.015625 4.359375 -6.625 curveto
4.484375 -6.75 4.484375 -6.765625 4.484375 -6.796875 curveto
4.484375 -6.875 4.4375 -6.90625 4.390625 -6.90625 curveto
4.28125 -6.90625 3.453125 -6.15625 3.453125 -4.96875 curveto
3.453125 -4.375 3.6875 -3.921875 4.109375 -3.921875 curveto
4.46875 -3.921875 4.640625 -4.203125 4.640625 -4.453125 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 309.32953 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.578125 -3.84375 moveto
3.171875 -3.8125 3.109375 -3.515625 3.109375 -3.390625 curveto
3.109375 -3.125 3.296875 -2.9375 3.5625 -2.9375 curveto
3.828125 -2.9375 4.03125 -3.09375 4.03125 -3.40625 curveto
4.03125 -4.078125 3.265625 -4.46875 2.5 -4.46875 curveto
1.25 -4.46875 0.34375 -3.390625 0.34375 -2.15625 curveto
0.34375 -0.875 1.328125 0.109375 2.484375 0.109375 curveto
3.8125 0.109375 4.140625 -1.09375 4.140625 -1.1875 curveto
4.140625 -1.28125 4.03125 -1.28125 4 -1.28125 curveto
3.921875 -1.28125 3.890625 -1.25 3.875 -1.1875 curveto
3.59375 -0.265625 2.9375 -0.140625 2.578125 -0.140625 curveto
2.046875 -0.140625 1.171875 -0.5625 1.171875 -2.171875 curveto
1.171875 -3.796875 1.984375 -4.21875 2.515625 -4.21875 curveto
2.609375 -4.21875 3.234375 -4.203125 3.578125 -3.84375 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 313.75693 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -2.140625 moveto
4.6875 -3.40625 3.703125 -4.46875 2.5 -4.46875 curveto
1.25 -4.46875 0.28125 -3.375 0.28125 -2.140625 curveto
0.28125 -0.84375 1.3125 0.109375 2.484375 0.109375 curveto
3.6875 0.109375 4.6875 -0.875 4.6875 -2.140625 curveto
closepath
2.5 -0.140625 moveto
2.0625 -0.140625 1.625 -0.34375 1.359375 -0.8125 curveto
1.109375 -1.25 1.109375 -1.859375 1.109375 -2.21875 curveto
1.109375 -2.609375 1.109375 -3.140625 1.34375 -3.578125 curveto
1.609375 -4.03125 2.078125 -4.25 2.484375 -4.25 curveto
2.921875 -4.25 3.34375 -4.03125 3.609375 -3.59375 curveto
3.875 -3.171875 3.875 -2.59375 3.875 -2.21875 curveto
3.875 -1.859375 3.875 -1.3125 3.65625 -0.875 curveto
3.421875 -0.421875 2.984375 -0.140625 2.5 -0.140625 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 318.73822 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.09375 -3.421875 moveto
1.09375 -0.75 lineto
1.09375 -0.3125 0.984375 -0.3125 0.3125 -0.3125 curveto
0.3125 0 lineto
0.671875 -0.015625 1.171875 -0.03125 1.453125 -0.03125 curveto
1.703125 -0.03125 2.21875 -0.015625 2.5625 0 curveto
2.5625 -0.3125 lineto
1.890625 -0.3125 1.78125 -0.3125 1.78125 -0.75 curveto
1.78125 -2.59375 lineto
1.78125 -3.625 2.5 -4.1875 3.125 -4.1875 curveto
3.765625 -4.1875 3.875 -3.65625 3.875 -3.078125 curveto
3.875 -0.75 lineto
3.875 -0.3125 3.765625 -0.3125 3.09375 -0.3125 curveto
3.09375 0 lineto
3.4375 -0.015625 3.953125 -0.03125 4.21875 -0.03125 curveto
4.46875 -0.03125 5 -0.015625 5.328125 0 curveto
5.328125 -0.3125 lineto
4.8125 -0.3125 4.5625 -0.3125 4.5625 -0.609375 curveto
4.5625 -2.515625 lineto
4.5625 -3.375 4.5625 -3.671875 4.25 -4.03125 curveto
4.109375 -4.203125 3.78125 -4.40625 3.203125 -4.40625 curveto
2.46875 -4.40625 2 -3.984375 1.71875 -3.359375 curveto
1.71875 -4.40625 lineto
0.3125 -4.296875 lineto
0.3125 -3.984375 lineto
1.015625 -3.984375 1.09375 -3.921875 1.09375 -3.421875 curveto
closepath
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -93.418045 684.1589] concat
gsave [1 0 0 1 324.00446 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -3.984375 moveto
3.15625 -3.984375 lineto
3.15625 -4.296875 lineto
1.71875 -4.296875 lineto
1.71875 -6.125 lineto
1.46875 -6.125 lineto
1.46875 -5.3125 1.171875 -4.25 0.1875 -4.203125 curveto
0.1875 -3.984375 lineto
1.03125 -3.984375 lineto
1.03125 -1.234375 lineto
1.03125 -0.015625 1.96875 0.109375 2.328125 0.109375 curveto
3.03125 0.109375 3.3125 -0.59375 3.3125 -1.234375 curveto
3.3125 -1.796875 lineto
3.0625 -1.796875 lineto
3.0625 -1.25 lineto
3.0625 -0.515625 2.765625 -0.140625 2.390625 -0.140625 curveto
1.71875 -0.140625 1.71875 -1.046875 1.71875 -1.21875 curveto
1.71875 -3.984375 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 327.87891 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.3125 -0.75 moveto
3.359375 -0.359375 3.625 0.0625 4.09375 0.0625 curveto
4.3125 0.0625 4.921875 -0.078125 4.921875 -0.890625 curveto
4.921875 -1.453125 lineto
4.671875 -1.453125 lineto
4.671875 -0.890625 lineto
4.671875 -0.3125 4.421875 -0.25 4.3125 -0.25 curveto
3.984375 -0.25 3.9375 -0.703125 3.9375 -0.75 curveto
3.9375 -2.734375 lineto
3.9375 -3.15625 3.9375 -3.546875 3.578125 -3.921875 curveto
3.1875 -4.3125 2.6875 -4.46875 2.21875 -4.46875 curveto
1.390625 -4.46875 0.703125 -4 0.703125 -3.34375 curveto
0.703125 -3.046875 0.90625 -2.875 1.171875 -2.875 curveto
1.453125 -2.875 1.625 -3.078125 1.625 -3.328125 curveto
1.625 -3.453125 1.578125 -3.78125 1.109375 -3.78125 curveto
1.390625 -4.140625 1.875 -4.25 2.1875 -4.25 curveto
2.6875 -4.25 3.25 -3.859375 3.25 -2.96875 curveto
3.25 -2.609375 lineto
2.734375 -2.578125 2.046875 -2.546875 1.421875 -2.25 curveto
0.671875 -1.90625 0.421875 -1.390625 0.421875 -0.953125 curveto
0.421875 -0.140625 1.390625 0.109375 2.015625 0.109375 curveto
2.671875 0.109375 3.125 -0.296875 3.3125 -0.75 curveto
closepath
3.25 -2.390625 moveto
3.25 -1.390625 lineto
3.25 -0.453125 2.53125 -0.109375 2.078125 -0.109375 curveto
1.59375 -0.109375 1.1875 -0.453125 1.1875 -0.953125 curveto
1.1875 -1.5 1.609375 -2.328125 3.25 -2.390625 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 332.8602 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.578125 -3.84375 moveto
3.171875 -3.8125 3.109375 -3.515625 3.109375 -3.390625 curveto
3.109375 -3.125 3.296875 -2.9375 3.5625 -2.9375 curveto
3.828125 -2.9375 4.03125 -3.09375 4.03125 -3.40625 curveto
4.03125 -4.078125 3.265625 -4.46875 2.5 -4.46875 curveto
1.25 -4.46875 0.34375 -3.390625 0.34375 -2.15625 curveto
0.34375 -0.875 1.328125 0.109375 2.484375 0.109375 curveto
3.8125 0.109375 4.140625 -1.09375 4.140625 -1.1875 curveto
4.140625 -1.28125 4.03125 -1.28125 4 -1.28125 curveto
3.921875 -1.28125 3.890625 -1.25 3.875 -1.1875 curveto
3.59375 -0.265625 2.9375 -0.140625 2.578125 -0.140625 curveto
2.046875 -0.140625 1.171875 -0.5625 1.171875 -2.171875 curveto
1.171875 -3.796875 1.984375 -4.21875 2.515625 -4.21875 curveto
2.609375 -4.21875 3.234375 -4.203125 3.578125 -3.84375 curveto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 337.28757 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.71875 -3.984375 moveto
3.15625 -3.984375 lineto
3.15625 -4.296875 lineto
1.71875 -4.296875 lineto
1.71875 -6.125 lineto
1.46875 -6.125 lineto
1.46875 -5.3125 1.171875 -4.25 0.1875 -4.203125 curveto
0.1875 -3.984375 lineto
1.03125 -3.984375 lineto
1.03125 -1.234375 lineto
1.03125 -0.015625 1.96875 0.109375 2.328125 0.109375 curveto
3.03125 0.109375 3.3125 -0.59375 3.3125 -1.234375 curveto
3.3125 -1.796875 lineto
3.0625 -1.796875 lineto
3.0625 -1.25 lineto
3.0625 -0.515625 2.765625 -0.140625 2.390625 -0.140625 curveto
1.71875 -0.140625 1.71875 -1.046875 1.71875 -1.21875 curveto
1.71875 -3.984375 lineto
closepath
fill
grestore
grestore
grestore
gsave [1 0 0 1 341.16205 146.72] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.53125 -5.875 moveto
1.53125 -6.46875 1.28125 -6.921875 0.859375 -6.921875 curveto
0.515625 -6.921875 0.328125 -6.65625 0.328125 -6.390625 curveto
0.328125 -6.125 0.5 -5.859375 0.859375 -5.859375 curveto
1.0625 -5.859375 1.203125 -5.96875 1.25 -6.015625 curveto
1.265625 -6.046875 1.28125 -6.046875 1.28125 -6.046875 curveto
1.3125 -6.046875 1.3125 -5.90625 1.3125 -5.875 curveto
1.3125 -5.546875 1.234375 -4.828125 0.609375 -4.21875 curveto
0.484375 -4.09375 0.484375 -4.078125 0.484375 -4.046875 curveto
0.484375 -3.984375 0.53125 -3.9375 0.59375 -3.9375 curveto
0.703125 -3.9375 1.53125 -4.6875 1.53125 -5.875 curveto
closepath
3.453125 -5.875 moveto
3.453125 -6.46875 3.21875 -6.921875 2.796875 -6.921875 curveto
2.4375 -6.921875 2.265625 -6.65625 2.265625 -6.390625 curveto
2.265625 -6.125 2.4375 -5.859375 2.796875 -5.859375 curveto
2.984375 -5.859375 3.125 -5.96875 3.1875 -6.015625 curveto
3.203125 -6.046875 3.203125 -6.046875 3.21875 -6.046875 curveto
3.234375 -6.046875 3.234375 -5.90625 3.234375 -5.875 curveto
3.234375 -5.546875 3.171875 -4.828125 2.546875 -4.21875 curveto
2.421875 -4.09375 2.421875 -4.078125 2.421875 -4.046875 curveto
2.421875 -3.984375 2.46875 -3.9375 2.515625 -3.9375 curveto
2.625 -3.9375 3.453125 -4.6875 3.453125 -5.875 curveto
closepath
fill
grestore
grestore
grestore
grestore
grestore
grestore
showpage
%%EOF

%%EndDocument
 @endspecial 0 2291 a Fu(Figure)35 b(1:)48 b(An)36 b(example)g(of)f(a)g
(P)m(artially)g(Directed)h(W)-8 b(alk)36 b(\(the)f(b)s(old)g(blac)m(k)h
(path\))f(of)g(length)g Fr(n)e Fu(=)e(21)0 2508 y(with)38
b Fr(n)285 2523 y Fp(x)364 2508 y Fu(=)d(8,)i Fr(n)646
2523 y Fp(y)681 2532 y Fo(+)771 2508 y Fu(=)e(8,)j(and)f
Fr(n)1248 2523 y Fp(y)1283 2532 y Fn(\000)1374 2508 y
Fu(=)e(5)i(and)g(ha)m(ving)g(six)h(nearest-neigh)m(b)s(our)g(`con)m
(tacts')h(\(sho)m(wn)f(as)0 2724 y(in)m(tert)m(wined)d(\(red\))e(curv)m
(es\))h(so)f Fr(m)28 b Fu(=)f(6.)43 b(The)34 b(horizon)m(tal)f(span)g
(is)g Fr(s)2581 2739 y Fp(x)2652 2724 y Fu(=)28 b(8)k(while)i(the)f(v)m
(ertical)g(span)g(is)0 2941 y Fr(s)46 2956 y Fp(y)119
2941 y Fu(=)f(3.)50 b(One)36 b(end)f(is)h(\014xed)g(at)f(the)g(origin)g
(while)h(forces)g(are)f(applied)h(to)e(the)i(other)f(end)h(\(horizon)m
(tal)0 3158 y Fr(f)48 3173 y Fp(x)124 3158 y Fu(and)d(v)m(ertical)h
Fr(f)709 3173 y Fp(y)750 3158 y Fu(\).)0 3427 y(where)e
Fr(m)p Fu(\()p Fr(')p Fu(\))e(is)i(the)f(n)m(um)m(b)s(er)h(of)e
(nearest-neigh)m(b)s(our)i(con)m(tacts)f(in)g(the)g(PDSA)-11
b(W,)31 b Fr(')p Fu(.)43 b(The)32 b(generating)0 3547
y(function)404 3522 y(^)382 3547 y Fr(G)459 3511 y Fk(IPDSA)-8
b(W)748 3547 y Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g(v)t(;)g(!)t
Fu(\))32 b(is)1244 3776 y(^)1222 3801 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g(v)t(;)g(!)t Fu(\))27 b(=)1895
3676 y Fj(1)1858 3706 y Fl(X)1864 3915 y Fp(n)p Fk(=1)2019
3801 y Fr(Z)2086 3816 y Fp(n)2132 3801 y Fu(\()p Fr(\014)6
b(;)17 b(f)2323 3816 y Fp(x)2366 3801 y Fr(;)g(f)2458
3816 y Fp(y)2500 3801 y Fu(\))p Fr(z)2587 3760 y Fp(n)2651
3801 y Fr(;)1021 b Fu(\(2.4\))0 4060 y(so)38 b Fr(z)k
Fu(can)c(b)s(e)f(considered)j(as)d(fugacit)m(y)i(for)e(the)g(steps)i
(of)e(the)h(w)m(alk)h(and)e(the)h(generating)g(function)g(a)0
4180 y(\\generalised)f(partition)e(function".)53 b(W)-8
b(e)36 b(shall)g(denote)h(the)f(radius)g(of)f(con)m(v)m(ergence)j(of)
3417 4155 y(^)3395 4180 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17
b Fr(h;)g(v)t(;)g(!)t Fu(\))0 4301 y(as)33 b(a)f(function)h(of)f
Fr(z)38 b Fu(as)32 b Fr(z)941 4316 y Fp(c)976 4301 y
Fu(\()p Fr(h;)17 b(v)t(;)g(!)t Fu(\).)42 b(The)34 b(mean)f(v)-5
b(alues)33 b(of)f Fr(n)p Fu(,)h Fr(m)p Fu(,)g Fr(s)2552
4316 y Fp(x)2629 4301 y Fu(and)f Fr(s)2864 4316 y Fp(y)2906
4301 y Fu(,)g(are)h(giv)m(en)h(b)m(y)1217 4556 y Fq(h)p
Fr(n)p Fq(i)28 b Fu(=)f Fr(z)1543 4488 y(@)c Fu(log)1782
4463 y(^)1760 4488 y Fr(G)p 1543 4533 294 4 v 1637 4624
a(@)5 b(z)1847 4556 y(;)114 b Fq(h)p Fr(m)p Fq(i)28 b
Fu(=)f Fr(!)2357 4488 y(@)22 b Fu(log)2595 4463 y(^)2573
4488 y Fr(G)p 2357 4533 V 2442 4624 a(@)5 b(!)2687 4556
y(;)1186 4819 y Fq(h)p Fr(s)1271 4834 y Fp(x)1314 4819
y Fq(i)28 b Fu(=)f Fr(h)1550 4752 y(@)c Fu(log)1789 4727
y(^)1766 4752 y Fr(G)p 1550 4796 V 1640 4887 a(@)5 b(h)1853
4819 y(;)115 b Fq(h)p Fr(s)2080 4834 y Fp(y)2121 4819
y Fq(i)27 b Fu(=)h Fr(v)2352 4752 y(@)22 b Fu(log)2590
4727 y(^)2568 4752 y Fr(G)p 2352 4796 V 2444 4887 a(@)5
b(v)2654 4819 y(:)1018 b Fu(\(2.5\))146 5022 y(W)-8 b(e)33
b(shall)g(de\014ne)g(the)g(n)m(um)m(b)s(er)h(of)d Fr(n)p
Fu(-edge)i(partially-directed)h(w)m(alks)f(with)g Fr(m)g
Fu(nearest-neigh)m(b)s(our)0 5142 y(con)m(tacts,)h(horizon)m(tal)f
(span)g Fr(s)1142 5157 y Fp(x)1218 5142 y Fu(and)g(v)m(ertical)h(span)f
Fr(s)2029 5157 y Fp(y)2103 5142 y Fu(as)f Fr(d)2273 5157
y Fp(n)2320 5142 y Fu(\()p Fr(s)2404 5157 y Fp(x)2448
5142 y Fr(;)17 b(s)2538 5157 y Fp(y)2579 5142 y Fr(;)g(m)p
Fu(\))32 b(so)h(that)1012 5340 y Fr(Z)1079 5355 y Fp(n)1126
5340 y Fu(\()p Fr(f)1212 5355 y Fp(x)1256 5340 y Fr(;)17
b(f)1348 5355 y Fp(y)1389 5340 y Fr(;)g(\014)6 b Fu(\))27
b(=)1712 5246 y Fl(X)1662 5455 y Fp(s)1695 5463 y Fm(x)1734
5455 y Fp(;s)1787 5463 y Fm(y)1823 5455 y Fp(;m)1922
5340 y Fr(d)1973 5355 y Fp(n)2020 5340 y Fu(\()p Fr(s)2104
5355 y Fp(x)2148 5340 y Fr(;)17 b(s)2238 5355 y Fp(y)2279
5340 y Fr(;)g(m)p Fu(\))p Fr(h)2502 5299 y Fp(s)2535
5307 y Fm(x)2577 5340 y Fr(v)2628 5299 y Fp(s)2661 5307
y Fm(y)2702 5340 y Fr(!)2767 5299 y Fp(m)2861 5340 y
Fr(:)811 b Fu(\(2.6\))1926 5682 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 100 a Fu(When)33 b Fr(v)f Fu(=)27
b(1,)33 b(that)f(is)h Fr(f)932 115 y Fp(y)1001 100 y
Fu(=)28 b(0,)k(w)m(e)i(let)1323 338 y Fr(b)1364 353 y
Fp(n)1412 338 y Fu(\()p Fr(s)1496 353 y Fp(x)1540 338
y Fr(;)17 b(m)p Fu(\))27 b(=)1838 243 y Fl(X)1875 452
y Fp(s)1908 460 y Fm(y)1998 338 y Fr(d)2049 353 y Fp(n)2096
338 y Fu(\()p Fr(s)2180 353 y Fp(x)2224 338 y Fr(;)17
b(s)2314 353 y Fp(y)2355 338 y Fr(;)g(m)p Fu(\))27 b
Fr(;)1123 b Fu(\(2.7\))0 660 y(and)32 b(so)h Fr(b)350
675 y Fp(n)397 660 y Fu(\()p Fr(s)481 675 y Fp(x)525
660 y Fr(;)17 b(m)p Fu(\))33 b(is)f(the)h(n)m(um)m(b)s(er)h(of)e
Fr(n)p Fu(-edge)h(partially-directed)g(w)m(alks)h(with)f
Fr(m)g Fu(nearest-neigh)m(b)s(our)0 781 y(con)m(tacts)h(and)e(horizon)m
(tal)h(span)g Fr(s)1304 796 y Fp(x)1348 781 y Fu(.)44
b(So)1210 1010 y Fr(Z)1277 1025 y Fp(n)1324 1010 y Fu(\()p
Fr(f)1410 1025 y Fp(x)1453 1010 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))27 b(=)1824 916 y Fl(X)1819 1125 y Fp(s)1852
1133 y Fm(x)1891 1125 y Fp(;m)1990 1010 y Fr(b)2031 1025
y Fp(n)2078 1010 y Fu(\()p Fr(s)2162 1025 y Fp(x)2206
1010 y Fr(;)17 b(m)p Fu(\))p Fr(h)2429 969 y Fp(s)2462
977 y Fm(x)2505 1010 y Fr(!)2570 969 y Fp(m)2663 1010
y Fr(:)1009 b Fu(\(2.8\))0 1336 y(Let)33 b(the)g(n)m(um)m(b)s(er)h(of)e
(partially-directed)i(w)m(alks)g(of)e(length)h Fr(n)g
Fu(b)s(e)2471 1310 y(\026)2474 1336 y Fr(b)2515 1351
y Fp(n)2595 1336 y Fu(so)g(that)1075 1539 y(\026)1079
1565 y Fr(b)1120 1580 y Fp(n)1195 1565 y Fu(=)1348 1471
y Fl(X)1298 1680 y Fp(s)1331 1688 y Fm(x)1370 1680 y
Fp(;s)1423 1688 y Fm(y)1460 1680 y Fp(;m)1558 1565 y
Fr(d)1609 1580 y Fp(n)1656 1565 y Fu(\()p Fr(s)1740 1580
y Fp(x)1784 1565 y Fr(;)17 b(s)1874 1580 y Fp(y)1915
1565 y Fr(;)g(m)p Fu(\))28 b(=)2218 1471 y Fl(X)2213
1680 y Fp(s)2246 1688 y Fm(x)2285 1680 y Fp(;m)2383 1565
y Fr(b)2424 1580 y Fp(n)2472 1565 y Fu(\()p Fr(s)2556
1580 y Fp(x)2599 1565 y Fr(;)17 b(m)p Fu(\))28 b Fr(:)878
b Fu(\(2.9\))146 1883 y(It)24 b(is)g(adv)-5 b(an)m(tageous)24
b(when)g(w)m(orking)h(with)f(the)g(generating)g(function)g(to)f
(de\014ne)h(di\013eren)m(t)h(v)-5 b(ariables.)0 2003
y(Let)33 b(the)g(generating)g(function)g Fr(G)p Fu(\()p
Fr(x;)17 b(y)1464 2018 y Fk(+)1522 2003 y Fr(;)g(y)1614
2018 y Fj(\000)1673 2003 y Fr(;)g(!)t Fu(\))31 b(b)s(e)i(de\014ned)h
(as)520 2297 y Fr(G)p Fu(\()p Fr(x;)17 b(y)782 2312 y
Fk(+)841 2297 y Fr(;)g(y)933 2312 y Fj(\000)991 2297
y Fr(;)g(!)t Fu(\))27 b(=)1305 2172 y Fj(1)1268 2202
y Fl(X)1274 2411 y Fp(n)p Fk(=1)1731 2202 y Fl(X)1429
2414 y Fp(')19 b Fk(is)g(PDSA)-8 b(W)21 b(of)k(length)c
Fp(n)2193 2297 y Fr(x)2248 2255 y Fp(n)2291 2263 y Fm(x)2330
2255 y Fk(\()p Fp(')p Fk(\))2435 2297 y Fr(y)2483 2312
y Fk(+)2542 2250 y Fp(n)2585 2264 y Fm(y)2617 2279 y
Fo(+)2667 2264 y(\()p Fm(')p Fo(\))2764 2297 y Fr(y)2812
2312 y Fj(\000)2870 2250 y Fp(n)2913 2264 y Fm(y)2945
2279 y Fn(\000)2997 2264 y Fo(\()p Fm(')p Fo(\))3094
2297 y Fr(!)3159 2255 y Fp(m)p Fk(\()p Fp(')p Fk(\))3353
2297 y Fr(:)271 b Fu(\(2.10\))0 2612 y(Then)34 b(making)f(the)g
(substitutions)1808 2829 y Fr(x)28 b Fu(=)f Fr(hz)1756
2975 y(y)1804 2990 y Fk(+)1891 2975 y Fu(=)g Fr(v)t(z)1756
3120 y(y)1804 3135 y Fj(\000)1891 3120 y Fu(=)g Fr(z)t(=v)1512
b Fu(\(2.11\))0 3338 y(demonstrates)34 b(that)1280 3458
y Fr(G)p Fu(\()p Fr(hz)t(;)17 b(z)t(v)t(;)g(z)t(=v)t(;)g(!)t
Fu(\))28 b(=)2137 3433 y(^)2115 3458 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g(v)t(;)g(!)t Fu(\))1030 b(\(2.12\))0
3631 y(Hence)34 b(w)m(e)g(ha)m(v)m(e)516 3873 y Fr(Z)583
3888 y Fp(n)630 3873 y Fu(\()p Fr(f)716 3888 y Fp(x)760
3873 y Fr(;)17 b(f)852 3888 y Fp(y)893 3873 y Fr(;)g(\014)6
b Fu(\))27 b(=)g([)p Fr(z)1242 3832 y Fp(n)1290 3873
y Fu(])p Fr(G)p Fu(\()p Fr(hz)t(;)17 b(z)t(v)t(;)g(z)t(=v)t(;)g(!)t
Fu(\))28 b(=)2208 3806 y(1)p 2162 3851 141 4 v 2162 3942
a(2)p Fr(\031)t(i)2330 3738 y Fl(I)2446 3873 y Fr(G)p
Fu(\()p Fr(hz)t(;)17 b(z)t(v)t(;)g(z)t(=v)t(;)g(!)t Fu(\))3203
3806 y Fr(dz)p 3160 3851 187 4 v 3160 3942 a(z)3209 3913
y Fp(n)p Fk(+1)3357 3873 y Fr(:)267 b Fu(\(2.13\))0 4134
y(It)33 b(will)g(b)s(e)g(useful)g(to)g(de\014ne)1386
4254 y Fr(q)1429 4269 y Fk(+)1516 4254 y Fu(=)27 b Fr(y)1667
4269 y Fk(+)1726 4254 y Fr(!)133 b Fu(and)33 b Fr(q)2153
4269 y Fj(\000)2240 4254 y Fu(=)27 b Fr(y)2391 4269 y
Fj(\000)2450 4254 y Fr(!)1140 b Fu(\(2.14\))0 4428 y(and)1690
4548 y Fr(q)31 b Fu(=)1868 4482 y Fq(p)p 1951 4482 205
4 v 66 x Fr(q)1994 4563 y Fk(+)2053 4548 y Fr(q)2096
4563 y Fj(\000)2183 4548 y Fr(;)1441 b Fu(\(2.15\))0
4721 y(and)33 b(on)f(making)h(the)g(substitutions)i(\(2.11\))1777
4939 y Fr(q)c Fu(=)d Fr(!)t(z)j(:)1528 b Fu(\(2.16\))146
5157 y(W)-8 b(e)33 b(de\014ne)h(the)f(reduced)h(limiting)f(free)g
(energy)h(as)1134 5413 y Fr(\024)p Fu(\()p Fr(f)1276
5428 y Fp(x)1320 5413 y Fr(;)17 b(f)1412 5428 y Fp(y)1453
5413 y Fr(;)g(\014)6 b Fu(\))27 b(=)52 b(lim)1727 5473
y Fp(n)p Fj(!1)1942 5346 y Fu(1)p 1937 5390 59 4 v 1937
5481 a Fr(n)2022 5413 y Fu(log)18 b([)p Fr(Z)2259 5428
y Fp(n)2306 5413 y Fu(\()p Fr(f)2392 5428 y Fp(x)2436
5413 y Fr(;)f(f)2528 5428 y Fp(y)2569 5413 y Fr(;)g(\014)6
b Fu(\)])912 b(\(2.17\))1926 5682 y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 100 a Fu(where)36 b(the)f(existence)i(of)d(the)
h(limit)g(can)g(b)s(e)g(established)i(b)m(y)e(concaten)m(tion)h
(argumen)m(ts.)51 b(The)35 b(radius)0 220 y(of)d(con)m(v)m(ergence)j
Fr(z)695 235 y Fp(c)730 220 y Fu(\()p Fr(h;)17 b(v)t(;)g(!)t
Fu(\))31 b(can)i(b)s(e)g(related)g(to)f(the)h(free)g(energy)h
Fr(\024)p Fu(\()p Fr(f)2662 235 y Fp(x)2706 220 y Fr(;)17
b(f)2798 235 y Fp(y)2839 220 y Fr(;)g(\014)6 b Fu(\))32
b(as)1301 404 y Fr(\024)p Fu(\()p Fr(f)1443 419 y Fp(x)1487
404 y Fr(;)17 b(f)1579 419 y Fp(y)1620 404 y Fr(;)g(\014)6
b Fu(\))27 b(=)g Fq(\000)17 b Fu(log)h Fr(z)2175 419
y Fp(c)2210 404 y Fu(\()p Fr(h;)f(v)t(;)g(!)t Fu(\))26
b Fr(:)1052 b Fu(\(2.18\))146 588 y(It)37 b(will)g(turn)g(out)f(that)g
(there)i(is)f(a)f(single)h(phase)h(transition)e(where)i(the)f(free)g
(energy)g(is)g(singular)0 708 y(as)46 b(function)h(of)f
Fr(\014)51 b Fu(and)46 b(w)m(e)i(shall)e(denote)h(this)g(temp)s
(erature)g(as)f Fr(\014)2657 672 y Fp(t)2737 708 y Fu(=)51
b Fr(\014)2925 672 y Fp(t)2954 708 y Fu(\()p Fr(f)3040
723 y Fp(x)3084 708 y Fr(;)17 b(f)3176 723 y Fp(y)3217
708 y Fu(\).)84 b(In)47 b(general)f(a)0 828 y(sup)s(erscript)34
b(of)e Fr(t)g Fu(implies)i(the)e(critical)h(v)-5 b(alue)32
b(of)g(a)g(parameter,)h(e.g.)43 b(the)33 b(critical)f(horizon)m(tal)h
(force)f(at)0 949 y(a)d(\014xed)h(temp)s(erature)g(and)f(zero)g(v)m
(ertical)h(force)f(is)h Fr(f)1979 913 y Fp(t)1968 973
y(x)2039 949 y Fq(\021)f Fr(f)2204 913 y Fp(t)2193 973
y(x)2237 949 y Fu(\(0)p Fr(;)17 b(\014)6 b Fu(\).)41
b(Ho)m(w)m(ev)m(er,)32 b(w)m(e)e(use)g(a)e(subscript)j
Fr(t)e Fu(to)0 1069 y(denote)f(critical)g(v)-5 b(alues)28
b(of)f(the)h(fugacities.)43 b(The)28 b(v)-5 b(alue)28
b(of)f(the)g(radius)h(of)f(con)m(v)m(ergence)j(of)3417
1044 y(^)3395 1069 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h;)g(v)t(;)g(!)t Fu(\))0 1189 y(as)33 b(a)f(function)h(of)f
Fr(z)38 b Fu(at)32 b Fr(!)957 1204 y Fp(t)1014 1189 y
Fu(=)27 b Fr(e)1162 1153 y Fp(\014)1205 1130 y Fm(t)1270
1189 y Fu(is)33 b Fr(z)1417 1153 y Fp(t)1413 1214 y(c)1448
1189 y Fu(\()p Fr(h;)17 b(v)t Fu(\))27 b(=)h Fr(z)1851
1204 y Fp(c)1886 1189 y Fu(\()p Fr(h;)17 b(v)t(;)g(!)2180
1204 y Fp(t)2209 1189 y Fu(\()p Fr(h;)g(v)t Fu(\)\).)146
1310 y(When)46 b Fr(f)491 1325 y Fp(y)582 1310 y Fu(=)i(0)d(w)m(e)h
(shall)g(set)g Fr(y)52 b Fu(=)c Fr(y)1634 1325 y Fk(+)1742
1310 y Fu(=)h Fr(y)1915 1325 y Fj(\000)2018 1310 y Fu(and)c(so)h(the)f
(generating)h(function)f(w)m(e)h(need)g(to)0 1430 y(consider)37
b(for)f(the)h(case)g(where)g(there)g(is)f(no)g(v)m(ertical)i(stretc)m
(hing)f(force)g(is)f Fr(G)p Fu(\()p Fr(x;)17 b(y)t(;)g(y)t(;)g(!)t
Fu(\),)34 b(noting)i(that)0 1551 y Fr(G)p Fu(\()p Fr(hz)t(;)17
b(z)t(;)g(z)t(;)g(!)t Fu(\))28 b(=)707 1525 y(^)685 1551
y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t
Fu(\),)31 b(where)712 1785 y(^)690 1810 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)1361
1686 y Fj(1)1324 1716 y Fl(X)1330 1925 y Fp(n)p Fk(=1)1485
1810 y Fr(Z)1552 1825 y Fp(n)1598 1810 y Fu(\()p Fr(f)1684
1825 y Fp(x)1728 1810 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))p Fr(z)2013 1769 y Fp(n)2087 1810 y Fu(=)2227
1716 y Fl(X)2191 1925 y Fp(n;s)2287 1933 y Fm(x)2325
1925 y Fp(;m)2424 1810 y Fr(b)2465 1825 y Fp(n)2512 1810
y Fu(\()p Fr(s)2596 1825 y Fp(x)2640 1810 y Fr(;)17 b(m)p
Fu(\))p Fr(h)2863 1769 y Fp(s)2896 1777 y Fm(x)2939 1810
y Fr(!)3004 1769 y Fp(m)3070 1810 y Fr(z)3119 1769 y
Fp(n)3183 1810 y Fr(:)441 b Fu(\(2.19\))0 2089 y(Note)33
b(that)f(for)g Fr(f)644 2104 y Fp(y)713 2089 y Fu(=)c(0)k(w)m(e)i(ha)m
(v)m(e)1776 2209 y Fr(q)d Fu(=)d Fr(y)t(!)i(;)1527 b
Fu(\(2.20\))0 2368 y(whic)m(h)48 b(agrees)e(with)h(\(2.16\))e(when)i
(the)g(the)f(substitutions)i(\(2.11\))e(are)g(made)g(since)i
Fr(y)54 b Fu(=)c Fr(z)h Fu(when)0 2488 y Fr(y)31 b Fu(=)c
Fr(y)230 2503 y Fk(+)317 2488 y Fu(=)g Fr(y)468 2503
y Fj(\000)559 2488 y Fu(\(that)33 b(is,)g Fr(v)e Fu(=)d(1\).)146
2609 y(In)22 b(subsequen)m(t)j(calculations)e(it)f(is)g(con)m(v)m
(enien)m(t)i(to)e(de\014ne)h(the)f(generating)g(function)g
Fr(G)3363 2624 y Fp(r)3401 2609 y Fu(\()p Fr(x;)17 b(y)3586
2624 y Fk(+)3645 2609 y Fr(;)g(y)3737 2624 y Fj(\000)3795
2609 y Fr(;)g(!)t Fu(\))0 2729 y(for)30 b(w)m(alks)i(that)e(ha)m(v)m(e)
h Fr(r)i Fu(v)m(ertical)f(steps)g(immediately)g(after)e(the)h(\014rst)f
(horizon)m(tal)h(step,)h(where)f Fq(\0001)d Fr(<)0 2849
y(r)39 b(<)d Fq(1)p Fu(.)59 b(It)37 b(will)i(also)e(b)s(e)h(con)m(v)m
(enien)m(t)j(to)c(in)m(tro)s(duce)i(the)f(generating)g(function)g
Fr(G)3189 2813 y Fk(+)3189 2874 y Fp(r)3248 2849 y Fu(\()p
Fr(x;)17 b(y)3433 2864 y Fk(+)3492 2849 y Fr(;)g(y)3584
2864 y Fj(\000)3642 2849 y Fr(;)g(!)t Fu(\))35 b(=)0
2970 y Fr(G)77 2985 y Fp(r)115 2970 y Fu(\()p Fr(x;)17
b(y)300 2985 y Fk(+)359 2970 y Fr(;)g(y)451 2985 y Fj(\000)509
2970 y Fr(;)g(!)t Fu(\))30 b(for)h(w)m(alks)i(that)e(ha)m(v)m(e)h
Fr(r)e Fq(\025)f Fu(0)i(steps)h(after)f(the)h(\014rst)g(horizon)m(tal)f
(step)h(in)g(the)g(p)s(ositiv)m(e)0 3090 y Fr(y)45 b
Fu(direction)e(and)g Fr(G)786 3054 y Fj(\000)786 3115
y Fp(r)845 3090 y Fu(\()p Fr(x;)17 b(y)1030 3105 y Fk(+)1088
3090 y Fr(;)g(y)1180 3105 y Fj(\000)1239 3090 y Fr(;)g(!)t
Fu(\))43 b(=)h Fr(G)1626 3105 y Fj(\000)p Fp(r)1718 3090
y Fu(\()p Fr(x;)17 b(y)1903 3105 y Fk(+)1962 3090 y Fr(;)g(y)2054
3105 y Fj(\000)2112 3090 y Fr(;)g(!)t Fu(\))42 b(that)f(ha)m(v)m(e)j
Fr(r)j Fq(\025)d Fu(0)e(steps)i(after)e(the)g(\014rst)0
3211 y(horizon)m(tal)33 b(step)g(in)g(the)g(negativ)m(e)h
Fr(y)i Fu(direction.)44 b(Clearly)-8 b(,)34 b Fr(G)2294
3169 y Fk(+)2294 3235 y(0)2380 3211 y Fu(=)28 b Fr(G)2561
3169 y Fj(\000)2561 3235 y Fk(0)2620 3211 y Fu(.)146
3331 y(In)33 b(the)g(functional)g(equation)h(sections)g(w)m(e)f(need)
1331 3585 y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))27 b(=)1736
3461 y Fj(1)1699 3490 y Fl(X)1664 3700 y Fp(r)r Fk(=)p
Fj(\0001)1894 3585 y Fr(G)1971 3600 y Fp(r)2009 3585
y Fu(\()p Fr(x;)17 b(y)t(;)g(y)t(;)g(!)t Fu(\))p Fr(p)2490
3544 y Fp(r)2542 3585 y Fr(;)1082 b Fu(\(2.21\))1292
3951 y Fr(F)1369 3910 y Fk(+)1428 3951 y Fu(\()p Fr(p)p
Fu(\))28 b(=)1721 3827 y Fj(1)1684 3857 y Fl(X)1694 4066
y Fp(r)r Fk(=0)1845 3951 y Fr(G)1922 3910 y Fk(+)1922
3976 y Fp(r)1981 3951 y Fu(\()p Fr(x;)17 b(y)2166 3966
y Fk(+)2224 3951 y Fr(;)g(y)2316 3966 y Fj(\000)2375
3951 y Fr(;)g(!)t Fu(\))p Fr(p)2571 3910 y Fp(r)3651
3951 y Fu(\(2.22\))0 4192 y(and)1265 4363 y Fr(F)1342
4322 y Fj(\000)1401 4363 y Fu(\()p Fr(p)p Fu(\))27 b(=)1694
4239 y Fj(1)1657 4269 y Fl(X)1667 4478 y Fp(r)r Fk(=1)1817
4363 y Fr(G)1894 4322 y Fj(\000)1894 4388 y Fp(r)1953
4363 y Fu(\()p Fr(x;)17 b(y)2138 4378 y Fk(+)2197 4363
y Fr(;)g(y)2289 4378 y Fj(\000)2347 4363 y Fr(;)g(!)t
Fu(\))p Fr(p)2543 4322 y Fp(r)2608 4363 y Fr(:)1016 b
Fu(\(2.23\))0 4604 y(Note)33 b(the)g(asymmetry)h(of)e(the)h(summation)h
(index)g(in)f(the)g(\014nal)f(t)m(w)m(o)i(de\014nitions.)45
b(Note)32 b(that)1125 4858 y Fr(G)p Fu(\()p Fr(x;)17
b(y)t(;)g(y)t(;)g(!)t Fu(\))25 b(=)i Fr(F)14 b Fu(\(1\))27
b(=)2167 4733 y Fj(1)2130 4763 y Fl(X)2095 4972 y Fp(r)r
Fk(=)p Fj(\0001)2326 4858 y Fr(G)2403 4873 y Fp(r)2441
4858 y Fu(\()p Fr(x;)17 b(y)t(;)g(!)t Fu(\))874 b(\(2.24\))0
5130 y(and)720 5302 y Fr(G)p Fu(\()p Fr(x;)17 b(y)982
5317 y Fk(+)1040 5302 y Fr(;)g(y)1132 5317 y Fj(\000)1191
5302 y Fr(;)g(!)t Fu(\))26 b(=)i Fr(F)1545 5260 y Fk(+)1604
5302 y Fu(\(1\))21 b(+)h Fr(F)1925 5260 y Fj(\000)1984
5302 y Fu(\(1\))27 b(=)2312 5177 y Fj(1)2275 5207 y Fl(X)2240
5416 y Fp(r)r Fk(=)p Fj(\0001)2471 5302 y Fr(G)2548 5317
y Fp(r)2586 5302 y Fu(\()p Fr(x;)17 b(y)2771 5317 y Fk(+)2829
5302 y Fr(;)g(y)2921 5317 y Fj(\000)2980 5302 y Fr(;)g(!)t
Fu(\))26 b Fr(:)471 b Fu(\(2.25\))1926 5682 y(7)p eop
end
%%Page: 8 8
TeXDict begin 8 7 bop 0 108 a Ft(3)161 b(Pulling)53 b(in)g(the)g
(preferred)f(direction)f(\()p Fi(f)2779 129 y Fr(y)2875
108 y Fh(=)40 b(0)p Ft(\))0 327 y Fu(In)33 b(this)g(section)h(w)m(e)f
(will)h(b)s(egin)f(discussing)h(the)f(case)h(of)e(horizon)m(tal)h
(pulling)g(force)g(where)h Fr(f)3520 342 y Fp(y)3589
327 y Fu(=)27 b(0.)0 729 y Fg(3.1)135 b(No)46 b(self-in)l(teractions)h
(\()p Ff(!)38 b Fy(=)33 b(1)p Fg(\))0 913 y Fu(Let)28
b(us)h(b)s(egin)g(b)m(y)g(considering)h(the)e(case)i(of)d(no)i(in)m
(teractions)g(and)g(no)f(force)g(so)h(that)f Fr(J)37
b Fu(=)27 b Fr(f)3428 928 y Fp(x)3500 913 y Fu(=)g Fr(f)3651
928 y Fp(y)3721 913 y Fu(=)g(0.)0 1034 y(It)i(is)g(easy)h(to)e(see)i
(that)f(lim)1019 1049 y Fp(n)p Fj(!1)1224 1034 y Fr(n)1282
998 y Fj(\000)p Fk(1)1393 1034 y Fu(log)1532 1007 y(\026)1536
1034 y Fr(b)1577 1049 y Fp(n)1652 1034 y Fu(=)e(log)q(\(1)14
b(+)2072 951 y Fq(p)p 2156 951 49 4 v 2156 1034 a Fu(2)o(\).)43
b(Let)28 b(us)i(consider)g(the)f(case)h(of)e(no)h(v)m(ertical)0
1154 y(force)44 b(so)g(that)f Fr(f)648 1169 y Fp(y)737
1154 y Fu(=)j(0)e(and)f Fr(v)51 b Fu(=)46 b(1.)77 b(As)45
b(discussed)h(in)e(the)g(previous)h(section)g(w)m(e)g(are)f(in)m
(terested)0 1285 y(in)c(the)h(generating)g(function)1194
1259 y(^)1171 1285 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))40 b(=)g Fr(G)p Fu(\()p
Fr(hz)t(;)17 b(z)t(;)g(z)t(;)g(!)t Fu(\).)67 b(As)41
b(de\014ned)h(ab)s(o)m(v)m(e)f(this)g(generating)0 1405
y(function)d(con)m(v)m(erges)h(when)g Fr(z)h(<)c(z)1330
1420 y Fp(c)1365 1405 y Fu(\()p Fr(h;)17 b Fu(1)p Fr(;)g(!)t
Fu(\).)56 b(Recall)37 b(that)g(the)h(free)g(energy)g
Fr(\024)p Fu(\()p Fr(f)3119 1420 y Fp(x)3163 1405 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))36 b(is)i(giv)m(en)g(b)m(y)0
1525 y Fr(\024)28 b Fu(=)f Fq(\000)17 b Fu(log)h Fr(z)469
1540 y Fp(c)534 1525 y Fu(\(assuming)31 b(that)f(the)g(limit)g
(de\014ning)h(the)g(free)f(energy)h(exists,)h(whic)m(h)g(will)e(b)s(e)g
(pro)m(v)m(ed)i(in)0 1646 y(a)g(later)h(section\).)146
1766 y(When)38 b Fr(!)g Fu(=)c(1)j(\(whic)m(h)h(corresp)s(onds)g(to)e
(turning)h(o\013)f(the)h(v)m(ertex-v)m(ertex)j(in)m(teraction)e(and)f
(hence)0 1886 y(to)32 b(go)s(o)s(d)g(solv)m(en)m(t)i(conditions\),)1240
1861 y(^)1218 1886 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b(1)p
Fr(;)g(h;)g Fu(1\))32 b(satis\014es)i(the)f(equation)670
2097 y(^)648 2122 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g
Fu(1)p Fr(;)g Fu(1\))27 b(=)h Fr(hz)t Fu(\(1)22 b(+)1602
2097 y(^)1579 2122 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h;)g Fu(1)p Fr(;)g Fu(1\)\))22 b(+)2248 2054 y(2)p
Fr(hz)2402 2018 y Fk(2)p 2235 2099 221 4 v 2235 2190
a Fu(1)g Fq(\000)g Fr(z)2465 2122 y Fu(\(1)g(+)2694 2097
y(^)2672 2122 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g
Fu(1)p Fr(;)g Fu(1\)\))27 b Fr(;)447 b Fu(\(3.1\))0 2332
y(so)33 b(that)1175 2472 y(1)22 b(+)1366 2446 y(^)1344
2472 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p
Fr(;)g Fu(1\))27 b(=)2220 2404 y(1)22 b Fq(\000)h Fr(z)p
1973 2449 716 4 v 1973 2540 a Fu(1)f Fq(\000)g Fr(z)27
b Fq(\000)c Fr(hz)k Fq(\000)22 b Fr(hz)2647 2511 y Fk(2)2698
2472 y Fr(:)974 b Fu(\(3.2\))0 2666 y(F)-8 b(rom)33 b(this)h(w)m(e)h
(can)e(readily)i(calculate)f(the)g(ratio)f Fq(h)p Fr(s)1991
2681 y Fp(x)2035 2666 y Fq(i)p Fr(=)p Fq(h)p Fr(n)p Fq(i)f
Fu(and)i(tak)m(e)g(the)g(thermo)s(dynamic)h(limit)f(b)m(y)0
2787 y(letting)f Fr(z)f Fq(!)c Fr(z)559 2802 y Fp(c)594
2787 y Fu(\()p Fr(h;)17 b Fu(1)p Fr(;)g Fu(1\))31 b(where)1202
3033 y Fr(z)1247 3048 y Fp(c)1282 3033 y Fu(\()p Fr(h;)17
b Fu(1)p Fr(;)g Fu(1\))27 b(=)1740 2884 y Fq(p)p 1823
2884 490 4 v 82 x Fr(h)1879 2937 y Fk(2)1941 2966 y Fu(+)22
b(6)p Fr(h)g Fu(+)g(1)g Fq(\000)g Fu(1)g Fq(\000)h Fr(h)p
1740 3011 922 4 v 2148 3102 a Fu(2)p Fr(h)2671 3033 y(:)1001
b Fu(\(3.3\))0 3241 y(In)49 b(Figure)g(2)f(is)h(a)f(plot)h(of)f
Fr(\014)6 b(f)1223 3256 y Fp(x)1315 3241 y Fu(against)49
b(lim)1803 3256 y Fp(z)s Fj(!)p Fp(z)1943 3264 y Fm(c)1979
3241 y Fq(h)p Fr(s)2064 3256 y Fp(x)2107 3241 y Fq(i)p
Fr(=)p Fq(h)p Fr(n)p Fq(i)p Fu(.)91 b(Note)49 b(that)f(the)h
(stress-strain)h(curv)m(e)0 3361 y(is)45 b(qualitativ)m(ely)i(the)f
(same)g(as)f(that)f(found)h(exp)s(erimen)m(tally)j(for)c(p)s(olyst)m
(yrene)j(in)f(a)e(go)s(o)s(d)g(solv)m(en)m(t)0 3481 y(\(toluene\))33
b(\(Gunari)f Fs(et)k(al)42 b Fu(2007,)32 b(Figure)g(1\).)146
3602 y(F)-8 b(or)29 b Fr(!)i Fq(6)p Fu(=)d(1)h(the)i(situation)f(is)g
(more)g(di\016cult)h(and)f(w)m(e)h(deriv)m(e)g(some)g(results)g(ab)s
(out)e(the)i(generating)0 3722 y(function)i(in)g(the)g(follo)m(wing)g
(sections.)0 4124 y Fg(3.2)135 b(Con)l(v)l(exit)l(y)47
b(and)e(con)l(tin)l(uit)l(y)h(for)f Ff(!)37 b Fx(6)p
Fy(=)d(1)0 4309 y Fu(In)49 b(this)g(section)h(w)m(e)g(establish)g(the)f
(existence)i(of)e(the)g(thermo)s(dynamic)h(limit)f(for)f(the)h
(canonical)0 4429 y(problem,)29 b(and)e(pro)m(v)m(e)h(con)m(v)m(exit)m
(y)i(and)d(con)m(tin)m(uit)m(y)-8 b(.)44 b(This)28 b(implies)g(con)m
(tin)m(uit)m(y)h(of)d(the)i(phase)g(b)s(oundary)-8 b(.)146
4549 y(It)46 b(will)g(b)s(e)g(con)m(v)m(enien)m(t)i(to)d(consider)i(a)e
(subset)i(of)e(the)h(w)m(alks)h(coun)m(ted)g(b)m(y)3168
4524 y(^)3146 4549 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\).)81 b(Let)0 4670 y Fr(a)51
4685 y Fp(n)98 4670 y Fu(\()p Fr(m;)17 b(s)311 4685 y
Fp(x)355 4670 y Fu(\))39 b(b)s(e)h(the)g(n)m(um)m(b)s(er)h(of)e
(partially)h(directed)h(w)m(alks)h(with)e Fr(n)g Fu(edges,)i
Fr(m)e Fu(con)m(tacts)h(and)e Fr(x)p Fu(-span)0 4790
y(equal)28 b(to)f Fr(s)412 4805 y Fp(x)483 4790 y Fu(whic)m(h)h
(satisfy)g(the)g(additional)f(constrain)m(t)h(that)f(their)h(last)f
(step)h(is)f(in)h(the)f(east)h(direction.)0 4911 y(\(That)35
b(is,)g(b)s(oth)g(the)g(\014rst)g(and)f(last)h(steps)h(are)f(east)g
(steps.\))50 b(These)37 b(w)m(alks)f(can)f(b)s(e)f(concatenated)i(b)m
(y)0 5031 y(iden)m(tifying)j(the)f(last)g(v)m(ertex)h(of)e(one)h(w)m
(alk)h(with)f(the)g(\014rst)g(v)m(ertex)i(of)d(the)h(other)g(w)m(alk)g
(whic)m(h)h(yields)0 5151 y(the)33 b(inequalit)m(y)732
5339 y Fr(a)783 5354 y Fp(n)826 5363 y Fo(1)861 5354
y Fk(+)p Fp(n)959 5363 y Fo(2)997 5339 y Fu(\()p Fr(s)1081
5354 y Fp(x)1125 5339 y Fr(;)17 b(m)p Fu(\))27 b Fq(\025)1471
5245 y Fl(X)1425 5454 y Fp(s)1458 5463 y Fm(x;)p Fo(1)1545
5454 y Fp(;m)1627 5463 y Fo(1)1679 5339 y Fr(a)1730 5354
y Fp(n)1773 5363 y Fo(1)1811 5339 y Fu(\()p Fr(s)1895
5354 y Fp(x;)p Fk(1)1994 5339 y Fr(;)17 b(m)2123 5354
y Fk(1)2163 5339 y Fu(\))p Fr(a)2252 5354 y Fp(n)2295
5363 y Fo(2)2333 5339 y Fu(\()p Fr(s)2417 5354 y Fp(x)2483
5339 y Fq(\000)23 b Fr(s)2629 5354 y Fp(x;)p Fk(1)2727
5339 y Fr(;)17 b(m)23 b Fq(\000)f Fr(m)3063 5354 y Fk(1)3103
5339 y Fu(\))p Fr(:)531 b Fu(\(3.4\))1926 5682 y(8)p
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 887 2126 a
 /PSfrag where{pop(bfx)[[0(Bl)1 0]](lsn)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/stress_strain_w1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:20:21 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
65.028702 6.002931 317.931458 375.99707 rc
74 66 381 OPL
66 374
66 366
66 359
66 351
66 344
66 336
66 329
67 321
67 315
68 306
68 300
69 291
71 287
73 277
75 274
79 267
81 263
82 262
90 253
97 247
100 245
104 243
113 237
123 232
126 230
129 229
141 224
154 219
156 218
159 217
172 212
179 210
188 207
201 202
203 201
205 201
219 196
230 192
236 190
246 187
252 185
255 184
267 179
280 175
283 174
288 172
298 168
305 165
313 162
324 157
327 155
331 153
340 148
350 142
352 140
356 137
362 131
365 127
369 120
374 112
375 109
378 98
378 96
379 83
379 82
380 68
380 67
381 53
381 53
381 38
381 38
381 23
381 23
381 8
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 349 195 OPL
349 197
1 286 195 OPL
286 197
1 223 195 OPL
223 197
1 160 195 OPL
160 197
1 97 195 OPL
97 197
1 66 195 OPL
381 195
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
% ADR was here
% 211 217 29 21 rc
% 215.0 234.0 moveto
211 237 29 21 rc
215.0 254.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 18.0 scalefont setfont
(lsn) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 66 195 OPL
66 199
Q
q
1 129 195 OPL
129 199
-5.0 -5.0 translate
126.0 219.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 192 195 OPL
192 199
-5.0 -5.0 translate
189.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 255 195 OPL
255 199
-5.0 -5.0 translate
252.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 318 195 OPL
318 199
-5.0 -5.0 translate
315.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 381 195 OPL
381 199
-5.0 -5.0 translate
378.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
Q
q
1 66 27 OPL
63 27
1 66 45 OPL
63 45
1 66 64 OPL
63 64
1 66 83 OPL
63 83
1 66 120 OPL
63 120
1 66 139 OPL
63 139
1 66 157 OPL
63 157
1 66 176 OPL
63 176
1 66 213 OPL
63 213
1 66 232 OPL
63 232
1 66 250 OPL
63 250
1 66 269 OPL
63 269
1 66 306 OPL
63 306
1 66 325 OPL
63 325
1 66 344 OPL
63 344
1 66 362 OPL
63 362
1 66 381 OPL
66 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
0 89 30 21 rc
4.0 106.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 18.0 scalefont setfont
(bfx) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 66 381 OPL
60 381
-5.0 -5.0 translate
q
40 380 7 13 rc
40.0 391.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -206 1090 806 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -206 1090 806
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 1000.0 def
		/quotedbl 500.0 def
		/numbersign 792.0 def
		/dollar 450.0 def
		/percent 500.0 def
		/ampersand 1000.0 def
		/quoteright 500.0 def
		/parenleft 1000.0 def
		/parenright 1000.0 def
		/asterisk 1000.0 def
		/plus 1000.0 def
		/comma 660.0 def
		/hyphen 1090.0 def
		/period 1090.0 def
		/slash 1090.0 def
		/zero 1090.0 def
		/one 1090.0 def
		/two 1000.0 def
		/three 1000.0 def
		/four 1000.0 def
		/five 1000.0 def
		/six 950.0 def
		/seven 1000.0 def
		/eight 950.0 def
		/nine 1000.0 def
		/colon 1000.0 def
		/semicolon 1000.0 def
		/less 1000.0 def
		/equal 1000.0 def
		/greater 1000.0 def
		/question 1000.0 def
		/at 1000.0 def
		/A 1000.0 def
		/B 1000.0 def
		/C 1000.0 def
		/D 1000.0 def
		/E 1000.0 def
		/F 1000.0 def
		/G 1000.0 def
		/H 1000.0 def
		/I 1000.0 def
		/J 1000.0 def
		/K 1000.0 def
		/L 1000.0 def
		/M 1000.0 def
		/N 1000.0 def
		/O 1000.0 def
		/P 1000.0 def
		/Q 500.0 def
		/R 1000.0 def
		/S 1000.0 def
		/T 790.0 def
		/U 1000.0 def
		/V 1000.0 def
		/W 1000.0 def
		/X 1000.0 def
		/Y 738.0 def
		/Z 536.0 def
		/bracketleft 430.0 def
		/backslash 500.0 def
		/bracketright 1000.0 def
		/asciicircum 1000.0 def
		/underscore 1000.0 def
		/quoteleft 500.0 def
		/a 750.0 def
		/b 750.0 def
		/c 750.0 def
		/d 1000.0 def
		/e 750.0 def
		/f 750.0 def
		/g 750.0 def
		/h 750.0 def
		/i 750.0 def
		/j 750.0 def
		/k 1000.0 def
		/l 1000.0 def
		/m 624.0 def
		/n 624.0 def
		/o 624.0 def
		/p 624.0 def
		/q 624.0 def
		/r 624.0 def
		/s 624.0 def
		/t 624.0 def
		/u 500.0 def
		/v 500.0 def
		/w 500.0 def
		/x 500.0 def
		/y 500.0 def
		/z 500.0 def
		/braceleft 500.0 def
		/bar 500.0 def
		/braceright 500.0 def
		/asciitilde 500.0 def
		/exclamdown 500.0 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 500.0 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 500.0 def
		/quotedblleft 500.0 def
		/guillemotleft 500.0 def
		/guilsinglleft 500.0 def
		/guilsinglright 500.0 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 1090.0 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 500.0 def
		/paragraph 500.0 def
		/bullet 500.0 def
		/quotesinglbase 500.0 def
		/quotedblbase 500.0 def
		/quotedblright 500.0 def
		/guillemotright 500.0 def
		/ellipsis 500.0 def
		/perthousand 500.0 def
		/questiondown 500.0 def
		/grave 500.0 def
		/acute 500.0 def
		/circumflex 500.0 def
		/tilde 500.0 def
		/macron 500.0 def
		/breve 500.0 def
		/dotaccent 500.0 def
		/dieresis 500.0 def
		/ring 500.0 def
		/cedilla 500.0 def
		/hungarumlaut 500.0 def
		/ogonek 500.0 def
		/caron 500.0 def
		/emdash 1090.0 def
		/AE 500.0 def
		/ordfeminine 500.0 def
		/Lslash 500.0 def
		/Oslash 500.0 def
		/OE 500.0 def
		/ordmasculine 500.0 def
		/ae 500.0 def
		/dotlessi 500.0 def
		/lslash 500.0 def
		/oslash 500.0 def
		/oe 500.0 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
464 300 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/quotedbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/numbersign
		{
622 128 moveto
568 74 lineto
396 246 lineto
224 75 lineto
170 129 lineto
342 300 lineto
170 471 lineto
224 525 lineto
396 354 lineto
568 526 lineto
622 472 lineto
450 300 lineto
622 128 lineto
closepath
fill
		} def

	/dollar
		{
281 300 moveto
281 285 275 272 264 260  curveto
252 248 239 243 224 243  curveto
210 243 198 248 186 258  curveto
174 268 168 282 168 300  curveto
168 315 173 328 184 339  curveto
195 350 208 356 224 356  curveto
241 356 255 349 267 337  curveto
276 325 281 313 281 300  curveto
closepath
fill
		} def

	/percent
		{
334 300 moveto
334 277 325 257 308 240  curveto
291 223 271 215 249 215  curveto
229 215 210 222 194 236  curveto
174 252 165 274 165 300  curveto
165 323 173 343 189 359  curveto
205 375 225 384 249 384  curveto
275 384 296 374 313 355  curveto
327 338 334 320 334 300  curveto
closepath
fill
		} def

	/ampersand
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
fill
		} def

	/quoteright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/parenleft
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
fill
		} def

	/parenright
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
462 300 moveto
222 541 lineto
222 60 lineto
462 300 lineto
closepath
fill
		} def

	/asterisk
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/plus
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
830 8 lineto
closepath
fill
		} def

	/comma
		{
492 12 moveto
466 -30 lineto
387 -2 336 34 314 79  curveto
296 113 287 176 287 267  curveto
287 418 lineto
287 455 282 483 273 501  curveto
264 519 244 538 214 558  curveto
168 588 lineto
194 630 lineto
259 597 lineto
308 572 340 540 356 502  curveto
368 472 374 427 374 365  curveto
374 349 374 325 374 293  curveto
373 261 373 238 373 222  curveto
373 125 397 63 446 36  curveto
453 32 468 24 492 12  curveto
closepath
fill
		} def

	/hyphen
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/period
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
678 274 moveto
412 274 lineto
412 326 lineto
678 326 lineto
678 274 lineto
closepath
fill
		} def

	/slash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
662 518 moveto
486 82 lineto
428 82 lineto
604 518 lineto
662 518 lineto
closepath
fill
		} def

	/zero
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
667 300 moveto
667 266 655 238 631 214  curveto
607 190 578 178 545 178  curveto
511 178 483 190 459 214  curveto
435 238 423 266 423 300  curveto
423 333 435 362 459 386  curveto
483 410 511 422 545 422  curveto
578 422 607 410 631 386  curveto
655 362 667 333 667 300  curveto
closepath
615 300 moveto
615 319 608 335 594 349  curveto
580 363 564 370 545 370  curveto
525 370 509 363 495 349  curveto
481 335 475 319 475 300  curveto
475 280 481 264 495 250  curveto
509 236 525 230 545 230  curveto
564 230 580 236 594 250  curveto
608 264 615 280 615 300  curveto
closepath
fill
		} def

	/one
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
602 323 moveto
602 308 596 295 585 283  curveto
573 271 560 266 545 266  curveto
531 266 519 271 507 281  curveto
495 291 489 305 489 323  curveto
489 338 494 351 505 362  curveto
516 373 529 379 545 379  curveto
562 379 576 372 588 360  curveto
597 348 602 336 602 323  curveto
closepath
fill
		} def

	/two
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
770 396 740 456 687 505  curveto
634 553 572 578 500 578  curveto
428 578 365 553 312 505  curveto
259 456 229 396 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 203 259 143 312 95  curveto
365 46 428 22 500 22  curveto
572 22 634 46 687 95  curveto
740 143 770 203 777 274  curveto
closepath
fill
		} def

	/three
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 372 753 434 705 487  curveto
656 540 596 570 526 577  curveto
526 23 lineto
596 29 656 59 705 112  curveto
753 165 778 228 778 300  curveto
closepath
474 23 moveto
474 577 lineto
403 570 343 540 295 487  curveto
246 434 222 372 222 300  curveto
222 228 246 165 295 112  curveto
343 59 403 29 474 23  curveto
closepath
fill
		} def

	/four
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
771 392 744 449 697 497  curveto
649 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
407 571 350 544 303 497  curveto
255 449 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 649 55 697 103  curveto
744 150 771 207 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 207 255 150 303 103  curveto
350 55 407 29 474 23  curveto
closepath
fill
		} def

	/five
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
677 514 moveto
625 556 566 578 500 578  curveto
433 578 374 556 323 514  curveto
500 337 lineto
677 514 lineto
closepath
778 300 moveto
778 366 756 425 714 477  curveto
537 300 lineto
714 123 lineto
756 174 778 233 778 300  curveto
closepath
463 300 moveto
286 477 lineto
243 425 222 366 222 300  curveto
222 233 243 174 286 123  curveto
463 300 lineto
closepath
677 86 moveto
500 263 lineto
323 86 lineto
374 43 433 22 500 22  curveto
566 22 625 43 677 86  curveto
closepath
fill
		} def

	/six
		{
782 274 moveto
524 274 lineto
524 -30 lineto
424 -30 340 -1 273 58  curveto
203 120 168 200 168 300  curveto
168 399 203 480 273 542  curveto
339 601 423 630 524 630  curveto
524 326 lineto
782 326 lineto
782 274 lineto
closepath
472 326 moveto
472 577 lineto
406 570 349 543 302 496  curveto
254 448 227 392 221 326  curveto
472 326 lineto
closepath
472 23 moveto
472 274 lineto
221 274 lineto
227 208 254 151 302 104  curveto
349 56 406 29 472 23  curveto
closepath
fill
		} def

	/seven
		{
792 82 moveto
755 45 lineto
540 260 lineto
364 84 lineto
415 42 473 22 538 22  curveto
538 -30 lineto
446 -30 368 2 304 66  curveto
240 130 208 208 208 300  curveto
208 391 240 469 304 533  curveto
368 597 446 630 538 630  curveto
538 578 lineto
471 578 412 556 360 513  curveto
540 333 lineto
755 548 lineto
792 511 lineto
577 296 lineto
792 82 lineto
closepath
503 296 moveto
323 476 lineto
281 424 260 366 260 300  curveto
260 232 282 172 327 120  curveto
503 296 lineto
closepath
fill
		} def

	/eight
		{
782 300 moveto
782 200 747 120 677 58  curveto
610 0 526 -30 426 -30  curveto
426 274 lineto
168 274 lineto
168 326 lineto
426 326 lineto
426 630 lineto
526 630 610 600 677 542  curveto
747 480 782 399 782 300  curveto
closepath
729 326 moveto
722 392 695 448 648 496  curveto
600 543 544 570 478 577  curveto
478 326 lineto
729 326 lineto
closepath
729 274 moveto
478 274 lineto
478 23 lineto
544 29 600 56 648 104  curveto
695 151 722 208 729 274  curveto
closepath
fill
		} def

	/nine
		{
792 300 moveto
792 208 759 130 695 66  curveto
631 2 553 -30 462 -30  curveto
462 22 lineto
526 22 584 42 636 84  curveto
460 260 lineto
245 45 lineto
208 82 lineto
423 296 lineto
208 511 lineto
245 548 lineto
460 333 lineto
640 513 lineto
588 556 528 578 462 578  curveto
462 630 lineto
553 630 631 597 695 533  curveto
759 469 792 391 792 300  curveto
closepath
740 300 moveto
740 366 719 424 677 476  curveto
497 296 lineto
673 120 lineto
717 172 740 232 740 300  curveto
closepath
fill
		} def

	/colon
		{
830 300 moveto
830 209 797 131 733 67  curveto
668 2 590 -30 500 -30  curveto
419 -30 348 -4 287 48  curveto
210 -30 lineto
170 10 lineto
247 88 lineto
195 149 170 220 170 300  curveto
170 390 202 468 267 533  curveto
331 597 409 630 500 630  curveto
580 630 650 604 712 553  curveto
789 630 lineto
829 590 lineto
752 513 lineto
804 451 830 380 830 300  curveto
closepath
778 300 moveto
778 366 757 424 715 476  curveto
324 85 lineto
375 43 434 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
675 516 moveto
624 557 566 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 234 242 175 284 125  curveto
675 516 lineto
closepath
fill
		} def

	/semicolon
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 376 750 442 696 496  curveto
642 550 576 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 223 249 157 303 103  curveto
357 49 423 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
672 201 moveto
652 193 635 190 621 190  curveto
608 190 597 192 587 198  curveto
579 202 567 216 551 239  curveto
537 259 522 274 507 285  curveto
508 269 514 249 525 225  curveto
536 200 542 182 542 172  curveto
542 151 527 127 499 101  curveto
469 124 455 148 455 173  curveto
455 181 460 198 472 223  curveto
482 245 488 266 490 284  curveto
474 273 460 258 446 238  curveto
439 228 427 215 410 199  curveto
400 193 388 190 375 190  curveto
361 190 344 193 326 201  curveto
334 238 348 262 367 273  curveto
377 279 394 283 418 285  curveto
442 287 463 292 481 300  curveto
464 307 443 312 419 315  curveto
407 315 389 319 367 325  curveto
346 337 333 362 327 400  curveto
347 406 363 409 376 409  curveto
388 409 400 406 410 401  curveto
417 397 429 383 445 361  curveto
458 342 473 327 489 316  curveto
487 333 480 353 470 377  curveto
460 400 455 417 455 427  curveto
455 451 470 475 500 499  curveto
528 473 542 449 542 427  curveto
542 417 536 400 525 376  curveto
515 354 509 333 507 314  curveto
518 322 531 337 547 359  curveto
563 381 576 395 586 401  curveto
596 407 608 410 622 410  curveto
635 410 651 407 670 401  curveto
664 363 650 338 630 326  curveto
620 320 603 316 578 314  curveto
565 312 545 308 517 300  curveto
535 292 555 287 577 285  curveto
593 283 602 283 604 283  curveto
614 281 622 278 630 274  curveto
649 262 663 238 672 201  curveto
closepath
fill
		} def

	/less
		{
980 274 moveto
829 274 lineto
822 188 787 115 724 57  curveto
660 0 586 -30 500 -30  curveto
414 -30 339 0 276 58  curveto
212 116 177 188 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 411 212 483 276 542  curveto
339 600 414 630 500 630  curveto
586 630 660 600 724 542  curveto
787 484 822 412 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
770 397 740 457 687 505  curveto
633 553 571 578 500 578  curveto
428 578 366 553 313 505  curveto
259 457 229 397 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 202 259 142 313 94  curveto
366 46 428 22 500 22  curveto
571 22 633 46 687 94  curveto
740 142 770 202 777 274  curveto
closepath
fill
		} def

	/equal
		{
980 274 moveto
829 274 lineto
823 193 791 124 733 66  curveto
675 8 606 -23 526 -29  curveto
526 -200 lineto
474 -200 lineto
474 -29 lineto
393 -23 324 8 266 66  curveto
208 124 177 193 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 406 208 475 266 533  curveto
324 591 393 623 474 629  curveto
474 800 lineto
526 800 lineto
526 629 lineto
606 622 675 590 733 533  curveto
790 475 822 406 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
771 392 744 448 696 496  curveto
648 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
408 571 351 544 303 496  curveto
255 448 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 648 55 696 103  curveto
744 151 771 208 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 208 255 151 303 103  curveto
351 55 408 29 474 23  curveto
closepath
fill
		} def

	/greater
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
222 578 lineto
222 326 lineto
778 326 lineto
closepath
778 22 moveto
778 274 lineto
222 274 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/question
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
526 578 lineto
526 326 lineto
778 326 lineto
closepath
474 326 moveto
474 578 lineto
222 578 lineto
222 326 lineto
474 326 lineto
closepath
778 22 moveto
778 274 lineto
526 274 lineto
526 22 lineto
778 22 lineto
closepath
474 22 moveto
474 274 lineto
222 274 lineto
222 22 lineto
474 22 lineto
closepath
fill
		} def

	/at
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 60 moveto
778 541 lineto
538 300 lineto
778 60 lineto
closepath
741 578 moveto
259 578 lineto
501 337 lineto
741 578 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
742 22 moveto
501 263 lineto
258 22 lineto
742 22 lineto
closepath
fill
		} def

	/A
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 22 moveto
778 578 lineto
222 578 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/B
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
fill
		} def

	/C
		{
830 274 moveto
526 274 lineto
526 -30 lineto
474 -30 lineto
474 274 lineto
170 274 lineto
170 326 lineto
474 326 lineto
474 630 lineto
526 630 lineto
526 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/D
		{
830 261 moveto
539 261 lineto
539 -30 lineto
461 -30 lineto
461 261 lineto
170 261 lineto
170 339 lineto
461 339 lineto
461 630 lineto
539 630 lineto
539 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/E
		{
830 394 moveto
526 394 lineto
526 90 lineto
474 90 lineto
474 394 lineto
170 394 lineto
170 446 lineto
474 446 lineto
474 750 lineto
526 750 lineto
526 446 lineto
830 446 lineto
830 394 lineto
closepath
555 -95 moveto
555 -110 549 -123 539 -134  curveto
528 -144 515 -150 500 -150  curveto
484 -150 471 -144 461 -134  curveto
450 -123 445 -110 445 -95  curveto
445 -79 450 -66 461 -56  curveto
471 -45 484 -40 500 -40  curveto
515 -40 528 -45 539 -56  curveto
549 -66 555 -79 555 -95  curveto
closepath
fill
		} def

	/F
		{
555 695 moveto
555 679 549 666 539 656  curveto
528 645 515 640 500 640  curveto
484 640 471 645 461 656  curveto
450 666 445 679 445 695  curveto
445 710 450 723 461 734  curveto
471 744 484 750 500 750  curveto
515 750 528 744 539 734  curveto
549 723 555 710 555 695  curveto
closepath
830 154 moveto
526 154 lineto
526 -150 lineto
474 -150 lineto
474 154 lineto
170 154 lineto
170 206 lineto
474 206 lineto
474 510 lineto
526 510 lineto
526 206 lineto
830 206 lineto
830 154 lineto
closepath
fill
		} def

	/G
		{
830 337 moveto
526 337 lineto
526 33 lineto
474 33 lineto
474 337 lineto
170 337 lineto
170 389 lineto
474 389 lineto
474 693 lineto
526 693 lineto
526 389 lineto
830 389 lineto
830 337 lineto
closepath
830 -94 moveto
170 -94 lineto
170 -42 lineto
830 -42 lineto
830 -94 lineto
closepath
fill
		} def

	/H
		{
830 641 moveto
170 641 lineto
170 693 lineto
830 693 lineto
830 641 lineto
closepath
830 210 moveto
526 210 lineto
526 -94 lineto
474 -94 lineto
474 210 lineto
170 210 lineto
170 262 lineto
474 262 lineto
474 566 lineto
526 566 lineto
526 262 lineto
830 262 lineto
830 210 lineto
closepath
fill
		} def

	/I
		{
526 404 moveto
474 404 lineto
474 630 lineto
526 630 lineto
526 404 lineto
closepath
830 274 moveto
604 274 lineto
604 326 lineto
830 326 lineto
830 274 lineto
closepath
396 326 moveto
396 274 lineto
170 274 lineto
170 326 lineto
396 326 lineto
closepath
526 -30 moveto
474 -30 lineto
474 196 lineto
526 196 lineto
526 -30 lineto
closepath
fill
		} def

	/J
		{
555 523 moveto
555 507 549 494 539 484  curveto
528 473 515 468 500 468  curveto
484 468 471 473 461 484  curveto
450 494 445 507 445 523  curveto
445 538 450 551 461 562  curveto
471 572 484 578 500 578  curveto
515 578 528 572 539 562  curveto
549 551 555 538 555 523  curveto
closepath
830 8 moveto
793 -30 lineto
501 263 lineto
207 -30 lineto
170 8 lineto
438 274 lineto
170 274 lineto
170 326 lineto
438 326 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
564 326 lineto
830 326 lineto
830 274 lineto
564 274 lineto
830 8 lineto
closepath
555 78 moveto
555 62 549 49 539 39  curveto
528 28 515 23 500 23  curveto
484 23 471 28 461 39  curveto
450 49 445 62 445 78  curveto
445 93 450 106 461 117  curveto
471 127 484 133 500 133  curveto
515 133 528 127 539 117  curveto
549 106 555 93 555 78  curveto
closepath
fill
		} def

	/K
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/L
		{
830 261 moveto
170 261 lineto
170 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/M
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/N
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/O
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/P
		{
778 485 moveto
778 469 772 456 762 446  curveto
751 435 738 430 723 430  curveto
707 430 694 435 684 446  curveto
673 456 668 469 668 485  curveto
668 500 673 513 684 524  curveto
694 534 707 540 723 540  curveto
738 540 751 534 762 524  curveto
772 513 778 500 778 485  curveto
closepath
778 115 moveto
778 99 772 86 762 76  curveto
751 65 738 60 723 60  curveto
707 60 694 65 684 76  curveto
673 86 668 99 668 115  curveto
668 130 673 143 684 154  curveto
694 164 707 170 723 170  curveto
738 170 751 164 762 154  curveto
772 143 778 130 778 115  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
332 485 moveto
332 469 326 456 316 446  curveto
305 435 292 430 277 430  curveto
261 430 248 435 238 446  curveto
227 456 222 469 222 485  curveto
222 500 227 513 238 524  curveto
248 534 261 540 277 540  curveto
292 540 305 534 316 524  curveto
326 513 332 500 332 485  curveto
closepath
332 115 moveto
332 99 326 86 316 76  curveto
305 65 292 60 277 60  curveto
261 60 248 65 238 76  curveto
227 86 222 99 222 115  curveto
222 130 227 143 238 154  curveto
248 164 261 170 277 170  curveto
292 170 305 164 316 154  curveto
326 143 332 130 332 115  curveto
closepath
fill
		} def

	/Q
		{
500 201 moveto
0 201 lineto
0 250 lineto
500 250 lineto
500 201 lineto
closepath
fill
		} def

	/R
		{
1000 201 moveto
0 201 lineto
0 250 lineto
1000 250 lineto
1000 201 lineto
closepath
fill
		} def

	/S
		{
726 446 moveto
654 446 lineto
500 597 lineto
346 446 lineto
274 446 lineto
500 668 lineto
726 446 lineto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/T
		{
621 479 moveto
621 463 615 450 605 440  curveto
594 429 581 424 566 424  curveto
550 424 537 429 527 440  curveto
516 450 511 463 511 479  curveto
511 494 516 507 527 518  curveto
537 528 550 534 566 534  curveto
581 534 594 528 605 518  curveto
615 507 621 494 621 479  curveto
closepath
278 479 moveto
278 463 272 450 262 440  curveto
251 429 238 424 223 424  curveto
207 424 194 429 184 440  curveto
173 450 168 463 168 479  curveto
168 494 173 507 184 518  curveto
194 528 207 534 223 534  curveto
238 534 251 528 262 518  curveto
272 507 278 494 278 479  curveto
closepath
621 121 moveto
621 105 615 92 605 82  curveto
594 71 581 66 566 66  curveto
550 66 537 71 527 82  curveto
516 92 511 105 511 121  curveto
511 136 516 149 527 160  curveto
537 170 550 176 566 176  curveto
581 176 594 170 605 160  curveto
615 149 621 136 621 121  curveto
closepath
278 121 moveto
278 105 272 92 262 82  curveto
251 71 238 66 223 66  curveto
207 66 194 71 184 82  curveto
173 92 168 105 168 121  curveto
168 136 173 149 184 160  curveto
194 170 207 176 223 176  curveto
238 176 251 170 262 160  curveto
272 149 278 136 278 121  curveto
closepath
fill
		} def

	/U
		{
830 25 moveto
170 300 lineto
830 575 lineto
830 25 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
305 300 lineto
778 103 lineto
closepath
fill
		} def

	/V
		{
830 300 moveto
170 25 lineto
170 575 lineto
830 300 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
222 497 lineto
222 103 lineto
695 300 lineto
closepath
fill
		} def

	/W
		{
830 -100 moveto
426 -100 lineto
386 -205 lineto
329 -205 lineto
370 -100 lineto
170 -100 lineto
170 -48 lineto
390 -48 lineto
475 173 lineto
170 300 lineto
592 476 lineto
666 667 lineto
721 667 lineto
658 503 lineto
830 575 lineto
830 25 lineto
523 153 lineto
446 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
632 436 lineto
542 201 lineto
778 103 lineto
closepath
566 409 moveto
305 300 lineto
494 221 lineto
566 409 lineto
closepath
fill
		} def

	/X
		{
830 -100 moveto
346 -100 lineto
306 -204 lineto
249 -204 lineto
289 -100 lineto
170 -100 lineto
170 -48 lineto
310 -48 lineto
370 109 lineto
170 25 lineto
170 575 lineto
498 438 lineto
568 617 lineto
623 617 lineto
546 418 lineto
830 300 lineto
437 136 lineto
366 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
528 370 lineto
463 204 lineto
695 300 lineto
closepath
480 390 moveto
222 497 lineto
222 103 lineto
397 176 lineto
480 390 lineto
closepath
fill
		} def

	/Y
		{
697 148 moveto
671 100 632 59 580 27  curveto
528 -5 476 -22 426 -22  curveto
315 -22 230 11 172 77  curveto
116 138 87 223 83 333  curveto
5 333 lineto
5 373 lineto
84 373 lineto
88 449 118 520 173 585  curveto
231 653 297 688 371 688  curveto
413 688 454 681 492 668  curveto
528 655 553 649 568 649  curveto
595 649 615 662 629 688  curveto
647 688 lineto
695 476 lineto
668 476 lineto
587 596 493 657 386 657  curveto
319 657 266 628 228 572  curveto
194 522 177 461 177 391  curveto
177 385 177 379 177 373  curveto
326 373 lineto
326 333 lineto
180 333 lineto
190 249 218 181 265 129  curveto
316 71 383 42 466 42  curveto
544 42 612 77 668 148  curveto
697 148 lineto
closepath
fill
		} def

	/Z
		{
516 154 moveto
444 51 390 0 353 0  curveto
337 0 323 6 312 18  curveto
300 30 295 45 295 61  curveto
295 69 299 91 308 125  curveto
319 163 331 202 343 242  curveto
359 296 367 333 367 353  curveto
367 372 361 382 351 382  curveto
316 382 273 341 222 260  curveto
182 197 153 140 135 88  curveto
130 70 125 52 121 34  curveto
113 11 101 0 85 0  curveto
62 0 51 8 51 24  curveto
51 26 56 50 66 97  curveto
142 453 lineto
56 410 lineto
56 457 lineto
154 506 lineto
163 549 lineto
170 583 174 605 174 617  curveto
174 627 172 634 169 639  curveto
161 647 138 651 98 653  curveto
98 675 lineto
257 675 lineto
229 544 lineto
323 591 lineto
323 544 lineto
218 491 lineto
155 190 lineto
247 352 324 433 385 433  curveto
420 433 438 408 438 358  curveto
438 342 430 307 414 253  curveto
404 221 394 190 385 160  curveto
372 118 366 87 366 67  curveto
366 55 372 49 384 49  curveto
406 49 444 88 498 168  curveto
516 154 lineto
closepath
fill
		} def

	/bracketleft
		{
402 25 moveto
381 -1 354 -14 321 -14  curveto
277 -14 226 24 168 101  curveto
143 74 104 35 51 -16  curveto
28 7 lineto
147 139 lineto
126 171 108 216 93 274  curveto
78 331 71 380 71 421  curveto
71 480 83 534 107 584  curveto
137 645 179 676 233 676  curveto
278 676 313 654 339 610  curveto
360 572 371 529 371 481  curveto
371 434 353 378 319 314  curveto
299 278 267 228 223 164  curveto
224 144 236 117 259 83  curveto
283 46 304 28 322 28  curveto
346 28 364 37 374 56  curveto
402 25 lineto
closepath
319 481 moveto
319 515 313 545 303 572  curveto
288 608 266 626 238 626  curveto
182 626 155 561 155 432  curveto
155 358 172 285 206 214  curveto
233 240 259 281 283 338  curveto
307 394 319 442 319 481  curveto
closepath
fill
		} def

	/backslash
		{
476 331 moveto
476 248 461 175 432 113  curveto
392 28 331 -14 250 -14  curveto
219 -14 191 -7 166 5  curveto
134 -92 lineto
90 -92 lineto
129 29 lineto
92 61 64 109 46 174  curveto
31 224 24 276 24 331  curveto
24 413 38 485 68 548  curveto
108 633 168 676 250 676  curveto
280 676 308 669 334 657  curveto
366 754 lineto
410 754 lineto
370 633 lineto
407 600 435 551 454 487  curveto
468 437 476 385 476 331  curveto
closepath
320 615 moveto
302 638 278 650 250 650  curveto
163 650 120 543 120 331  curveto
120 227 130 148 151 95  curveto
320 615 lineto
closepath
380 331 moveto
380 431 369 509 348 565  curveto
179 46 lineto
198 23 222 12 250 12  curveto
336 12 380 118 380 331  curveto
closepath
fill
		} def

	/bracketright
		{
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
fill
		} def

	/asciicircum
		{
950 456 moveto
50 456 lineto
50 508 lineto
950 508 lineto
950 456 lineto
closepath
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
950 92 moveto
50 92 lineto
50 144 lineto
950 144 lineto
950 92 lineto
closepath
fill
		} def

	/underscore
		{
950 547 moveto
50 547 lineto
50 599 lineto
950 599 lineto
950 547 lineto
closepath
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
950 1 moveto
50 1 lineto
50 53 lineto
950 53 lineto
950 1 lineto
closepath
fill
		} def

	/quoteleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/a
		{
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
fill
		} def

	/b
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/c
		{
700 547 moveto
50 547 lineto
50 599 lineto
700 599 lineto
700 547 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
700 1 moveto
50 1 lineto
50 53 lineto
700 53 lineto
700 1 lineto
closepath
fill
		} def

	/d
		{
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
fill
		} def

	/e
		{
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
fill
		} def

	/f
		{
700 365 moveto
550 365 lineto
550 417 lineto
700 417 lineto
700 365 lineto
closepath
450 365 moveto
300 365 lineto
300 417 lineto
450 417 lineto
450 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
200 417 moveto
200 365 lineto
50 365 lineto
50 417 lineto
200 417 lineto
closepath
fill
		} def

	/g
		{
700 183 moveto
550 183 lineto
550 235 lineto
700 235 lineto
700 183 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
450 235 moveto
450 183 lineto
300 183 lineto
300 235 lineto
450 235 lineto
closepath
200 183 moveto
50 183 lineto
50 235 lineto
200 235 lineto
200 183 lineto
closepath
fill
		} def

	/h
		{
700 456 moveto
550 456 lineto
550 508 lineto
700 508 lineto
700 456 lineto
closepath
450 456 moveto
300 456 lineto
300 508 lineto
450 508 lineto
450 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
200 508 moveto
200 456 lineto
50 456 lineto
50 508 lineto
200 508 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/i
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 92 moveto
550 92 lineto
550 144 lineto
700 144 lineto
700 92 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
450 144 moveto
450 92 lineto
300 92 lineto
300 144 lineto
450 144 lineto
closepath
200 92 moveto
50 92 lineto
50 144 lineto
200 144 lineto
200 92 lineto
closepath
fill
		} def

	/j
		{
700 379 moveto
700 365 696 353 687 343  curveto
677 333 666 328 652 328  curveto
638 327 626 331 616 341  curveto
606 351 600 363 600 377  curveto
599 391 603 402 613 412  curveto
623 422 635 427 649 428  curveto
663 428 674 424 684 414  curveto
694 404 699 393 700 379  curveto
closepath
425 379 moveto
425 365 421 353 412 343  curveto
402 333 391 328 377 328  curveto
363 327 351 331 341 341  curveto
331 351 325 363 325 377  curveto
324 391 328 402 338 412  curveto
348 422 360 427 374 428  curveto
388 428 399 424 409 414  curveto
419 404 424 393 425 379  curveto
closepath
700 172 moveto
50 172 lineto
50 224 lineto
700 224 lineto
700 172 lineto
closepath
150 379 moveto
150 365 146 353 137 343  curveto
127 333 116 328 102 328  curveto
88 327 76 331 66 341  curveto
56 351 50 363 50 377  curveto
49 391 53 402 63 412  curveto
73 422 85 427 99 428  curveto
113 428 124 424 134 414  curveto
144 404 149 393 150 379  curveto
closepath
fill
		} def

	/k
		{
868 435 moveto
730 0 lineto
269 0 lineto
132 435 lineto
500 702 lineto
868 435 lineto
closepath
807 415 moveto
500 638 lineto
193 415 lineto
307 52 lineto
692 52 lineto
807 415 lineto
closepath
fill
		} def

	/l
		{
906 351 moveto
703 0 lineto
297 0 lineto
94 351 lineto
297 702 lineto
703 702 lineto
906 351 lineto
closepath
846 351 moveto
673 650 lineto
327 650 lineto
154 351 lineto
327 52 lineto
673 52 lineto
846 351 lineto
closepath
fill
		} def

	/m
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
568 285 moveto
60 285 lineto
60 315 lineto
568 315 lineto
568 285 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/n
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
564 285 moveto
56 285 lineto
56 315 lineto
564 315 lineto
564 285 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/o
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/p
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/q
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 304 moveto
557 279 lineto
50 621 lineto
67 646 lineto
574 304 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/r
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 296 moveto
67 -46 lineto
50 -21 lineto
557 321 lineto
574 296 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/s
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 621 moveto
67 279 lineto
50 304 lineto
557 646 lineto
574 621 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/t
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -21 moveto
557 -46 lineto
50 296 lineto
67 321 lineto
574 -21 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/u
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/v
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/w
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/x
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/y
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/z
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bar
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/asciitilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/exclamdown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/sterling
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fraction
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/yen
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/florin
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/section
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/currency
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesingle
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/endash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/dagger
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/daggerdbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/periodcentered
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/paragraph
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bullet
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesinglbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ellipsis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/perthousand
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/questiondown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/grave
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/acute
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/circumflex
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/tilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/macron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/breve
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotaccent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dieresis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ring
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cedilla
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/hungarumlaut
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ogonek
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/caron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/emdash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/AE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordfeminine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/OE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordmasculine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ae
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotlessi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oe
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/germandbls
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/ESSTIXFive exch definefont pop
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
49.0 391.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(10) show
Q
5.0 5.0 translate
Q
q
1 66 288 OPL
60 288
-5.0 -5.0 translate
q
46 286 7 13 rc
46.0 297.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
55.0 297.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(5) show
Q
5.0 5.0 translate
Q
q
1 66 195 OPL
60 195
-5.0 -5.0 translate
55.0 204.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 66 101 OPL
60 101
-5.0 -5.0 translate
55.0 111.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(5) show
Q
5.0 5.0 translate
Q
q
1 66 8 OPL
60 8
-5.0 -5.0 translate
49.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(10) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1510 a
 /Hide PSfrag
 887 1510
a 18 1579 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1615
869 4 v 887 1619 a
 /Unhide PSfrag
 887 1619 a 705 1812 a
  {
 705 1812 a Ff(\014)7
b(f)836 1830 y Fe(x)705 1812 y
  } 0/Place PSfrag
 705 1812 a 450 2014 a
  {

450 2014 a 17 w Fy(lim)450 2086 y Fe(z)t Fd(!)p Fe(z)615
2098 y Fc(c)677 1933 y Fx(h)p Ff(s)778 1951 y Fe(x)831
1933 y Fx(i)p 677 1987 200 5 v 695 2096 a(h)p Ff(n)p
Fx(i)450 2014 y
  } 1/Place PSfrag
 450 2014 a 726 2426 a Fu(Figure)33 b(2:)43
b(A)33 b(plot)f(of)g Fr(\014)6 b(f)1679 2441 y Fp(x)1756
2426 y Fu(against)50 b(lim)2092 2486 y Fp(z)s Fj(!)p
Fp(z)2232 2494 y Fm(c)2263 2426 y Fq(h)p Fr(s)2348 2441
y Fp(x)2392 2426 y Fq(i)p Fr(=)p Fq(h)p Fr(n)p Fq(i)31
b Fu(when)j Fr(!)d Fu(=)d(1.)0 2768 y(De\014ning)33 b(the)g(partition)f
(function)1264 2997 y Fr(A)1337 3012 y Fp(n)1384 2997
y Fu(\()p Fr(h;)17 b(!)t Fu(\))27 b(=)1760 2902 y Fl(X)1755
3112 y Fp(s)1788 3120 y Fm(x)1827 3112 y Fp(;m)1926 2997
y Fr(a)1977 3012 y Fp(n)2024 2997 y Fu(\()p Fr(s)2108
3012 y Fp(x)2151 2997 y Fr(;)17 b(m)p Fu(\))p Fr(h)2374
2956 y Fp(s)2407 2964 y Fm(x)2450 2997 y Fr(!)2515 2956
y Fp(m)2609 2997 y Fr(;)1063 b Fu(\(3.5\))0 3309 y(this)33
b(implies)h(the)f(sup)s(er-m)m(ultiplicativ)m(e)j(inequalit)m(y)1212
3526 y Fr(A)1285 3541 y Fp(n)1328 3550 y Fo(1)1362 3541
y Fk(+)p Fp(n)1460 3550 y Fo(2)1499 3526 y Fu(\()p Fr(h;)17
b(!)t Fu(\))26 b Fq(\025)j Fr(A)1945 3541 y Fp(n)1988
3550 y Fo(1)2026 3526 y Fu(\()p Fr(h;)17 b(!)t Fu(\))p
Fr(A)2340 3541 y Fp(n)2383 3550 y Fo(2)2421 3526 y Fu(\()p
Fr(h;)g(!)t Fu(\))p Fr(:)1010 b Fu(\(3.6\))0 3744 y(Since)36
b Fr(A)330 3759 y Fp(n)377 3744 y Fu(\()p Fr(h;)17 b(!)t
Fu(\))30 b Fq(\024)h Fr(\026)815 3707 y Fp(n)862 3744
y Fr(!)927 3707 y Fp(n)973 3744 y Fr(h)1029 3707 y Fp(n)1110
3744 y Fu(for)j(some)i Fr(\026)30 b(<)h Fu(3,)k(it)f(follo)m(ws)h(that)
g Fr(n)2508 3707 y Fj(\000)p Fk(1)2619 3744 y Fu(log)17
b Fr(A)2834 3759 y Fp(n)2881 3744 y Fu(\()p Fr(h;)g(!)t
Fu(\))34 b(is)h(b)s(ounded)g(ab)s(o)m(v)m(e)0 3864 y(for)h
Fr(x;)17 b(y)39 b(<)c Fq(1)p Fu(.)57 b(Hence)38 b(the)g(sup)s(er-m)m
(ultiplicativ)m(e)h(inequalit)m(y)g(ab)s(o)m(v)m(e)f(implies)h(the)e
(existence)j(of)d(the)0 3984 y(limit)1307 4105 y(lim)1283
4164 y Fp(n)p Fj(!1)1484 4105 y Fr(n)1542 4064 y Fj(\000)p
Fk(1)1653 4105 y Fu(log)18 b Fr(A)1869 4120 y Fp(n)1916
4105 y Fu(\()p Fr(h;)f(!)t Fu(\))26 b Fq(\021)32 b Fu(~)-52
b Fr(\024)p Fu(\()p Fr(f)2431 4120 y Fp(x)2475 4105 y
Fr(;)17 b(\014)6 b Fu(\))1081 b(\(3.7\))0 4305 y(for)32
b Fr(h;)17 b(!)31 b(<)c Fq(1)p Fu(.)146 4425 y(W)-8 b(e)33
b(no)m(w)h(recall)f(the)g(de\014nition)g(of)f(the)h(partition)g
(function)1237 4654 y Fr(Z)1304 4669 y Fp(n)1351 4654
y Fu(\()p Fr(f)1437 4669 y Fp(x)1481 4654 y Fr(;)17 b
Fu(0)p Fr(;)g(\014)6 b Fu(\))26 b(=)1852 4560 y Fl(X)1847
4769 y Fp(m;s)1962 4777 y Fm(x)2017 4654 y Fr(b)2058
4669 y Fp(n)2105 4654 y Fu(\()p Fr(m;)17 b(s)2318 4669
y Fp(x)2362 4654 y Fu(\))p Fr(!)2465 4613 y Fp(m)2531
4654 y Fr(h)2587 4613 y Fp(s)2620 4621 y Fm(x)3699 4654
y Fu(\(3.8\))0 4972 y(and)33 b(de\014ne)g Fr(B)545 4987
y Fp(n)593 4972 y Fu(\()p Fr(h;)17 b Fu(1)p Fr(;)g(!)t
Fu(\))26 b(=)h Fr(Z)1123 4987 y Fp(n)1170 4972 y Fu(\()p
Fr(f)1256 4987 y Fp(x)1300 4972 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\).)42 b(Since)34 b Fr(A)1933 4987 y Fp(n)p Fk(+1)2070
4972 y Fu(\()p Fr(h;)17 b(!)t Fu(\))27 b(=)g Fr(hB)2571
4987 y Fp(n)2619 4972 y Fu(\()p Fr(h;)17 b(!)t Fu(\))31
b(it)i(follo)m(ws)g(that)1032 5189 y(lim)1008 5249 y
Fp(n)p Fj(!1)1208 5189 y Fr(n)1266 5148 y Fj(\000)p Fk(1)1377
5189 y Fu(log)18 b Fr(B)1594 5204 y Fp(n)1641 5189 y
Fu(\()p Fr(h;)f(!)t Fu(\))27 b(=)k(~)-53 b Fr(\024)p
Fu(\()p Fr(f)2154 5204 y Fp(x)2198 5189 y Fr(;)17 b(\014)6
b Fu(\))27 b(=)h Fr(\024)p Fu(\()p Fr(f)2614 5204 y Fp(x)2658
5189 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))805 b(\(3.9\))0
5433 y(for)32 b Fr(h;)17 b(!)31 b(<)c Fq(1)p Fu(.)1926
5682 y(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 146 100 a Fu(T)-8 b(o)29 b(pro)m(v)m(e)h(that)f
Fr(\024)p Fu(\()p Fr(f)895 115 y Fp(x)939 100 y Fr(;)17
b(\014)6 b Fu(\))28 b(is)h(a)g(con)m(v)m(ex)i(function)e(of)g
Fr(\014)34 b Fu(and)29 b Fr(\014)6 b(f)2468 115 y Fp(x)2541
100 y Fu(w)m(e)29 b(note)g(that)g(H\177)-49 b(older's)30
b(inequalit)m(y)0 220 y(implies)k(that)92 368 y Fl( )176
444 y(X)171 653 y Fp(m;s)286 661 y Fm(x)341 538 y Fr(b)382
553 y Fp(n)430 538 y Fu(\()p Fr(m;)17 b(s)643 553 y Fp(x)686
538 y Fu(\))p Fr(!)789 497 y Fp(m)785 563 y Fk(1)855
538 y Fr(h)911 496 y Fp(s)944 504 y Fm(x)911 563 y Fk(1)987
368 y Fl(!)g( )1166 444 y(X)1161 653 y Fp(m;s)1276 661
y Fm(x)1332 538 y Fr(b)1373 553 y Fp(n)1420 538 y Fu(\()p
Fr(m;)g(s)1633 553 y Fp(x)1677 538 y Fu(\))p Fr(!)1780
497 y Fp(m)1776 563 y Fk(2)1846 538 y Fr(h)1902 496 y
Fp(s)1935 504 y Fm(x)1902 563 y Fk(2)1977 368 y Fl(!)2084
538 y Fq(\025)2189 368 y Fl( )2273 444 y(X)2268 653 y
Fp(m;s)2383 661 y Fm(x)2438 538 y Fr(b)2479 553 y Fp(n)2527
538 y Fu(\()p Fr(m;)g(s)2740 553 y Fp(x)2783 538 y Fu(\)\()2859
469 y Fq(p)p 2942 469 201 4 v 69 x Fr(!)3003 553 y Fk(1)3043
538 y Fr(!)3104 553 y Fk(2)3143 538 y Fu(\))3181 497
y Fp(m)3247 538 y Fu(\()3285 446 y Fl(p)p 3385 446 192
4 v 92 x Fr(h)3441 553 y Fk(1)3480 538 y Fr(h)3536 553
y Fk(2)3576 538 y Fu(\))3614 497 y Fp(s)3647 505 y Fm(x)3690
368 y Fl(!)3768 390 y Fk(2)3651 759 y Fu(\(3.10\))0 879
y(so)33 b(that)1020 999 y Fr(B)1094 1014 y Fp(n)1141
999 y Fu(\()p Fr(h)1235 1014 y Fk(1)1275 999 y Fr(;)17
b(!)1380 1014 y Fk(1)1419 999 y Fu(\))p Fr(B)1531 1014
y Fp(n)1578 999 y Fu(\()p Fr(h)1672 1014 y Fk(2)1711
999 y Fr(;)g(!)1816 1014 y Fk(2)1855 999 y Fu(\))28 b
Fq(\025)g Fr(B)2100 1014 y Fp(n)2147 999 y Fu(\()2185
930 y Fq(p)p 2268 930 201 4 v 69 x Fr(!)2329 1014 y Fk(1)2368
999 y Fr(!)2429 1014 y Fk(2)2468 999 y Fr(;)2512 907
y Fl(p)p 2611 907 192 4 v 2611 999 a Fr(h)2667 1014 y
Fk(1)2707 999 y Fr(h)2763 1014 y Fk(2)2803 999 y Fu(\))2841
958 y Fk(2)3651 999 y Fu(\(3.11\))0 1174 y(and)33 b(hence)374
1361 y Fr(n)432 1324 y Fj(\000)p Fk(1)543 1361 y Fu(log)18
b Fr(B)760 1376 y Fp(n)807 1361 y Fu(\()p Fr(h)901 1376
y Fk(1)940 1361 y Fr(;)f(!)1045 1376 y Fk(1)1084 1361
y Fu(\))22 b(+)g Fr(n)1300 1324 y Fj(\000)p Fk(1)1411
1361 y Fu(log)c Fr(B)1628 1376 y Fp(n)1675 1361 y Fu(\()p
Fr(h)1769 1376 y Fk(2)1809 1361 y Fr(;)f(!)1914 1376
y Fk(2)1952 1361 y Fu(\))p 374 1405 1617 4 v 1158 1496
a(2)2028 1428 y Fq(\025)28 b Fr(n)2191 1387 y Fj(\000)p
Fk(1)2302 1428 y Fu(log)18 b Fr(B)2519 1443 y Fp(n)2566
1428 y Fu(\()2604 1336 y Fl(p)p 2704 1336 192 4 v 92
x Fr(h)2760 1443 y Fk(1)2799 1428 y Fr(h)2855 1443 y
Fk(2)2895 1428 y Fr(;)2939 1359 y Fq(p)p 3021 1359 201
4 v 3021 1428 a Fr(!)3082 1443 y Fk(1)3122 1428 y Fr(!)3183
1443 y Fk(2)3222 1428 y Fu(\))p Fr(:)364 b Fu(\(3.12\))0
1683 y(This)48 b(sho)m(ws)g(that)e Fr(n)814 1647 y Fj(\000)p
Fk(1)925 1683 y Fu(log)18 b Fr(B)1142 1698 y Fp(n)1189
1683 y Fu(\()p Fr(h;)f(!)t Fu(\))46 b(is)h(a)f(con)m(v)m(ex)j(function)
e(of)f Fr(\014)52 b Fu(and)47 b Fr(\014)6 b(f)2958 1698
y Fp(x)3001 1683 y Fu(.)86 b(\(It)47 b(is)g(con)m(v)m(ex)h(as)f(a)0
1804 y(surface,)32 b(not)e(just)h(separately)g(con)m(v)m(ex)i(in)d(eac)
m(h)i(v)-5 b(ariable.\))43 b(Since)31 b(the)g(limit)g(of)f(a)g
(sequence)j(of)d(con)m(v)m(ex)0 1924 y(functions)h(\(when)h(it)e
(exists\))i(is)f(a)f(con)m(v)m(ex)j(function,)e Fr(\024)p
Fu(\()p Fr(f)2151 1939 y Fp(x)2195 1924 y Fr(;)17 b Fu(0)p
Fr(;)g(\014)6 b Fu(\))29 b(is)i(a)g(con)m(v)m(ex)h(function)f(of)f
Fr(\014)36 b Fu(and)30 b Fr(\014)6 b(f)3829 1939 y Fp(x)3873
1924 y Fu(.)0 2044 y(Hence)38 b Fr(\024)p Fu(\()p Fr(f)436
2059 y Fp(x)480 2044 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))36 b(is)h(con)m(tin)m(uous)i(and)e(is)g(di\013eren)m(tiable)i
(almost)e(ev)m(erywhere.)59 b(Since)38 b Fr(\024)p Fu(\()p
Fr(f)3510 2059 y Fp(x)3554 2044 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))34 b(=)0 2165 y Fq(\000)17 b Fu(log)h Fr(z)282
2180 y Fp(c)317 2165 y Fu(\()p Fr(h;)f Fu(1)p Fr(;)g(!)t
Fu(\),)37 b(the)h(singularit)m(y)g(surface)h Fr(z)h Fu(=)c
Fr(z)1951 2180 y Fp(c)1986 2165 y Fu(\()p Fr(h;)17 b
Fu(1)p Fr(;)g(!)t Fu(\))36 b(is)i(also)g(con)m(tin)m(uous)h(and)e
(di\013eren)m(tiable)0 2285 y(almost)c(ev)m(erywhere.)0
2694 y Fg(3.3)135 b(The)45 b(generating)h(function)f(for)g
Ff(!)38 b Fx(6)p Fy(=)33 b(1)0 2878 y Fu(While)f(the)g(calculation)g
(of)e(the)i(generating)f(function)h(for)f Fr(!)g Fq(6)p
Fu(=)c(1)k(app)s(ears)h(in)f(Ow)m(czarek)i Fs(et)h(al)d
Fu(\(1993\))0 2999 y(\(see)d(Section)g(4)e(of)h(that)f(pap)s(er\))h(w)m
(e)h(feel)g(that)e(it)h(is)h(w)m(orth)f(summarizing)h(and)f(presen)m
(ting)i(in)e(a)g(sligh)m(tly)0 3119 y(di\013eren)m(t)37
b(w)m(a)m(y)-8 b(.)55 b(In)37 b(order)f(to)g(consider)h(the)f(case)h
Fr(!)g Fq(6)p Fu(=)d(1)h(it)h(w)m(as)h(necessary)i(to)d(generalize)h(a)
f(metho)s(d)0 3239 y(originally)d(due)g(to)f(T)-8 b(emp)s(erley)35
b(\(1956\))c(and)i(used)h(for)e(the)h(case)g Fr(h)28
b Fu(=)g(1)k(b)m(y)i(Brak)e Fs(et)j(al)43 b Fu(\(1992\).)146
3360 y(F)-8 b(or)31 b(con)m(v)m(enience)k(let)d(the)g(partial)f
(generating)h(function)2353 3335 y(^)2330 3360 y Fr(G)2407
3375 y Fp(r)2445 3360 y Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g
Fu(1)p Fr(;)g(!)t Fu(\))31 b(in)h(the)g(case)g(where)h
Fr(v)f Fu(=)27 b(1)0 3480 y(\(no)32 b(v)m(ertical)i(force\))f(b)s(e)g
(denoted)g(as)1322 3700 y Fr(g)1369 3715 y Fp(r)1434
3700 y Fu(=)28 b(2)1609 3675 y(^)1587 3700 y Fr(G)1664
3715 y Fp(r)1702 3700 y Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g
Fu(1)p Fr(;)g(!)t Fu(\))194 b Fr(r)30 b Fq(\025)e Fu(1)p
Fr(;)1073 b Fu(\(3.13\))0 3920 y(and)39 b Fr(g)243 3935
y Fk(0)320 3920 y Fu(=)457 3895 y(^)435 3920 y Fr(G)512
3935 y Fk(0)551 3920 y Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g
Fu(1)p Fr(;)g(!)t Fu(\).)61 b(No)m(w)40 b(the)f(generating)g(function)g
(required)i(is)2855 3895 y(^)2833 3920 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))38 b(whic)m(h)i(is)g
(the)0 4041 y(sum)33 b(o)m(v)m(er)h(all)f Fr(r)i Fu(as)1269
4187 y(^)1247 4212 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)1953 4087 y Fj(1)1916
4117 y Fl(X)1881 4327 y Fp(r)r Fk(=)p Fj(\0001)2134 4187
y Fu(^)2112 4212 y Fr(G)2189 4227 y Fp(r)2227 4212 y
Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))997
b(\(3.14\))0 4500 y(Noting)22 b(that)536 4475 y(^)514
4500 y Fr(G)591 4515 y Fj(\000)p Fp(r)683 4500 y Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)1263
4475 y(^)1241 4500 y Fr(G)1318 4515 y Fp(r)1356 4500
y Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t
Fu(\),)23 b(w)m(e)h(ha)m(v)m(e)f(the)g(partial)g(generating)f
(functions)i Fr(g)3568 4515 y Fp(r)3628 4500 y Fu(satisfy)0
4620 y(the)33 b(relations)881 4741 y Fr(g)928 4756 y
Fk(0)995 4741 y Fu(=)28 b Fr(hz)f Fu(+)22 b Fr(hz)t Fu(\()p
Fr(g)1515 4756 y Fk(0)1577 4741 y Fu(+)g Fr(g)1722 4756
y Fk(1)1783 4741 y Fu(+)g Fr(:)17 b(:)g(:)p Fu(\))27
b(=)h Fr(hz)t Fu(\(1)23 b(+)2500 4716 y(^)2478 4741 y
Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t
Fu(\)\))631 b(\(3.15\))0 4915 y(and)651 5098 y Fr(g)698
5113 y Fp(r)763 5098 y Fu(=)28 b Fr(hz)972 5057 y Fp(r)r
Fk(+1)1117 4927 y Fl( )1196 5098 y Fu(2)22 b(+)1420 4973
y Fp(r)1365 5003 y Fl(X)1373 5215 y Fp(k)r Fk(=0)1509
5098 y Fu(\(1)g(+)g Fr(!)1781 5057 y Fp(k)1823 5098 y
Fu(\))p Fr(g)1908 5113 y Fp(k)1972 5098 y Fu(+)g(\(1)g(+)g
Fr(!)2342 5057 y Fp(r)2379 5098 y Fu(\))2507 4973 y Fj(1)2471
5003 y Fl(X)2434 5215 y Fp(k)r Fk(=)p Fp(r)r Fk(+1)2668
5098 y Fr(g)2715 5113 y Fp(k)2757 4927 y Fl(!)2853 5098
y Fr(;)114 b(r)30 b Fq(\025)e Fu(1)p Fr(:)402 b Fu(\(3.16\))0
5364 y(See)33 b(Figure)g(3.)43 b(These)35 b(results)f(imply)f(that)g
Fr(g)1725 5379 y Fp(r)1795 5364 y Fu(satis\014es)h(the)f(recurrence)
1901 5682 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 178 2324 a @beginspecial 14 @llx
216 @lly 476 @urx 519 @ury 4252 @rwi @setspecial
%%BeginDocument: new_figs/pdw_rec_gen_w.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: inkscape 0.46+devel
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 14 216 476 519
%%HiResBoundingBox: 14.4 216 475.2 518.4
%%EndComments
%%Page: 1 1
0 842 translate
0.8 -0.8 scale
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave [1 0 0 1 0 0] concat
gsave [1 0 0 1 73.292619 -143.91533] concat
gsave [1 0 0 1 90 -126] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 90 -162] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
179.99999 710.36218 moveto
215.99999 710.36218 lineto
stroke
gsave [1 0 0 1 90 144] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 566.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
gsave [1 0 0 1 -15 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -303] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -279.00001 -53.999993] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
gsave [1 0 0 1 -102 632.36218] concat
grestore
gsave [1 0 0 1 126 108] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 602.36218 lineto
stroke
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -243 -89.999994] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
467.96416 803.27751 moveto
467.87513 869.36258 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
467.96416 803.27751 moveto
467.87513 869.36258 lineto
stroke
gsave [-0.00080832103 0.59999946 -0.59999946 -0.00080832103 467.96416 803.27751] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [0.00080832103 -0.59999946 0.59999946 0.00080832103 467.87513 869.36258] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
464.96416 800.27751 moveto
470.96416 800.27751 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
464.96416 800.27751 moveto
470.96416 800.27751 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
464.96416 872.27751 moveto
470.96416 872.27751 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
464.96416 872.27751 moveto
470.96416 872.27751 lineto
stroke
grestore
gsave [1 0 0 1 -66 617.36218] concat
grestore
grestore
gsave [1 0 0 1 216 -143.81068] concat
gsave [1 0 0 1 198 -162] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 198 -126] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
gsave [1 0 0 1 198 -90] concat
gsave [1 0 0 1 5e-06 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 5e-06 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
grestore
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
288.08904 710.27711 moveto
324.08904 710.27711 lineto
stroke
gsave [1 0 0 1 198.08904 143.91493] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 566.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
gsave [1 0 0 1 -15 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -303] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -170.91097 -54.085057] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
gsave [1 0 0 1 6.08904 632.27711] concat
grestore
gsave [1 0 0 1 234 180] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 530.36218 lineto
stroke
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -72.08904 -17.914927] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
405.08904 731.08779 moveto
405 869.17286 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
405.08904 731.08779 moveto
405 869.17286 lineto
stroke
gsave [-0.00038689186 0.59999988 -0.59999988 -0.00038689186 405.08904 731.08779] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [0.00038689186 -0.59999988 0.59999988 0.00038689186 405 869.17286] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
402.08904 728.08779 moveto
408.08904 728.08779 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
402.08904 728.08779 moveto
408.08904 728.08779 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
402.08904 872.08779 moveto
408.08904 872.08779 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
402.08904 872.08779 moveto
408.08904 872.08779 lineto
stroke
grestore
gsave [1 0 0 1 125.125 635.95593] concat
grestore
gsave [1 0 0 1 255 -159] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 255 -123] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1.5 0 0 1.5 -302 422.36218] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
0.875 -0.59375 moveto
0.84375 -0.4375 0.78125 -0.203125 0.78125 -0.15625 curveto
0.78125 0.015625 0.921875 0.109375 1.078125 0.109375 curveto
1.203125 0.109375 1.375 0.03125 1.453125 -0.171875 curveto
1.46875 -0.203125 1.796875 -1.5625 1.84375 -1.75 curveto
1.921875 -2.078125 2.109375 -2.765625 2.15625 -3.046875 curveto
2.203125 -3.171875 2.484375 -3.640625 2.71875 -3.859375 curveto
2.796875 -3.921875 3.09375 -4.1875 3.515625 -4.1875 curveto
3.78125 -4.1875 3.921875 -4.0625 3.9375 -4.0625 curveto
3.640625 -4.015625 3.421875 -3.78125 3.421875 -3.515625 curveto
3.421875 -3.359375 3.53125 -3.171875 3.796875 -3.171875 curveto
4.0625 -3.171875 4.34375 -3.40625 4.34375 -3.765625 curveto
4.34375 -4.109375 4.03125 -4.40625 3.515625 -4.40625 curveto
2.875 -4.40625 2.4375 -3.921875 2.25 -3.640625 curveto
2.15625 -4.09375 1.796875 -4.40625 1.328125 -4.40625 curveto
0.875 -4.40625 0.6875 -4.015625 0.59375 -3.84375 curveto
0.421875 -3.5 0.296875 -2.90625 0.296875 -2.875 curveto
0.296875 -2.765625 0.390625 -2.765625 0.40625 -2.765625 curveto
0.515625 -2.765625 0.515625 -2.78125 0.578125 -3 curveto
0.75 -3.703125 0.953125 -4.1875 1.3125 -4.1875 curveto
1.46875 -4.1875 1.609375 -4.109375 1.609375 -3.734375 curveto
1.609375 -3.515625 1.578125 -3.40625 1.453125 -2.890625 curveto
0.875 -0.59375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -229.4812 421.99844] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
0.875 -0.59375 moveto
0.84375 -0.4375 0.78125 -0.203125 0.78125 -0.15625 curveto
0.78125 0.015625 0.921875 0.109375 1.078125 0.109375 curveto
1.203125 0.109375 1.375 0.03125 1.453125 -0.171875 curveto
1.46875 -0.203125 1.796875 -1.5625 1.84375 -1.75 curveto
1.921875 -2.078125 2.109375 -2.765625 2.15625 -3.046875 curveto
2.203125 -3.171875 2.484375 -3.640625 2.71875 -3.859375 curveto
2.796875 -3.921875 3.09375 -4.1875 3.515625 -4.1875 curveto
3.78125 -4.1875 3.921875 -4.0625 3.9375 -4.0625 curveto
3.640625 -4.015625 3.421875 -3.78125 3.421875 -3.515625 curveto
3.421875 -3.359375 3.53125 -3.171875 3.796875 -3.171875 curveto
4.0625 -3.171875 4.34375 -3.40625 4.34375 -3.765625 curveto
4.34375 -4.109375 4.03125 -4.40625 3.515625 -4.40625 curveto
2.875 -4.40625 2.4375 -3.921875 2.25 -3.640625 curveto
2.15625 -4.09375 1.796875 -4.40625 1.328125 -4.40625 curveto
0.875 -4.40625 0.6875 -4.015625 0.59375 -3.84375 curveto
0.421875 -3.5 0.296875 -2.90625 0.296875 -2.875 curveto
0.296875 -2.765625 0.390625 -2.765625 0.40625 -2.765625 curveto
0.515625 -2.765625 0.515625 -2.78125 0.578125 -3 curveto
0.75 -3.703125 0.953125 -4.1875 1.3125 -4.1875 curveto
1.46875 -4.1875 1.609375 -4.109375 1.609375 -3.734375 curveto
1.609375 -3.515625 1.578125 -3.40625 1.453125 -2.890625 curveto
0.875 -0.59375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -121.71438 421.62683] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
0.875 -0.59375 moveto
0.84375 -0.4375 0.78125 -0.203125 0.78125 -0.15625 curveto
0.78125 0.015625 0.921875 0.109375 1.078125 0.109375 curveto
1.203125 0.109375 1.375 0.03125 1.453125 -0.171875 curveto
1.46875 -0.203125 1.796875 -1.5625 1.84375 -1.75 curveto
1.921875 -2.078125 2.109375 -2.765625 2.15625 -3.046875 curveto
2.203125 -3.171875 2.484375 -3.640625 2.71875 -3.859375 curveto
2.796875 -3.921875 3.09375 -4.1875 3.515625 -4.1875 curveto
3.78125 -4.1875 3.921875 -4.0625 3.9375 -4.0625 curveto
3.640625 -4.015625 3.421875 -3.78125 3.421875 -3.515625 curveto
3.421875 -3.359375 3.53125 -3.171875 3.796875 -3.171875 curveto
4.0625 -3.171875 4.34375 -3.40625 4.34375 -3.765625 curveto
4.34375 -4.109375 4.03125 -4.40625 3.515625 -4.40625 curveto
2.875 -4.40625 2.4375 -3.921875 2.25 -3.640625 curveto
2.15625 -4.09375 1.796875 -4.40625 1.328125 -4.40625 curveto
0.875 -4.40625 0.6875 -4.015625 0.59375 -3.84375 curveto
0.421875 -3.5 0.296875 -2.90625 0.296875 -2.875 curveto
0.296875 -2.765625 0.390625 -2.765625 0.40625 -2.765625 curveto
0.515625 -2.765625 0.515625 -2.78125 0.578125 -3 curveto
0.75 -3.703125 0.953125 -4.1875 1.3125 -4.1875 curveto
1.46875 -4.1875 1.609375 -4.109375 1.609375 -3.734375 curveto
1.609375 -3.515625 1.578125 -3.40625 1.453125 -2.890625 curveto
0.875 -0.59375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 4.5262016 421.78076] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
0.875 -0.59375 moveto
0.84375 -0.4375 0.78125 -0.203125 0.78125 -0.15625 curveto
0.78125 0.015625 0.921875 0.109375 1.078125 0.109375 curveto
1.203125 0.109375 1.375 0.03125 1.453125 -0.171875 curveto
1.46875 -0.203125 1.796875 -1.5625 1.84375 -1.75 curveto
1.921875 -2.078125 2.109375 -2.765625 2.15625 -3.046875 curveto
2.203125 -3.171875 2.484375 -3.640625 2.71875 -3.859375 curveto
2.796875 -3.921875 3.09375 -4.1875 3.515625 -4.1875 curveto
3.78125 -4.1875 3.921875 -4.0625 3.9375 -4.0625 curveto
3.640625 -4.015625 3.421875 -3.78125 3.421875 -3.515625 curveto
3.421875 -3.359375 3.53125 -3.171875 3.796875 -3.171875 curveto
4.0625 -3.171875 4.34375 -3.40625 4.34375 -3.765625 curveto
4.34375 -4.109375 4.03125 -4.40625 3.515625 -4.40625 curveto
2.875 -4.40625 2.4375 -3.921875 2.25 -3.640625 curveto
2.15625 -4.09375 1.796875 -4.40625 1.328125 -4.40625 curveto
0.875 -4.40625 0.6875 -4.015625 0.59375 -3.84375 curveto
0.421875 -3.5 0.296875 -2.90625 0.296875 -2.875 curveto
0.296875 -2.765625 0.390625 -2.765625 0.40625 -2.765625 curveto
0.515625 -2.765625 0.515625 -2.78125 0.578125 -3 curveto
0.75 -3.703125 0.953125 -4.1875 1.3125 -4.1875 curveto
1.46875 -4.1875 1.609375 -4.109375 1.609375 -3.734375 curveto
1.609375 -3.515625 1.578125 -3.40625 1.453125 -2.890625 curveto
0.875 -0.59375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 130.6875 422.25281] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
0.875 -0.59375 moveto
0.84375 -0.4375 0.78125 -0.203125 0.78125 -0.15625 curveto
0.78125 0.015625 0.921875 0.109375 1.078125 0.109375 curveto
1.203125 0.109375 1.375 0.03125 1.453125 -0.171875 curveto
1.46875 -0.203125 1.796875 -1.5625 1.84375 -1.75 curveto
1.921875 -2.078125 2.109375 -2.765625 2.15625 -3.046875 curveto
2.203125 -3.171875 2.484375 -3.640625 2.71875 -3.859375 curveto
2.796875 -3.921875 3.09375 -4.1875 3.515625 -4.1875 curveto
3.78125 -4.1875 3.921875 -4.0625 3.9375 -4.0625 curveto
3.640625 -4.015625 3.421875 -3.78125 3.421875 -3.515625 curveto
3.421875 -3.359375 3.53125 -3.171875 3.796875 -3.171875 curveto
4.0625 -3.171875 4.34375 -3.40625 4.34375 -3.765625 curveto
4.34375 -4.109375 4.03125 -4.40625 3.515625 -4.40625 curveto
2.875 -4.40625 2.4375 -3.921875 2.25 -3.640625 curveto
2.15625 -4.09375 1.796875 -4.40625 1.328125 -4.40625 curveto
0.875 -4.40625 0.6875 -4.015625 0.59375 -3.84375 curveto
0.421875 -3.5 0.296875 -2.90625 0.296875 -2.875 curveto
0.296875 -2.765625 0.390625 -2.765625 0.40625 -2.765625 curveto
0.515625 -2.765625 0.515625 -2.78125 0.578125 -3 curveto
0.75 -3.703125 0.953125 -4.1875 1.3125 -4.1875 curveto
1.46875 -4.1875 1.609375 -4.109375 1.609375 -3.734375 curveto
1.609375 -3.515625 1.578125 -3.40625 1.453125 -2.890625 curveto
0.875 -0.59375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -177.09375 332.48276] concat
gsave [1 0 0 1 248.13127 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
0.96875 0.109375 1.109375 0.015625 1.171875 -0.09375 curveto
1.21875 -0.1875 1.671875 -2.03125 1.734375 -2.28125 curveto
2.078125 -2.25 2.890625 -2.09375 2.890625 -1.4375 curveto
2.890625 -1.359375 2.890625 -1.328125 2.859375 -1.21875 curveto
2.84375 -1.109375 2.828125 -0.984375 2.828125 -0.875 curveto
2.828125 -0.296875 3.21875 0.109375 3.734375 0.109375 curveto
4.03125 0.109375 4.3125 -0.046875 4.53125 -0.421875 curveto
4.78125 -0.859375 4.890625 -1.40625 4.890625 -1.421875 curveto
4.890625 -1.53125 4.796875 -1.53125 4.765625 -1.53125 curveto
4.671875 -1.53125 4.65625 -1.484375 4.625 -1.34375 curveto
4.421875 -0.625 4.203125 -0.109375 3.765625 -0.109375 curveto
3.5625 -0.109375 3.4375 -0.21875 3.4375 -0.578125 curveto
3.4375 -0.75 3.484375 -0.984375 3.515625 -1.140625 curveto
3.5625 -1.3125 3.5625 -1.34375 3.5625 -1.453125 curveto
3.5625 -2.09375 2.9375 -2.375 2.078125 -2.5 curveto
2.390625 -2.671875 2.71875 -2.984375 2.9375 -3.234375 curveto
3.421875 -3.765625 3.875 -4.1875 4.359375 -4.1875 curveto
4.421875 -4.1875 4.4375 -4.1875 4.453125 -4.171875 curveto
4.578125 -4.15625 4.578125 -4.15625 4.671875 -4.09375 curveto
4.6875 -4.09375 4.6875 -4.078125 4.703125 -4.0625 curveto
4.234375 -4.03125 4.140625 -3.640625 4.140625 -3.515625 curveto
4.140625 -3.359375 4.25 -3.171875 4.515625 -3.171875 curveto
4.78125 -3.171875 5.0625 -3.390625 5.0625 -3.78125 curveto
5.0625 -4.078125 4.828125 -4.40625 4.390625 -4.40625 curveto
4.109375 -4.40625 3.65625 -4.328125 2.9375 -3.53125 curveto
2.59375 -3.15625 2.203125 -2.75 1.828125 -2.609375 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -69.046875 404.54968] concat
gsave [1 0 0 1 248.13127 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
0.96875 0.109375 1.109375 0.015625 1.171875 -0.09375 curveto
1.21875 -0.1875 1.671875 -2.03125 1.734375 -2.28125 curveto
2.078125 -2.25 2.890625 -2.09375 2.890625 -1.4375 curveto
2.890625 -1.359375 2.890625 -1.328125 2.859375 -1.21875 curveto
2.84375 -1.109375 2.828125 -0.984375 2.828125 -0.875 curveto
2.828125 -0.296875 3.21875 0.109375 3.734375 0.109375 curveto
4.03125 0.109375 4.3125 -0.046875 4.53125 -0.421875 curveto
4.78125 -0.859375 4.890625 -1.40625 4.890625 -1.421875 curveto
4.890625 -1.53125 4.796875 -1.53125 4.765625 -1.53125 curveto
4.671875 -1.53125 4.65625 -1.484375 4.625 -1.34375 curveto
4.421875 -0.625 4.203125 -0.109375 3.765625 -0.109375 curveto
3.5625 -0.109375 3.4375 -0.21875 3.4375 -0.578125 curveto
3.4375 -0.75 3.484375 -0.984375 3.515625 -1.140625 curveto
3.5625 -1.3125 3.5625 -1.34375 3.5625 -1.453125 curveto
3.5625 -2.09375 2.9375 -2.375 2.078125 -2.5 curveto
2.390625 -2.671875 2.71875 -2.984375 2.9375 -3.234375 curveto
3.421875 -3.765625 3.875 -4.1875 4.359375 -4.1875 curveto
4.421875 -4.1875 4.4375 -4.1875 4.453125 -4.171875 curveto
4.578125 -4.15625 4.578125 -4.15625 4.671875 -4.09375 curveto
4.6875 -4.09375 4.6875 -4.078125 4.703125 -4.0625 curveto
4.234375 -4.03125 4.140625 -3.640625 4.140625 -3.515625 curveto
4.140625 -3.359375 4.25 -3.171875 4.515625 -3.171875 curveto
4.78125 -3.171875 5.0625 -3.390625 5.0625 -3.78125 curveto
5.0625 -4.078125 4.828125 -4.40625 4.390625 -4.40625 curveto
4.109375 -4.40625 3.65625 -4.328125 2.9375 -3.53125 curveto
2.59375 -3.15625 2.203125 -2.75 1.828125 -2.609375 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 57.303165 296.05141] concat
gsave [1 0 0 1 248.13127 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
0.96875 0.109375 1.109375 0.015625 1.171875 -0.09375 curveto
1.21875 -0.1875 1.671875 -2.03125 1.734375 -2.28125 curveto
2.078125 -2.25 2.890625 -2.09375 2.890625 -1.4375 curveto
2.890625 -1.359375 2.890625 -1.328125 2.859375 -1.21875 curveto
2.84375 -1.109375 2.828125 -0.984375 2.828125 -0.875 curveto
2.828125 -0.296875 3.21875 0.109375 3.734375 0.109375 curveto
4.03125 0.109375 4.3125 -0.046875 4.53125 -0.421875 curveto
4.78125 -0.859375 4.890625 -1.40625 4.890625 -1.421875 curveto
4.890625 -1.53125 4.796875 -1.53125 4.765625 -1.53125 curveto
4.671875 -1.53125 4.65625 -1.484375 4.625 -1.34375 curveto
4.421875 -0.625 4.203125 -0.109375 3.765625 -0.109375 curveto
3.5625 -0.109375 3.4375 -0.21875 3.4375 -0.578125 curveto
3.4375 -0.75 3.484375 -0.984375 3.515625 -1.140625 curveto
3.5625 -1.3125 3.5625 -1.34375 3.5625 -1.453125 curveto
3.5625 -2.09375 2.9375 -2.375 2.078125 -2.5 curveto
2.390625 -2.671875 2.71875 -2.984375 2.9375 -3.234375 curveto
3.421875 -3.765625 3.875 -4.1875 4.359375 -4.1875 curveto
4.421875 -4.1875 4.4375 -4.1875 4.453125 -4.171875 curveto
4.578125 -4.15625 4.578125 -4.15625 4.671875 -4.09375 curveto
4.6875 -4.09375 4.6875 -4.078125 4.703125 -4.0625 curveto
4.234375 -4.03125 4.140625 -3.640625 4.140625 -3.515625 curveto
4.140625 -3.359375 4.25 -3.171875 4.515625 -3.171875 curveto
4.78125 -3.171875 5.0625 -3.390625 5.0625 -3.78125 curveto
5.0625 -4.078125 4.828125 -4.40625 4.390625 -4.40625 curveto
4.109375 -4.40625 3.65625 -4.328125 2.9375 -3.53125 curveto
2.59375 -3.15625 2.203125 -2.75 1.828125 -2.609375 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 183 440.36218] concat
gsave [1 0 0 1 248.13127 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
0.96875 0.109375 1.109375 0.015625 1.171875 -0.09375 curveto
1.21875 -0.1875 1.671875 -2.03125 1.734375 -2.28125 curveto
2.078125 -2.25 2.890625 -2.09375 2.890625 -1.4375 curveto
2.890625 -1.359375 2.890625 -1.328125 2.859375 -1.21875 curveto
2.84375 -1.109375 2.828125 -0.984375 2.828125 -0.875 curveto
2.828125 -0.296875 3.21875 0.109375 3.734375 0.109375 curveto
4.03125 0.109375 4.3125 -0.046875 4.53125 -0.421875 curveto
4.78125 -0.859375 4.890625 -1.40625 4.890625 -1.421875 curveto
4.890625 -1.53125 4.796875 -1.53125 4.765625 -1.53125 curveto
4.671875 -1.53125 4.65625 -1.484375 4.625 -1.34375 curveto
4.421875 -0.625 4.203125 -0.109375 3.765625 -0.109375 curveto
3.5625 -0.109375 3.4375 -0.21875 3.4375 -0.578125 curveto
3.4375 -0.75 3.484375 -0.984375 3.515625 -1.140625 curveto
3.5625 -1.3125 3.5625 -1.34375 3.5625 -1.453125 curveto
3.5625 -2.09375 2.9375 -2.375 2.078125 -2.5 curveto
2.390625 -2.671875 2.71875 -2.984375 2.9375 -3.234375 curveto
3.421875 -3.765625 3.875 -4.1875 4.359375 -4.1875 curveto
4.421875 -4.1875 4.4375 -4.1875 4.453125 -4.171875 curveto
4.578125 -4.15625 4.578125 -4.15625 4.671875 -4.09375 curveto
4.6875 -4.09375 4.6875 -4.078125 4.703125 -4.0625 curveto
4.234375 -4.03125 4.140625 -3.640625 4.140625 -3.515625 curveto
4.140625 -3.359375 4.25 -3.171875 4.515625 -3.171875 curveto
4.78125 -3.171875 5.0625 -3.390625 5.0625 -3.78125 curveto
5.0625 -4.078125 4.828125 -4.40625 4.390625 -4.40625 curveto
4.109375 -4.40625 3.65625 -4.328125 2.9375 -3.53125 curveto
2.59375 -3.15625 2.203125 -2.75 1.828125 -2.609375 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -300.30469 548.36218] concat
gsave [1 0 0 1 223.43201 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.46875 -1.734375 moveto
4.234375 -1.734375 lineto
4.171875 -1.4375 4.109375 -1 4 -0.84375 curveto
3.9375 -0.765625 3.28125 -0.765625 3.0625 -0.765625 curveto
1.265625 -0.765625 lineto
2.328125 -1.796875 lineto
3.875 -3.171875 4.46875 -3.703125 4.46875 -4.703125 curveto
4.46875 -5.84375 3.578125 -6.640625 2.359375 -6.640625 curveto
1.234375 -6.640625 0.5 -5.71875 0.5 -4.828125 curveto
0.5 -4.28125 1 -4.28125 1.03125 -4.28125 curveto
1.203125 -4.28125 1.546875 -4.390625 1.546875 -4.8125 curveto
1.546875 -5.0625 1.359375 -5.328125 1.015625 -5.328125 curveto
0.9375 -5.328125 0.921875 -5.328125 0.890625 -5.3125 curveto
1.109375 -5.96875 1.65625 -6.328125 2.234375 -6.328125 curveto
3.140625 -6.328125 3.5625 -5.515625 3.5625 -4.703125 curveto
3.5625 -3.90625 3.078125 -3.125 2.515625 -2.5 curveto
0.609375 -0.375 lineto
0.5 -0.265625 0.5 -0.234375 0.5 0 curveto
4.203125 0 lineto
4.46875 -1.734375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 228.41299 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
1 0.109375 1.15625 -0.015625 1.203125 -0.15625 curveto
1.390625 -0.90625 lineto
1.46875 -1.203125 1.546875 -1.5 1.609375 -1.796875 curveto
1.671875 -2.03125 1.734375 -2.25 1.78125 -2.46875 curveto
1.796875 -2.53125 1.890625 -2.859375 1.890625 -2.921875 curveto
1.921875 -3.015625 2.234375 -3.5625 2.578125 -3.84375 curveto
2.796875 -4 3.09375 -4.1875 3.53125 -4.1875 curveto
3.953125 -4.1875 4.0625 -3.84375 4.0625 -3.484375 curveto
4.0625 -2.953125 3.6875 -1.859375 3.453125 -1.25 curveto
3.375 -1.03125 3.3125 -0.90625 3.3125 -0.703125 curveto
3.3125 -0.234375 3.671875 0.109375 4.140625 0.109375 curveto
5.078125 0.109375 5.4375 -1.34375 5.4375 -1.421875 curveto
5.4375 -1.53125 5.359375 -1.53125 5.328125 -1.53125 curveto
5.21875 -1.53125 5.21875 -1.5 5.171875 -1.34375 curveto
5.03125 -0.8125 4.703125 -0.109375 4.15625 -0.109375 curveto
3.984375 -0.109375 3.921875 -0.203125 3.921875 -0.4375 curveto
3.921875 -0.6875 4 -0.921875 4.09375 -1.140625 curveto
4.25 -1.578125 4.703125 -2.765625 4.703125 -3.34375 curveto
4.703125 -3.984375 4.3125 -4.40625 3.5625 -4.40625 curveto
2.9375 -4.40625 2.453125 -4.09375 2.078125 -3.640625 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 234.15344 134.765] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.328125 -0.828125 moveto
1.859375 -1.40625 2.15625 -1.65625 2.515625 -1.96875 curveto
2.515625 -1.96875 3.125 -2.5 3.484375 -2.859375 curveto
4.4375 -3.78125 4.65625 -4.265625 4.65625 -4.3125 curveto
4.65625 -4.40625 4.5625 -4.40625 4.546875 -4.40625 curveto
4.46875 -4.40625 4.453125 -4.390625 4.390625 -4.296875 curveto
4.09375 -3.8125 3.890625 -3.65625 3.65625 -3.65625 curveto
3.40625 -3.65625 3.296875 -3.8125 3.140625 -3.984375 curveto
2.953125 -4.203125 2.78125 -4.40625 2.453125 -4.40625 curveto
1.703125 -4.40625 1.25 -3.484375 1.25 -3.265625 curveto
1.25 -3.21875 1.28125 -3.15625 1.359375 -3.15625 curveto
1.453125 -3.15625 1.46875 -3.203125 1.5 -3.265625 curveto
1.6875 -3.734375 2.265625 -3.734375 2.34375 -3.734375 curveto
2.546875 -3.734375 2.734375 -3.671875 2.96875 -3.59375 curveto
3.375 -3.4375 3.484375 -3.4375 3.734375 -3.4375 curveto
3.375 -3.015625 2.546875 -2.296875 2.359375 -2.140625 curveto
1.859375 -1.6875 1.84375 -1.671875 1.453125 -1.296875 curveto
0.78125 -0.625 0.421875 -0.0625 0.421875 0.015625 curveto
0.421875 0.109375 0.53125 0.109375 0.546875 0.109375 curveto
0.625 0.109375 0.640625 0.09375 0.703125 -0.015625 curveto
0.9375 -0.375 1.234375 -0.640625 1.5625 -0.640625 curveto
1.78125 -0.640625 1.890625 -0.546875 2.140625 -0.265625 curveto
2.296875 -0.046875 2.484375 0.109375 2.765625 0.109375 curveto
3.765625 0.109375 4.34375 -1.15625 4.34375 -1.421875 curveto
4.34375 -1.46875 4.296875 -1.53125 4.21875 -1.53125 curveto
4.125 -1.53125 4.109375 -1.46875 4.078125 -1.390625 curveto
3.84375 -0.75 3.203125 -0.5625 2.875 -0.5625 curveto
2.6875 -0.5625 2.5 -0.625 2.296875 -0.6875 curveto
1.953125 -0.8125 1.796875 -0.859375 1.59375 -0.859375 curveto
1.578125 -0.859375 1.421875 -0.859375 1.328125 -0.828125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 239.22501 130.651] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 243.138 130.651] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 249.25403 130.651] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -232.91226 538.28703] concat
gsave [1 0 0 1 223.43201 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.078125 -2.296875 moveto
6.859375 -2.296875 lineto
7 -2.296875 7.1875 -2.296875 7.1875 -2.5 curveto
7.1875 -2.6875 7 -2.6875 6.859375 -2.6875 curveto
4.078125 -2.6875 lineto
4.078125 -5.484375 lineto
4.078125 -5.625 4.078125 -5.8125 3.875 -5.8125 curveto
3.671875 -5.8125 3.671875 -5.625 3.671875 -5.484375 curveto
3.671875 -2.6875 lineto
0.890625 -2.6875 lineto
0.75 -2.6875 0.5625 -2.6875 0.5625 -2.5 curveto
0.5625 -2.296875 0.75 -2.296875 0.890625 -2.296875 curveto
3.671875 -2.296875 lineto
3.671875 0.5 lineto
3.671875 0.640625 3.671875 0.828125 3.875 0.828125 curveto
4.078125 0.828125 4.078125 0.640625 4.078125 0.5 curveto
4.078125 -2.296875 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 231.181 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
1 0.109375 1.15625 -0.015625 1.203125 -0.15625 curveto
1.390625 -0.90625 lineto
1.46875 -1.203125 1.546875 -1.5 1.609375 -1.796875 curveto
1.671875 -2.03125 1.734375 -2.25 1.78125 -2.46875 curveto
1.796875 -2.53125 1.890625 -2.859375 1.890625 -2.921875 curveto
1.921875 -3.015625 2.234375 -3.5625 2.578125 -3.84375 curveto
2.796875 -4 3.09375 -4.1875 3.53125 -4.1875 curveto
3.953125 -4.1875 4.0625 -3.84375 4.0625 -3.484375 curveto
4.0625 -2.953125 3.6875 -1.859375 3.453125 -1.25 curveto
3.375 -1.03125 3.3125 -0.90625 3.3125 -0.703125 curveto
3.3125 -0.234375 3.671875 0.109375 4.140625 0.109375 curveto
5.078125 0.109375 5.4375 -1.34375 5.4375 -1.421875 curveto
5.4375 -1.53125 5.359375 -1.53125 5.328125 -1.53125 curveto
5.21875 -1.53125 5.21875 -1.5 5.171875 -1.34375 curveto
5.03125 -0.8125 4.703125 -0.109375 4.15625 -0.109375 curveto
3.984375 -0.109375 3.921875 -0.203125 3.921875 -0.4375 curveto
3.921875 -0.6875 4 -0.921875 4.09375 -1.140625 curveto
4.25 -1.578125 4.703125 -2.765625 4.703125 -3.34375 curveto
4.703125 -3.984375 4.3125 -4.40625 3.5625 -4.40625 curveto
2.9375 -4.40625 2.453125 -4.09375 2.078125 -3.640625 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 236.92145 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.328125 -0.828125 moveto
1.859375 -1.40625 2.15625 -1.65625 2.515625 -1.96875 curveto
2.515625 -1.96875 3.125 -2.5 3.484375 -2.859375 curveto
4.4375 -3.78125 4.65625 -4.265625 4.65625 -4.3125 curveto
4.65625 -4.40625 4.5625 -4.40625 4.546875 -4.40625 curveto
4.46875 -4.40625 4.453125 -4.390625 4.390625 -4.296875 curveto
4.09375 -3.8125 3.890625 -3.65625 3.65625 -3.65625 curveto
3.40625 -3.65625 3.296875 -3.8125 3.140625 -3.984375 curveto
2.953125 -4.203125 2.78125 -4.40625 2.453125 -4.40625 curveto
1.703125 -4.40625 1.25 -3.484375 1.25 -3.265625 curveto
1.25 -3.21875 1.28125 -3.15625 1.359375 -3.15625 curveto
1.453125 -3.15625 1.46875 -3.203125 1.5 -3.265625 curveto
1.6875 -3.734375 2.265625 -3.734375 2.34375 -3.734375 curveto
2.546875 -3.734375 2.734375 -3.671875 2.96875 -3.59375 curveto
3.375 -3.4375 3.484375 -3.4375 3.734375 -3.4375 curveto
3.375 -3.015625 2.546875 -2.296875 2.359375 -2.140625 curveto
1.859375 -1.6875 1.84375 -1.671875 1.453125 -1.296875 curveto
0.78125 -0.625 0.421875 -0.0625 0.421875 0.015625 curveto
0.421875 0.109375 0.53125 0.109375 0.546875 0.109375 curveto
0.625 0.109375 0.640625 0.09375 0.703125 -0.015625 curveto
0.9375 -0.375 1.234375 -0.640625 1.5625 -0.640625 curveto
1.78125 -0.640625 1.890625 -0.546875 2.140625 -0.265625 curveto
2.296875 -0.046875 2.484375 0.109375 2.765625 0.109375 curveto
3.765625 0.109375 4.34375 -1.15625 4.34375 -1.421875 curveto
4.34375 -1.46875 4.296875 -1.53125 4.21875 -1.53125 curveto
4.125 -1.53125 4.109375 -1.46875 4.078125 -1.390625 curveto
3.84375 -0.75 3.203125 -0.5625 2.875 -0.5625 curveto
2.6875 -0.5625 2.5 -0.625 2.296875 -0.6875 curveto
1.953125 -0.8125 1.796875 -0.859375 1.59375 -0.859375 curveto
1.578125 -0.859375 1.421875 -0.859375 1.328125 -0.828125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 241.992 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 245.90601 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 252.02202 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 263.44 128.80099] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 258.202 131.78999] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
12.625 13.953125 moveto
13.828125 10.765625 lineto
13.578125 10.765625 lineto
13.1875 11.796875 12.125 12.484375 10.984375 12.78125 curveto
10.78125 12.828125 9.796875 13.09375 7.890625 13.09375 curveto
1.875 13.09375 lineto
6.953125 7.140625 lineto
7.015625 7.0625 7.03125 7.03125 7.03125 6.984375 curveto
7.03125 6.953125 7.03125 6.921875 6.96875 6.828125 curveto
2.328125 0.484375 lineto
7.78125 0.484375 lineto
9.125 0.484375 10.03125 0.625 10.125 0.640625 curveto
10.65625 0.71875 11.53125 0.890625 12.3125 1.390625 curveto
12.5625 1.546875 13.234375 2 13.578125 2.796875 curveto
13.828125 2.796875 lineto
12.625 0 lineto
0.84375 0 lineto
0.609375 0 0.59375 0.015625 0.5625 0.0625 curveto
0.5625 0.09375 0.5625 0.296875 0.5625 0.40625 curveto
5.828125 7.609375 lineto
0.671875 13.671875 lineto
0.5625 13.78125 0.5625 13.84375 0.5625 13.84375 curveto
0.5625 13.953125 0.65625 13.953125 0.84375 13.953125 curveto
12.625 13.953125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 258.15201 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 262.55499 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
5.359375 -2.34375 moveto
5.453125 -2.34375 5.609375 -2.34375 5.609375 -2.515625 curveto
5.609375 -2.6875 5.453125 -2.6875 5.359375 -2.6875 curveto
0.75 -2.6875 lineto
0.65625 -2.6875 0.484375 -2.6875 0.484375 -2.515625 curveto
0.484375 -2.34375 0.640625 -2.34375 0.75 -2.34375 curveto
5.359375 -2.34375 lineto
closepath
5.359375 -0.8125 moveto
5.453125 -0.8125 5.609375 -0.8125 5.609375 -0.96875 curveto
5.609375 -1.15625 5.453125 -1.15625 5.359375 -1.15625 curveto
0.75 -1.15625 lineto
0.640625 -1.15625 0.484375 -1.15625 0.484375 -0.96875 curveto
0.484375 -0.8125 0.65625 -0.8125 0.75 -0.8125 curveto
5.359375 -0.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 268.67102 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.59375 -2.21875 moveto
3.59375 -2.984375 3.5 -3.546875 3.1875 -4.03125 curveto
2.96875 -4.34375 2.53125 -4.625 1.984375 -4.625 curveto
0.359375 -4.625 0.359375 -2.71875 0.359375 -2.21875 curveto
0.359375 -1.71875 0.359375 0.140625 1.984375 0.140625 curveto
3.59375 0.140625 3.59375 -1.71875 3.59375 -2.21875 curveto
closepath
1.984375 -0.0625 moveto
1.65625 -0.0625 1.234375 -0.25 1.09375 -0.8125 curveto
1 -1.21875 1 -1.796875 1 -2.3125 curveto
1 -2.828125 1 -3.359375 1.09375 -3.734375 curveto
1.25 -4.28125 1.6875 -4.4375 1.984375 -4.4375 curveto
2.359375 -4.4375 2.71875 -4.203125 2.84375 -3.796875 curveto
2.953125 -3.421875 2.96875 -2.921875 2.96875 -2.3125 curveto
2.96875 -1.796875 2.96875 -1.28125 2.875 -0.84375 curveto
2.734375 -0.203125 2.265625 -0.0625 1.984375 -0.0625 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 274.30301 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -3.765625 moveto
4.703125 -3.8125 4.71875 -3.875 4.71875 -3.9375 curveto
4.71875 -4.109375 4.609375 -4.203125 4.4375 -4.203125 curveto
4.34375 -4.203125 4.0625 -4.140625 4.03125 -3.78125 curveto
3.84375 -4.140625 3.5 -4.40625 3.09375 -4.40625 curveto
1.96875 -4.40625 0.734375 -3.015625 0.734375 -1.578125 curveto
0.734375 -0.59375 1.328125 0 2.046875 0 curveto
2.640625 0 3.109375 -0.46875 3.203125 -0.578125 curveto
3.21875 -0.5625 lineto
3.015625 0.3125 2.890625 0.734375 2.890625 0.75 curveto
2.84375 0.84375 2.515625 1.828125 1.453125 1.828125 curveto
1.265625 1.828125 0.9375 1.8125 0.65625 1.71875 curveto
0.953125 1.640625 1.0625 1.375 1.0625 1.203125 curveto
1.0625 1.046875 0.953125 0.859375 0.6875 0.859375 curveto
0.46875 0.859375 0.15625 1.03125 0.15625 1.4375 curveto
0.15625 1.84375 0.515625 2.046875 1.46875 2.046875 curveto
2.71875 2.046875 3.4375 1.265625 3.59375 0.671875 curveto
4.6875 -3.765625 lineto
closepath
3.40625 -1.28125 moveto
3.34375 -1.015625 3.109375 -0.765625 2.890625 -0.578125 curveto
2.6875 -0.40625 2.375 -0.21875 2.078125 -0.21875 curveto
1.578125 -0.21875 1.4375 -0.734375 1.4375 -1.140625 curveto
1.4375 -1.609375 1.71875 -2.796875 2 -3.296875 curveto
2.265625 -3.78125 2.6875 -4.1875 3.109375 -4.1875 curveto
3.765625 -4.1875 3.90625 -3.375 3.90625 -3.328125 curveto
3.90625 -3.28125 3.890625 -3.21875 3.875 -3.1875 curveto
3.40625 -1.28125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 279.05499 142.74899] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 -124.91182 538.29507] concat
gsave [1 0 0 1 223.43201 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.078125 -2.296875 moveto
6.859375 -2.296875 lineto
7 -2.296875 7.1875 -2.296875 7.1875 -2.5 curveto
7.1875 -2.6875 7 -2.6875 6.859375 -2.6875 curveto
4.078125 -2.6875 lineto
4.078125 -5.484375 lineto
4.078125 -5.625 4.078125 -5.8125 3.875 -5.8125 curveto
3.671875 -5.8125 3.671875 -5.625 3.671875 -5.484375 curveto
3.671875 -2.6875 lineto
0.890625 -2.6875 lineto
0.75 -2.6875 0.5625 -2.6875 0.5625 -2.5 curveto
0.5625 -2.296875 0.75 -2.296875 0.890625 -2.296875 curveto
3.671875 -2.296875 lineto
3.671875 0.5 lineto
3.671875 0.640625 3.671875 0.828125 3.875 0.828125 curveto
4.078125 0.828125 4.078125 0.640625 4.078125 0.5 curveto
4.078125 -2.296875 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 231.181 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
1 0.109375 1.15625 -0.015625 1.203125 -0.15625 curveto
1.390625 -0.90625 lineto
1.46875 -1.203125 1.546875 -1.5 1.609375 -1.796875 curveto
1.671875 -2.03125 1.734375 -2.25 1.78125 -2.46875 curveto
1.796875 -2.53125 1.890625 -2.859375 1.890625 -2.921875 curveto
1.921875 -3.015625 2.234375 -3.5625 2.578125 -3.84375 curveto
2.796875 -4 3.09375 -4.1875 3.53125 -4.1875 curveto
3.953125 -4.1875 4.0625 -3.84375 4.0625 -3.484375 curveto
4.0625 -2.953125 3.6875 -1.859375 3.453125 -1.25 curveto
3.375 -1.03125 3.3125 -0.90625 3.3125 -0.703125 curveto
3.3125 -0.234375 3.671875 0.109375 4.140625 0.109375 curveto
5.078125 0.109375 5.4375 -1.34375 5.4375 -1.421875 curveto
5.4375 -1.53125 5.359375 -1.53125 5.328125 -1.53125 curveto
5.21875 -1.53125 5.21875 -1.5 5.171875 -1.34375 curveto
5.03125 -0.8125 4.703125 -0.109375 4.15625 -0.109375 curveto
3.984375 -0.109375 3.921875 -0.203125 3.921875 -0.4375 curveto
3.921875 -0.6875 4 -0.921875 4.09375 -1.140625 curveto
4.25 -1.578125 4.703125 -2.765625 4.703125 -3.34375 curveto
4.703125 -3.984375 4.3125 -4.40625 3.5625 -4.40625 curveto
2.9375 -4.40625 2.453125 -4.09375 2.078125 -3.640625 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 236.92145 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.328125 -0.828125 moveto
1.859375 -1.40625 2.15625 -1.65625 2.515625 -1.96875 curveto
2.515625 -1.96875 3.125 -2.5 3.484375 -2.859375 curveto
4.4375 -3.78125 4.65625 -4.265625 4.65625 -4.3125 curveto
4.65625 -4.40625 4.5625 -4.40625 4.546875 -4.40625 curveto
4.46875 -4.40625 4.453125 -4.390625 4.390625 -4.296875 curveto
4.09375 -3.8125 3.890625 -3.65625 3.65625 -3.65625 curveto
3.40625 -3.65625 3.296875 -3.8125 3.140625 -3.984375 curveto
2.953125 -4.203125 2.78125 -4.40625 2.453125 -4.40625 curveto
1.703125 -4.40625 1.25 -3.484375 1.25 -3.265625 curveto
1.25 -3.21875 1.28125 -3.15625 1.359375 -3.15625 curveto
1.453125 -3.15625 1.46875 -3.203125 1.5 -3.265625 curveto
1.6875 -3.734375 2.265625 -3.734375 2.34375 -3.734375 curveto
2.546875 -3.734375 2.734375 -3.671875 2.96875 -3.59375 curveto
3.375 -3.4375 3.484375 -3.4375 3.734375 -3.4375 curveto
3.375 -3.015625 2.546875 -2.296875 2.359375 -2.140625 curveto
1.859375 -1.6875 1.84375 -1.671875 1.453125 -1.296875 curveto
0.78125 -0.625 0.421875 -0.0625 0.421875 0.015625 curveto
0.421875 0.109375 0.53125 0.109375 0.546875 0.109375 curveto
0.625 0.109375 0.640625 0.09375 0.703125 -0.015625 curveto
0.9375 -0.375 1.234375 -0.640625 1.5625 -0.640625 curveto
1.78125 -0.640625 1.890625 -0.546875 2.140625 -0.265625 curveto
2.296875 -0.046875 2.484375 0.109375 2.765625 0.109375 curveto
3.765625 0.109375 4.34375 -1.15625 4.34375 -1.421875 curveto
4.34375 -1.46875 4.296875 -1.53125 4.21875 -1.53125 curveto
4.125 -1.53125 4.109375 -1.46875 4.078125 -1.390625 curveto
3.84375 -0.75 3.203125 -0.5625 2.875 -0.5625 curveto
2.6875 -0.5625 2.5 -0.625 2.296875 -0.6875 curveto
1.953125 -0.8125 1.796875 -0.859375 1.59375 -0.859375 curveto
1.578125 -0.859375 1.421875 -0.859375 1.328125 -0.828125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 241.992 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 245.90601 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 252.02202 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 263.44 128.80099] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 258.202 131.78999] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
12.625 13.953125 moveto
13.828125 10.765625 lineto
13.578125 10.765625 lineto
13.1875 11.796875 12.125 12.484375 10.984375 12.78125 curveto
10.78125 12.828125 9.796875 13.09375 7.890625 13.09375 curveto
1.875 13.09375 lineto
6.953125 7.140625 lineto
7.015625 7.0625 7.03125 7.03125 7.03125 6.984375 curveto
7.03125 6.953125 7.03125 6.921875 6.96875 6.828125 curveto
2.328125 0.484375 lineto
7.78125 0.484375 lineto
9.125 0.484375 10.03125 0.625 10.125 0.640625 curveto
10.65625 0.71875 11.53125 0.890625 12.3125 1.390625 curveto
12.5625 1.546875 13.234375 2 13.578125 2.796875 curveto
13.828125 2.796875 lineto
12.625 0 lineto
0.84375 0 lineto
0.609375 0 0.59375 0.015625 0.5625 0.0625 curveto
0.5625 0.09375 0.5625 0.296875 0.5625 0.40625 curveto
5.828125 7.609375 lineto
0.671875 13.671875 lineto
0.5625 13.78125 0.5625 13.84375 0.5625 13.84375 curveto
0.5625 13.953125 0.65625 13.953125 0.84375 13.953125 curveto
12.625 13.953125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 258.15201 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 262.55499 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
5.359375 -2.34375 moveto
5.453125 -2.34375 5.609375 -2.34375 5.609375 -2.515625 curveto
5.609375 -2.6875 5.453125 -2.6875 5.359375 -2.6875 curveto
0.75 -2.6875 lineto
0.65625 -2.6875 0.484375 -2.6875 0.484375 -2.515625 curveto
0.484375 -2.34375 0.640625 -2.34375 0.75 -2.34375 curveto
5.359375 -2.34375 lineto
closepath
5.359375 -0.8125 moveto
5.453125 -0.8125 5.609375 -0.8125 5.609375 -0.96875 curveto
5.609375 -1.15625 5.453125 -1.15625 5.359375 -1.15625 curveto
0.75 -1.15625 lineto
0.640625 -1.15625 0.484375 -1.15625 0.484375 -0.96875 curveto
0.484375 -0.8125 0.65625 -0.8125 0.75 -0.8125 curveto
5.359375 -0.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 268.67102 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.59375 -2.21875 moveto
3.59375 -2.984375 3.5 -3.546875 3.1875 -4.03125 curveto
2.96875 -4.34375 2.53125 -4.625 1.984375 -4.625 curveto
0.359375 -4.625 0.359375 -2.71875 0.359375 -2.21875 curveto
0.359375 -1.71875 0.359375 0.140625 1.984375 0.140625 curveto
3.59375 0.140625 3.59375 -1.71875 3.59375 -2.21875 curveto
closepath
1.984375 -0.0625 moveto
1.65625 -0.0625 1.234375 -0.25 1.09375 -0.8125 curveto
1 -1.21875 1 -1.796875 1 -2.3125 curveto
1 -2.828125 1 -3.359375 1.09375 -3.734375 curveto
1.25 -4.28125 1.6875 -4.4375 1.984375 -4.4375 curveto
2.359375 -4.4375 2.71875 -4.203125 2.84375 -3.796875 curveto
2.953125 -3.421875 2.96875 -2.921875 2.96875 -2.3125 curveto
2.96875 -1.796875 2.96875 -1.28125 2.875 -0.84375 curveto
2.734375 -0.203125 2.265625 -0.0625 1.984375 -0.0625 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 274.30301 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.625 -0.8125 moveto
2.71875 -0.1875 3.0625 0.109375 3.5625 0.109375 curveto
4.15625 0.109375 4.6875 -0.265625 5.09375 -0.8125 curveto
5.84375 -1.859375 6.03125 -3.359375 6.03125 -3.703125 curveto
6.03125 -4.40625 5.65625 -4.40625 5.609375 -4.40625 curveto
5.359375 -4.40625 5.109375 -4.140625 5.109375 -3.921875 curveto
5.109375 -3.796875 5.15625 -3.734375 5.25 -3.65625 curveto
5.578125 -3.328125 5.609375 -3.015625 5.609375 -2.796875 curveto
5.609375 -1.9375 4.75 -0.609375 3.703125 -0.609375 curveto
3.625 -0.609375 3.34375 -0.609375 3.15625 -0.84375 curveto
3.046875 -1 2.953125 -1.1875 2.953125 -1.390625 curveto
2.953125 -1.421875 2.953125 -1.4375 3.015625 -1.546875 curveto
3.203125 -2 3.34375 -2.546875 3.34375 -2.671875 curveto
3.34375 -2.796875 3.28125 -2.90625 3.140625 -2.90625 curveto
3.03125 -2.90625 2.9375 -2.8125 2.859375 -2.65625 curveto
2.84375 -2.609375 2.71875 -2.15625 2.65625 -1.640625 curveto
2.625 -1.46875 2.625 -1.453125 2.5625 -1.375 curveto
2.125 -0.765625 1.671875 -0.609375 1.328125 -0.609375 curveto
0.671875 -0.609375 0.453125 -1.15625 0.453125 -1.75 curveto
0.453125 -2.5 0.8125 -3.3125 1.28125 -3.984375 curveto
1.390625 -4.125 1.390625 -4.140625 1.390625 -4.171875 curveto
1.390625 -4.25 1.328125 -4.296875 1.265625 -4.296875 curveto
1.109375 -4.296875 0.640625 -3.421875 0.515625 -3.09375 curveto
0.140625 -2.21875 0.125 -1.390625 0.125 -1.3125 curveto
0.125 -0.515625 0.421875 0.109375 1.1875 0.109375 curveto
1.828125 0.109375 2.3125 -0.34375 2.625 -0.8125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 280.862 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 285.763 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -3.765625 moveto
4.703125 -3.8125 4.71875 -3.875 4.71875 -3.9375 curveto
4.71875 -4.109375 4.609375 -4.203125 4.4375 -4.203125 curveto
4.34375 -4.203125 4.0625 -4.140625 4.03125 -3.78125 curveto
3.84375 -4.140625 3.5 -4.40625 3.09375 -4.40625 curveto
1.96875 -4.40625 0.734375 -3.015625 0.734375 -1.578125 curveto
0.734375 -0.59375 1.328125 0 2.046875 0 curveto
2.640625 0 3.109375 -0.46875 3.203125 -0.578125 curveto
3.21875 -0.5625 lineto
3.015625 0.3125 2.890625 0.734375 2.890625 0.75 curveto
2.84375 0.84375 2.515625 1.828125 1.453125 1.828125 curveto
1.265625 1.828125 0.9375 1.8125 0.65625 1.71875 curveto
0.953125 1.640625 1.0625 1.375 1.0625 1.203125 curveto
1.0625 1.046875 0.953125 0.859375 0.6875 0.859375 curveto
0.46875 0.859375 0.15625 1.03125 0.15625 1.4375 curveto
0.15625 1.84375 0.515625 2.046875 1.46875 2.046875 curveto
2.71875 2.046875 3.4375 1.265625 3.59375 0.671875 curveto
4.6875 -3.765625 lineto
closepath
3.40625 -1.28125 moveto
3.34375 -1.015625 3.109375 -0.765625 2.890625 -0.578125 curveto
2.6875 -0.40625 2.375 -0.21875 2.078125 -0.21875 curveto
1.578125 -0.21875 1.4375 -0.734375 1.4375 -1.140625 curveto
1.4375 -1.609375 1.71875 -2.796875 2 -3.296875 curveto
2.265625 -3.78125 2.6875 -4.1875 3.109375 -4.1875 curveto
3.765625 -4.1875 3.90625 -3.375 3.90625 -3.328125 curveto
3.90625 -3.28125 3.890625 -3.21875 3.875 -3.1875 curveto
3.40625 -1.28125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 290.51501 142.74899] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 1.1008709 538.3647] concat
gsave [1 0 0 1 223.43201 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.078125 -2.296875 moveto
6.859375 -2.296875 lineto
7 -2.296875 7.1875 -2.296875 7.1875 -2.5 curveto
7.1875 -2.6875 7 -2.6875 6.859375 -2.6875 curveto
4.078125 -2.6875 lineto
4.078125 -5.484375 lineto
4.078125 -5.625 4.078125 -5.8125 3.875 -5.8125 curveto
3.671875 -5.8125 3.671875 -5.625 3.671875 -5.484375 curveto
3.671875 -2.6875 lineto
0.890625 -2.6875 lineto
0.75 -2.6875 0.5625 -2.6875 0.5625 -2.5 curveto
0.5625 -2.296875 0.75 -2.296875 0.890625 -2.296875 curveto
3.671875 -2.296875 lineto
3.671875 0.5 lineto
3.671875 0.640625 3.671875 0.828125 3.875 0.828125 curveto
4.078125 0.828125 4.078125 0.640625 4.078125 0.5 curveto
4.078125 -2.296875 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 231.181 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
1 0.109375 1.15625 -0.015625 1.203125 -0.15625 curveto
1.390625 -0.90625 lineto
1.46875 -1.203125 1.546875 -1.5 1.609375 -1.796875 curveto
1.671875 -2.03125 1.734375 -2.25 1.78125 -2.46875 curveto
1.796875 -2.53125 1.890625 -2.859375 1.890625 -2.921875 curveto
1.921875 -3.015625 2.234375 -3.5625 2.578125 -3.84375 curveto
2.796875 -4 3.09375 -4.1875 3.53125 -4.1875 curveto
3.953125 -4.1875 4.0625 -3.84375 4.0625 -3.484375 curveto
4.0625 -2.953125 3.6875 -1.859375 3.453125 -1.25 curveto
3.375 -1.03125 3.3125 -0.90625 3.3125 -0.703125 curveto
3.3125 -0.234375 3.671875 0.109375 4.140625 0.109375 curveto
5.078125 0.109375 5.4375 -1.34375 5.4375 -1.421875 curveto
5.4375 -1.53125 5.359375 -1.53125 5.328125 -1.53125 curveto
5.21875 -1.53125 5.21875 -1.5 5.171875 -1.34375 curveto
5.03125 -0.8125 4.703125 -0.109375 4.15625 -0.109375 curveto
3.984375 -0.109375 3.921875 -0.203125 3.921875 -0.4375 curveto
3.921875 -0.6875 4 -0.921875 4.09375 -1.140625 curveto
4.25 -1.578125 4.703125 -2.765625 4.703125 -3.34375 curveto
4.703125 -3.984375 4.3125 -4.40625 3.5625 -4.40625 curveto
2.9375 -4.40625 2.453125 -4.09375 2.078125 -3.640625 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 236.92145 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.328125 -0.828125 moveto
1.859375 -1.40625 2.15625 -1.65625 2.515625 -1.96875 curveto
2.515625 -1.96875 3.125 -2.5 3.484375 -2.859375 curveto
4.4375 -3.78125 4.65625 -4.265625 4.65625 -4.3125 curveto
4.65625 -4.40625 4.5625 -4.40625 4.546875 -4.40625 curveto
4.46875 -4.40625 4.453125 -4.390625 4.390625 -4.296875 curveto
4.09375 -3.8125 3.890625 -3.65625 3.65625 -3.65625 curveto
3.40625 -3.65625 3.296875 -3.8125 3.140625 -3.984375 curveto
2.953125 -4.203125 2.78125 -4.40625 2.453125 -4.40625 curveto
1.703125 -4.40625 1.25 -3.484375 1.25 -3.265625 curveto
1.25 -3.21875 1.28125 -3.15625 1.359375 -3.15625 curveto
1.453125 -3.15625 1.46875 -3.203125 1.5 -3.265625 curveto
1.6875 -3.734375 2.265625 -3.734375 2.34375 -3.734375 curveto
2.546875 -3.734375 2.734375 -3.671875 2.96875 -3.59375 curveto
3.375 -3.4375 3.484375 -3.4375 3.734375 -3.4375 curveto
3.375 -3.015625 2.546875 -2.296875 2.359375 -2.140625 curveto
1.859375 -1.6875 1.84375 -1.671875 1.453125 -1.296875 curveto
0.78125 -0.625 0.421875 -0.0625 0.421875 0.015625 curveto
0.421875 0.109375 0.53125 0.109375 0.546875 0.109375 curveto
0.625 0.109375 0.640625 0.09375 0.703125 -0.015625 curveto
0.9375 -0.375 1.234375 -0.640625 1.5625 -0.640625 curveto
1.78125 -0.640625 1.890625 -0.546875 2.140625 -0.265625 curveto
2.296875 -0.046875 2.484375 0.109375 2.765625 0.109375 curveto
3.765625 0.109375 4.34375 -1.15625 4.34375 -1.421875 curveto
4.34375 -1.46875 4.296875 -1.53125 4.21875 -1.53125 curveto
4.125 -1.53125 4.109375 -1.46875 4.078125 -1.390625 curveto
3.84375 -0.75 3.203125 -0.5625 2.875 -0.5625 curveto
2.6875 -0.5625 2.5 -0.625 2.296875 -0.6875 curveto
1.953125 -0.8125 1.796875 -0.859375 1.59375 -0.859375 curveto
1.578125 -0.859375 1.421875 -0.859375 1.328125 -0.828125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 241.992 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 245.90601 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 252.02202 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 266.44101 128.80099] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.015625 -1.90625 moveto
3.671875 -2.328125 3.0625 -3.078125 2.03125 -3.078125 curveto
1.15625 -3.078125 0.546875 -2.328125 0.546875 -1.5 curveto
0.546875 -0.6875 1.140625 0.0625 2 0.0625 curveto
3 0.0625 3.625 -0.71875 3.90625 -1.09375 curveto
4.25 -0.671875 4.859375 0.0625 5.890625 0.0625 curveto
6.78125 0.0625 7.390625 -0.671875 7.390625 -1.5 curveto
7.390625 -2.328125 6.78125 -3.078125 5.921875 -3.078125 curveto
4.921875 -3.078125 4.3125 -2.28125 4.015625 -1.90625 curveto
closepath
4.25 -1.65625 moveto
4.671875 -2.328125 5.296875 -2.8125 5.984375 -2.8125 curveto
6.703125 -2.8125 7.1875 -2.1875 7.1875 -1.5 curveto
7.1875 -0.8125 6.625 -0.3125 6.015625 -0.3125 curveto
5.359375 -0.3125 4.90625 -0.875 4.25 -1.65625 curveto
closepath
3.671875 -1.359375 moveto
3.25 -0.671875 2.640625 -0.1875 1.953125 -0.1875 curveto
1.234375 -0.1875 0.734375 -0.828125 0.734375 -1.5 curveto
0.734375 -2.1875 1.3125 -2.6875 1.921875 -2.6875 curveto
2.578125 -2.6875 3.03125 -2.125 3.671875 -1.359375 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 263.21701 131.78999] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
12.625 13.953125 moveto
13.828125 10.765625 lineto
13.578125 10.765625 lineto
13.1875 11.796875 12.125 12.484375 10.984375 12.78125 curveto
10.78125 12.828125 9.796875 13.09375 7.890625 13.09375 curveto
1.875 13.09375 lineto
6.953125 7.140625 lineto
7.015625 7.0625 7.03125 7.03125 7.03125 6.984375 curveto
7.03125 6.953125 7.03125 6.921875 6.96875 6.828125 curveto
2.328125 0.484375 lineto
7.78125 0.484375 lineto
9.125 0.484375 10.03125 0.625 10.125 0.640625 curveto
10.65625 0.71875 11.53125 0.890625 12.3125 1.390625 curveto
12.5625 1.546875 13.234375 2 13.578125 2.796875 curveto
13.828125 2.796875 lineto
12.625 0 lineto
0.84375 0 lineto
0.609375 0 0.59375 0.015625 0.5625 0.0625 curveto
0.5625 0.09375 0.5625 0.296875 0.5625 0.40625 curveto
5.828125 7.609375 lineto
0.671875 13.671875 lineto
0.5625 13.78125 0.5625 13.84375 0.5625 13.84375 curveto
0.5625 13.953125 0.65625 13.953125 0.84375 13.953125 curveto
12.625 13.953125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 258.15201 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 262.55499 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
5.359375 -2.34375 moveto
5.453125 -2.34375 5.609375 -2.34375 5.609375 -2.515625 curveto
5.609375 -2.6875 5.453125 -2.6875 5.359375 -2.6875 curveto
0.75 -2.6875 lineto
0.65625 -2.6875 0.484375 -2.6875 0.484375 -2.515625 curveto
0.484375 -2.34375 0.640625 -2.34375 0.75 -2.34375 curveto
5.359375 -2.34375 lineto
closepath
5.359375 -0.8125 moveto
5.453125 -0.8125 5.609375 -0.8125 5.609375 -0.96875 curveto
5.609375 -1.15625 5.453125 -1.15625 5.359375 -1.15625 curveto
0.75 -1.15625 lineto
0.640625 -1.15625 0.484375 -1.15625 0.484375 -0.96875 curveto
0.484375 -0.8125 0.65625 -0.8125 0.75 -0.8125 curveto
5.359375 -0.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 268.67099 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 272.58499 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 278.70102 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 284.332 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -3.765625 moveto
4.703125 -3.8125 4.71875 -3.875 4.71875 -3.9375 curveto
4.71875 -4.109375 4.609375 -4.203125 4.4375 -4.203125 curveto
4.34375 -4.203125 4.0625 -4.140625 4.03125 -3.78125 curveto
3.84375 -4.140625 3.5 -4.40625 3.09375 -4.40625 curveto
1.96875 -4.40625 0.734375 -3.015625 0.734375 -1.578125 curveto
0.734375 -0.59375 1.328125 0 2.046875 0 curveto
2.640625 0 3.109375 -0.46875 3.203125 -0.578125 curveto
3.21875 -0.5625 lineto
3.015625 0.3125 2.890625 0.734375 2.890625 0.75 curveto
2.84375 0.84375 2.515625 1.828125 1.453125 1.828125 curveto
1.265625 1.828125 0.9375 1.8125 0.65625 1.71875 curveto
0.953125 1.640625 1.0625 1.375 1.0625 1.203125 curveto
1.0625 1.046875 0.953125 0.859375 0.6875 0.859375 curveto
0.46875 0.859375 0.15625 1.03125 0.15625 1.4375 curveto
0.15625 1.84375 0.515625 2.046875 1.46875 2.046875 curveto
2.71875 2.046875 3.4375 1.265625 3.59375 0.671875 curveto
4.6875 -3.765625 lineto
closepath
3.40625 -1.28125 moveto
3.34375 -1.015625 3.109375 -0.765625 2.890625 -0.578125 curveto
2.6875 -0.40625 2.375 -0.21875 2.078125 -0.21875 curveto
1.578125 -0.21875 1.4375 -0.734375 1.4375 -1.140625 curveto
1.4375 -1.609375 1.71875 -2.796875 2 -3.296875 curveto
2.265625 -3.78125 2.6875 -4.1875 3.109375 -4.1875 curveto
3.765625 -4.1875 3.90625 -3.375 3.90625 -3.328125 curveto
3.90625 -3.28125 3.890625 -3.21875 3.875 -3.1875 curveto
3.40625 -1.28125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 289.08401 142.74899] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1.5 0 0 1.5 127.04458 538.35613] concat
gsave [1 0 0 1 223.43201 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.078125 -2.296875 moveto
6.859375 -2.296875 lineto
7 -2.296875 7.1875 -2.296875 7.1875 -2.5 curveto
7.1875 -2.6875 7 -2.6875 6.859375 -2.6875 curveto
4.078125 -2.6875 lineto
4.078125 -5.484375 lineto
4.078125 -5.625 4.078125 -5.8125 3.875 -5.8125 curveto
3.671875 -5.8125 3.671875 -5.625 3.671875 -5.484375 curveto
3.671875 -2.6875 lineto
0.890625 -2.6875 lineto
0.75 -2.6875 0.5625 -2.6875 0.5625 -2.5 curveto
0.5625 -2.296875 0.75 -2.296875 0.890625 -2.296875 curveto
3.671875 -2.296875 lineto
3.671875 0.5 lineto
3.671875 0.640625 3.671875 0.828125 3.875 0.828125 curveto
4.078125 0.828125 4.078125 0.640625 4.078125 0.5 curveto
4.078125 -2.296875 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 231.181 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.859375 -6.8125 moveto
2.859375 -6.8125 2.859375 -6.921875 2.734375 -6.921875 curveto
2.5 -6.921875 1.78125 -6.84375 1.515625 -6.8125 curveto
1.4375 -6.8125 1.328125 -6.796875 1.328125 -6.625 curveto
1.328125 -6.5 1.421875 -6.5 1.5625 -6.5 curveto
2.046875 -6.5 2.0625 -6.4375 2.0625 -6.328125 curveto
2.03125 -6.125 lineto
0.59375 -0.390625 lineto
0.546875 -0.25 0.546875 -0.234375 0.546875 -0.171875 curveto
0.546875 0.0625 0.75 0.109375 0.84375 0.109375 curveto
1 0.109375 1.15625 -0.015625 1.203125 -0.15625 curveto
1.390625 -0.90625 lineto
1.46875 -1.203125 1.546875 -1.5 1.609375 -1.796875 curveto
1.671875 -2.03125 1.734375 -2.25 1.78125 -2.46875 curveto
1.796875 -2.53125 1.890625 -2.859375 1.890625 -2.921875 curveto
1.921875 -3.015625 2.234375 -3.5625 2.578125 -3.84375 curveto
2.796875 -4 3.09375 -4.1875 3.53125 -4.1875 curveto
3.953125 -4.1875 4.0625 -3.84375 4.0625 -3.484375 curveto
4.0625 -2.953125 3.6875 -1.859375 3.453125 -1.25 curveto
3.375 -1.03125 3.3125 -0.90625 3.3125 -0.703125 curveto
3.3125 -0.234375 3.671875 0.109375 4.140625 0.109375 curveto
5.078125 0.109375 5.4375 -1.34375 5.4375 -1.421875 curveto
5.4375 -1.53125 5.359375 -1.53125 5.328125 -1.53125 curveto
5.21875 -1.53125 5.21875 -1.5 5.171875 -1.34375 curveto
5.03125 -0.8125 4.703125 -0.109375 4.15625 -0.109375 curveto
3.984375 -0.109375 3.921875 -0.203125 3.921875 -0.4375 curveto
3.921875 -0.6875 4 -0.921875 4.09375 -1.140625 curveto
4.25 -1.578125 4.703125 -2.765625 4.703125 -3.34375 curveto
4.703125 -3.984375 4.3125 -4.40625 3.5625 -4.40625 curveto
2.9375 -4.40625 2.453125 -4.09375 2.078125 -3.640625 curveto
2.859375 -6.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 236.92145 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.328125 -0.828125 moveto
1.859375 -1.40625 2.15625 -1.65625 2.515625 -1.96875 curveto
2.515625 -1.96875 3.125 -2.5 3.484375 -2.859375 curveto
4.4375 -3.78125 4.65625 -4.265625 4.65625 -4.3125 curveto
4.65625 -4.40625 4.5625 -4.40625 4.546875 -4.40625 curveto
4.46875 -4.40625 4.453125 -4.390625 4.390625 -4.296875 curveto
4.09375 -3.8125 3.890625 -3.65625 3.65625 -3.65625 curveto
3.40625 -3.65625 3.296875 -3.8125 3.140625 -3.984375 curveto
2.953125 -4.203125 2.78125 -4.40625 2.453125 -4.40625 curveto
1.703125 -4.40625 1.25 -3.484375 1.25 -3.265625 curveto
1.25 -3.21875 1.28125 -3.15625 1.359375 -3.15625 curveto
1.453125 -3.15625 1.46875 -3.203125 1.5 -3.265625 curveto
1.6875 -3.734375 2.265625 -3.734375 2.34375 -3.734375 curveto
2.546875 -3.734375 2.734375 -3.671875 2.96875 -3.59375 curveto
3.375 -3.4375 3.484375 -3.4375 3.734375 -3.4375 curveto
3.375 -3.015625 2.546875 -2.296875 2.359375 -2.140625 curveto
1.859375 -1.6875 1.84375 -1.671875 1.453125 -1.296875 curveto
0.78125 -0.625 0.421875 -0.0625 0.421875 0.015625 curveto
0.421875 0.109375 0.53125 0.109375 0.546875 0.109375 curveto
0.625 0.109375 0.640625 0.09375 0.703125 -0.015625 curveto
0.9375 -0.375 1.234375 -0.640625 1.5625 -0.640625 curveto
1.78125 -0.640625 1.890625 -0.546875 2.140625 -0.265625 curveto
2.296875 -0.046875 2.484375 0.109375 2.765625 0.109375 curveto
3.765625 0.109375 4.34375 -1.15625 4.34375 -1.421875 curveto
4.34375 -1.46875 4.296875 -1.53125 4.21875 -1.53125 curveto
4.125 -1.53125 4.109375 -1.46875 4.078125 -1.390625 curveto
3.84375 -0.75 3.203125 -0.5625 2.875 -0.5625 curveto
2.6875 -0.5625 2.5 -0.625 2.296875 -0.6875 curveto
1.953125 -0.8125 1.796875 -0.859375 1.59375 -0.859375 curveto
1.578125 -0.859375 1.421875 -0.859375 1.328125 -0.828125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 241.992 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 245.90601 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 252.02202 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 256.491 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.625 -0.8125 moveto
2.71875 -0.1875 3.0625 0.109375 3.5625 0.109375 curveto
4.15625 0.109375 4.6875 -0.265625 5.09375 -0.8125 curveto
5.84375 -1.859375 6.03125 -3.359375 6.03125 -3.703125 curveto
6.03125 -4.40625 5.65625 -4.40625 5.609375 -4.40625 curveto
5.359375 -4.40625 5.109375 -4.140625 5.109375 -3.921875 curveto
5.109375 -3.796875 5.15625 -3.734375 5.25 -3.65625 curveto
5.578125 -3.328125 5.609375 -3.015625 5.609375 -2.796875 curveto
5.609375 -1.9375 4.75 -0.609375 3.703125 -0.609375 curveto
3.625 -0.609375 3.34375 -0.609375 3.15625 -0.84375 curveto
3.046875 -1 2.953125 -1.1875 2.953125 -1.390625 curveto
2.953125 -1.421875 2.953125 -1.4375 3.015625 -1.546875 curveto
3.203125 -2 3.34375 -2.546875 3.34375 -2.671875 curveto
3.34375 -2.796875 3.28125 -2.90625 3.140625 -2.90625 curveto
3.03125 -2.90625 2.9375 -2.8125 2.859375 -2.65625 curveto
2.84375 -2.609375 2.71875 -2.15625 2.65625 -1.640625 curveto
2.625 -1.46875 2.625 -1.453125 2.5625 -1.375 curveto
2.125 -0.765625 1.671875 -0.609375 1.328125 -0.609375 curveto
0.671875 -0.609375 0.453125 -1.15625 0.453125 -1.75 curveto
0.453125 -2.5 0.8125 -3.3125 1.28125 -3.984375 curveto
1.390625 -4.125 1.390625 -4.140625 1.390625 -4.171875 curveto
1.390625 -4.25 1.328125 -4.296875 1.265625 -4.296875 curveto
1.109375 -4.296875 0.640625 -3.421875 0.515625 -3.09375 curveto
0.140625 -2.21875 0.125 -1.390625 0.125 -1.3125 curveto
0.125 -0.515625 0.421875 0.109375 1.1875 0.109375 curveto
1.828125 0.109375 2.3125 -0.34375 2.625 -0.8125 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 263.04999 137.14101] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 277.41101 128.80099] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.015625 -1.90625 moveto
3.671875 -2.328125 3.0625 -3.078125 2.03125 -3.078125 curveto
1.15625 -3.078125 0.546875 -2.328125 0.546875 -1.5 curveto
0.546875 -0.6875 1.140625 0.0625 2 0.0625 curveto
3 0.0625 3.625 -0.71875 3.90625 -1.09375 curveto
4.25 -0.671875 4.859375 0.0625 5.890625 0.0625 curveto
6.78125 0.0625 7.390625 -0.671875 7.390625 -1.5 curveto
7.390625 -2.328125 6.78125 -3.078125 5.921875 -3.078125 curveto
4.921875 -3.078125 4.3125 -2.28125 4.015625 -1.90625 curveto
closepath
4.25 -1.65625 moveto
4.671875 -2.328125 5.296875 -2.8125 5.984375 -2.8125 curveto
6.703125 -2.8125 7.1875 -2.1875 7.1875 -1.5 curveto
7.1875 -0.8125 6.625 -0.3125 6.015625 -0.3125 curveto
5.359375 -0.3125 4.90625 -0.875 4.25 -1.65625 curveto
closepath
3.671875 -1.359375 moveto
3.25 -0.671875 2.640625 -0.1875 1.953125 -0.1875 curveto
1.234375 -0.1875 0.734375 -0.828125 0.734375 -1.5 curveto
0.734375 -2.1875 1.3125 -2.6875 1.921875 -2.6875 curveto
2.578125 -2.6875 3.03125 -2.125 3.671875 -1.359375 curveto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 274.18701 131.78999] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
12.625 13.953125 moveto
13.828125 10.765625 lineto
13.578125 10.765625 lineto
13.1875 11.796875 12.125 12.484375 10.984375 12.78125 curveto
10.78125 12.828125 9.796875 13.09375 7.890625 13.09375 curveto
1.875 13.09375 lineto
6.953125 7.140625 lineto
7.015625 7.0625 7.03125 7.03125 7.03125 6.984375 curveto
7.03125 6.953125 7.03125 6.921875 6.96875 6.828125 curveto
2.328125 0.484375 lineto
7.78125 0.484375 lineto
9.125 0.484375 10.03125 0.625 10.125 0.640625 curveto
10.65625 0.71875 11.53125 0.890625 12.3125 1.390625 curveto
12.5625 1.546875 13.234375 2 13.578125 2.796875 curveto
13.828125 2.796875 lineto
12.625 0 lineto
0.84375 0 lineto
0.609375 0 0.59375 0.015625 0.5625 0.0625 curveto
0.5625 0.09375 0.5625 0.296875 0.5625 0.40625 curveto
5.828125 7.609375 lineto
0.671875 13.671875 lineto
0.5625 13.78125 0.5625 13.84375 0.5625 13.84375 curveto
0.5625 13.953125 0.65625 13.953125 0.84375 13.953125 curveto
12.625 13.953125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 269.12201 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 273.526 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
5.359375 -2.34375 moveto
5.453125 -2.34375 5.609375 -2.34375 5.609375 -2.515625 curveto
5.609375 -2.6875 5.453125 -2.6875 5.359375 -2.6875 curveto
0.75 -2.6875 lineto
0.65625 -2.6875 0.484375 -2.6875 0.484375 -2.515625 curveto
0.484375 -2.34375 0.640625 -2.34375 0.75 -2.34375 curveto
5.359375 -2.34375 lineto
closepath
5.359375 -0.8125 moveto
5.453125 -0.8125 5.609375 -0.8125 5.609375 -0.96875 curveto
5.609375 -1.15625 5.453125 -1.15625 5.359375 -1.15625 curveto
0.75 -1.15625 lineto
0.640625 -1.15625 0.484375 -1.15625 0.484375 -0.96875 curveto
0.484375 -0.8125 0.65625 -0.8125 0.75 -0.8125 curveto
5.359375 -0.8125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 279.642 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
1.640625 -1.40625 moveto
1.640625 -1.453125 1.8125 -2.078125 1.8125 -2.109375 curveto
1.828125 -2.171875 2.03125 -2.515625 2.265625 -2.6875 curveto
2.328125 -2.734375 2.515625 -2.875 2.828125 -2.875 curveto
2.890625 -2.875 3.0625 -2.875 3.203125 -2.78125 curveto
2.984375 -2.71875 2.90625 -2.515625 2.90625 -2.390625 curveto
2.90625 -2.25 3.015625 -2.140625 3.171875 -2.140625 curveto
3.34375 -2.140625 3.5625 -2.265625 3.5625 -2.5625 curveto
3.5625 -2.921875 3.1875 -3.078125 2.828125 -3.078125 curveto
2.46875 -3.078125 2.15625 -2.921875 1.84375 -2.578125 curveto
1.71875 -3 1.296875 -3.078125 1.125 -3.078125 curveto
0.875 -3.078125 0.703125 -2.90625 0.578125 -2.71875 curveto
0.421875 -2.453125 0.328125 -2.046875 0.328125 -2 curveto
0.328125 -1.921875 0.421875 -1.921875 0.453125 -1.921875 curveto
0.546875 -1.921875 0.546875 -1.9375 0.59375 -2.125 curveto
0.703125 -2.546875 0.84375 -2.875 1.109375 -2.875 curveto
1.296875 -2.875 1.34375 -2.71875 1.34375 -2.53125 curveto
1.34375 -2.40625 1.28125 -2.140625 1.21875 -1.953125 curveto
1.171875 -1.765625 1.109375 -1.484375 1.078125 -1.328125 curveto
0.84375 -0.4375 lineto
0.828125 -0.34375 0.78125 -0.171875 0.78125 -0.15625 curveto
0.78125 0 0.90625 0.0625 1.015625 0.0625 curveto
1.125 0.0625 1.265625 0 1.3125 -0.125 curveto
1.328125 -0.171875 1.40625 -0.484375 1.453125 -0.65625 curveto
1.640625 -1.40625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 283.55499 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
3.21875 -1.578125 moveto
5.359375 -1.578125 lineto
5.453125 -1.578125 5.609375 -1.578125 5.609375 -1.734375 curveto
5.609375 -1.921875 5.453125 -1.921875 5.359375 -1.921875 curveto
3.21875 -1.921875 lineto
3.21875 -4.0625 lineto
3.21875 -4.140625 3.21875 -4.3125 3.0625 -4.3125 curveto
2.890625 -4.3125 2.890625 -4.15625 2.890625 -4.0625 curveto
2.890625 -1.921875 lineto
0.75 -1.921875 lineto
0.65625 -1.921875 0.484375 -1.921875 0.484375 -1.75 curveto
0.484375 -1.578125 0.640625 -1.578125 0.75 -1.578125 curveto
2.890625 -1.578125 lineto
2.890625 0.5625 lineto
2.890625 0.65625 2.890625 0.828125 3.046875 0.828125 curveto
3.21875 0.828125 3.21875 0.65625 3.21875 0.5625 curveto
3.21875 -1.578125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 289.67102 153.237] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.328125 -4.4375 moveto
2.328125 -4.625 2.328125 -4.625 2.125 -4.625 curveto
1.671875 -4.1875 1.046875 -4.1875 0.765625 -4.1875 curveto
0.765625 -3.9375 lineto
0.921875 -3.9375 1.390625 -3.9375 1.765625 -4.125 curveto
1.765625 -0.578125 lineto
1.765625 -0.34375 1.765625 -0.25 1.078125 -0.25 curveto
0.8125 -0.25 lineto
0.8125 0 lineto
0.9375 0 1.796875 -0.03125 2.046875 -0.03125 curveto
2.265625 -0.03125 3.140625 0 3.296875 0 curveto
3.296875 -0.25 lineto
3.03125 -0.25 lineto
2.328125 -0.25 2.328125 -0.34375 2.328125 -0.578125 curveto
2.328125 -4.4375 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 295.30301 141.254] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
4.6875 -3.765625 moveto
4.703125 -3.8125 4.71875 -3.875 4.71875 -3.9375 curveto
4.71875 -4.109375 4.609375 -4.203125 4.4375 -4.203125 curveto
4.34375 -4.203125 4.0625 -4.140625 4.03125 -3.78125 curveto
3.84375 -4.140625 3.5 -4.40625 3.09375 -4.40625 curveto
1.96875 -4.40625 0.734375 -3.015625 0.734375 -1.578125 curveto
0.734375 -0.59375 1.328125 0 2.046875 0 curveto
2.640625 0 3.109375 -0.46875 3.203125 -0.578125 curveto
3.21875 -0.5625 lineto
3.015625 0.3125 2.890625 0.734375 2.890625 0.75 curveto
2.84375 0.84375 2.515625 1.828125 1.453125 1.828125 curveto
1.265625 1.828125 0.9375 1.8125 0.65625 1.71875 curveto
0.953125 1.640625 1.0625 1.375 1.0625 1.203125 curveto
1.0625 1.046875 0.953125 0.859375 0.6875 0.859375 curveto
0.46875 0.859375 0.15625 1.03125 0.15625 1.4375 curveto
0.15625 1.84375 0.515625 2.046875 1.46875 2.046875 curveto
2.71875 2.046875 3.4375 1.265625 3.59375 0.671875 curveto
4.6875 -3.765625 lineto
closepath
3.40625 -1.28125 moveto
3.34375 -1.015625 3.109375 -0.765625 2.890625 -0.578125 curveto
2.6875 -0.40625 2.375 -0.21875 2.078125 -0.21875 curveto
1.578125 -0.21875 1.4375 -0.734375 1.4375 -1.140625 curveto
1.4375 -1.609375 1.71875 -2.796875 2 -3.296875 curveto
2.265625 -3.78125 2.6875 -4.1875 3.109375 -4.1875 curveto
3.765625 -4.1875 3.90625 -3.375 3.90625 -3.328125 curveto
3.90625 -3.28125 3.890625 -3.21875 3.875 -3.1875 curveto
3.40625 -1.28125 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
gsave [1 0 0 1 300.05499 142.74899] concat
gsave [1 0 0 1 0 0] concat
gsave
0 0 0 setrgbcolor
newpath
2.1875 -4.625 moveto
2.1875 -4.640625 2.203125 -4.734375 2.203125 -4.734375 curveto
2.203125 -4.78125 2.1875 -4.84375 2.09375 -4.84375 curveto
1.953125 -4.84375 1.375 -4.78125 1.203125 -4.765625 curveto
1.15625 -4.765625 1.046875 -4.75 1.046875 -4.609375 curveto
1.046875 -4.515625 1.15625 -4.515625 1.234375 -4.515625 curveto
1.5625 -4.515625 1.5625 -4.453125 1.5625 -4.40625 curveto
1.5625 -4.359375 1.546875 -4.3125 1.546875 -4.25 curveto
0.5625 -0.3125 lineto
0.515625 -0.1875 0.515625 -0.171875 0.515625 -0.15625 curveto
0.515625 -0.046875 0.609375 0.0625 0.765625 0.0625 curveto
0.953125 0.0625 1.03125 -0.0625 1.078125 -0.21875 curveto
1.09375 -0.25 1.390625 -1.484375 1.421875 -1.578125 curveto
1.921875 -1.53125 2.3125 -1.359375 2.3125 -1 curveto
2.3125 -0.96875 2.3125 -0.9375 2.296875 -0.859375 curveto
2.265625 -0.765625 2.265625 -0.71875 2.265625 -0.640625 curveto
2.265625 -0.15625 2.671875 0.0625 3.015625 0.0625 curveto
3.6875 0.0625 3.890625 -0.984375 3.890625 -1 curveto
3.890625 -1.09375 3.8125 -1.09375 3.78125 -1.09375 curveto
3.6875 -1.09375 3.671875 -1.046875 3.640625 -0.921875 curveto
3.5625 -0.625 3.375 -0.125 3.03125 -0.125 curveto
2.84375 -0.125 2.78125 -0.296875 2.78125 -0.484375 curveto
2.78125 -0.609375 2.78125 -0.625 2.828125 -0.796875 curveto
2.84375 -0.828125 2.859375 -0.9375 2.859375 -1.015625 curveto
2.859375 -1.640625 2.03125 -1.734375 1.734375 -1.75 curveto
1.9375 -1.875 2.1875 -2.109375 2.3125 -2.21875 curveto
2.671875 -2.546875 3.015625 -2.875 3.40625 -2.875 curveto
3.484375 -2.875 3.578125 -2.859375 3.640625 -2.78125 curveto
3.34375 -2.734375 3.28125 -2.5 3.28125 -2.390625 curveto
3.28125 -2.25 3.390625 -2.140625 3.546875 -2.140625 curveto
3.75 -2.140625 3.953125 -2.296875 3.953125 -2.578125 curveto
3.953125 -2.8125 3.78125 -3.078125 3.421875 -3.078125 curveto
3.015625 -3.078125 2.65625 -2.78125 2.296875 -2.453125 curveto
2 -2.1875 1.78125 -1.96875 1.484375 -1.84375 curveto
2.1875 -4.625 lineto
closepath
0 0 moveto
fill
grestore
grestore
grestore
grestore
gsave [1 0 0 1 -17 0] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 566.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
gsave [1 0 0 1 -15 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -303] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 -369 -198] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
gsave [1 0 0 1 -192 488.36218] concat
grestore
grestore
gsave [1 0 0 1 -101.91097 488.27711] concat
grestore
gsave [1 0 0 1 -36.02258 0.154105] concat
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
180.08904 566.2771 moveto
216.08904 566.2771 lineto
stroke
gsave [1 0 0 1 90.089045 -0.085069783] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 566.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
gsave [1 0 0 1 -15 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -303] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -278.91096 -198.08507] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
gsave [1 0 0 1 126.08902 -108.08508] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 602.36218 lineto
stroke
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -188.73405 -305.91493] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414.08903 803.27711 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414.08903 803.27711 moveto
414 869.36218 lineto
stroke
gsave [-0.00080832103 0.59999946 -0.59999946 -0.00080832103 414.08903 803.27711] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [0.00080832103 -0.59999946 0.59999946 0.00080832103 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
410.73405 800.27711 moveto
416.73405 800.27711 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
410.73405 800.27711 moveto
416.73405 800.27711 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.27343 moveto
417 872.27343 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.0851223 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.27343 moveto
417 872.27343 lineto
stroke
grestore
grestore
gsave [1 0 0 1 -12.000005 488.36218] concat
grestore
gsave [1 0 0 1 90.08904 0.037939] concat
gsave [1 0 0 1 234 -108] concat
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
grestore
gsave [1 0 0 1 255.08904 -303.08507] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 198 2.6171874e-06] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 566.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
54 674.36218 moveto
90 674.36218 lineto
stroke
gsave [1 0 0 1 -15 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -303] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -171.00001 -198] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
414 767.36218 moveto
414 869.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
414 767.36218 moveto
414 869.36218 lineto
stroke
gsave [3.6738191e-17 0.6 -0.6 3.6738191e-17 414 767.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [-3.6738191e-17 -0.6 0.6 -3.6738191e-17 414 869.36218] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 764.36218 moveto
417 764.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 764.36218 moveto
417 764.36218 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
411 872.36218 moveto
417 872.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
411 872.36218 moveto
417 872.36218 lineto
stroke
grestore
gsave [1 0 0 1 234 -108] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 674.36218 moveto
90 530.36218 lineto
stroke
gsave [1 0 0 1 21 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -231] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 21 -267] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -135.08904 -305.91493] concat
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
468.08904 731.1541 moveto
468 869.23917 lineto
fill
grestore
0 0 0 setrgbcolor
[2 2] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
468.08904 731.1541 moveto
468 869.23917 lineto
stroke
gsave [-0.00038689186 0.59999988 -0.59999988 -0.00038689186 468.08904 731.1541] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave [0.00038689186 -0.59999988 0.59999988 0.00038689186 468 869.23917] concat
gsave
0 0 0 setrgbcolor
newpath
8.7185878 4.0337352 moveto
-2.2072895 0.016013256 lineto
8.7185884 -4.0017078 lineto
6.97309 -1.6296469 6.9831476 1.6157441 8.7185878 4.0337352 curveto
closepath
eofill
grestore
grestore
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
465 728.23917 moveto
471 728.23917 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
465 728.23917 moveto
471 728.23917 lineto
stroke
gsave
1 0.33333334 0.33333334 setrgbcolor
newpath
465 872.23917 moveto
471 872.23917 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
newpath
465 872.23917 moveto
471 872.23917 lineto
stroke
grestore
gsave [1 0 0 1 46.546875 350.25281] concat
grestore
gsave [1 0 0 1 255 -411] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 255 -447] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
grestore
showpage
%%EOF

%%EndDocument
 @endspecial 0 2624 a Fu(Figure)34 b(3:)47 b(W)-8 b(alks)35
b(coun)m(ted)h(b)m(y)f Fr(g)1276 2639 y Fp(r)1314 2624
y Fu(,)g(with)g Fr(r)e(>)e Fu(0,)k(either)g(con)m(tain)g(a)f(single)h
(horizon)m(tal)g(b)s(ond)f(\(and)h(so)0 2840 y(are)f(an)g
Fq(c)g Fu(or)f(an)h Fq(e)p Fu(\))g(or)g(can)g(b)s(e)g(constructed)h(b)m
(y)g(app)s(ending)g(an)e Fq(c)h Fu(or)g Fq(e)g Fu(con\014guration)g(of)
f(b)s(onds)i(to)e(a)0 3057 y(w)m(alk)h(coun)m(ted)f(b)m(y)h
Fr(g)776 3072 y Fp(k)818 3057 y Fu(.)44 b(Summing)33
b(o)m(v)m(er)h(all)e(these)i(p)s(osibilities)g(giv)m(es)g(equation)g
(\(3.16\).)826 3328 y Fr(g)873 3343 y Fp(r)r Fk(+1)1023
3328 y Fq(\000)22 b Fu(\()p Fr(z)27 b Fu(+)22 b Fr(!)t(z)t
Fu(\))p Fr(g)1529 3343 y Fp(r)1589 3328 y Fu(+)g Fr(!)1752
3287 y Fp(r)1789 3328 y Fr(hz)1894 3287 y Fp(r)r Fk(+2)2023
3328 y Fu(\()p Fr(!)k Fq(\000)c Fu(1\))p Fr(g)2381 3343
y Fp(r)2441 3328 y Fu(+)g Fr(!)t(z)2653 3287 y Fk(2)2692
3328 y Fr(g)2739 3343 y Fp(r)r Fj(\000)p Fk(1)2895 3328
y Fu(=)27 b(0)p Fr(:)577 b Fu(\(3.17\))0 3515 y(W)-8
b(e)33 b(ha)m(v)m(e)h Fr(q)d Fu(=)d Fr(!)t(z)37 b Fu(so)32
b(that)h(\(3.17\))e(b)s(ecomes)969 3701 y Fr(g)1016 3716
y Fp(r)r Fk(+1)1166 3701 y Fq(\000)22 b Fu(\()p Fr(z)27
b Fu(+)22 b Fr(q)t Fu(\))p Fr(g)1605 3716 y Fp(r)1665
3701 y Fu(+)g Fr(q)1810 3660 y Fp(r)1848 3701 y Fr(hz)t
Fu(\()p Fr(q)k Fq(\000)d Fr(z)t Fu(\))p Fr(g)2294 3716
y Fp(r)2355 3701 y Fu(+)f Fr(q)t(z)t(g)2596 3716 y Fp(r)r
Fj(\000)p Fk(1)2752 3701 y Fu(=)27 b(0)p Fr(:)720 b Fu(\(3.18\))0
3888 y(This)34 b(can)f(b)s(e)f(solv)m(ed)j(with)e(the)g(Ansatz)1509
4125 y Fr(g)1556 4140 y Fp(r)1621 4125 y Fu(=)28 b Fr(\025)1782
4084 y Fp(r)1877 4001 y Fj(1)1841 4031 y Fl(X)1836 4240
y Fp(m)p Fk(=0)2006 4125 y Fr(p)2055 4140 y Fp(m)2121
4125 y Fu(\()p Fr(q)t Fu(\))p Fr(q)2291 4084 y Fp(mr)3651
4125 y Fu(\(3.19\))0 4394 y(whic)m(h)34 b(is)f(a)f(solution)i(pro)m
(vided)g(that)1468 4580 y Fr(\025)1525 4539 y Fk(2)1586
4580 y Fq(\000)23 b Fr(\025)p Fu(\()p Fr(z)k Fu(+)22
b Fr(q)t Fu(\))g(+)g Fr(q)t(z)32 b Fu(=)27 b(0)1219 b(\(3.20\))0
4767 y(and)1161 4917 y Fr(p)1210 4932 y Fp(m)1277 4917
y Fu(\()p Fr(q)t Fu(\))27 b(=)1672 4850 y Fr(\025hz)t
Fu(\()p Fr(z)g Fq(\000)c Fr(q)t Fu(\))p Fr(q)2176 4813
y Fp(m)p 1541 4894 833 4 v 1541 4985 a Fu(\()p Fr(\025q)1683
4956 y Fp(m)1771 4985 y Fq(\000)g Fr(q)t Fu(\)\()p Fr(\025q)2098
4956 y Fp(m)2186 4985 y Fq(\000)g Fr(z)t Fu(\))2383 4917
y Fr(p)2432 4932 y Fp(m)p Fj(\000)p Fk(1)2589 4917 y
Fu(\()p Fr(q)t Fu(\))p Fr(:)912 b Fu(\(3.21\))0 5133
y(Since)34 b Fr(p)304 5148 y Fk(0)343 5133 y Fu(\()p
Fr(q)t Fu(\))27 b(=)h(1)k(this)i(giv)m(es)1114 5385 y
Fr(p)1163 5400 y Fp(m)1230 5385 y Fu(\()p Fr(q)t Fu(\))27
b(=)1564 5318 y Fr(\025)1621 5282 y Fp(m)1687 5318 y
Fr(h)1743 5282 y Fp(m)1810 5318 y Fr(z)1859 5282 y Fp(m)1926
5318 y Fu(\()p Fr(z)g Fq(\000)c Fr(q)t Fu(\))2221 5282
y Fp(m)2287 5318 y Fr(q)2334 5282 y Fp(m)p Fk(\()p Fp(m)p
Fk(+1\))p Fp(=)p Fk(2)p 1494 5363 1256 4 v 1494 5379
a Fl(Q)1588 5405 y Fp(m)1588 5483 y(k)r Fk(=1)1721 5454
y Fu(\()p Fr(\025q)1863 5425 y Fp(k)1927 5454 y Fq(\000)g
Fr(q)t Fu(\))2129 5379 y Fl(Q)2222 5405 y Fp(m)2222 5483
y(k)r Fk(=1)2355 5454 y Fu(\()p Fr(\025q)2497 5425 y
Fp(k)2561 5454 y Fq(\000)g Fr(z)t Fu(\))2759 5385 y Fr(:)865
b Fu(\(3.22\))1901 5682 y(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 146 100 a Fu(The)40 b(quadratic)e(equation)h
(\(3.20\))f(has)h(the)f(t)m(w)m(o)h(solutions)g Fr(\025)2499
115 y Fk(1)2576 100 y Fu(=)e Fr(z)43 b Fu(and)c Fr(\025)3030
115 y Fk(2)3106 100 y Fu(=)f Fr(q)j Fu(=)c Fr(!)t(z)42
b Fu(and)d(the)0 220 y(general)33 b(solution)g(for)f
Fr(g)901 235 y Fp(r)939 220 y Fu(,)g Fr(r)f(>)c Fu(0)33
b(is)1525 340 y Fr(g)1572 355 y Fp(r)1637 340 y Fu(=)28
b Fr(A)1814 355 y Fk(1)1853 340 y Fr(g)1904 299 y Fk(\(1\))1900
365 y Fp(r)2020 340 y Fu(+)22 b Fr(A)2191 355 y Fk(2)2231
340 y Fr(g)2282 299 y Fk(\(2\))2278 365 y Fp(r)3651 340
y Fu(\(3.23\))0 515 y(where)817 686 y Fr(g)868 645 y
Fk(\()p Fp(i)p Fk(\))864 711 y Fp(r)978 686 y Fu(=)28
b Fr(\025)1139 645 y Fp(r)1139 711 y(i)1199 686 y Fu(+)22
b Fr(\025)1354 645 y Fp(r)1354 711 y(i)1449 562 y Fj(1)1412
591 y Fl(X)1408 801 y Fp(m)p Fk(=1)1686 619 y Fr(\025)1743
583 y Fp(m)1743 643 y(i)1809 619 y Fr(h)1865 583 y Fp(m)1932
619 y Fr(z)1981 583 y Fp(m)2048 619 y Fu(\()p Fr(z)27
b Fq(\000)c Fr(q)t Fu(\))2343 583 y Fp(m)2409 619 y Fr(q)2456
583 y Fp(m)p Fk(\()p Fp(m)p Fk(+1\))p Fp(=)p Fk(2)p 1587
663 1312 4 v 1587 680 a Fl(Q)1681 706 y Fp(m)1681 784
y(k)r Fk(=1)1814 754 y Fu(\()p Fr(\025)1909 769 y Fp(i)1937
754 y Fr(q)1984 726 y Fp(k)2049 754 y Fq(\000)f Fr(q)t
Fu(\))2250 680 y Fl(Q)2344 706 y Fp(m)2344 784 y(k)r
Fk(=1)2477 754 y Fu(\()p Fr(\025)2572 769 y Fp(i)2600
754 y Fr(q)2647 726 y Fp(k)2711 754 y Fq(\000)h Fr(z)t
Fu(\))2909 686 y Fr(q)2956 645 y Fp(mr)3056 686 y Fr(:)568
b Fu(\(3.24\))0 948 y(Argumen)m(ts)29 b(similar)f(to)f(those)h(in)g
(Brak)g Fs(et)i(al)37 b Fu(\(1992\))27 b(sho)m(w)h(that)f
Fr(A)2550 963 y Fk(2)2618 948 y Fu(=)g(0)g(and)h Fr(A)3055
963 y Fk(1)3122 948 y Fu(can)f(b)s(e)h(determined)0 1068
y(b)m(y)33 b(noting)g(that)1195 1227 y Fr(g)1242 1242
y Fk(0)1309 1227 y Fu(=)1423 1160 y(1)p 1423 1204 49
4 v 1423 1296 a(2)1481 1227 y Fr(A)1554 1242 y Fk(1)1594
1227 y Fr(g)1645 1176 y Fk(\(1\))1641 1252 y(0)1766 1227
y Fu(=)28 b Fr(hz)f Fu(+)22 b Fr(hz)2224 1202 y Fu(^)2201
1227 y Fr(G)q Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p
Fr(;)g(!)t Fu(\))945 b(\(3.25\))0 1427 y(and)1289 1547
y Fr(g)1336 1562 y Fk(1)1403 1547 y Fu(=)28 b Fr(A)1580
1562 y Fk(1)1619 1547 y Fr(g)1670 1497 y Fk(\(1\))1666
1572 y(1)1791 1547 y Fu(=)g Fr(a)22 b Fu(+)g Fr(b)2130
1522 y Fu(^)2107 1547 y Fr(G)q Fu(\()p Fr(z)t Fu(;)17
b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))1039 b(\(3.26\))0 1722
y(where)31 b Fr(a)d Fu(=)g Fr(hz)567 1686 y Fk(2)607
1722 y Fu(\(2)17 b(+)h Fr(hz)k Fq(\000)c Fr(!)t(hz)t
Fu(\))30 b(and)g Fr(b)e Fu(=)g Fr(hz)1726 1686 y Fk(2)1766
1722 y Fu(\(1)17 b(+)h Fr(hz)k Fu(+)17 b Fr(!)k Fq(\000)d
Fr(!)t(hz)t Fu(\).)42 b(These)32 b(sim)m(ultaneous)h(equations)0
1842 y(giv)m(e)1309 2013 y(^)1287 2038 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)1931
1971 y(2)p Fr(hz)t(g)2136 1920 y Fk(\(1\))2132 1995 y(1)2253
1971 y Fq(\000)22 b Fr(ag)2454 1920 y Fk(\(1\))2450 1995
y(0)p 1931 2015 617 4 v 1936 2128 a Fr(bg)2028 2077 y
Fk(\(1\))2024 2152 y(0)2144 2128 y Fq(\000)h Fu(2)p Fr(hz)t(g)2449
2077 y Fk(\(1\))2445 2152 y(1)2586 2038 y Fr(;)1038 b
Fu(\(3.27\))0 2284 y(whic)m(h)34 b(can)f(b)s(e)g(written)g(as)843
2560 y(1)22 b(+)1034 2535 y(^)1012 2560 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))26 b(=)1656
2492 y(2)p Fr(hz)1810 2456 y Fk(2)1850 2492 y Fu(\()p
Fr(!)f Fq(\000)e Fu(1\))p Fr(g)2212 2441 y Fk(\(1\))2208
2517 y(0)p 1656 2537 650 4 v 1677 2649 a Fr(bg)1769 2599
y Fk(\(1\))1765 2674 y(0)1885 2649 y Fq(\000)g Fu(2)p
Fr(hz)t(g)2190 2599 y Fk(\(1\))2186 2674 y(1)1542 2875
y Fu(=)2096 2808 y(\()p Fr(!)j Fq(\000)c Fu(1\))p Fr(g)2458
2757 y Fk(\(1\))2454 2832 y(0)p 1656 2852 1337 4 v 1656
2965 a Fr(z)t Fu(\(1)g(+)g Fr(hz)27 b Fu(+)22 b Fr(!)k
Fq(\000)d Fr(!)t(hz)t Fu(\))p Fr(g)2584 2914 y Fk(\(1\))2580
2989 y(0)2699 2965 y Fq(\000)g Fu(2)p Fr(g)2899 2914
y Fk(\(1\))2895 2989 y(1)3030 2875 y Fr(:)594 b Fu(\(3.28\))0
3173 y(The)34 b(solution)f(giv)m(en)g(b)m(y)h(Ow)m(czarek)g
Fs(et)h(al)d Fu(\(1993\))g(w)m(as)h(written)h(as)593
3437 y(1)22 b(+)g Fr(G)p Fu(\()p Fr(x;)17 b(y)t(;)g(y)t(;)g(!)t
Fu(\))25 b(=)2222 3370 y(1)d Fq(\000)h Fr(!)p 1409 3414
1861 4 v 1409 3505 a Fu(2\()p Fq(H)q Fu(\()p Fr(y)t(;)17
b(y)t(!)t(;)g(xy)t Fu(\()p Fr(!)22 b Fq(\000)h Fu(1\)\))f
Fq(\000)g Fu(1\))g(+)g(\(1)g Fq(\000)g Fr(!)t Fu(\)\(1)g
Fq(\000)g Fr(x)p Fu(\))3280 3437 y Fr(:)344 b Fu(\(3.29\))0
3707 y(where)1468 3858 y Fq(H)q Fu(\()p Fr(y)t(;)17 b(q)t(;)g(t)p
Fu(\))26 b(=)1990 3790 y Fr(H)8 b Fu(\()p Fr(y)t(;)17
b(q)t(;)g(q)t(t)p Fu(\))p 1990 3835 432 4 v 2014 3926
a Fr(H)8 b Fu(\()p Fr(y)t(;)17 b(q)t(;)g(t)p Fu(\))3651
3858 y(\(3.30\))0 4083 y(and)1312 4269 y Fr(H)8 b Fu(\()p
Fr(y)t(;)17 b(q)t(;)g(t)p Fu(\))26 b(=)1865 4144 y Fj(1)1828
4174 y Fl(X)1834 4383 y Fp(n)p Fk(=0)2061 4201 y Fr(q)2108
4166 y Fu(\()2145 4127 y Fm(n)2149 4183 y Fo(2)2184 4166
y Fu(\))2226 4201 y(\()p Fq(\000)p Fr(t)p Fu(\))2414
4165 y Fp(n)p 1999 4246 525 4 v 1999 4337 a Fu(\()p Fr(y)t
Fu(;)17 b Fr(q)t Fu(\))2218 4352 y Fp(n)2263 4337 y Fu(\()p
Fr(q)t Fu(;)g Fr(q)t Fu(\))2477 4352 y Fp(n)2561 4269
y Fr(:)1063 b Fu(\(3.31\))0 4525 y(The)34 b(t)m(w)m(o)f(forms)g(can)f
(b)s(e)h(seen)h(to)e(b)s(e)h(the)g(same)h(when)f(one)g(notes)g(that)565
4745 y(1)22 b(+)756 4719 y(^)734 4745 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)g(1)22
b(+)g Fr(G)p Fu(\()p Fr(hz)t(;)17 b(z)t(;)g(z)t(;)g(!)t
Fu(\))1265 4945 y(=)2234 4878 y(1)22 b Fq(\000)h Fr(!)p
1378 4923 1947 4 v 1378 5014 a Fu(2\()p Fq(H)q Fu(\()p
Fr(z)t(;)17 b(z)t(!)t(;)g(hz)1944 4985 y Fk(2)1985 5014
y Fu(\()p Fr(!)25 b Fq(\000)e Fu(1\)\))e Fq(\000)i Fu(1\))f(+)g(\(1)g
Fq(\000)g Fr(!)t Fu(\)\(1)f Fq(\000)i Fr(hz)t Fu(\))1265
5204 y(=)2194 5136 y Fr(!)i Fq(\000)e Fu(1)p 1378 5181
1866 4 v 1378 5272 a(\(1)f(+)g Fr(hz)27 b Fu(+)22 b Fr(!)k
Fq(\000)c Fr(!)t(hz)t Fu(\))h Fq(\000)f Fu(2)p Fq(H)q
Fu(\()p Fr(z)t(;)17 b(z)t(!)t(;)g(hz)2855 5243 y Fk(2)2896
5272 y Fu(\()p Fr(!)25 b Fq(\000)e Fu(1\)\))3651 5204
y(\(3.32\))1901 5682 y(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 100 a Fu(and)33 b(that)1316
276 y Fq(H)q Fu(\()p Fr(z)t(;)17 b(z)t(!)t(;)g(hz)1795
235 y Fk(2)1835 276 y Fu(\()p Fr(!)26 b Fq(\000)c Fu(1\)\))28
b(=)2350 209 y Fr(g)2401 158 y Fk(\(1\))2397 233 y(1)p
2325 253 195 4 v 2325 366 a Fr(z)t(g)2425 315 y Fk(\(1\))2421
390 y(0)2557 276 y Fr(:)1067 b Fu(\(3.33\))146 547 y(The)35
b(implications)h(for)d(the)i(singularit)m(y)g(diagram)f(of)f(this)i
(expression)h(for)3031 522 y(^)3009 547 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\),)33
b(and)i(the)0 667 y(phase)f(transitions,)f(will)g(b)s(e)g(considered)i
(in)d(the)h(next)h(section.)0 1076 y Fg(3.4)135 b(Solution)46
b(on)f(the)g(sp)t(ecial)g(surface)h Ff(z)39 b Fy(=)33
b(1)p Ff(=!)0 1260 y Fu(Before)44 b(w)m(e)h(pro)s(ceed)g(to)f(discuss)i
(the)f(singularit)m(y)g(diagram)f(let)g(us)h(consider)g(the)g(solution)
g(on)f(the)0 1381 y(sp)s(ecial)i(surface)g(de\014ned)h(b)m(y)f
Fr(q)54 b Fu(=)49 b(1)c(since)i(the)e(solution)h(describ)s(ed)h(b)m(y)g
(\(3.28\))d(is)i(singular)g(when)0 1501 y Fr(z)32 b Fu(=)c(1)p
Fr(=!)35 b Fu(though)e(the)g(generating)g(function)g(is)g(\014nite)g
(for)f(large)h(enough)g Fr(!)t Fu(.)146 1622 y(The)h(recurrence)g(for)e
(the)h(partial)g(generating)g(functions)g(b)s(ecome)1034
1842 y Fr(g)1081 1857 y Fp(r)r Fk(+1)1231 1842 y Fu(+)22
b([)p Fr(hz)t Fu(\(1)h Fq(\000)g Fr(z)t Fu(\))f Fq(\000)h
Fu(\(1)f(+)g Fr(z)t Fu(\)])p Fr(g)2248 1857 y Fp(r)2309
1842 y Fu(+)g Fr(z)t(g)2503 1857 y Fp(r)r Fj(\000)p Fk(1)2659
1842 y Fu(=)27 b(0)h Fr(;)785 b Fu(\(3.34\))0 2062 y(and)33
b(no)m(w)g(the)g(simpler)h(Ansatz)f(of)f Fr(g)1389 2077
y Fp(r)1455 2062 y Fu(=)27 b Fr(C)7 b(\026)1694 2025
y Fp(r)1764 2062 y Fu(can)33 b(b)s(e)g(used)h(to)e(\014nd)870
2377 y(1)22 b(+)1061 2351 y(^)1039 2377 y Fr(G)p Fu(\(1)p
Fr(=!)t Fu(;)17 b Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))25
b(=)1785 2197 y Fl(s)p 1885 2197 1091 4 v 39 x(\022)2215
2309 y Fr(w)2288 2280 y Fk(2)2327 2309 y Fu(\()p Fr(w)f
Fq(\000)f Fu(1\))p 1968 2354 924 4 v 1968 2445 a Fr(w)s
Fu(\()p Fr(w)h Fq(\000)f Fr(h)p Fu(\))2367 2416 y Fk(2)2428
2445 y Fq(\000)g Fu(\()p Fr(w)h Fu(+)e Fr(h)p Fu(\))2852
2416 y Fk(2)2902 2236 y Fl(\023)3003 2377 y Fr(:)621
b Fu(\(3.35\))0 2674 y(When)33 b Fr(h)28 b Fu(=)g(1)k(w)m(e)i(reco)m(v)
m(er)g(the)f(previously)i(calculated)e(result)h(of)e(Brak)h
Fs(et)i(al)42 b Fu(\(1992\).)0 3153 y Ft(4)161 b(The)53
b(phase)g(diagram)i(for)e(a)i(horizon)l(tal)c(force)0
3372 y Fu(In)39 b(order)f(to)g(analyse)i(the)e(phase)i(transition)e
(structure)i(w)m(e)f(need)h(to)e(analyse)h(the)g(form)f(of)g(the)h
(sin-)0 3493 y(gularit)m(y)34 b(diagram)g(as)f(a)h(function)g(of)f(the)
h Fr(!)j Fu(and)c Fr(h)h Fu(parameters.)48 b(W)-8 b(e)34
b(deriv)m(e)h(a)e(functional)h(equation)0 3613 y(for)i(a)h(sligh)m(t)h
(generalization)g(of)e(the)i(quan)m(tit)m(y)g Fr(g)1868
3562 y Fk(\(1\))1864 3623 y Fp(r)1962 3613 y Fu(.)56
b(W)-8 b(e)38 b(in)m(tro)s(duce)g(a)f(parameter)g Fr(t)g
Fu(and)g(de\014ne)i(the)0 3733 y(function)894 3905 y
Fr(g)t Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))25
b(=)j(1)22 b(+)1695 3780 y Fj(1)1658 3810 y Fl(X)1654
4019 y Fp(m)p Fk(=1)1833 3831 y Fr(h)1889 3795 y Fp(m)1956
3831 y Fr(!)2021 3795 y Fj(\000)p Fp(m)2158 3750 y Fl(\000)2219
3792 y Fk(1)p 2214 3808 47 4 v 2214 3865 a Fp(!)2292
3831 y Fq(\000)h Fu(1)2441 3750 y Fl(\001)2503 3831 y
Fr(q)2550 3795 y Fp(m)p Fk(\()p Fp(m)p Fk(+5\))p Fp(=)p
Fk(2)2894 3831 y Fr(t)2929 3795 y Fp(m)p 1833 3882 1164
4 v 1909 3898 a Fl(Q)2003 3925 y Fp(m)2003 4002 y(k)r
Fk(=1)2136 3973 y Fu(\(1)e Fq(\000)i Fr(q)2391 3944 y
Fp(k)2434 3973 y Fu(\)\(1)e Fq(\000)i Fr(q)2727 3944
y Fp(k)2769 3973 y Fr(=!)t Fu(\))3699 3905 y(\(4.1\))0
4192 y(Note)33 b(that)f Fr(g)498 4141 y Fk(\(1\))494
4217 y(1)624 4192 y Fu(is)h(equal)h(to)e Fr(z)t(g)t Fu(\()p
Fr(tq)t Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))31 b(ev)-5
b(aluated)33 b(at)f Fr(t)c Fu(=)g(1)k(while)i Fr(g)2797
4141 y Fk(\(1\))2793 4217 y(0)2918 4192 y Fu(=)28 b Fr(g)t
Fu(\(1;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\).)146 4313 y(The)34
b(function)f Fr(g)t Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t
Fu(\))30 b(satis\014es)35 b(the)e(functional)f(equation)285
4533 y Fr(g)t Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t
Fu(\))j(+)i Fr(g)t Fu(\()p Fr(q)1001 4492 y Fk(2)1039
4533 y Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))p Fr(=!)30
b Fu(=)d(\(1)22 b(+)g(1)p Fr(=!)j Fu(+)d(\(1)p Fr(=!)j
Fq(\000)e Fu(1\))p Fr(hq)2656 4492 y Fk(2)2695 4533 y
Fr(t=!)t Fu(\))p Fr(g)t Fu(\()p Fr(q)t(t)p Fu(;)17 b
Fr(q)t(;)g(h;)g(!)t Fu(\))p Fr(:)281 b Fu(\(4.2\))0 4753
y(De\014ning)1153 4848 y(^)1128 4873 y Fr(H)7 b Fu(\()p
Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))26 b(=)i Fr(g)t
Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))p
Fr(=g)t Fu(\()p Fr(tq)t Fu(;)g Fr(q)t(;)g(h;)g(!)t Fu(\))922
b(\(4.3\))0 5048 y(giv)m(es)677 5192 y(^)652 5217 y Fr(H)7
b Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))27
b(=)g(\(1)22 b(+)g(1)p Fr(=!)j Fu(+)d(\(1)p Fr(=!)j Fq(\000)d
Fu(1\))p Fr(hq)2281 5176 y Fk(2)2321 5217 y Fr(t=!)t
Fu(\))f Fq(\000)2830 5150 y Fu(1)p Fr(=!)p 2639 5194
545 4 v 2664 5276 a Fu(^)2639 5301 y Fr(H)7 b Fu(\()p
Fr(q)t(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))3221 5217
y Fr(;)451 b Fu(\(4.4\))1901 5682 y(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 100 a Fu(whic)m(h)34 b(leads)g(to)e(a)g(con)m
(tin)m(ued)i(fraction)f(represen)m(tation)h(for)2340
74 y(^)2315 100 y Fr(H)8 b Fu(\()p Fr(t)p Fu(;)17 b Fr(q)t(;)g(h;)g(!)t
Fu(\).)42 b(Note)32 b(that)674 336 y(^)649 361 y Fr(H)8
b Fu(\(1;)17 b Fr(q)t(;)g(h;)g(!)t Fu(\))25 b Fq(\021)1319
336 y Fu(^)1293 361 y Fr(H)8 b Fu(\()p Fr(q)t(;)17 b(h;)g(!)t
Fu(\))26 b(=)i Fr(z)t(g)1944 310 y Fk(\(1\))1940 385
y(0)2038 361 y Fr(=g)2138 310 y Fk(\(1\))2134 385 y(1)2259
361 y Fu(=)2782 293 y(1)p 2373 338 869 4 v 2373 429 a
Fq(H)q Fu(\()p Fr(z)t(;)17 b(z)t(!)t(;)g(hz)2852 400
y Fk(2)2892 429 y Fu(\()p Fr(!)26 b Fq(\000)c Fu(1\)\))3699
361 y(\(4.5\))0 628 y(and)33 b(therefore)817 798 y(1)21
b(+)1008 773 y(^)985 798 y Fr(G)p Fu(\()p Fr(z)t Fu(;)c
Fr(h;)g Fu(1)p Fr(;)g(!)t Fu(\))27 b(=)1973 731 y(\()p
Fr(!)e Fq(\000)e Fu(1\))2309 705 y(^)2284 731 y Fr(H)7
b Fu(\()p Fr(q)t(;)17 b(h;)g(!)t Fu(\))p 1630 775 1417
4 v 1630 881 a(\(1)k(+)h Fr(hz)27 b Fu(+)c Fr(!)i Fq(\000)e
Fr(!)t(hz)t Fu(\))2482 856 y(^)2457 881 y Fr(H)7 b Fu(\()p
Fr(q)t(;)17 b(h;)g(!)t Fu(\))k Fq(\000)i Fu(2)3056 798
y Fr(:)616 b Fu(\(4.6\))146 1062 y(The)37 b(function)760
1036 y(^)734 1062 y Fr(H)8 b Fu(\()p Fr(q)t(;)17 b(h;)g(!)t
Fu(\))34 b(is)i(singular)f(on)h(the)f(h)m(yp)s(erb)s(ola)h
Fr(q)g Fu(=)d Fr(!)t(z)j Fu(=)c(1)j(for)g(all)g(v)-5
b(alues)37 b(of)d Fr(h)i Fu(and)0 1182 y(the)28 b(only)h(other)f
(singularities)i(in)e Fr(G)g Fu(come)g(from)g(the)h(p)s(oles)f(corresp)
s(onding)h(to)f(the)g(denominator)h(of)e Fr(G)0 1302
y Fu(b)s(eing)e(zero,)j Fs(ie)k Fu(determined)27 b(b)m(y)f(the)f
(solution)h(of)f(the)g(equation)h(\(1)7 b(+)g Fr(hz)k
Fu(+)c Fr(!)k Fq(\000)c Fr(!)t(hz)t Fu(\))3159 1277 y(^)3133
1302 y Fr(H)h Fu(\()p Fr(q)t(;)17 b(h;)g(!)t Fu(\))7
b Fq(\000)g Fu(2)27 b(=)g(0.)0 1423 y(This)42 b(line)g(of)e(p)s(oles)i
(in)m(tersects)h(the)e(h)m(yp)s(erb)s(ola)h(at)f(a)f(p)s(oin)m(t)h
(determined)i(b)m(y)f(solving)g(the)f(equation)0 1543
y(\(1)30 b(+)g Fr(hz)35 b Fu(+)30 b Fr(!)k Fq(\000)d
Fr(!)t(hz)t Fu(\))901 1518 y(^)876 1543 y Fr(H)7 b Fu(\(1)p
Fr(;)17 b(h;)g(!)t Fu(\))29 b Fq(\000)i Fu(2)47 b(=)h(0,)g(where)2098
1518 y(^)2072 1543 y Fr(H)8 b Fu(\(1)p Fr(;)17 b(h;)g(!)t
Fu(\))43 b(is)i(determined)h(b)m(y)f(the)g(quadratic)0
1664 y(equation)755 1810 y(^)730 1836 y Fr(H)8 b Fu(\(1)p
Fr(;)17 b(h;)g(!)t Fu(\))1153 1795 y Fk(2)1213 1836 y
Fq(\000)1312 1695 y Fl(\024)1365 1836 y Fu(1)22 b(+)1552
1768 y(1)p 1544 1813 65 4 v 1544 1904 a Fr(!)1640 1836
y Fu(+)1738 1695 y Fl(\022)1829 1768 y Fu(1)p 1822 1813
V 1822 1904 a Fr(!)1918 1836 y Fq(\000)h Fu(1)2067 1695
y Fl(\023)2170 1768 y Fr(h)p 2166 1813 V 2166 1904 a(!)2241
1695 y Fl(\025)2335 1810 y Fu(^)2310 1836 y Fr(H)7 b
Fu(\(1)p Fr(;)17 b(h;)g(!)t Fu(\))k(+)2869 1768 y(1)p
2861 1813 V 2861 1904 a Fr(!)2963 1836 y Fu(=)27 b(0)h
Fr(;)529 b Fu(\(4.7\))0 2066 y(whic)m(h)33 b(comes)f(from)f(\(4.4\))f
(on)h(setting)h Fr(q)g Fu(=)27 b Fr(t)h Fu(=)g(1.)42
b(The)32 b(v)-5 b(ariables)32 b Fr(!)i Fu(and)e Fr(h)f
Fu(are)g(related)g(through)h(the)0 2186 y(equation)1106
2307 y Fr(ah)1213 2266 y Fk(2)1253 2307 y Fu(\()p Fr(!)26
b Fq(\000)c Fu(1\))g Fq(\000)h Fu(2)p Fr(!)t Fu(\()p
Fr(!)h Fu(+)e(1\))p Fr(h)g Fu(+)g Fr(!)2349 2266 y Fk(3)2410
2307 y Fq(\000)h Fr(!)2575 2266 y Fk(2)2641 2307 y Fu(=)28
b(0)905 b(\(4.8\))0 2480 y(whic)m(h)34 b(implies)g(that)f(the)g
(critical)g(v)-5 b(alue)33 b(of)f Fr(h)h Fu(is)g(giv)m(en)g(b)m(y)1470
2751 y Fr(h)1526 2766 y Fp(c)1588 2751 y Fu(=)1702 2683
y(\()p Fr(!)25 b Fu(+)d(1)g Fq(\000)h Fu(2)2144 2612
y Fq(p)p 2227 2612 V 71 x Fr(!)s Fu(\))p Fr(!)p 1702
2728 692 4 v 1930 2819 a(!)j Fq(\000)c Fu(1)2403 2751
y Fr(:)1269 b Fu(\(4.9\))146 3001 y(T)-8 b(o)39 b(determine)h(the)f
(detailed)h(shap)s(e)f(of)f(the)h(part)f(of)g(the)h(phase)h(b)s
(oundary)f(determined)h(b)m(y)g(the)0 3122 y(p)s(oles)32
b(of)378 3097 y(^)356 3122 y Fr(G)f Fu(w)m(e)h(solv)m(e)h(the)f
(equation)g(\(1)19 b(+)h Fr(hz)k Fu(+)c Fr(!)j Fq(\000)d
Fr(!)t(hz)t Fu(\))2245 3097 y(^)2220 3122 y Fr(H)27 b
Fq(\000)20 b Fu(2)28 b(=)f(0)k(n)m(umerically)j(b)m(y)e(ev)-5
b(aluating)31 b Fr(H)0 3242 y Fu(from)h(its)h(con)m(tin)m(ued)i
(fraction)d(expansion.)45 b(That)33 b(is,)g(w)m(e)h(write)2449
3217 y(^)2424 3242 y Fr(H)40 b Fu(as)849 3434 y(^)824
3459 y Fr(H)7 b Fu(\()p Fr(t)p Fu(;)17 b Fr(!)t(;)g(h;)g(q)t
Fu(\))26 b(=)i(\(1)22 b(+)g(1)p Fr(=!)j Fu(+)d(\(1)p
Fr(=!)j Fq(\000)d Fu(1\))p Fr(hq)2453 3418 y Fk(2)2492
3459 y Fr(t=!)t Fu(\)\(1)g(+)g Fr(\014)2941 3474 y Fk(1)2980
3459 y Fq(C)6 b Fu(\))575 b(\(4.10\))0 3676 y(where)1505
3816 y Fq(C)34 b Fu(=)2020 3748 y(1)p 1704 3793 682 4
v 1704 3941 a(1)22 b(+)2082 3874 y Fr(\014)2137 3889
y Fk(1)p 1883 3918 493 4 v 1883 4067 a Fu(1)g(+)2166
4000 y Fr(\014)2221 4015 y Fk(2)p 2062 4044 304 4 v 2062
4193 a Fu(1)g(+)2251 4125 y Fr(\014)2306 4140 y Fk(3)p
2241 4170 115 4 v 2247 4249 a Fu(.)2285 4274 y(.)2323
4299 y(.)3651 3816 y(\(4.11\))0 4438 y(and)314 4684 y
Fr(\014)369 4699 y Fp(p)p Fk(+1)526 4684 y Fu(=)1836
4617 y Fq(\000)p Fu(1)p Fr(=!)p 640 4661 2633 4 v 640
4753 a Fu(\(1)g(+)g(1)p Fr(=!)j Fu(+)d(\(1)p Fr(=!)j
Fq(\000)d Fu(1\))p Fr(hq)1640 4724 y Fp(p)p Fk(+2)1770
4753 y Fr(t=!)t Fu(\)\(1)f(+)h(1)p Fr(=!)j Fu(+)d(\(1)p
Fr(=!)j Fq(\000)d Fu(1\))p Fr(hq)2956 4724 y Fp(p)p Fk(+3)3086
4753 y Fr(t=!)t Fu(\))3310 4684 y Fr(:)314 b Fu(\(4.12\))146
4952 y(T)-8 b(o)33 b(ev)-5 b(aluate)33 b(the)g(con)m(tin)m(ued)h
(fraction)f Fq(C)39 b Fu(e\016cien)m(tly)c(w)m(e)e(note)g(that)g(if)f
Fq(C)2888 4967 y Fp(m)2988 4952 y Fu(is)h(the)g(truncation)g(of)f
Fq(C)0 5072 y Fu(at)d(order)g Fr(m)g Fu(then)h Fq(C)752
5087 y Fp(m)848 5072 y Fu(can)f(b)s(e)g(written)h(as)g(a)e(rational)h
(function)g(whose)i(n)m(umerator)e(and)g(denominator)0
5192 y(dep)s(end)j(on)f Fr(m)h Fu(and)f(are)g(determined)i(b)m(y)g
(recurrences.)45 b(This)32 b(giv)m(es)h(a)e(con)m(v)m(enien)m(t)j(w)m
(a)m(y)e(to)f(ev)-5 b(aluate)32 b Fq(C)0 5313 y Fu(to)j(the)g(required)
h(accuracy)-8 b(.)52 b(In)35 b(Figure)g(4)g(w)m(e)h(sho)m(w)g(the)g
(phase)f(b)s(oundaries)h(in)f(the)h(\()p Fr(!)t(;)17
b(z)t Fu(\)-plane)34 b(for)0 5433 y(sev)m(eral)g(v)-5
b(alues)34 b(of)e Fr(h)p Fu(.)1901 5682 y(14)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 887 2126 a
 /PSfrag where{pop(z)[[0(Bl)1 0]](w)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/sing1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Saturday, 5 July 2008 02:00:05 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.0 w
[ 2.0 5.0 ] 0.0 d
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
21 139 -5 OPL
145 13
147 21
151 33
156 48
158 51
160 56
164 67
167 74
171 82
174 88
177 95
181 101
184 106
186 110
191 117
197 126
197 127
198 128
204 136
207 139
210 144
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2.0 w
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
28 210 144 OPL
219 154
223 158
226 161
236 170
248 181
249 181
249 181
262 191
269 195
275 199
287 206
287 206
289 207
300 213
304 215
313 219
320 222
326 225
336 229
339 230
350 234
352 235
352 235
365 239
367 239
377 243
382 244
390 246
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
1.0 0.0 0.0 RG
94.0 64.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-94.0 -64.0 translate
106.0 71.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-106.0 -71.0 translate
118.0 79.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-118.0 -79.0 translate
134.0 89.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-134.0 -89.0 translate
142.0 94.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-142.0 -94.0 translate
162.0 106.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-162.0 -106.0 translate
181.0 120.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-181.0 -120.0 translate
200.0 134.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-200.0 -134.0 translate
205.0 139.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-205.0 -139.0 translate
209.0 143.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-209.0 -143.0 translate
Q
q
2 J
0 j
0.0 0.0 1.0 RG
93.0 117.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-93.0 -117.0 translate
105.0 121.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-105.0 -121.0 translate
117.0 126.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-117.0 -126.0 translate
141.0 135.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-141.0 -135.0 translate
165.0 145.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-165.0 -145.0 translate
190.0 154.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-190.0 -154.0 translate
214.0 164.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-214.0 -164.0 translate
238.0 176.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-238.0 -176.0 translate
253.0 183.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-253.0 -183.0 translate
Q
q
2 J
0 j
0.0 0.392157 0.0 RG
94.0 153.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-94.0 -153.0 translate
106.0 156.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-106.0 -156.0 translate
118.0 159.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-118.0 -159.0 translate
142.0 165.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-142.0 -165.0 translate
166.0 171.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-166.0 -171.0 translate
191.0 178.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-191.0 -178.0 translate
206.0 182.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-206.0 -182.0 translate
239.0 192.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-239.0 -192.0 translate
264.0 199.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-264.0 -199.0 translate
293.0 210.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-293.0 -210.0 translate
Q
q
1.0 0.0 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 65 OPL
97 66
99 68
101 69
104 70
106 72
108 73
110 75
113 76
115 77
118 79
120 81
123 82
126 84
129 86
131 88
134 89
135 91
138 92
140 93
142 94
144 96
147 97
150 99
153 101
157 104
160 106
164 108
167 111
171 113
175 116
178 119
182 121
186 124
189 126
193 129
195 131
198 133
200 135
202 136
204 137
205 138
206 139
206 140
207 141
208 141
209 142
210 143
210 144
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
0.0 0.0 1.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 119 OPL
97 119
99 120
101 121
103 122
105 122
107 123
109 124
111 125
113 126
116 126
118 127
121 129
124 130
128 131
131 132
135 134
139 135
143 137
147 139
151 140
155 142
159 143
163 145
167 147
172 148
175 150
179 151
184 153
188 155
192 156
196 158
200 160
204 161
208 163
212 165
216 167
220 168
224 170
228 172
232 174
235 175
239 177
242 178
245 180
247 181
250 183
252 184
255 185
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
0.0 0.392157 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 154 OPL
97 154
99 155
101 155
104 156
106 156
108 157
111 158
113 158
116 159
119 160
122 161
126 162
130 163
134 164
138 165
143 166
147 167
152 168
157 170
161 171
166 172
171 173
175 175
179 176
184 177
188 178
191 179
195 180
199 181
202 182
206 183
210 184
215 186
220 187
226 189
231 190
237 192
242 193
247 195
252 196
257 198
262 199
267 201
272 203
277 205
283 207
288 209
294 211
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
q
1 313 340 OPL
313 342
1 362 340 OPL
362 342
1 216 340 OPL
216 342
1 265 340 OPL
265 342
1 119 340 OPL
119 342
1 167 340 OPL
167 342
1 70 340 OPL
70 342
1 46 340 OPL
386 340
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
204 363 22 27 rc
208.0 385.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -293 1042 1010 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -293 1042 1010
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0 def
		/quotedbl 713.0 def
		/numbersign 500.0 def
		/dollar 549.0 def
		/percent 833.0 def
		/ampersand 778.0 def
		/quoteright 439.0 def
		/parenleft 333.0 def
		/parenright 333.0 def
		/asterisk 500.0 def
		/plus 549.0 def
		/comma 250.0 def
		/hyphen 584.0 def
		/period 250.0 def
		/slash 278.0 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 278.0 def
		/semicolon 278.0 def
		/less 549.0 def
		/equal 549.0 def
		/greater 549.0 def
		/question 444.0 def
		/at 549.0 def
		/A 722.0 def
		/B 667.0 def
		/C 722.0 def
		/D 612.0 def
		/E 611.0 def
		/F 763.0 def
		/G 603.0 def
		/H 722.0 def
		/I 333.0 def
		/J 631.0 def
		/K 722.0 def
		/L 686.0 def
		/M 889.0 def
		/N 722.0 def
		/O 722.0 def
		/P 768.0 def
		/Q 741.0 def
		/R 556.0 def
		/S 592.0 def
		/T 611.0 def
		/U 690.0 def
		/V 439.0 def
		/W 768.0 def
		/X 645.0 def
		/Y 795.0 def
		/Z 611.0 def
		/bracketleft 333.0 def
		/backslash 863.0 def
		/bracketright 333.0 def
		/asciicircum 658.0 def
		/underscore 500.0 def
		/quoteleft 500.0 def
		/a 631.0 def
		/b 549.0 def
		/c 549.0 def
		/d 494.0 def
		/e 439.0 def
		/f 521.0 def
		/g 411.0 def
		/h 603.0 def
		/i 329.0 def
		/j 603.0 def
		/k 549.0 def
		/l 549.0 def
		/m 576.0 def
		/n 521.0 def
		/o 549.0 def
		/p 549.0 def
		/q 521.0 def
		/r 549.0 def
		/s 603.0 def
		/t 439.0 def
		/u 576.0 def
		/v 713.0 def
		/w 686.0 def
		/x 493.0 def
		/y 686.0 def
		/z 494.0 def
		/braceleft 480.0 def
		/bar 200.0 def
		/braceright 480.0 def
		/asciitilde 549.0 def
		/exclamdown 620.0 def
		/cent 247.0 def
		/sterling 549.0 def
		/fraction 584.0 def
		/yen 713.0 def
		/florin 584.0 def
		/section 753.0 def
		/currency 167.0 def
		/quotesingle 439.0 def
		/quotedblleft 584.0 def
		/guillemotleft 1042.0 def
		/guilsinglleft 584.0 def
		/guilsinglright 584.0 def
		/fi 584.0 def
		/fl 584.0 def
		/endash 584.0 def
		/dagger 584.0 def
		/daggerdbl 584.0 def
		/periodcentered 460.0 def
		/paragraph 494.0 def
		/bullet 584.0 def
		/quotesinglbase 584.0 def
		/quotedblbase 584.0 def
		/quotedblright 584.0 def
		/guillemotright 549.0 def
		/ellipsis 584.0 def
		/perthousand 584.0 def
		/questiondown 658.0 def
		/grave 500.0 def
		/acute 584.0 def
		/circumflex 584.0 def
		/tilde 584.0 def
		/macron 603.0 def
		/breve 584.0 def
		/dotaccent 584.0 def
		/dieresis 753.0 def
		/ring 584.0 def
		/cedilla 549.0 def
		/hungarumlaut 584.0 def
		/ogonek 584.0 def
		/caron 584.0 def
		/emdash 584.0 def
		/AE 823.0 def
		/ordfeminine 753.0 def
		/Lslash 584.0 def
		/Oslash 713.0 def
		/OE 584.0 def
		/ordmasculine 549.0 def
		/ae 384.0 def
		/dotlessi 584.0 def
		/lslash 584.0 def
		/oslash 384.0 def
		/oe 584.0 def
		/germandbls 603.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
240 39 moveto
240 23 234 10 223 0  curveto
212 -11 199 -17 184 -17  curveto
168 -17 155 -11 144 0  curveto
133 10 128 23 128 39  curveto
128 54 133 67 144 78  curveto
155 89 168 95 184 95  curveto
199 95 212 89 223 78  curveto
234 67 240 54 240 39  curveto
closepath
240 580 moveto
240 571 239 562 238 552  curveto
237 542 236 532 234 523  curveto
232 513 231 504 230 496  curveto
228 488 227 481 227 476  curveto
194 209 lineto
193 205 192 200 191 196  curveto
189 192 187 190 184 190  curveto
180 190 178 192 177 196  curveto
175 200 174 205 174 209  curveto
141 475 lineto
140 479 139 486 138 494  curveto
136 502 135 511 133 521  curveto
131 531 130 541 129 551  curveto
128 561 128 570 128 579  curveto
128 604 131 626 139 644  curveto
147 662 162 672 184 672  curveto
200 672 214 665 224 651  curveto
234 637 240 614 240 580  curveto
closepath
fill
		} def

	/quotedbl
		{
199 447 moveto
361 70 lineto
517 447 lineto
199 447 lineto
closepath
388 0 moveto
329 0 lineto
31 705 lineto
88 705 lineto
175 502 lineto
540 502 lineto
624 705 lineto
681 705 lineto
388 0 lineto
closepath
fill
		} def

	/numbersign
		{
201 420 moveto
176 238 lineto
301 238 lineto
325 420 lineto
201 420 lineto
closepath
475 420 moveto
372 420 lineto
348 238 lineto
451 238 lineto
445 192 lineto
341 192 lineto
313 -16 lineto
266 -16 lineto
294 192 lineto
170 192 lineto
141 -16 lineto
94 -16 lineto
123 192 lineto
20 192 lineto
26 238 lineto
129 238 lineto
154 420 lineto
54 420 lineto
60 466 lineto
160 466 lineto
189 673 lineto
236 673 lineto
207 466 lineto
332 466 lineto
360 673 lineto
407 673 lineto
379 466 lineto
481 466 lineto
475 420 lineto
closepath
fill
		} def

	/dollar
		{
25 0 moveto
25 55 lineto
423 55 lineto
423 342 lineto
69 342 lineto
69 397 lineto
423 397 lineto
423 652 lineto
25 652 lineto
25 707 lineto
478 707 lineto
478 0 lineto
25 0 lineto
closepath
fill
		} def

	/percent
		{
741 212 moveto
741 222 739 233 736 244  curveto
732 254 727 264 721 272  curveto
715 280 707 287 698 292  curveto
688 297 678 300 666 300  curveto
652 300 641 297 632 291  curveto
622 285 613 277 603 267  curveto
599 263 595 258 591 254  curveto
587 249 583 244 579 238  curveto
575 232 570 224 566 215  curveto
561 206 555 195 549 183  curveto
539 163 531 144 525 125  curveto
518 105 515 88 515 74  curveto
515 46 521 26 533 16  curveto
545 5 559 0 575 0  curveto
591 0 605 2 617 8  curveto
628 14 639 22 651 34  curveto
666 49 679 66 691 85  curveto
702 103 711 121 719 138  curveto
726 155 731 170 735 184  curveto
739 197 741 206 741 212  curveto
closepath
365 536 moveto
365 542 364 549 363 557  curveto
362 565 361 572 360 579  curveto
340 587 325 595 317 601  curveto
308 607 301 611 296 615  curveto
294 615 293 615 291 615  curveto
289 615 288 616 287 616  curveto
280 616 273 614 267 612  curveto
260 609 252 603 243 594  curveto
238 589 233 583 227 576  curveto
221 568 215 560 209 552  curveto
203 544 198 535 193 526  curveto
187 517 183 509 179 501  curveto
169 478 160 457 153 438  curveto
146 419 143 399 143 379  curveto
143 355 148 339 158 329  curveto
168 319 183 314 201 314  curveto
217 314 232 317 246 325  curveto
260 332 272 341 284 353  curveto
296 364 306 376 315 390  curveto
323 403 331 415 337 427  curveto
347 448 355 469 359 490  curveto
363 510 365 526 365 536  curveto
closepath
771 226 moveto
771 207 768 188 763 168  curveto
757 148 750 128 741 109  curveto
732 90 722 72 710 55  curveto
698 38 686 23 674 11  curveto
656 -6 638 -18 620 -25  curveto
601 -32 581 -36 560 -36  curveto
523 -36 493 -24 469 -1  curveto
445 22 434 52 434 90  curveto
434 119 438 146 448 170  curveto
457 194 469 216 484 236  curveto
499 256 516 273 535 287  curveto
554 301 573 314 593 324  curveto
603 329 614 333 626 335  curveto
638 337 649 338 660 338  curveto
698 338 726 328 744 309  curveto
762 289 771 262 771 226  curveto
closepath
229 -28 moveto
174 -28 lineto
563 583 lineto
551 578 540 574 531 571  curveto
522 568 514 566 506 564  curveto
498 562 489 560 481 559  curveto
473 558 463 558 453 558  curveto
441 558 431 558 423 560  curveto
415 561 404 565 390 573  curveto
390 567 391 560 392 550  curveto
393 540 394 530 394 520  curveto
394 502 392 485 389 470  curveto
385 455 379 439 371 422  curveto
355 392 338 365 320 343  curveto
301 320 282 304 263 295  curveto
251 289 238 285 222 281  curveto
206 277 192 276 179 276  curveto
162 276 146 279 132 286  curveto
118 292 105 302 95 314  curveto
85 326 77 340 71 356  curveto
65 372 63 389 63 408  curveto
63 424 65 440 69 458  curveto
73 476 79 492 87 506  curveto
95 522 106 538 118 553  curveto
130 567 142 580 154 592  curveto
166 603 177 612 188 620  curveto
199 628 208 633 215 637  curveto
228 643 240 648 250 650  curveto
260 652 270 653 282 653  curveto
303 653 319 650 330 646  curveto
340 641 348 637 353 633  curveto
355 630 359 626 365 621  curveto
371 615 378 610 386 605  curveto
394 600 405 596 417 592  curveto
429 588 442 586 458 586  curveto
472 586 487 588 503 592  curveto
519 596 533 601 547 607  curveto
561 613 573 621 583 629  curveto
593 637 599 646 602 655  curveto
657 655 lineto
229 -28 lineto
closepath
fill
		} def

	/ampersand
		{
400 108 moveto
364 150 333 193 308 235  curveto
282 277 262 312 246 340  curveto
224 327 206 314 192 301  curveto
177 288 165 275 157 262  curveto
148 248 142 234 138 220  curveto
134 206 133 191 133 176  curveto
133 158 136 141 143 125  curveto
150 108 160 93 172 80  curveto
184 67 197 57 213 49  curveto
228 41 244 37 260 37  curveto
282 37 305 43 330 55  curveto
355 67 378 85 400 108  curveto
closepath
433 548 moveto
433 576 425 595 410 607  curveto
395 619 378 625 359 625  curveto
345 625 334 623 325 619  curveto
315 615 307 609 300 602  curveto
292 594 287 584 284 571  curveto
280 558 279 545 279 532  curveto
279 510 283 490 291 470  curveto
299 450 307 430 317 411  curveto
330 418 343 425 357 433  curveto
371 441 383 450 395 460  curveto
406 470 415 483 422 497  curveto
429 511 433 528 433 548  curveto
closepath
750 100 moveto
744 86 737 74 729 64  curveto
721 54 713 44 706 35  curveto
694 19 678 7 657 -3  curveto
635 -13 613 -18 589 -18  curveto
571 -18 553 -14 535 -6  curveto
517 1 501 10 487 21  curveto
472 31 459 42 448 53  curveto
436 63 428 72 422 78  curveto
409 64 394 52 378 41  curveto
362 29 345 19 327 10  curveto
309 1 290 -5 271 -10  curveto
252 -15 234 -18 216 -18  curveto
191 -18 166 -14 141 -6  curveto
116 2 97 12 84 26  curveto
70 39 60 56 52 76  curveto
44 96 41 119 41 143  curveto
41 174 48 202 64 227  curveto
79 252 97 274 118 293  curveto
138 312 159 328 181 342  curveto
202 355 219 366 232 374  curveto
228 387 224 399 220 409  curveto
216 419 212 429 209 438  curveto
206 447 204 456 202 466  curveto
200 475 199 485 199 497  curveto
199 523 203 547 212 567  curveto
220 587 231 604 245 618  curveto
259 632 275 643 293 650  curveto
310 657 330 661 354 661  curveto
378 661 398 658 416 652  curveto
433 646 450 635 466 619  curveto
474 611 480 601 484 590  curveto
488 578 491 567 491 555  curveto
491 539 486 521 477 499  curveto
468 477 456 458 440 442  curveto
427 429 412 418 396 410  curveto
379 401 358 391 332 380  curveto
336 372 342 361 351 345  curveto
359 329 369 312 381 293  curveto
393 274 406 255 420 235  curveto
434 215 448 198 462 182  curveto
472 194 483 207 494 221  curveto
505 235 515 249 524 264  curveto
533 279 540 294 546 310  curveto
551 325 554 340 554 354  curveto
554 368 550 379 543 388  curveto
535 397 519 402 495 402  curveto
495 420 lineto
706 420 lineto
706 402 lineto
681 402 663 397 651 388  curveto
639 378 629 365 619 349  curveto
609 333 600 317 590 299  curveto
580 281 569 264 558 246  curveto
547 228 536 210 524 192  curveto
512 174 500 158 487 144  curveto
493 136 502 128 514 118  curveto
526 108 538 98 552 89  curveto
566 80 579 73 593 67  curveto
606 61 618 58 630 58  curveto
646 58 662 62 677 71  curveto
691 80 710 94 734 114  curveto
750 100 lineto
750 100 lineto
closepath
fill
		} def

	/quoteright
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/parenleft
		{
290 -191 moveto
283 -191 272 -185 256 -173  curveto
240 -161 222 -146 204 -128  curveto
186 -110 168 -89 150 -67  curveto
132 -45 117 -23 107 -2  curveto
71 70 53 151 53 241  curveto
53 285 57 327 66 368  curveto
74 408 87 445 104 478  curveto
116 504 132 528 151 552  curveto
170 576 189 596 208 614  curveto
226 632 243 646 258 657  curveto
273 667 284 673 290 673  curveto
300 656 lineto
276 636 256 617 241 600  curveto
225 583 212 566 202 549  curveto
192 532 183 515 177 497  curveto
171 479 165 460 160 440  curveto
156 424 152 408 149 394  curveto
146 379 144 364 142 348  curveto
140 332 138 316 138 299  curveto
137 281 137 262 137 241  curveto
137 199 138 162 142 132  curveto
146 102 151 73 159 46  curveto
163 32 167 17 172 1  curveto
176 -15 183 -32 193 -50  curveto
202 -68 215 -88 232 -109  curveto
249 -129 272 -151 300 -174  curveto
290 -191 lineto
closepath
fill
		} def

	/parenright
		{
277 241 moveto
277 151 259 70 223 -2  curveto
212 -23 198 -45 180 -67  curveto
162 -89 143 -110 125 -128  curveto
107 -146 90 -161 74 -173  curveto
58 -185 46 -191 40 -191  curveto
30 -174 lineto
58 -151 80 -129 97 -109  curveto
114 -88 127 -68 137 -50  curveto
146 -32 153 -15 158 1  curveto
162 17 167 32 171 46  curveto
178 73 183 102 187 132  curveto
191 162 193 199 193 241  curveto
193 262 192 281 192 299  curveto
191 316 190 332 188 348  curveto
186 364 183 379 180 394  curveto
177 408 174 424 170 440  curveto
164 460 158 479 152 497  curveto
146 515 137 532 127 549  curveto
117 566 104 583 89 600  curveto
73 617 54 636 30 656  curveto
40 673 lineto
46 673 56 667 71 657  curveto
86 646 103 632 122 614  curveto
140 596 159 576 178 552  curveto
196 528 212 504 226 478  curveto
242 445 255 408 264 368  curveto
272 327 277 285 277 241  curveto
closepath
fill
		} def

	/asterisk
		{
427 253 moveto
427 244 424 237 418 231  curveto
412 225 404 223 392 223  curveto
380 223 370 226 363 234  curveto
358 238 353 244 348 252  curveto
342 259 335 267 326 277  curveto
314 289 301 299 287 309  curveto
273 319 265 324 261 324  curveto
256 324 254 318 254 308  curveto
254 289 255 274 258 263  curveto
261 251 264 241 268 233  curveto
272 224 275 216 278 208  curveto
281 200 283 190 283 178  curveto
283 164 278 153 270 146  curveto
261 138 253 135 246 135  curveto
239 135 231 138 222 145  curveto
213 151 209 162 209 177  curveto
209 189 210 200 213 208  curveto
216 216 219 224 223 232  curveto
227 240 230 250 233 262  curveto
236 273 238 288 238 308  curveto
238 311 237 314 237 318  curveto
236 322 234 324 231 324  curveto
229 324 225 322 221 320  curveto
216 317 211 313 205 309  curveto
199 305 192 300 185 294  curveto
178 288 172 283 166 277  curveto
156 267 149 259 144 252  curveto
138 244 133 238 129 234  curveto
121 226 112 223 100 223  curveto
88 223 79 225 73 231  curveto
67 237 65 244 65 253  curveto
65 259 66 266 69 274  curveto
72 282 78 288 87 292  curveto
90 294 97 296 109 299  curveto
120 302 132 305 146 309  curveto
159 313 172 316 184 320  curveto
196 324 204 327 210 330  curveto
212 331 215 333 219 335  curveto
222 337 224 340 224 344  curveto
224 348 220 352 214 355  curveto
195 364 179 370 167 374  curveto
155 378 144 380 135 382  curveto
126 383 118 384 112 385  curveto
105 386 98 388 92 392  curveto
88 394 82 398 76 405  curveto
69 412 66 420 66 429  curveto
66 437 68 445 73 452  curveto
77 459 86 463 100 463  curveto
106 463 114 461 122 458  curveto
130 455 137 450 144 444  curveto
148 439 153 433 157 426  curveto
161 418 168 410 178 401  curveto
186 392 196 384 208 378  curveto
220 371 228 368 232 368  curveto
236 368 238 372 238 381  curveto
238 400 236 416 233 428  curveto
230 440 227 451 224 461  curveto
220 471 217 480 214 488  curveto
211 496 210 506 210 518  curveto
210 526 212 533 216 540  curveto
220 547 230 551 246 551  curveto
261 551 271 547 275 540  curveto
279 532 282 525 282 517  curveto
282 506 280 496 277 488  curveto
274 480 271 471 268 462  curveto
264 452 261 441 258 429  curveto
255 416 254 400 254 381  curveto
254 372 256 368 260 368  curveto
264 368 271 371 283 378  curveto
295 384 305 392 314 401  curveto
323 410 330 418 334 426  curveto
338 433 343 439 348 444  curveto
354 450 362 455 370 458  curveto
378 461 385 463 392 463  curveto
405 463 414 459 419 452  curveto
423 445 426 437 426 429  curveto
426 420 422 412 416 405  curveto
409 398 404 394 400 392  curveto
392 388 385 386 379 385  curveto
373 384 365 383 356 382  curveto
347 380 336 378 324 374  curveto
312 370 296 364 278 355  curveto
271 352 268 348 268 344  curveto
268 340 269 337 273 335  curveto
276 333 279 331 282 330  curveto
286 327 295 324 307 320  curveto
319 316 332 313 346 309  curveto
359 305 371 302 383 299  curveto
394 296 401 294 405 292  curveto
413 288 419 282 422 274  curveto
425 266 427 259 427 253  curveto
closepath
fill
		} def

	/plus
		{
302 243 moveto
302 0 lineto
247 0 lineto
247 243 lineto
10 243 lineto
10 298 lineto
247 298 lineto
247 533 lineto
302 533 lineto
302 298 lineto
539 298 lineto
539 243 lineto
302 243 lineto
closepath
fill
		} def

	/comma
		{
194 20 moveto
194 0 190 -20 182 -41  curveto
174 -61 161 -81 142 -101  curveto
137 -105 131 -111 125 -117  curveto
118 -123 111 -128 104 -134  curveto
97 -139 90 -143 84 -147  curveto
77 -151 71 -153 67 -153  curveto
64 -153 61 -152 59 -151  curveto
57 -149 56 -147 56 -145  curveto
56 -139 57 -135 60 -132  curveto
62 -129 66 -126 71 -124  curveto
124 -91 151 -55 151 -16  curveto
151 -5 147 0 139 0  curveto
135 0 130 -1 124 -3  curveto
118 -5 112 -6 108 -6  curveto
91 -6 78 -1 69 8  curveto
60 17 56 30 56 46  curveto
56 62 61 76 72 87  curveto
83 98 97 104 115 104  curveto
127 104 137 101 146 97  curveto
155 92 164 86 172 78  curveto
180 70 185 62 189 54  curveto
192 46 194 34 194 20  curveto
closepath
fill
		} def

	/hyphen
		{
fill
		} def

	/period
		{
181 39 moveto
181 23 175 10 164 0  curveto
153 -11 140 -17 125 -17  curveto
109 -17 96 -11 85 0  curveto
74 10 69 23 69 39  curveto
69 54 74 67 85 78  curveto
96 89 109 95 125 95  curveto
140 95 153 89 164 78  curveto
175 67 181 54 181 39  curveto
closepath
fill
		} def

	/slash
		{
44 -18 moveto
0 -18 lineto
210 646 lineto
254 646 lineto
44 -18 lineto
closepath
fill
		} def

	/zero
		{
377 332 moveto
377 352 376 375 375 400  curveto
373 424 371 448 369 471  curveto
366 494 363 515 359 535  curveto
355 555 350 570 344 582  curveto
334 600 321 615 304 628  curveto
286 641 267 648 247 648  curveto
227 648 209 641 191 629  curveto
173 617 159 601 150 582  curveto
144 572 140 558 136 540  curveto
132 522 128 502 126 480  curveto
123 458 121 434 119 408  curveto
117 382 117 357 117 331  curveto
117 285 119 241 125 197  curveto
130 153 140 117 156 87  curveto
166 67 179 51 195 39  curveto
211 26 228 20 248 20  curveto
265 20 282 26 299 39  curveto
315 52 328 68 338 86  curveto
347 104 354 125 360 149  curveto
365 172 369 195 371 218  curveto
373 241 375 263 376 283  curveto
376 303 377 320 377 332  curveto
closepath
471 340 moveto
471 305 467 267 461 227  curveto
454 187 439 144 417 99  curveto
405 74 391 54 377 39  curveto
362 24 347 12 332 4  curveto
317 -3 302 -9 288 -12  curveto
273 -15 260 -17 248 -17  curveto
206 -17 171 -6 144 15  curveto
116 37 94 65 77 99  curveto
41 171 23 251 23 340  curveto
23 372 25 403 31 433  curveto
36 463 43 491 52 517  curveto
60 543 70 566 82 586  curveto
93 606 105 623 117 635  curveto
134 652 154 665 177 673  curveto
199 681 222 685 245 685  curveto
253 685 263 684 274 683  curveto
285 681 297 679 309 675  curveto
321 671 333 666 345 659  curveto
357 652 368 643 380 632  curveto
389 622 399 608 410 590  curveto
420 572 430 550 439 525  curveto
448 499 456 471 462 440  curveto
468 408 471 375 471 340  curveto
closepath
fill
		} def

	/one
		{
120 0 moveto
120 18 lineto
128 18 137 18 148 20  curveto
159 22 169 25 179 30  curveto
188 35 196 42 203 52  curveto
209 62 213 74 213 90  curveto
213 563 lineto
213 573 211 580 207 584  curveto
203 588 198 590 191 590  curveto
184 590 174 587 162 583  curveto
149 578 134 572 117 566  curveto
117 584 lineto
279 673 lineto
297 673 lineto
297 91 lineto
297 75 300 62 307 52  curveto
313 42 321 35 331 30  curveto
341 25 351 22 362 20  curveto
372 18 382 18 390 18  curveto
390 0 lineto
120 0 lineto
closepath
fill
		} def

	/two
		{
416 0 moveto
25 0 lineto
27 15 lineto
207 206 lineto
224 224 240 244 256 266  curveto
271 287 284 309 296 331  curveto
307 353 316 374 323 396  curveto
329 417 333 436 333 454  curveto
333 499 321 536 298 564  curveto
275 592 241 606 195 606  curveto
161 606 131 595 107 574  curveto
83 553 65 521 53 479  curveto
32 479 lineto
34 510 42 538 54 562  curveto
66 586 79 606 95 622  curveto
119 646 143 662 167 672  curveto
191 681 217 686 245 686  curveto
265 686 286 682 310 674  curveto
333 666 355 651 377 630  curveto
385 620 393 610 399 599  curveto
405 587 409 575 413 563  curveto
416 550 418 538 420 526  curveto
421 514 422 503 422 493  curveto
422 473 418 453 410 431  curveto
402 409 391 387 378 365  curveto
365 343 350 321 333 300  curveto
316 278 299 258 282 240  curveto
124 73 lineto
353 73 lineto
370 73 384 74 395 78  curveto
405 81 414 86 421 92  curveto
427 98 433 104 438 112  curveto
442 120 448 128 454 136  curveto
475 136 lineto
416 0 lineto
closepath
fill
		} def

	/three
		{
435 206 moveto
435 164 423 126 401 94  curveto
379 62 350 37 314 19  curveto
290 7 265 -1 237 -7  curveto
209 -13 178 -17 144 -17  curveto
124 -17 109 -14 97 -10  curveto
85 -5 75 0 69 7  curveto
62 14 57 21 55 28  curveto
53 35 52 41 52 47  curveto
52 55 55 62 61 70  curveto
67 77 78 81 94 81  curveto
105 81 115 78 124 72  curveto
133 66 141 60 149 54  curveto
158 46 167 38 177 32  curveto
186 26 202 23 226 23  curveto
246 23 264 26 280 34  curveto
296 41 310 51 322 63  curveto
334 75 343 90 349 107  curveto
355 123 359 141 359 161  curveto
359 173 357 185 355 198  curveto
352 211 348 224 344 236  curveto
339 248 333 260 327 271  curveto
320 281 313 290 306 298  curveto
296 308 285 316 275 322  curveto
264 328 253 332 242 335  curveto
231 338 220 340 208 342  curveto
196 343 183 344 171 345  curveto
165 345 159 347 155 349  curveto
151 351 149 354 149 358  curveto
149 361 150 364 154 366  curveto
157 368 161 370 165 372  curveto
211 387 247 407 272 432  curveto
288 448 299 463 304 477  curveto
309 491 312 507 312 526  curveto
312 538 309 550 305 562  curveto
300 574 293 584 284 594  curveto
274 603 262 610 248 616  curveto
234 622 217 625 198 625  curveto
169 625 144 617 123 601  curveto
102 585 80 560 58 524  curveto
39 524 lineto
45 548 53 569 64 589  curveto
75 609 89 626 106 640  curveto
122 654 142 665 165 673  curveto
188 681 215 685 245 685  curveto
267 685 288 681 306 675  curveto
324 668 339 659 352 648  curveto
365 636 375 623 382 608  curveto
389 592 393 576 393 559  curveto
393 536 386 512 372 488  curveto
358 464 335 440 302 418  curveto
316 412 328 405 339 399  curveto
349 393 359 386 367 378  curveto
375 370 382 362 389 352  curveto
395 342 402 330 409 317  curveto
426 282 435 245 435 206  curveto
closepath
fill
		} def

	/four
		{
298 562 moveto
60 229 lineto
298 229 lineto
298 562 lineto
closepath
382 159 moveto
382 0 lineto
298 0 lineto
298 159 lineto
16 159 lineto
16 230 lineto
332 685 lineto
382 685 lineto
382 229 lineto
469 229 lineto
469 159 lineto
382 159 lineto
closepath
fill
		} def

	/five
		{
401 583 moveto
183 583 lineto
143 501 lineto
216 487 lineto
244 481 270 472 294 458  curveto
318 444 339 428 359 409  curveto
378 389 394 364 407 333  curveto
419 302 426 261 426 211  curveto
426 193 424 178 421 166  curveto
418 153 412 138 404 121  curveto
396 105 385 89 371 73  curveto
357 57 340 42 320 29  curveto
299 15 274 4 246 -4  curveto
218 -12 186 -17 150 -17  curveto
133 -17 117 -15 102 -13  curveto
87 -11 74 -7 63 -2  curveto
52 2 43 8 37 16  curveto
31 24 28 33 28 45  curveto
28 55 31 64 38 72  curveto
44 80 55 85 69 85  curveto
82 85 95 81 107 75  curveto
119 69 132 62 144 54  curveto
156 46 168 38 181 32  curveto
194 26 208 23 224 23  curveto
246 23 267 30 287 46  curveto
307 62 322 81 334 103  curveto
340 116 345 129 348 143  curveto
350 157 352 172 352 188  curveto
352 229 341 265 321 297  curveto
300 328 272 353 236 371  curveto
212 383 186 392 159 398  curveto
131 404 98 409 59 413  curveto
180 673 lineto
369 673 lineto
372 673 376 672 381 672  curveto
385 672 390 672 396 672  curveto
404 672 410 673 415 676  curveto
419 678 425 681 431 685  curveto
443 680 lineto
401 583 lineto
closepath
fill
		} def

	/six
		{
376 186 moveto
376 223 371 256 363 285  curveto
354 314 343 336 329 350  curveto
316 362 303 371 289 375  curveto
275 379 262 381 249 381  curveto
223 381 201 376 182 368  curveto
162 359 148 350 139 342  curveto
137 331 136 316 134 296  curveto
132 276 132 256 132 236  curveto
132 226 132 214 133 199  curveto
134 183 137 167 141 150  curveto
145 132 150 115 157 98  curveto
164 81 174 67 186 55  curveto
197 43 210 34 226 28  curveto
241 22 256 19 271 19  curveto
288 19 304 23 319 33  curveto
334 42 347 57 357 77  curveto
362 88 366 103 370 123  curveto
374 142 376 163 376 186  curveto
closepath
467 211 moveto
467 165 459 128 444 99  curveto
429 69 411 46 389 29  curveto
367 11 343 0 319 -7  curveto
295 -14 274 -18 256 -18  curveto
242 -18 226 -16 210 -12  curveto
193 -8 176 -2 160 7  curveto
143 16 127 29 111 45  curveto
95 61 80 81 68 107  curveto
57 128 49 151 44 177  curveto
38 203 36 233 36 269  curveto
36 306 39 339 45 369  curveto
51 398 60 423 70 443  curveto
93 490 121 530 153 563  curveto
185 596 223 624 269 647  curveto
293 659 319 668 349 675  curveto
378 681 411 685 447 685  curveto
446 668 lineto
419 664 390 656 360 644  curveto
330 632 301 615 273 593  curveto
245 571 219 543 197 510  curveto
174 477 157 438 146 392  curveto
162 398 177 404 190 409  curveto
203 414 215 418 226 421  curveto
237 424 247 426 257 428  curveto
267 429 277 430 288 430  curveto
307 430 328 425 350 417  curveto
372 408 392 394 411 376  curveto
427 359 441 337 451 310  curveto
461 282 467 249 467 211  curveto
closepath
fill
		} def

	/seven
		{
234 -16 moveto
175 -16 lineto
370 583 lineto
143 583 lineto
129 583 117 580 107 576  curveto
97 571 89 565 82 558  curveto
74 550 68 542 63 533  curveto
57 523 52 514 46 504  curveto
24 513 lineto
85 673 lineto
448 673 lineto
448 641 lineto
234 -16 lineto
closepath
fill
		} def

	/eight
		{
364 128 moveto
364 149 360 169 352 187  curveto
344 205 334 220 322 233  curveto
314 240 307 246 300 252  curveto
292 258 284 264 276 270  curveto
267 276 258 282 248 288  curveto
238 294 228 302 216 312  curveto
204 306 193 298 183 288  curveto
172 277 163 265 155 252  curveto
147 238 140 224 136 210  curveto
131 195 129 181 129 168  curveto
129 150 131 132 136 114  curveto
141 96 149 80 159 66  curveto
169 52 182 40 198 31  curveto
213 22 231 18 253 18  curveto
269 18 284 20 299 26  curveto
313 31 325 38 335 48  curveto
344 57 351 68 356 81  curveto
361 94 364 110 364 128  curveto
closepath
352 548 moveto
352 562 349 575 345 586  curveto
341 596 335 606 327 615  curveto
307 637 278 648 242 648  curveto
222 648 206 645 195 640  curveto
183 635 173 628 164 619  curveto
152 608 145 597 141 586  curveto
137 575 135 564 135 552  curveto
135 534 141 512 154 488  curveto
167 464 187 443 215 425  curveto
257 397 lineto
282 412 304 432 323 458  curveto
342 484 352 514 352 548  curveto
closepath
441 153 moveto
441 131 437 110 430 90  curveto
422 70 411 52 397 38  curveto
379 20 357 7 330 -3  curveto
303 -13 275 -18 247 -18  curveto
221 -18 197 -14 174 -6  curveto
151 2 131 13 113 27  curveto
95 41 80 59 70 79  curveto
59 99 54 121 54 145  curveto
54 161 57 179 63 197  curveto
69 215 77 232 88 250  curveto
99 267 112 283 128 299  curveto
143 314 160 328 180 340  curveto
125 397 lineto
110 412 97 431 85 453  curveto
73 475 67 503 67 535  curveto
67 558 71 579 81 598  curveto
91 616 104 632 120 645  curveto
136 658 155 668 177 675  curveto
199 681 222 685 247 685  curveto
269 685 289 682 307 678  curveto
325 674 341 668 355 661  curveto
379 649 396 632 408 612  curveto
419 592 425 571 425 549  curveto
425 512 413 479 390 451  curveto
367 422 334 395 290 370  curveto
303 362 317 351 332 339  curveto
347 326 362 312 378 297  curveto
396 279 411 257 423 233  curveto
435 209 441 182 441 153  curveto
closepath
fill
		} def

	/nine
		{
361 377 moveto
361 387 360 400 360 417  curveto
359 433 357 451 355 470  curveto
353 489 349 508 345 528  curveto
341 547 335 564 328 580  curveto
318 598 304 614 286 628  curveto
267 642 247 650 226 650  curveto
207 650 190 644 175 634  curveto
159 623 148 610 141 595  curveto
133 581 128 566 126 548  curveto
124 530 123 509 123 486  curveto
123 416 134 364 156 332  curveto
178 299 206 283 241 283  curveto
257 283 276 286 298 294  curveto
320 301 340 314 359 334  curveto
360 339 361 345 361 352  curveto
361 359 361 367 361 377  curveto
closepath
460 393 moveto
460 358 456 325 448 293  curveto
440 261 430 232 416 204  curveto
383 138 336 85 276 46  curveto
215 7 144 -14 64 -18  curveto
62 1 lineto
97 9 131 21 164 37  curveto
197 52 226 72 251 98  curveto
261 109 272 122 284 138  curveto
296 153 306 169 316 187  curveto
326 204 334 222 341 240  curveto
347 258 352 275 354 291  curveto
330 275 305 263 279 253  curveto
252 243 228 239 207 239  curveto
183 239 160 244 139 254  curveto
117 264 99 278 83 296  curveto
67 314 54 335 45 361  curveto
35 386 31 414 31 444  curveto
31 480 37 514 51 547  curveto
64 579 81 606 102 627  curveto
121 646 141 660 162 670  curveto
183 680 207 685 235 685  curveto
255 685 279 680 306 671  curveto
333 661 359 644 385 619  curveto
396 607 406 593 416 576  curveto
425 558 433 539 439 519  curveto
445 498 450 477 454 455  curveto
458 433 460 413 460 393  curveto
closepath
fill
		} def

	/colon
		{
193 39 moveto
193 23 187 10 176 0  curveto
165 -11 152 -17 137 -17  curveto
121 -17 108 -11 97 0  curveto
86 10 81 23 81 39  curveto
81 54 86 67 97 78  curveto
108 89 121 95 137 95  curveto
152 95 165 89 176 78  curveto
187 67 193 54 193 39  curveto
closepath
193 404 moveto
193 388 187 375 176 364  curveto
165 353 152 348 137 348  curveto
121 348 108 353 97 364  curveto
86 375 81 388 81 404  curveto
81 419 86 432 97 443  curveto
108 454 121 460 137 460  curveto
152 460 165 454 176 443  curveto
187 432 193 419 193 404  curveto
closepath
fill
		} def

	/semicolon
		{
221 20 moveto
221 0 217 -20 209 -41  curveto
201 -61 188 -81 169 -101  curveto
164 -105 158 -111 152 -117  curveto
145 -123 138 -128 131 -134  curveto
124 -139 117 -143 111 -147  curveto
104 -151 98 -153 94 -153  curveto
91 -153 88 -152 86 -151  curveto
84 -149 83 -147 83 -145  curveto
83 -139 84 -135 87 -132  curveto
89 -129 93 -126 98 -124  curveto
151 -91 178 -55 178 -16  curveto
178 -5 174 0 166 0  curveto
162 0 157 -1 151 -3  curveto
145 -5 139 -6 135 -6  curveto
118 -6 105 -1 96 8  curveto
87 17 83 30 83 46  curveto
83 62 88 76 99 87  curveto
110 98 124 104 142 104  curveto
154 104 164 101 173 97  curveto
182 92 191 86 199 78  curveto
207 70 212 62 216 54  curveto
219 46 221 34 221 20  curveto
closepath
204 404 moveto
204 388 198 375 187 364  curveto
176 353 163 348 148 348  curveto
132 348 119 353 108 364  curveto
97 375 92 388 92 404  curveto
92 419 97 432 108 443  curveto
119 454 132 460 148 460  curveto
163 460 176 454 187 443  curveto
198 432 204 419 204 404  curveto
closepath
fill
		} def

	/less
		{
26 230 moveto
26 292 lineto
523 522 lineto
523 460 lineto
90 261 lineto
523 62 lineto
523 0 lineto
26 230 lineto
closepath
fill
		} def

	/equal
		{
11 141 moveto
11 196 lineto
537 196 lineto
537 141 lineto
11 141 lineto
closepath
11 335 moveto
11 390 lineto
537 390 lineto
537 335 lineto
11 335 lineto
closepath
fill
		} def

	/greater
		{
26 0 moveto
26 62 lineto
459 261 lineto
26 460 lineto
26 522 lineto
523 292 lineto
523 230 lineto
26 0 lineto
closepath
fill
		} def

	/question
		{
286 39 moveto
286 23 280 10 269 0  curveto
258 -11 245 -17 230 -17  curveto
214 -17 201 -11 190 0  curveto
179 10 174 23 174 39  curveto
174 54 179 67 190 78  curveto
201 89 214 95 230 95  curveto
245 95 258 89 269 78  curveto
280 67 286 54 286 39  curveto
closepath
412 514 moveto
412 488 403 462 387 434  curveto
370 406 351 379 330 355  curveto
324 347 316 339 308 329  curveto
299 319 291 307 283 293  curveto
275 278 267 260 260 240  curveto
253 220 248 195 245 167  curveto
224 167 lineto
229 211 237 249 247 282  curveto
257 314 268 344 278 372  curveto
288 400 296 426 304 451  curveto
312 475 316 501 316 529  curveto
316 545 313 560 308 576  curveto
303 591 296 604 287 616  curveto
278 627 267 636 254 643  curveto
241 650 227 654 211 654  curveto
201 654 190 652 179 648  curveto
168 644 158 640 149 634  curveto
139 628 132 621 126 613  curveto
120 605 117 596 117 587  curveto
117 579 119 573 123 568  curveto
127 563 131 558 136 553  curveto
141 548 146 543 150 538  curveto
154 533 157 527 157 520  curveto
157 506 152 495 144 486  curveto
135 477 126 473 117 473  curveto
103 473 92 478 83 488  curveto
74 498 70 515 70 538  curveto
70 558 73 577 81 595  curveto
88 613 98 629 112 643  curveto
140 671 179 686 228 686  curveto
284 686 331 668 367 632  curveto
376 622 386 608 396 588  curveto
406 568 412 544 412 514  curveto
closepath
fill
		} def

	/at
		{
11 0 moveto
11 55 lineto
537 55 lineto
537 0 lineto
11 0 lineto
closepath
11 194 moveto
11 249 lineto
537 249 lineto
537 194 lineto
11 194 lineto
closepath
530 451 moveto
526 440 519 430 510 421  curveto
501 411 491 403 479 396  curveto
467 389 454 384 440 380  curveto
426 376 411 374 397 374  curveto
375 374 354 376 334 382  curveto
314 387 294 393 275 400  curveto
255 406 236 412 218 418  curveto
199 423 180 426 161 426  curveto
137 426 118 421 104 412  curveto
90 402 74 388 58 370  curveto
18 396 lineto
30 414 43 428 56 438  curveto
69 448 82 456 95 462  curveto
108 467 121 470 133 472  curveto
145 473 157 474 168 474  curveto
188 474 208 471 226 465  curveto
244 459 263 453 281 447  curveto
299 441 316 435 334 429  curveto
352 423 371 421 391 421  curveto
413 421 432 425 448 434  curveto
464 443 479 457 493 475  curveto
530 451 lineto
530 451 lineto
closepath
fill
		} def

	/A
		{
317 528 moveto
204 260 lineto
430 260 lineto
317 528 lineto
closepath
434 0 moveto
434 18 lineto
451 18 466 20 479 25  curveto
492 29 499 40 499 58  curveto
499 65 497 74 493 86  curveto
444 218 lineto
185 218 lineto
140 94 lineto
134 78 131 66 131 58  curveto
131 44 136 34 146 28  curveto
156 21 172 18 196 18  curveto
196 0 lineto
4 0 lineto
4 18 lineto
18 18 29 19 37 23  curveto
45 26 52 30 58 36  curveto
63 42 67 49 71 57  curveto
74 65 78 74 82 84  curveto
330 673 lineto
356 673 lineto
606 84 lineto
610 74 613 66 617 58  curveto
620 50 624 43 630 37  curveto
635 31 642 26 650 23  curveto
658 19 670 18 684 18  curveto
684 0 lineto
434 0 lineto
closepath
fill
		} def

	/B
		{
478 177 moveto
478 198 475 216 470 231  curveto
465 245 459 258 451 268  curveto
443 278 435 287 425 293  curveto
415 299 405 305 395 311  curveto
379 318 364 323 348 325  curveto
332 327 316 328 301 328  curveto
223 328 lineto
223 84 lineto
223 72 225 62 230 54  curveto
234 46 245 42 263 42  curveto
327 42 lineto
353 42 376 45 395 53  curveto
414 61 430 71 442 84  curveto
454 96 463 111 469 127  curveto
475 143 478 159 478 177  curveto
closepath
460 497 moveto
460 521 455 542 445 560  curveto
435 577 421 591 403 602  curveto
385 612 365 620 341 625  curveto
317 629 292 632 265 632  curveto
245 632 233 631 229 630  curveto
225 628 223 626 223 622  curveto
223 370 lineto
305 370 lineto
327 370 347 372 366 377  curveto
384 381 401 389 415 399  curveto
429 409 440 422 448 438  curveto
456 454 460 473 460 497  curveto
closepath
592 185 moveto
592 168 589 152 583 136  curveto
577 120 570 105 561 91  curveto
552 77 542 64 531 53  curveto
519 42 508 34 496 28  curveto
488 24 478 20 468 17  curveto
457 13 446 10 435 8  curveto
423 5 412 3 401 2  curveto
390 0 380 0 371 0  curveto
29 0 lineto
29 18 lineto
59 18 82 22 97 31  curveto
111 39 119 57 119 84  curveto
119 590 lineto
119 612 112 629 100 639  curveto
88 649 64 655 29 655  curveto
29 673 lineto
300 673 lineto
389 673 455 659 498 631  curveto
541 603 563 559 563 497  curveto
563 463 552 434 532 410  curveto
512 386 480 367 436 354  curveto
436 352 lineto
486 340 525 320 552 290  curveto
578 260 592 225 592 185  curveto
closepath
fill
		} def

	/C
		{
404 0 moveto
404 18 lineto
434 18 454 20 465 26  curveto
476 32 482 38 482 46  curveto
482 53 479 60 474 68  curveto
469 76 464 84 459 93  curveto
332 292 lineto
170 83 lineto
166 77 162 72 160 67  curveto
157 62 156 57 156 51  curveto
156 41 160 33 169 27  curveto
178 21 195 18 221 18  curveto
221 0 lineto
-9 0 lineto
-9 18 lineto
6 18 19 19 30 22  curveto
40 24 50 28 58 33  curveto
66 37 73 43 80 50  curveto
86 57 93 65 101 75  curveto
305 333 lineto
108 609 lineto
96 625 84 636 70 644  curveto
56 651 38 655 15 655  curveto
15 673 lineto
315 673 lineto
315 655 lineto
285 655 264 652 253 648  curveto
242 643 237 636 237 627  curveto
237 621 238 617 240 613  curveto
242 609 244 604 248 599  curveto
369 413 lineto
506 590 lineto
511 596 516 603 520 610  curveto
524 616 526 622 526 628  curveto
526 636 521 643 511 648  curveto
501 652 482 655 455 655  curveto
455 673 lineto
687 673 lineto
687 655 lineto
669 655 655 653 643 650  curveto
631 647 621 643 613 637  curveto
605 631 597 623 590 615  curveto
582 607 574 597 566 587  curveto
396 375 lineto
607 70 lineto
617 54 629 42 643 32  curveto
656 22 676 18 704 18  curveto
704 0 lineto
404 0 lineto
closepath
fill
		} def

	/D
		{
290 517 moveto
72 49 lineto
484 49 lineto
290 517 lineto
closepath
6 0 moveto
326 688 lineto
608 0 lineto
6 0 lineto
closepath
fill
		} def

	/E
		{
571 0 moveto
32 0 lineto
32 18 lineto
46 18 58 18 70 20  curveto
81 22 90 25 98 30  curveto
106 34 112 41 116 50  curveto
120 58 122 70 122 84  curveto
122 590 lineto
122 614 115 631 102 641  curveto
88 650 65 655 32 655  curveto
32 673 lineto
563 673 lineto
563 525 lineto
536 525 lineto
532 537 529 550 527 562  curveto
525 574 521 584 515 594  curveto
509 603 500 610 489 616  curveto
477 622 461 625 439 625  curveto
226 625 lineto
226 375 lineto
385 375 lineto
405 375 421 377 434 382  curveto
446 386 456 393 464 401  curveto
472 409 477 419 480 431  curveto
482 442 484 455 484 469  curveto
507 469 lineto
507 239 lineto
484 239 lineto
484 253 482 265 480 277  curveto
477 289 472 299 464 307  curveto
456 315 446 321 433 326  curveto
420 330 404 333 384 333  curveto
226 333 lineto
226 87 lineto
226 71 229 60 235 53  curveto
241 45 251 42 267 42  curveto
270 42 276 42 284 42  curveto
292 42 299 43 304 43  curveto
430 46 lineto
453 46 473 50 490 57  curveto
506 64 521 73 533 85  curveto
545 96 555 109 563 124  curveto
571 138 578 154 586 170  curveto
617 170 lineto
571 0 lineto
closepath
fill
		} def

	/F
		{
334 534 moveto
306 534 281 528 258 518  curveto
235 508 215 494 199 477  curveto
183 459 170 439 161 417  curveto
151 394 147 370 147 346  curveto
147 302 153 267 165 241  curveto
177 215 192 194 211 180  curveto
229 165 250 155 272 150  curveto
294 145 314 143 334 143  curveto
334 534 lineto
closepath
623 343 moveto
623 371 618 396 608 420  curveto
598 443 584 463 567 480  curveto
550 497 530 510 508 520  curveto
485 529 461 534 436 534  curveto
436 143 lineto
458 143 481 146 503 152  curveto
525 158 545 168 563 184  curveto
581 199 595 219 606 245  curveto
617 271 623 303 623 343  curveto
closepath
741 331 moveto
741 285 730 247 708 217  curveto
686 187 658 163 624 146  curveto
588 128 554 117 524 113  curveto
493 109 464 108 436 108  curveto
436 74 444 51 460 38  curveto
476 25 502 18 538 18  curveto
538 0 lineto
232 0 lineto
232 18 lineto
267 18 293 25 309 38  curveto
325 50 334 74 334 108  curveto
308 108 286 108 268 110  curveto
249 112 232 114 218 118  curveto
203 121 190 125 178 130  curveto
166 134 154 140 143 146  curveto
103 165 74 191 55 223  curveto
35 255 26 292 26 333  curveto
26 358 30 385 40 413  curveto
50 441 65 465 87 487  curveto
106 506 126 521 148 532  curveto
169 542 190 550 212 555  curveto
234 560 255 563 276 564  curveto
296 564 316 565 334 565  curveto
334 597 326 620 310 634  curveto
294 647 269 654 233 655  curveto
233 673 lineto
537 673 lineto
537 655 lineto
501 654 475 647 459 634  curveto
443 620 436 597 436 565  curveto
454 565 474 564 495 563  curveto
516 562 537 559 558 554  curveto
579 549 600 541 621 531  curveto
641 520 661 505 681 486  curveto
701 466 716 442 726 415  curveto
736 388 741 360 741 331  curveto
closepath
fill
		} def

	/G
		{
584 511 moveto
581 535 576 555 568 570  curveto
560 585 545 598 522 610  curveto
508 616 493 621 477 624  curveto
460 626 440 628 417 628  curveto
229 628 lineto
229 80 lineto
229 66 231 55 236 47  curveto
240 39 247 32 255 28  curveto
263 24 273 21 284 20  curveto
295 18 307 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
47 18 58 18 69 19  curveto
79 20 89 23 97 27  curveto
105 31 112 38 117 46  curveto
122 54 125 66 125 81  curveto
125 550 lineto
125 570 122 586 117 600  curveto
112 613 105 623 96 631  curveto
87 639 76 644 64 648  curveto
52 651 38 653 24 653  curveto
24 673 lineto
592 673 lineto
609 511 lineto
584 511 lineto
closepath
fill
		} def

	/H
		{
445 0 moveto
445 18 lineto
459 18 471 18 483 20  curveto
494 22 503 25 511 30  curveto
519 34 525 41 529 49  curveto
533 57 535 68 535 82  curveto
535 323 lineto
233 323 lineto
233 83 lineto
233 57 240 39 255 31  curveto
269 22 292 18 323 18  curveto
323 0 lineto
39 0 lineto
39 18 lineto
69 18 91 22 106 30  curveto
121 38 129 55 129 83  curveto
129 590 lineto
129 614 122 631 109 641  curveto
95 650 72 655 39 655  curveto
39 673 lineto
323 673 lineto
323 655 lineto
289 655 265 650 252 640  curveto
239 630 233 613 233 589  curveto
233 365 lineto
535 365 lineto
535 591 lineto
535 616 528 633 514 642  curveto
500 650 477 655 445 655  curveto
445 673 lineto
729 673 lineto
729 655 lineto
697 655 674 650 660 641  curveto
646 632 639 615 639 590  curveto
639 84 lineto
639 56 646 38 662 30  curveto
677 22 699 18 729 18  curveto
729 0 lineto
445 0 lineto
closepath
fill
		} def

	/I
		{
32 0 moveto
32 18 lineto
50 18 65 19 77 22  curveto
89 24 98 28 105 34  curveto
111 40 116 47 118 55  curveto
120 63 122 73 122 85  curveto
122 593 lineto
122 607 119 618 114 626  curveto
109 634 102 641 94 645  curveto
85 649 75 652 65 653  curveto
54 654 43 655 32 655  curveto
32 673 lineto
316 673 lineto
316 655 lineto
283 655 260 650 246 641  curveto
232 631 226 615 226 591  curveto
226 85 lineto
226 61 232 44 244 34  curveto
256 23 280 18 316 18  curveto
316 0 lineto
32 0 lineto
closepath
fill
		} def

	/J
		{
470 380 moveto
468 394 466 409 464 427  curveto
462 445 460 463 458 481  curveto
455 499 452 517 448 533  curveto
444 549 440 563 435 575  curveto
423 597 410 614 395 628  curveto
380 642 363 649 344 649  curveto
334 649 325 646 318 641  curveto
310 636 304 630 299 623  curveto
293 615 289 607 287 598  curveto
284 588 283 579 283 571  curveto
283 557 287 541 295 523  curveto
303 505 318 485 340 464  curveto
359 444 380 428 402 414  curveto
424 400 447 389 470 380  curveto
closepath
549 309 moveto
547 279 543 247 538 212  curveto
533 177 523 144 508 113  curveto
494 87 480 65 466 48  curveto
452 31 436 18 420 8  curveto
403 -1 385 -8 367 -12  curveto
348 -16 328 -18 308 -18  curveto
290 -18 274 -17 261 -15  curveto
248 -13 237 -11 227 -7  curveto
217 -3 209 0 201 6  curveto
193 11 186 18 178 26  curveto
159 44 146 66 140 91  curveto
134 115 131 138 131 159  curveto
131 163 132 175 134 193  curveto
136 211 139 231 142 252  curveto
145 273 148 293 150 311  curveto
152 329 154 341 154 347  curveto
154 355 152 362 150 368  curveto
147 374 144 380 140 384  curveto
136 388 131 391 127 393  curveto
123 395 119 396 117 396  curveto
104 396 93 393 85 389  curveto
76 384 69 378 63 371  curveto
57 364 51 357 47 349  curveto
42 341 38 333 34 327  curveto
18 332 lineto
64 419 lineto
69 429 79 439 93 449  curveto
107 459 125 464 146 464  curveto
173 464 194 456 210 441  curveto
219 431 227 419 233 404  curveto
239 389 242 374 242 359  curveto
242 353 240 342 238 326  curveto
236 309 233 290 231 269  curveto
228 248 225 227 223 206  curveto
221 184 220 166 220 152  curveto
220 133 222 115 226 98  curveto
230 81 236 66 244 53  curveto
252 40 263 30 277 22  curveto
290 14 306 10 324 10  curveto
332 10 341 11 351 14  curveto
361 16 370 20 380 26  curveto
390 32 399 39 407 48  curveto
415 56 423 66 429 78  curveto
434 88 439 100 444 113  curveto
449 125 454 140 458 157  curveto
462 173 465 192 468 213  curveto
470 233 472 257 472 284  curveto
472 286 472 289 472 294  curveto
472 299 471 304 471 310  curveto
471 316 471 321 471 326  curveto
471 331 471 335 471 337  curveto
457 343 443 350 429 358  curveto
415 366 401 374 387 382  curveto
373 390 361 399 350 407  curveto
338 415 329 422 322 430  curveto
298 453 280 476 268 500  curveto
255 523 249 548 249 574  curveto
249 595 252 613 260 627  curveto
268 641 276 652 285 661  curveto
294 670 303 677 313 682  curveto
323 686 335 689 350 689  curveto
378 689 406 678 434 656  curveto
462 634 487 601 509 558  curveto
521 532 531 503 537 472  curveto
543 441 547 401 549 353  curveto
623 326 lineto
623 273 lineto
549 309 lineto
closepath
fill
		} def

	/K
		{
418 0 moveto
418 18 lineto
448 18 469 20 479 26  curveto
489 32 495 38 495 46  curveto
495 54 492 62 487 70  curveto
481 78 476 85 471 91  curveto
262 327 lineto
229 297 lineto
229 82 lineto
229 56 236 39 250 31  curveto
264 22 287 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
68 18 91 22 105 32  curveto
118 41 125 58 125 83  curveto
125 589 lineto
125 612 118 629 106 639  curveto
94 649 70 655 35 655  curveto
35 673 lineto
319 673 lineto
319 655 lineto
283 655 259 650 247 640  curveto
235 630 229 612 229 588  curveto
229 360 lineto
280 402 325 442 365 479  curveto
405 516 438 549 466 578  curveto
475 588 482 597 487 606  curveto
491 615 492 623 488 631  curveto
484 638 476 644 463 648  curveto
450 652 431 655 405 655  curveto
405 673 lineto
665 673 lineto
665 655 lineto
652 655 641 654 631 652  curveto
621 650 612 648 603 644  curveto
594 640 585 634 576 627  curveto
567 620 557 611 547 600  curveto
527 579 510 561 495 546  curveto
480 530 465 515 450 500  curveto
434 485 418 469 400 452  curveto
382 435 360 415 336 392  curveto
593 102 lineto
605 87 617 75 628 65  curveto
638 55 649 46 659 40  curveto
669 33 679 28 689 24  curveto
699 20 710 18 722 18  curveto
722 0 lineto
418 0 lineto
closepath
fill
		} def

	/L
		{
408 0 moveto
408 18 lineto
414 18 422 18 430 19  curveto
438 20 446 22 454 26  curveto
461 30 467 35 472 41  curveto
476 47 479 55 479 65  curveto
479 72 478 79 476 85  curveto
474 91 471 101 466 114  curveto
310 496 lineto
166 107 lineto
162 98 159 89 157 80  curveto
155 70 154 63 154 58  curveto
154 40 160 29 172 25  curveto
184 20 200 18 221 18  curveto
221 0 lineto
6 0 lineto
6 18 lineto
14 18 24 19 35 23  curveto
45 27 56 32 66 38  curveto
76 44 85 51 93 60  curveto
101 68 107 78 111 89  curveto
336 688 lineto
584 98 lineto
588 88 592 78 598 69  curveto
604 59 611 51 619 43  curveto
627 35 636 29 646 25  curveto
656 20 667 18 680 18  curveto
680 0 lineto
408 0 lineto
closepath
fill
		} def

	/M
		{
603 0 moveto
603 18 lineto
621 18 636 19 648 22  curveto
660 24 669 28 676 34  curveto
682 40 687 47 689 55  curveto
691 63 693 73 693 85  curveto
693 572 lineto
448 0 lineto
430 0 lineto
170 543 lineto
170 85 lineto
170 63 177 46 191 35  curveto
205 23 228 18 260 18  curveto
260 0 lineto
31 0 lineto
31 18 lineto
91 18 121 40 121 84  curveto
121 582 lineto
121 597 119 609 117 618  curveto
115 627 110 634 104 639  curveto
98 644 88 648 76 650  curveto
64 652 48 653 28 655  curveto
28 673 lineto
229 673 lineto
463 163 lineto
687 673 lineto
885 673 lineto
885 655 lineto
880 655 875 655 871 655  curveto
866 655 862 656 858 656  curveto
834 656 818 650 810 640  curveto
801 630 797 615 797 597  curveto
797 85 lineto
797 73 798 63 800 55  curveto
802 47 807 40 813 35  curveto
819 29 828 25 840 22  curveto
852 19 867 18 887 18  curveto
887 0 lineto
603 0 lineto
closepath
fill
		} def

	/N
		{
720 655 moveto
700 655 685 653 673 650  curveto
661 647 651 643 645 637  curveto
639 631 635 623 633 615  curveto
631 606 630 596 630 586  curveto
630 -8 lineto
608 -8 lineto
168 539 lineto
168 84 lineto
168 60 175 43 191 33  curveto
207 23 229 18 258 18  curveto
258 0 lineto
29 0 lineto
29 18 lineto
58 18 80 23 96 34  curveto
111 44 119 61 119 84  curveto
119 602 lineto
111 613 104 622 98 629  curveto
92 636 86 642 81 646  curveto
75 650 70 652 64 654  curveto
58 655 52 656 46 656  curveto
44 656 41 655 39 655  curveto
37 655 34 655 31 655  curveto
31 673 lineto
198 673 lineto
581 185 lineto
581 590 lineto
581 613 574 630 562 640  curveto
549 650 525 655 491 655  curveto
491 673 lineto
720 673 lineto
720 655 lineto
720 655 lineto
closepath
fill
		} def

	/O
		{
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 485 171 448  curveto
162 411 158 371 158 328  curveto
158 292 160 258 165 227  curveto
170 195 180 164 196 133  curveto
203 118 213 104 225 91  curveto
237 77 250 65 266 55  curveto
281 45 298 37 317 31  curveto
336 25 356 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/P
		{
461 0 moveto
461 18 lineto
497 18 521 23 533 33  curveto
545 43 551 60 551 84  curveto
551 632 lineto
218 632 lineto
219 90 lineto
219 78 220 67 222 58  curveto
224 49 228 42 234 36  curveto
240 30 249 25 261 22  curveto
273 19 289 18 309 18  curveto
309 0 lineto
25 0 lineto
25 18 lineto
45 18 61 19 73 22  curveto
85 25 94 30 100 36  curveto
106 42 110 49 112 58  curveto
114 66 115 76 115 88  curveto
115 576 lineto
115 585 113 594 111 604  curveto
109 613 104 621 98 629  curveto
91 637 82 643 71 648  curveto
59 652 45 655 27 655  curveto
27 673 lineto
742 673 lineto
742 655 lineto
724 655 709 652 698 648  curveto
686 643 677 637 671 630  curveto
665 623 660 615 658 606  curveto
655 596 654 587 654 578  curveto
655 89 lineto
655 76 656 65 658 56  curveto
660 47 665 40 672 34  curveto
678 28 687 24 699 22  curveto
711 19 726 18 745 18  curveto
745 0 lineto
461 0 lineto
closepath
fill
		} def

	/Q
		{
508 251 moveto
501 271 492 285 480 293  curveto
468 300 456 304 442 304  curveto
317 304 lineto
301 304 288 300 276 293  curveto
264 286 255 272 248 251  curveto
233 252 lineto
234 263 235 276 237 292  curveto
238 307 239 322 239 338  curveto
239 353 238 368 237 382  curveto
235 396 234 410 233 423  curveto
248 424 lineto
254 402 264 388 276 381  curveto
288 374 300 371 314 371  curveto
442 371 lineto
474 371 496 388 508 424  curveto
523 423 lineto
521 413 520 400 519 384  curveto
517 368 517 353 517 338  curveto
517 322 517 307 519 292  curveto
520 276 521 263 523 252  curveto
508 251 lineto
closepath
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 487 170 453  curveto
161 419 157 377 157 328  curveto
157 292 159 258 165 226  curveto
170 194 181 162 197 130  curveto
205 114 215 100 227 87  curveto
239 73 253 62 269 52  curveto
285 42 302 35 320 30  curveto
338 24 358 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/R
		{
455 477 moveto
455 502 452 525 447 545  curveto
441 565 432 581 420 594  curveto
406 607 388 617 366 624  curveto
343 631 320 635 298 635  curveto
281 635 268 634 258 633  curveto
248 632 240 630 235 628  curveto
229 626 226 623 224 619  curveto
222 615 222 611 222 607  curveto
222 353 lineto
226 349 233 347 243 345  curveto
252 343 265 342 282 342  curveto
286 342 293 342 303 343  curveto
313 343 325 344 337 346  curveto
349 347 361 349 373 351  curveto
385 353 394 356 402 360  curveto
417 367 430 380 440 399  curveto
450 418 455 444 455 477  curveto
closepath
563 486 moveto
563 474 561 460 559 446  curveto
556 432 551 417 543 403  curveto
535 389 525 375 512 361  curveto
498 347 481 335 460 325  curveto
422 306 374 297 316 297  curveto
303 297 288 297 271 298  curveto
253 298 237 299 222 300  curveto
222 81 lineto
222 56 229 39 243 31  curveto
257 22 280 18 312 18  curveto
312 0 lineto
28 0 lineto
28 18 lineto
46 18 62 19 74 22  curveto
86 25 95 29 101 35  curveto
107 41 112 48 114 56  curveto
116 64 118 74 118 86  curveto
118 588 lineto
118 614 111 631 97 641  curveto
83 650 60 655 28 655  curveto
28 673 lineto
303 673 lineto
340 673 373 670 403 665  curveto
433 660 459 652 481 641  curveto
508 627 528 606 542 577  curveto
556 548 563 518 563 486  curveto
closepath
fill
		} def

	/S
		{
552 0 moveto
5 0 lineto
286 327 lineto
17 673 lineto
535 673 lineto
545 522 lineto
526 522 lineto
517 560 502 587 482 603  curveto
462 619 435 627 402 627  curveto
180 627 lineto
381 369 lineto
145 94 lineto
446 94 lineto
478 94 503 102 522 118  curveto
541 134 557 163 569 205  curveto
589 205 lineto
552 0 lineto
closepath
fill
		} def

	/T
		{
581 500 moveto
581 526 576 547 568 564  curveto
559 580 548 594 535 604  curveto
521 614 506 621 489 625  curveto
471 629 454 631 438 632  curveto
372 634 lineto
372 85 lineto
372 59 378 41 392 32  curveto
406 22 429 18 462 18  curveto
462 0 lineto
178 0 lineto
178 18 lineto
210 18 233 22 247 31  curveto
261 40 268 58 268 85  curveto
268 634 lineto
202 632 lineto
176 631 154 627 136 620  curveto
118 613 103 604 91 592  curveto
79 580 71 567 66 551  curveto
61 535 59 518 59 500  curveto
33 502 lineto
38 673 lineto
602 673 lineto
607 502 lineto
581 500 lineto
closepath
fill
		} def

	/U
		{
694 655 moveto
678 655 665 654 655 652  curveto
644 650 635 648 627 644  curveto
619 640 612 634 606 628  curveto
600 622 594 614 588 605  curveto
398 313 lineto
398 83 lineto
398 57 405 40 419 31  curveto
433 22 456 18 488 18  curveto
488 0 lineto
204 0 lineto
204 18 lineto
235 18 258 22 272 31  curveto
286 39 294 57 294 83  curveto
294 300 lineto
86 603 lineto
70 625 55 639 40 645  curveto
25 651 9 655 -8 655  curveto
-8 673 lineto
289 673 lineto
289 655 lineto
267 655 249 653 234 649  curveto
218 645 211 637 211 626  curveto
211 621 212 616 215 611  curveto
217 605 222 597 230 587  curveto
376 363 lineto
517 596 lineto
521 603 524 609 526 613  curveto
528 617 529 623 529 629  curveto
529 639 523 645 513 649  curveto
502 653 485 655 462 655  curveto
462 673 lineto
694 673 lineto
694 655 lineto
694 655 lineto
closepath
fill
		} def

	/V
		{
437 -52 moveto
437 -63 435 -75 433 -87  curveto
430 -99 426 -112 421 -124  curveto
416 -136 410 -147 403 -159  curveto
395 -170 387 -180 379 -189  curveto
365 -202 349 -213 331 -221  curveto
313 -229 294 -233 275 -233  curveto
247 -233 226 -226 213 -214  curveto
199 -201 193 -188 193 -174  curveto
193 -164 195 -156 199 -150  curveto
203 -144 209 -140 215 -137  curveto
221 -134 228 -132 235 -132  curveto
241 -131 247 -131 253 -131  curveto
266 -131 279 -133 291 -139  curveto
303 -144 314 -147 325 -147  curveto
343 -147 359 -140 373 -127  curveto
387 -114 395 -96 395 -73  curveto
395 -53 390 -39 381 -30  curveto
372 -21 360 -17 345 -17  curveto
317 -17 295 -17 279 -17  curveto
262 -17 249 -18 239 -18  curveto
229 -18 222 -19 218 -19  curveto
213 -19 209 -20 206 -20  curveto
183 -20 161 -14 141 -4  curveto
121 6 103 21 88 41  curveto
73 61 61 85 52 113  curveto
43 141 39 172 39 207  curveto
39 245 46 282 62 320  curveto
77 358 100 392 130 422  curveto
157 449 184 469 212 481  curveto
240 493 273 500 312 500  curveto
326 500 340 498 352 495  curveto
364 491 375 487 384 482  curveto
393 477 400 471 405 465  curveto
410 458 413 451 413 445  curveto
413 430 407 420 397 414  curveto
387 408 374 405 358 405  curveto
338 405 319 407 300 413  curveto
280 419 260 422 239 422  curveto
210 422 185 415 165 401  curveto
145 387 128 370 115 350  curveto
102 330 93 308 87 286  curveto
81 263 78 243 78 227  curveto
78 205 82 184 91 162  curveto
100 140 112 122 126 108  curveto
135 98 146 92 158 88  curveto
170 84 183 82 197 82  curveto
216 82 236 82 257 84  curveto
277 86 295 87 311 87  curveto
327 87 341 84 355 80  curveto
369 75 381 67 393 56  curveto
406 42 417 25 425 5  curveto
433 -15 437 -34 437 -52  curveto
closepath
fill
		} def

	/W
		{
441 0 moveto
457 152 lineto
469 156 482 162 495 169  curveto
507 175 519 184 529 194  curveto
552 217 569 247 581 283  curveto
593 319 599 360 599 404  curveto
599 450 592 489 579 523  curveto
566 557 551 582 534 600  curveto
516 617 496 631 473 641  curveto
450 651 421 656 385 656  curveto
348 656 318 651 296 641  curveto
273 631 253 617 236 600  curveto
216 580 200 552 188 517  curveto
176 481 171 445 171 407  curveto
171 359 177 317 189 281  curveto
201 245 219 215 242 193  curveto
251 183 261 175 273 169  curveto
285 163 298 157 313 152  curveto
329 0 lineto
34 0 lineto
34 162 lineto
49 162 lineto
55 134 63 117 73 111  curveto
83 104 97 101 115 101  curveto
273 101 lineto
271 129 lineto
236 139 209 150 189 160  curveto
169 170 151 184 135 201  curveto
107 228 87 259 74 294  curveto
60 329 54 365 54 401  curveto
54 435 60 470 74 504  curveto
87 538 106 567 132 593  curveto
160 621 195 643 239 661  curveto
282 679 331 688 385 688  curveto
437 688 484 679 528 662  curveto
572 645 609 622 639 592  curveto
663 568 681 538 695 504  curveto
709 469 716 434 716 400  curveto
716 367 709 333 697 298  curveto
685 262 664 230 634 200  curveto
618 184 599 170 578 159  curveto
557 148 531 138 499 129  curveto
497 101 lineto
654 101 lineto
666 101 676 102 684 105  curveto
692 107 698 111 703 117  curveto
707 122 711 128 713 136  curveto
715 143 718 152 721 162  curveto
736 162 lineto
736 0 lineto
441 0 lineto
closepath
fill
		} def

	/X
		{
40 0 moveto
40 194 lineto
58 194 lineto
60 172 63 155 67 142  curveto
71 128 76 118 83 111  curveto
90 103 99 98 110 96  curveto
120 94 134 93 150 93  curveto
485 93 lineto
501 93 514 94 525 96  curveto
536 98 545 102 553 109  curveto
561 116 567 126 571 140  curveto
575 153 579 171 581 194  curveto
599 194 lineto
599 0 lineto
40 0 lineto
closepath
474 250 moveto
472 271 468 286 462 294  curveto
455 302 442 306 423 306  curveto
217 306 lineto
195 306 181 301 176 293  curveto
170 284 167 270 165 250  curveto
147 250 lineto
147 457 lineto
165 457 lineto
166 435 170 421 177 413  curveto
183 405 196 401 216 401  curveto
422 401 lineto
437 401 449 403 458 409  curveto
467 415 472 431 474 457  curveto
492 457 lineto
492 250 lineto
474 250 lineto
closepath
561 522 moveto
559 545 553 561 542 570  curveto
530 578 514 583 494 583  curveto
146 583 lineto
119 583 101 577 93 566  curveto
84 554 79 540 79 522  curveto
62 522 lineto
62 673 lineto
577 673 lineto
577 522 lineto
561 522 lineto
closepath
fill
		} def

	/Y
		{
781 666 moveto
770 662 762 657 756 653  curveto
750 649 745 644 742 638  curveto
738 632 736 625 735 617  curveto
733 609 732 599 732 588  curveto
725 464 lineto
723 436 714 410 697 388  curveto
680 366 659 348 635 336  curveto
621 329 609 323 597 319  curveto
585 315 573 311 559 308  curveto
545 305 529 303 512 302  curveto
494 300 474 300 450 300  curveto
450 86 lineto
450 61 456 43 468 33  curveto
480 23 504 18 540 18  curveto
540 0 lineto
256 0 lineto
256 18 lineto
291 18 315 23 327 33  curveto
339 43 346 60 346 85  curveto
346 300 lineto
322 300 301 300 284 302  curveto
266 303 251 305 237 308  curveto
223 311 210 315 198 319  curveto
186 323 173 329 161 336  curveto
136 348 115 366 98 388  curveto
81 410 72 436 71 464  curveto
64 588 lineto
63 599 62 609 61 617  curveto
59 625 57 632 54 638  curveto
50 644 46 649 40 653  curveto
34 657 25 662 15 666  curveto
15 684 lineto
32 682 47 681 59 679  curveto
71 677 81 675 90 672  curveto
98 669 106 665 112 661  curveto
118 657 125 652 131 646  curveto
143 634 153 618 162 600  curveto
171 582 176 567 178 555  curveto
186 469 lineto
188 441 194 418 203 402  curveto
211 385 223 372 237 363  curveto
251 353 267 347 285 344  curveto
303 341 324 340 346 340  curveto
346 587 lineto
346 612 339 630 326 640  curveto
313 650 290 655 256 655  curveto
256 673 lineto
540 673 lineto
540 655 lineto
505 655 481 650 469 640  curveto
456 630 450 612 450 588  curveto
450 340 lineto
472 340 492 341 510 344  curveto
528 347 545 353 559 363  curveto
573 372 584 385 593 402  curveto
601 418 607 441 610 469  curveto
618 555 lineto
619 567 624 582 633 600  curveto
642 618 653 634 665 646  curveto
671 652 677 657 683 661  curveto
689 665 697 669 706 672  curveto
714 675 725 677 737 679  curveto
749 681 763 682 781 684  curveto
781 666 lineto
781 666 lineto
closepath
fill
		} def

	/Z
		{
611 0 moveto
44 0 lineto
44 19 lineto
473 631 lineto
243 631 lineto
211 631 187 627 169 619  curveto
151 611 137 601 127 589  curveto
117 577 110 563 106 547  curveto
102 531 97 514 93 498  curveto
68 498 lineto
83 673 lineto
605 673 lineto
605 646 lineto
192 42 lineto
440 42 lineto
469 42 493 45 513 52  curveto
532 58 548 68 560 80  curveto
572 92 582 106 589 123  curveto
595 140 601 159 607 181  curveto
636 181 lineto
611 0 lineto
closepath
fill
		} def

	/bracketleft
		{
86 -155 moveto
86 674 lineto
299 674 lineto
299 649 lineto
221 649 lineto
199 649 184 645 176 637  curveto
167 629 163 616 163 598  curveto
163 -81 lineto
163 -96 167 -108 175 -117  curveto
183 -125 198 -130 220 -130  curveto
299 -130 lineto
299 -155 lineto
86 -155 lineto
closepath
fill
		} def

	/backslash
		{
293 65 moveto
293 47 286 31 274 19  curveto
261 6 246 0 228 0  curveto
210 0 194 6 182 19  curveto
169 31 163 47 163 65  curveto
163 82 169 97 181 110  curveto
193 123 209 130 228 130  curveto
247 130 263 123 275 110  curveto
287 97 293 82 293 65  curveto
closepath
701 65 moveto
701 47 694 31 681 19  curveto
668 6 653 0 636 0  curveto
618 0 603 6 590 19  curveto
577 31 571 47 571 65  curveto
571 82 577 97 589 110  curveto
601 123 617 130 636 130  curveto
655 130 671 123 683 110  curveto
695 97 701 82 701 65  curveto
closepath
497 413 moveto
497 395 490 379 477 367  curveto
464 354 449 348 432 348  curveto
414 348 399 354 386 367  curveto
373 379 367 395 367 413  curveto
367 430 373 445 385 458  curveto
397 471 413 478 432 478  curveto
451 478 467 471 479 458  curveto
491 445 497 430 497 413  curveto
closepath
fill
		} def

	/bracketright
		{
33 -155 moveto
33 -130 lineto
112 -130 lineto
133 -130 148 -125 156 -117  curveto
164 -108 169 -96 169 -81  curveto
169 598 lineto
169 616 164 629 156 637  curveto
147 645 132 649 111 649  curveto
33 649 lineto
33 674 lineto
246 674 lineto
246 -155 lineto
33 -155 lineto
closepath
fill
		} def

	/asciicircum
		{
15 0 moveto
15 55 lineto
306 55 lineto
306 674 lineto
361 674 lineto
361 55 lineto
652 55 lineto
652 0 lineto
15 0 lineto
closepath
fill
		} def

	/underscore
		{
-2 -252 moveto
-2 -206 lineto
502 -206 lineto
502 -252 lineto
-2 -252 lineto
closepath
fill
		} def

	/quoteleft
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/a
		{
407 223 moveto
403 249 399 273 395 294  curveto
391 314 387 332 382 348  curveto
377 363 371 377 365 389  curveto
358 401 350 412 340 422  curveto
326 436 311 446 296 452  curveto
280 458 265 461 249 461  curveto
232 461 217 454 205 442  curveto
193 430 183 416 176 401  curveto
165 379 157 354 152 326  curveto
147 298 145 269 145 241  curveto
145 209 147 179 151 149  curveto
155 119 162 95 172 77  curveto
181 57 193 42 209 32  curveto
224 21 240 16 256 16  curveto
266 16 277 18 289 24  curveto
301 29 312 37 322 47  curveto
332 57 343 72 353 91  curveto
363 110 372 129 380 149  curveto
407 223 lineto
407 223 lineto
closepath
620 79 moveto
620 69 618 58 614 47  curveto
610 36 605 26 599 17  curveto
593 7 585 0 577 -6  curveto
568 -12 559 -15 549 -15  curveto
537 -15 527 -10 517 -1  curveto
507 7 499 18 491 32  curveto
483 46 475 61 469 77  curveto
462 93 456 109 451 124  curveto
445 113 438 100 431 86  curveto
423 71 412 56 396 40  curveto
378 22 355 8 327 -2  curveto
298 -12 270 -18 243 -18  curveto
217 -18 192 -13 168 -3  curveto
144 7 123 20 107 37  curveto
63 81 41 145 41 229  curveto
41 274 46 313 56 347  curveto
66 380 83 409 109 435  curveto
121 447 132 457 144 465  curveto
155 473 167 479 179 485  curveto
191 490 203 494 217 496  curveto
231 498 246 500 263 500  curveto
283 500 302 496 320 488  curveto
338 480 355 468 370 452  curveto
385 436 398 416 409 392  curveto
420 368 428 341 433 309  curveto
435 309 lineto
499 487 lineto
587 487 lineto
472 170 lineto
474 157 477 144 481 130  curveto
485 116 491 104 498 93  curveto
504 82 512 73 521 66  curveto
530 59 540 56 552 56  curveto
556 56 561 57 566 60  curveto
571 63 575 66 579 70  curveto
584 75 589 82 594 92  curveto
598 101 602 116 604 137  curveto
622 137 lineto
620 79 lineto
closepath
fill
		} def

	/b
		{
412 188 moveto
412 232 405 271 392 305  curveto
378 339 363 366 345 384  curveto
337 392 330 397 325 399  curveto
319 401 313 402 307 402  curveto
301 402 294 401 286 400  curveto
277 398 269 398 261 398  curveto
245 398 234 401 228 407  curveto
221 413 218 419 218 425  curveto
218 433 221 441 229 449  curveto
236 457 247 461 263 461  curveto
271 461 280 459 291 457  curveto
302 455 310 454 314 454  curveto
320 454 327 457 335 465  curveto
342 473 348 482 354 494  curveto
358 502 361 512 364 526  curveto
366 539 368 552 368 565  curveto
368 587 364 607 358 625  curveto
351 643 342 658 332 670  curveto
322 682 310 691 296 697  curveto
282 703 269 707 255 707  curveto
239 707 225 703 213 695  curveto
201 687 190 678 182 667  curveto
173 656 166 644 162 632  curveto
157 620 155 609 155 599  curveto
155 93 lineto
158 89 161 86 164 84  curveto
167 81 170 78 174 75  curveto
188 60 206 49 228 41  curveto
250 33 271 30 293 30  curveto
307 30 322 32 336 38  curveto
350 44 361 51 371 61  curveto
382 72 392 87 400 106  curveto
408 124 412 152 412 188  curveto
closepath
515 199 moveto
515 167 510 137 500 111  curveto
490 85 477 62 460 43  curveto
443 23 422 8 398 -2  curveto
374 -12 347 -18 319 -18  curveto
291 -18 264 -14 240 -6  curveto
215 1 188 15 158 37  curveto
156 -149 lineto
156 -160 155 -172 153 -185  curveto
151 -197 149 -210 148 -223  curveto
61 -223 lineto
63 -199 67 -173 71 -147  curveto
75 -121 77 -94 77 -67  curveto
77 588 lineto
77 614 84 638 99 660  curveto
114 682 140 703 176 721  curveto
188 727 201 731 215 735  curveto
229 739 245 741 263 741  curveto
298 741 332 732 366 716  curveto
394 702 418 683 436 659  curveto
454 635 463 609 463 580  curveto
463 566 460 551 456 537  curveto
452 522 447 510 442 501  curveto
438 493 433 486 427 479  curveto
421 471 416 465 410 459  curveto
404 453 398 447 392 443  curveto
386 438 382 434 379 432  curveto
425 412 459 381 481 339  curveto
503 297 515 250 515 199  curveto
closepath
fill
		} def

	/c
		{
522 -50 moveto
518 -84 511 -114 503 -140  curveto
495 -165 483 -185 468 -201  curveto
458 -210 447 -217 435 -223  curveto
423 -228 410 -231 396 -231  curveto
363 -231 336 -209 315 -167  curveto
310 -157 305 -145 301 -129  curveto
296 -113 291 -96 287 -76  curveto
283 -56 279 -34 275 -12  curveto
271 10 268 33 265 57  curveto
263 57 lineto
115 -216 lineto
13 -216 lineto
232 185 lineto
220 229 211 267 205 298  curveto
198 329 191 352 184 368  curveto
176 383 166 395 154 405  curveto
141 415 126 420 110 420  curveto
86 420 68 410 56 390  curveto
44 370 35 347 30 321  curveto
12 321 lineto
19 379 31 423 49 454  curveto
67 484 90 500 119 500  curveto
145 500 167 490 184 472  curveto
201 453 213 429 221 399  curveto
259 236 lineto
392 480 lineto
494 479 lineto
290 105 lineto
294 89 298 70 304 47  curveto
310 24 316 1 323 -21  curveto
329 -43 336 -64 344 -83  curveto
351 -101 358 -114 365 -121  curveto
374 -130 382 -136 389 -138  curveto
396 -140 404 -142 414 -142  curveto
436 -142 455 -134 471 -118  curveto
478 -110 484 -101 489 -91  curveto
494 -81 499 -67 503 -50  curveto
522 -50 lineto
522 -50 lineto
closepath
fill
		} def

	/d
		{
385 194 moveto
385 216 382 239 378 262  curveto
373 285 366 306 357 324  curveto
347 342 337 358 326 374  curveto
314 389 301 404 286 418  curveto
258 412 236 402 218 390  curveto
200 378 186 363 176 346  curveto
165 329 157 310 153 289  curveto
149 268 147 246 147 222  curveto
147 202 149 180 153 158  curveto
157 136 163 116 171 100  curveto
175 90 179 81 185 73  curveto
191 65 197 57 205 50  curveto
213 43 222 38 232 34  curveto
242 30 254 28 268 28  curveto
282 28 295 30 308 36  curveto
320 42 331 49 341 59  curveto
355 73 365 92 373 116  curveto
381 140 385 166 385 194  curveto
closepath
481 228 moveto
481 199 477 173 469 150  curveto
461 126 451 105 438 86  curveto
424 67 409 50 391 36  curveto
373 22 355 10 335 0  curveto
321 -6 307 -11 292 -14  curveto
276 -17 262 -19 248 -19  curveto
238 -19 226 -17 211 -15  curveto
195 -13 182 -9 170 -3  curveto
150 6 131 18 113 34  curveto
95 49 78 71 64 101  curveto
54 120 48 138 45 156  curveto
41 173 40 189 40 203  curveto
40 232 46 261 58 290  curveto
70 319 86 344 107 365  curveto
142 400 191 427 255 447  curveto
141 551 lineto
126 564 115 579 108 597  curveto
101 614 98 629 98 643  curveto
98 653 99 662 102 670  curveto
105 678 111 686 121 696  curveto
125 700 132 706 140 712  curveto
148 718 155 722 162 726  curveto
173 731 185 735 199 737  curveto
213 739 227 740 243 740  curveto
247 740 252 739 260 739  curveto
268 739 276 738 285 737  curveto
293 736 302 735 311 734  curveto
319 733 327 732 333 730  curveto
371 718 398 705 415 690  curveto
431 674 440 657 440 639  curveto
440 627 435 618 425 610  curveto
415 602 405 599 395 599  curveto
385 599 376 601 368 606  curveto
360 610 352 616 344 623  curveto
336 629 329 636 322 644  curveto
314 652 308 659 302 665  curveto
287 679 271 689 255 693  curveto
239 697 227 700 219 700  curveto
206 700 195 697 185 693  curveto
175 688 167 682 160 675  curveto
150 665 146 654 146 640  curveto
146 630 148 621 153 613  curveto
158 605 164 597 172 590  curveto
187 574 203 561 221 549  curveto
239 537 257 525 277 513  curveto
287 507 296 501 306 495  curveto
316 489 326 483 336 476  curveto
346 469 356 461 367 452  curveto
378 443 390 433 402 421  curveto
425 397 444 369 459 337  curveto
473 304 481 268 481 228  curveto
closepath
fill
		} def

	/e
		{
427 107 moveto
425 83 418 63 405 46  curveto
391 29 375 16 356 7  curveto
346 2 336 -1 325 -5  curveto
314 -8 303 -11 292 -13  curveto
280 -15 269 -17 258 -18  curveto
247 -19 238 -20 230 -20  curveto
194 -20 160 -14 129 -3  curveto
98 7 75 20 60 36  curveto
34 61 22 91 22 126  curveto
22 154 31 180 49 203  curveto
67 226 95 242 133 252  curveto
120 257 108 263 96 269  curveto
84 275 74 282 65 290  curveto
56 298 49 308 44 320  curveto
38 332 36 346 36 363  curveto
36 385 42 405 55 425  curveto
67 445 88 462 118 477  curveto
133 484 151 490 171 495  curveto
191 499 215 502 241 502  curveto
260 502 277 500 292 498  curveto
307 496 324 490 342 481  curveto
360 471 373 460 382 448  curveto
391 435 396 423 396 412  curveto
396 398 391 387 382 378  curveto
373 369 363 365 351 365  curveto
331 365 318 370 311 382  curveto
303 394 297 407 293 422  curveto
289 433 281 443 269 452  curveto
257 461 241 466 222 466  curveto
208 466 196 463 184 458  curveto
172 452 162 445 154 437  curveto
136 419 127 393 127 361  curveto
127 335 134 314 148 297  curveto
162 280 184 272 215 272  curveto
225 272 238 273 254 275  curveto
270 277 283 278 293 278  curveto
306 278 316 275 322 271  curveto
328 266 331 261 331 256  curveto
331 249 325 242 315 235  curveto
305 228 293 225 279 225  curveto
269 225 259 226 247 228  curveto
235 230 225 232 215 232  curveto
189 232 167 223 151 206  curveto
135 188 127 164 127 132  curveto
127 115 128 102 132 93  curveto
136 83 142 74 152 65  curveto
163 53 179 44 200 37  curveto
220 29 244 26 272 26  curveto
302 26 329 31 352 43  curveto
374 55 391 78 401 114  curveto
427 107 lineto
427 107 lineto
closepath
fill
		} def

	/f
		{
235 464 moveto
214 460 196 452 182 440  curveto
167 428 155 414 146 396  curveto
136 378 129 358 125 335  curveto
121 312 119 287 119 261  curveto
119 235 121 208 127 182  curveto
132 156 140 131 152 109  curveto
157 98 163 88 170 78  curveto
177 68 184 60 192 52  curveto
200 44 208 37 216 32  curveto
224 26 232 23 240 23  curveto
235 464 lineto
closepath
402 214 moveto
402 242 399 270 393 298  curveto
387 326 380 351 370 371  curveto
359 391 347 409 335 423  curveto
322 437 303 450 279 464  curveto
282 24 lineto
309 27 330 36 344 50  curveto
358 64 370 82 380 102  curveto
387 117 392 134 396 154  curveto
400 173 402 193 402 214  curveto
closepath
490 244 moveto
490 197 482 156 467 122  curveto
451 88 434 61 414 41  curveto
396 23 377 11 355 4  curveto
333 -3 309 -9 282 -13  curveto
283 -224 lineto
243 -212 lineto
241 -14 lineto
217 -8 192 -1 167 8  curveto
141 17 119 31 101 50  curveto
77 73 59 101 46 134  curveto
33 167 27 201 27 236  curveto
27 254 29 272 33 292  curveto
37 311 42 330 49 348  curveto
56 366 64 384 74 400  curveto
84 416 95 430 107 442  curveto
142 477 185 497 235 501  curveto
233 671 lineto
278 656 lineto
279 498 lineto
309 492 334 485 355 477  curveto
376 468 396 454 415 436  curveto
441 410 460 380 472 348  curveto
484 315 490 280 490 244  curveto
closepath
fill
		} def

	/g
		{
280 58 moveto
284 31 288 5 292 -19  curveto
296 -43 298 -69 298 -95  curveto
298 -115 296 -133 293 -149  curveto
289 -165 285 -178 280 -190  curveto
274 -202 267 -210 260 -216  curveto
252 -222 243 -225 231 -225  curveto
213 -225 200 -218 192 -204  curveto
183 -190 179 -174 179 -155  curveto
179 -137 181 -119 185 -99  curveto
189 -79 195 -60 201 -41  curveto
207 -21 214 -3 221 14  curveto
227 32 233 47 239 60  curveto
235 93 230 125 224 157  curveto
218 188 212 217 205 245  curveto
198 272 191 297 183 319  curveto
175 341 168 361 160 377  curveto
152 392 142 403 130 410  curveto
117 417 105 421 95 421  curveto
78 421 63 414 49 400  curveto
38 389 31 377 28 364  curveto
24 351 22 335 22 317  curveto
5 317 lineto
5 344 lineto
5 370 7 392 12 412  curveto
17 431 22 445 27 454  curveto
34 469 44 480 58 488  curveto
72 495 87 499 105 499  curveto
125 499 142 494 156 485  curveto
169 476 181 461 192 440  curveto
201 420 208 401 214 381  curveto
219 361 225 337 232 307  curveto
237 283 243 257 249 227  curveto
255 197 261 169 265 142  curveto
267 142 lineto
380 494 lineto
484 494 lineto
280 58 lineto
closepath
fill
		} def

	/h
		{
438 -202 moveto
435 -186 432 -172 429 -158  curveto
426 -144 424 -126 424 -103  curveto
411 347 lineto
410 380 402 404 387 420  curveto
378 428 368 435 356 439  curveto
344 443 333 445 322 445  curveto
308 445 296 442 285 438  curveto
273 433 263 427 254 420  curveto
244 412 236 404 228 395  curveto
220 385 212 376 206 366  curveto
206 0 lineto
121 0 lineto
121 349 lineto
121 358 120 369 119 383  curveto
117 397 114 409 109 421  curveto
104 430 98 437 92 443  curveto
85 449 77 452 68 452  curveto
60 452 54 450 48 447  curveto
42 443 37 437 33 428  curveto
29 420 26 411 24 399  curveto
21 387 19 374 18 360  curveto
0 360 lineto
0 383 2 400 5 412  curveto
8 423 12 434 18 446  curveto
28 467 42 482 59 492  curveto
76 501 94 506 114 506  curveto
130 506 144 502 158 495  curveto
172 487 182 477 189 464  curveto
193 456 196 448 199 439  curveto
201 430 204 420 207 408  curveto
227 438 250 464 274 484  curveto
298 504 328 514 364 514  curveto
376 514 388 512 401 510  curveto
413 507 425 502 435 495  curveto
440 491 446 486 454 480  curveto
461 474 468 467 475 458  curveto
481 448 487 437 492 423  curveto
496 409 499 391 500 371  curveto
511 -126 lineto
511 -141 514 -155 518 -169  curveto
522 -182 525 -193 527 -202  curveto
438 -202 lineto
closepath
fill
		} def

	/i
		{
301 101 moveto
297 77 292 58 285 43  curveto
278 28 270 16 260 7  curveto
250 -1 239 -7 227 -11  curveto
215 -15 204 -17 192 -17  curveto
175 -17 161 -14 150 -10  curveto
138 -5 128 1 119 11  curveto
110 19 103 30 97 42  curveto
91 54 88 66 88 78  curveto
88 309 lineto
88 335 86 357 82 373  curveto
78 389 73 401 67 409  curveto
60 417 52 423 44 426  curveto
36 428 27 430 19 430  curveto
0 430 lineto
0 450 lineto
27 455 55 462 83 471  curveto
111 479 141 490 173 503  curveto
173 118 lineto
173 102 174 88 178 78  curveto
182 67 186 59 191 54  curveto
198 45 203 39 207 36  curveto
211 32 216 31 223 31  curveto
229 31 235 31 241 33  curveto
247 35 253 38 259 43  curveto
264 48 268 55 272 64  curveto
276 73 279 85 281 101  curveto
301 101 lineto
301 101 lineto
closepath
fill
		} def

	/j
		{
502 214 moveto
502 242 499 267 494 291  curveto
488 314 482 334 474 350  curveto
470 357 465 365 459 374  curveto
453 382 446 390 438 398  curveto
430 405 423 411 415 416  curveto
407 421 399 424 392 424  curveto
386 424 379 422 373 420  curveto
367 418 362 415 358 411  curveto
351 404 345 392 341 374  curveto
337 356 335 335 335 310  curveto
335 305 335 298 335 290  curveto
335 282 336 277 336 275  curveto
347 23 lineto
383 27 411 38 433 58  curveto
455 77 471 97 481 117  curveto
488 132 493 147 497 163  curveto
500 179 502 196 502 214  curveto
closepath
587 247 moveto
587 213 580 179 566 146  curveto
552 112 535 86 515 66  curveto
505 56 495 47 483 38  curveto
471 29 459 21 445 13  curveto
431 5 417 0 403 -5  curveto
388 -9 374 -12 360 -12  curveto
347 -12 lineto
347 -224 lineto
284 -224 lineto
284 -13 lineto
272 -11 258 -8 244 -5  curveto
230 -2 215 1 200 7  curveto
185 13 170 20 155 29  curveto
139 37 125 49 111 63  curveto
101 73 91 85 82 100  curveto
72 114 64 130 58 147  curveto
51 164 46 182 42 202  curveto
38 221 36 241 36 261  curveto
36 291 41 321 52 350  curveto
62 378 77 402 97 422  curveto
116 441 138 457 162 471  curveto
186 485 215 492 248 492  curveto
248 474 lineto
227 464 210 453 196 439  curveto
182 425 171 409 163 391  curveto
155 373 149 353 146 332  curveto
142 310 141 288 141 265  curveto
141 234 143 205 149 179  curveto
155 152 162 130 171 113  curveto
185 85 202 63 223 49  curveto
243 35 264 27 284 26  curveto
275 311 lineto
275 315 274 321 274 329  curveto
274 336 274 343 274 350  curveto
274 363 276 378 280 395  curveto
284 412 290 428 300 444  curveto
310 459 322 472 338 483  curveto
354 493 373 499 397 499  curveto
415 499 433 495 451 489  curveto
469 482 489 468 511 446  curveto
532 424 550 396 565 362  curveto
579 327 587 289 587 247  curveto
closepath
fill
		} def

	/k
		{
323 0 moveto
323 18 lineto
340 18 352 19 358 23  curveto
364 26 368 30 368 36  curveto
368 42 365 47 361 52  curveto
356 57 351 63 346 71  curveto
194 258 lineto
194 0 lineto
119 0 lineto
119 344 lineto
119 362 117 378 114 390  curveto
110 402 105 411 98 417  curveto
91 423 82 428 71 430  curveto
60 432 47 434 33 434  curveto
33 455 lineto
43 457 54 459 65 461  curveto
76 463 88 465 101 468  curveto
113 471 127 475 142 481  curveto
157 486 174 493 194 501  curveto
194 284 lineto
215 305 236 326 258 346  curveto
280 366 300 385 319 402  curveto
338 419 355 434 370 446  curveto
385 458 397 467 406 473  curveto
411 478 421 484 436 490  curveto
450 496 466 500 484 500  curveto
508 500 527 494 539 482  curveto
551 470 557 459 557 447  curveto
557 435 552 423 543 411  curveto
534 399 520 394 501 394  curveto
491 394 483 395 477 399  curveto
470 403 464 407 458 411  curveto
452 415 447 418 442 422  curveto
437 426 432 428 426 428  curveto
418 428 407 424 395 416  curveto
383 408 370 397 356 385  curveto
342 373 328 359 314 345  curveto
300 331 286 317 274 305  curveto
461 70 lineto
478 48 494 34 508 28  curveto
522 21 538 18 558 18  curveto
558 0 lineto
323 0 lineto
closepath
fill
		} def

	/l
		{
547 153 moveto
547 127 545 105 542 88  curveto
538 70 533 55 527 42  curveto
515 20 502 4 487 -4  curveto
471 -12 457 -17 444 -17  curveto
425 -17 408 -10 393 1  curveto
377 13 365 28 357 46  curveto
353 53 349 64 345 79  curveto
340 94 335 111 331 130  curveto
326 149 321 170 317 192  curveto
313 214 309 235 305 256  curveto
301 277 298 297 295 316  curveto
292 335 290 351 289 365  curveto
287 365 lineto
116 0 lineto
24 0 lineto
255 498 lineto
249 524 243 547 237 568  curveto
231 589 224 607 217 623  curveto
210 636 201 646 189 653  curveto
177 659 166 663 154 663  curveto
142 663 132 660 122 656  curveto
112 651 103 645 96 638  curveto
86 628 80 617 77 605  curveto
74 593 71 581 68 570  curveto
49 570 lineto
54 622 64 664 79 694  curveto
93 724 116 739 146 739  curveto
168 739 187 732 205 719  curveto
222 705 235 691 243 675  curveto
252 656 261 631 271 600  curveto
280 569 289 536 299 501  curveto
303 484 307 462 313 436  curveto
319 410 325 382 331 352  curveto
337 322 343 293 349 264  curveto
355 234 360 208 366 186  curveto
370 169 375 152 382 135  curveto
388 118 397 104 408 94  curveto
423 78 440 71 460 71  curveto
470 71 481 73 491 79  curveto
501 85 509 94 516 108  curveto
519 114 522 121 524 131  curveto
526 140 527 147 529 153  curveto
547 153 lineto
547 153 lineto
closepath
fill
		} def

	/m
		{
566 101 moveto
563 79 557 61 549 46  curveto
540 31 530 19 518 10  curveto
506 0 494 -6 482 -10  curveto
469 -14 457 -17 446 -17  curveto
428 -17 413 -12 399 -4  curveto
385 4 374 16 367 32  curveto
363 38 361 46 360 54  curveto
358 62 357 71 355 81  curveto
349 73 345 68 343 64  curveto
340 60 335 55 329 49  curveto
307 27 286 11 265 0  curveto
243 -11 219 -17 193 -17  curveto
174 -17 158 -12 144 -4  curveto
130 3 115 15 97 31  curveto
97 10 lineto
97 -5 98 -19 102 -32  curveto
105 -45 109 -58 113 -70  curveto
117 -82 120 -95 124 -108  curveto
127 -121 129 -135 129 -151  curveto
129 -172 124 -189 115 -203  curveto
106 -216 95 -223 81 -223  curveto
69 -223 58 -217 48 -205  curveto
38 -193 33 -176 33 -153  curveto
33 -137 34 -123 37 -111  curveto
40 -99 43 -87 47 -75  curveto
50 -63 53 -51 56 -38  curveto
59 -25 61 -10 61 7  curveto
61 500 lineto
147 500 lineto
147 164 lineto
147 125 157 96 177 76  curveto
185 67 196 61 208 57  curveto
220 53 231 51 243 51  curveto
252 51 262 53 273 57  curveto
284 61 295 67 306 74  curveto
316 81 326 89 334 99  curveto
342 108 349 118 354 128  curveto
354 500 lineto
440 500 lineto
440 116 lineto
440 92 444 72 454 56  curveto
464 40 477 32 494 32  curveto
512 32 526 41 536 61  curveto
538 66 540 72 542 79  curveto
543 86 544 93 546 101  curveto
566 101 lineto
566 101 lineto
closepath
fill
		} def

	/n
		{
475 439 moveto
475 435 473 428 471 418  curveto
468 408 464 397 460 385  curveto
456 372 451 358 445 344  curveto
439 330 433 316 427 304  curveto
412 274 396 243 379 210  curveto
361 177 345 146 330 116  curveto
314 86 301 59 290 35  curveto
278 11 271 -5 269 -16  curveto
232 -16 lineto
64 414 lineto
60 424 56 432 53 437  curveto
50 442 46 446 41 449  curveto
34 452 25 454 15 455  curveto
4 455 -3 456 -9 457  curveto
-9 476 lineto
9 478 23 479 34 480  curveto
45 481 55 483 64 485  curveto
72 487 81 489 89 493  curveto
97 496 108 501 122 507  curveto
280 103 lineto
358 253 lineto
364 265 369 276 373 285  curveto
377 294 379 302 381 309  curveto
383 315 384 321 384 326  curveto
384 330 385 334 385 338  curveto
385 357 382 376 376 396  curveto
370 416 368 433 368 448  curveto
368 452 369 457 371 463  curveto
373 469 376 474 380 480  curveto
384 486 389 490 395 494  curveto
401 498 409 500 419 500  curveto
431 500 443 495 456 485  curveto
468 475 475 460 475 439  curveto
closepath
fill
		} def

	/o
		{
404 223 moveto
404 258 401 289 395 316  curveto
389 342 381 365 372 385  curveto
358 412 341 433 320 447  curveto
299 461 277 469 255 469  curveto
225 469 199 457 175 433  curveto
163 421 152 401 144 375  curveto
135 349 131 315 131 273  curveto
131 249 133 222 138 192  curveto
143 162 154 131 170 99  curveto
181 76 197 57 217 43  curveto
237 29 259 22 283 22  curveto
307 22 329 29 347 45  curveto
365 61 378 82 388 110  curveto
393 125 397 142 400 161  curveto
402 180 404 201 404 223  curveto
closepath
501 241 moveto
501 229 499 215 497 199  curveto
495 183 491 167 485 150  curveto
479 132 470 114 459 96  curveto
448 77 434 59 417 42  curveto
399 24 378 10 353 -1  curveto
328 -13 300 -19 268 -19  curveto
246 -19 226 -16 207 -10  curveto
188 -4 171 1 156 9  curveto
117 37 87 70 66 110  curveto
45 149 35 194 35 244  curveto
35 274 40 305 51 336  curveto
61 366 76 394 96 418  curveto
116 442 140 461 168 476  curveto
196 491 228 499 264 499  curveto
294 499 323 492 352 480  curveto
380 467 407 448 433 423  curveto
449 407 464 383 479 353  curveto
493 323 501 285 501 241  curveto
closepath
fill
		} def

	/p
		{
530 151 moveto
530 131 527 112 522 92  curveto
516 72 509 54 499 38  curveto
489 22 476 9 461 -1  curveto
446 -11 429 -16 410 -16  curveto
391 -16 374 -8 359 8  curveto
343 24 331 48 322 80  curveto
320 84 319 90 318 98  curveto
317 105 316 113 316 121  curveto
315 129 314 136 314 144  curveto
314 152 314 158 314 164  curveto
314 202 316 241 322 281  curveto
327 321 331 361 335 401  curveto
222 401 lineto
215 326 208 263 202 212  curveto
195 160 188 114 181 74  curveto
179 63 177 53 175 44  curveto
173 34 170 26 167 20  curveto
159 4 150 -5 140 -11  curveto
129 -16 119 -19 110 -19  curveto
94 -19 82 -13 72 -2  curveto
62 8 57 20 57 33  curveto
57 47 60 58 68 68  curveto
75 77 83 87 93 99  curveto
101 109 109 119 117 130  curveto
125 141 130 155 132 172  curveto
161 401 lineto
114 401 lineto
103 401 91 398 79 393  curveto
66 387 55 379 47 367  curveto
27 338 lineto
10 338 lineto
24 384 43 421 65 447  curveto
87 473 116 487 152 487  curveto
522 487 lineto
522 401 lineto
396 401 lineto
394 381 392 361 390 340  curveto
388 318 387 297 386 276  curveto
385 255 384 235 384 217  curveto
384 198 384 182 384 169  curveto
384 157 385 146 387 135  curveto
389 124 393 114 399 106  curveto
404 97 411 90 419 84  curveto
427 78 438 76 450 76  curveto
457 76 466 78 476 84  curveto
486 89 494 98 500 110  curveto
502 115 504 121 505 128  curveto
506 135 507 143 508 151  curveto
530 151 lineto
530 151 lineto
closepath
fill
		} def

	/q
		{
144 316 moveto
150 212 lineto
151 187 155 163 162 140  curveto
169 117 178 97 188 79  curveto
198 61 210 47 224 37  curveto
237 26 251 21 265 21  curveto
279 21 292 26 306 38  curveto
319 50 331 65 341 83  curveto
351 101 359 121 366 144  curveto
372 166 376 189 378 211  curveto
384 316 lineto
144 316 lineto
closepath
379 463 moveto
378 471 377 481 375 493  curveto
373 504 370 515 367 527  curveto
364 538 361 549 358 560  curveto
354 570 351 579 347 587  curveto
337 607 324 623 308 636  curveto
292 649 277 656 263 656  curveto
252 656 238 650 222 638  curveto
206 626 193 611 184 593  curveto
179 583 175 573 171 562  curveto
167 550 163 539 160 527  curveto
157 515 155 504 153 493  curveto
151 481 149 472 149 464  curveto
143 368 lineto
385 368 lineto
379 463 lineto
closepath
485 351 moveto
485 296 481 248 473 208  curveto
465 168 455 135 443 110  curveto
435 93 424 77 412 62  curveto
400 46 386 33 370 21  curveto
354 9 338 0 320 -6  curveto
302 -13 284 -17 265 -17  curveto
230 -17 196 -6 164 16  curveto
132 38 106 69 86 109  curveto
72 137 61 170 54 210  curveto
46 250 43 297 43 351  curveto
43 396 46 434 52 465  curveto
58 495 68 523 81 549  curveto
91 569 102 588 116 605  curveto
130 622 145 637 161 650  curveto
177 662 193 672 211 679  curveto
229 686 247 690 265 690  curveto
279 690 294 687 310 681  curveto
326 675 343 667 359 655  curveto
375 643 391 628 407 610  curveto
422 592 436 570 449 546  curveto
461 520 470 491 476 459  curveto
482 427 485 391 485 351  curveto
closepath
fill
		} def

	/r
		{
401 214 moveto
401 248 394 281 382 313  curveto
370 345 353 371 332 393  curveto
298 427 262 444 224 444  curveto
212 444 202 442 194 439  curveto
186 435 179 430 172 423  curveto
158 409 148 395 144 381  curveto
140 367 138 354 138 343  curveto
138 336 138 328 138 320  curveto
138 312 139 305 139 300  curveto
144 116 lineto
144 110 146 102 151 92  curveto
155 82 162 72 172 62  curveto
182 52 194 43 208 36  curveto
222 28 238 25 258 25  curveto
302 25 336 42 362 76  curveto
388 110 401 156 401 214  curveto
closepath
490 252 moveto
490 226 486 201 479 176  curveto
471 151 463 129 454 110  curveto
442 88 429 68 414 52  curveto
399 36 383 22 367 12  curveto
351 2 334 -5 317 -11  curveto
299 -16 283 -19 269 -19  curveto
246 -19 223 -13 199 -3  curveto
175 6 158 21 147 40  curveto
147 -134 lineto
147 -147 146 -162 145 -179  curveto
143 -196 141 -213 137 -230  curveto
50 -230 lineto
51 -217 53 -203 57 -189  curveto
60 -175 62 -157 62 -137  curveto
62 -121 61 -106 61 -92  curveto
61 -78 61 -69 61 -67  curveto
58 200 lineto
58 203 58 208 58 215  curveto
58 221 57 228 57 236  curveto
57 244 57 251 57 259  curveto
57 267 57 274 57 280  curveto
57 308 61 333 70 357  curveto
78 380 92 401 112 421  curveto
123 432 135 442 148 452  curveto
160 462 176 471 194 481  curveto
210 489 223 494 235 496  curveto
247 498 258 499 270 499  curveto
312 499 349 489 383 469  curveto
417 449 445 417 467 373  curveto
474 358 480 340 484 320  curveto
488 300 490 277 490 252  curveto
closepath
fill
		} def

	/s
		{
430 199 moveto
430 239 421 277 405 311  curveto
388 345 359 380 318 414  curveto
288 414 lineto
267 414 247 410 227 402  curveto
207 394 190 383 176 369  curveto
164 357 154 340 146 319  curveto
138 297 134 274 134 248  curveto
134 212 140 177 153 145  curveto
165 113 184 85 208 61  curveto
217 51 229 42 245 33  curveto
261 23 277 19 295 19  curveto
325 19 348 25 366 39  curveto
383 52 397 69 407 89  curveto
415 105 420 121 424 139  curveto
428 156 430 176 430 199  curveto
closepath
371 414 moveto
371 412 lineto
383 408 397 400 411 390  curveto
425 380 439 368 453 355  curveto
466 342 478 328 489 314  curveto
500 300 509 287 515 275  curveto
521 261 526 248 528 236  curveto
530 224 532 211 532 199  curveto
532 179 529 160 523 141  curveto
517 122 509 104 499 87  curveto
488 70 475 54 459 40  curveto
443 26 426 14 407 4  curveto
397 0 387 -4 376 -7  curveto
364 -10 353 -13 341 -15  curveto
329 -17 318 -18 307 -19  curveto
296 -20 287 -21 279 -21  curveto
249 -21 220 -14 193 -2  curveto
165 10 142 26 123 46  curveto
91 78 67 112 52 149  curveto
37 186 30 223 30 261  curveto
30 289 36 317 48 344  curveto
60 370 75 392 93 410  curveto
107 424 124 437 143 448  curveto
162 459 182 468 203 476  curveto
224 484 245 490 267 494  curveto
288 498 308 500 327 500  curveto
588 500 lineto
588 414 lineto
371 414 lineto
closepath
fill
		} def

	/t
		{
264 408 moveto
262 384 261 360 259 334  curveto
257 308 255 284 253 262  curveto
251 239 250 219 249 202  curveto
247 185 247 174 247 170  curveto
247 158 248 147 251 136  curveto
254 124 258 114 264 105  curveto
270 96 277 89 285 83  curveto
293 77 302 74 312 74  curveto
329 74 342 79 352 91  curveto
361 103 367 123 371 152  curveto
390 152 lineto
390 130 389 112 387 98  curveto
385 83 382 70 379 60  curveto
375 49 371 40 366 32  curveto
360 24 355 18 349 12  curveto
337 0 325 -8 312 -12  curveto
299 -16 288 -19 279 -19  curveto
270 -19 261 -17 251 -14  curveto
241 -10 233 -5 226 2  curveto
206 21 194 44 189 72  curveto
184 100 182 127 182 153  curveto
182 187 183 224 187 264  curveto
190 304 195 351 203 407  curveto
113 407 lineto
97 407 82 398 67 381  curveto
52 363 39 340 28 311  curveto
10 311 lineto
19 349 29 379 41 402  curveto
53 425 66 444 82 460  curveto
97 475 114 485 133 491  curveto
151 497 168 500 183 500  curveto
418 500 lineto
418 408 lineto
264 408 lineto
closepath
fill
		} def

	/u
		{
535 243 moveto
535 225 533 208 531 190  curveto
528 172 524 154 518 136  curveto
512 118 505 100 496 84  curveto
486 68 475 53 462 40  curveto
444 22 422 8 395 -2  curveto
368 -12 340 -18 311 -18  curveto
291 -18 271 -15 252 -10  curveto
233 -5 215 5 199 22  curveto
193 27 188 33 184 40  curveto
180 46 175 53 171 61  curveto
160 78 152 96 148 116  curveto
144 136 141 157 141 180  curveto
141 192 141 206 141 224  curveto
141 242 140 260 140 279  curveto
139 298 138 317 137 335  curveto
136 353 135 368 133 382  curveto
128 411 116 426 97 426  curveto
82 426 69 420 58 409  curveto
52 403 47 395 42 384  curveto
36 372 32 363 30 356  curveto
7 356 lineto
9 366 12 377 16 389  curveto
20 401 24 412 28 423  curveto
32 433 37 443 41 452  curveto
45 460 50 467 56 473  curveto
64 481 74 488 86 494  curveto
98 500 111 503 126 503  curveto
134 503 142 501 152 498  curveto
161 495 170 491 178 485  curveto
186 479 192 472 198 464  curveto
204 456 207 446 209 436  curveto
211 422 213 405 215 385  curveto
217 364 219 342 221 318  curveto
223 294 224 269 225 243  curveto
226 217 227 193 227 171  curveto
227 158 228 144 231 130  curveto
233 115 238 101 246 87  curveto
253 71 264 57 278 43  curveto
292 29 307 23 324 23  curveto
335 23 347 25 359 30  curveto
371 35 381 42 390 51  curveto
400 61 410 75 418 91  curveto
426 107 432 124 438 143  curveto
443 162 447 182 450 203  curveto
452 223 454 243 454 263  curveto
454 281 453 300 451 321  curveto
449 341 444 362 436 382  curveto
428 402 417 422 402 441  curveto
386 459 365 476 339 490  curveto
345 507 lineto
371 497 396 484 419 470  curveto
442 455 462 437 479 416  curveto
496 395 510 370 520 342  curveto
530 314 535 281 535 243  curveto
closepath
fill
		} def

	/v
		{
573 221 moveto
573 243 571 262 569 279  curveto
567 296 564 311 560 324  curveto
556 336 552 347 548 357  curveto
544 367 540 376 536 384  curveto
526 402 517 416 508 427  curveto
498 437 489 446 479 453  curveto
469 460 459 466 449 471  curveto
439 476 428 482 418 490  curveto
294 489 lineto
289 486 283 483 276 480  curveto
269 476 262 473 254 469  curveto
246 465 238 460 230 455  curveto
222 449 214 443 208 437  curveto
200 429 192 418 184 406  curveto
176 394 168 379 162 361  curveto
156 343 151 322 147 298  curveto
143 274 141 246 141 214  curveto
141 186 143 161 147 137  curveto
151 113 156 93 164 78  curveto
171 64 180 51 190 40  curveto
200 29 215 24 233 24  curveto
249 24 264 29 279 39  curveto
294 49 306 63 315 81  curveto
319 90 323 101 325 113  curveto
327 125 329 137 331 147  curveto
322 167 315 188 311 209  curveto
307 230 305 254 305 280  curveto
305 308 307 333 311 355  curveto
313 369 319 381 329 392  curveto
339 403 348 409 358 409  curveto
366 409 372 406 378 400  curveto
384 394 388 386 392 376  curveto
396 366 398 356 400 344  curveto
402 332 403 321 403 309  curveto
403 294 402 280 401 268  curveto
399 255 397 243 395 231  curveto
392 219 389 206 386 194  curveto
383 181 380 167 378 152  curveto
378 147 380 138 382 124  curveto
384 110 388 96 395 82  curveto
401 68 411 55 423 44  curveto
435 32 453 27 475 27  curveto
483 27 492 28 502 32  curveto
512 36 520 41 526 47  curveto
530 51 535 58 541 68  curveto
547 77 552 89 557 103  curveto
561 117 565 133 568 153  curveto
571 173 573 195 573 221  curveto
closepath
491 490 moveto
511 483 528 475 543 467  curveto
558 459 571 450 583 440  curveto
594 430 604 418 613 406  curveto
621 393 629 379 637 365  curveto
648 341 656 317 661 291  curveto
666 265 669 240 669 218  curveto
669 193 666 168 661 143  curveto
655 118 648 96 638 76  curveto
629 58 618 44 606 32  curveto
593 20 580 11 566 4  curveto
552 -3 539 -8 525 -12  curveto
511 -15 498 -17 487 -17  curveto
469 -17 452 -13 435 -6  curveto
417 1 403 10 392 22  curveto
385 28 379 37 373 48  curveto
367 58 361 69 356 80  curveto
345 60 334 44 322 32  curveto
310 19 297 9 285 2  curveto
272 -5 260 -10 248 -13  curveto
236 -16 226 -18 216 -18  curveto
196 -18 176 -14 157 -6  curveto
137 1 121 12 107 26  curveto
81 51 63 80 52 113  curveto
40 145 35 184 35 228  curveto
35 242 36 259 38 277  curveto
40 295 44 313 49 331  curveto
54 349 61 366 70 383  curveto
78 400 89 415 101 427  curveto
112 438 125 448 139 458  curveto
153 468 166 477 180 487  curveto
158 485 140 484 127 482  curveto
113 480 101 478 91 475  curveto
81 471 71 467 62 461  curveto
52 455 41 447 28 437  curveto
12 436 lineto
18 455 27 473 38 490  curveto
48 506 60 521 72 534  curveto
84 546 98 556 112 564  curveto
126 571 140 575 154 575  curveto
670 583 lineto
671 495 lineto
491 490 lineto
closepath
fill
		} def

	/w
		{
683 216 moveto
683 187 680 162 675 142  curveto
669 121 662 102 653 84  curveto
637 52 616 27 590 9  curveto
564 -8 536 -17 505 -17  curveto
495 -17 486 -16 476 -14  curveto
466 -12 457 -9 448 -4  curveto
428 5 412 16 399 30  curveto
386 44 374 61 363 82  curveto
350 57 336 38 321 25  curveto
305 12 291 2 278 -4  curveto
267 -9 258 -12 251 -14  curveto
244 -16 234 -17 222 -17  curveto
194 -17 168 -10 146 2  curveto
124 15 105 33 90 55  curveto
74 77 62 102 54 130  curveto
46 158 42 188 42 220  curveto
42 232 42 244 44 258  curveto
45 271 47 284 49 298  curveto
51 312 55 325 59 338  curveto
63 350 67 362 73 373  curveto
84 395 99 416 117 436  curveto
135 455 154 470 176 481  curveto
192 489 210 494 231 496  curveto
252 498 274 500 297 500  curveto
297 483 lineto
280 477 266 471 254 465  curveto
242 459 231 452 222 445  curveto
213 438 205 430 198 421  curveto
191 411 184 400 178 388  curveto
169 370 161 349 155 323  curveto
148 297 145 265 145 227  curveto
145 215 145 203 146 189  curveto
147 175 149 162 151 148  curveto
153 134 155 121 159 109  curveto
162 96 166 85 171 77  curveto
178 61 187 49 199 41  curveto
210 32 224 28 240 28  curveto
256 28 271 32 285 41  curveto
299 50 310 62 318 78  curveto
323 87 327 98 330 110  curveto
333 122 336 135 339 151  curveto
334 165 330 178 326 190  curveto
322 201 319 212 317 222  curveto
315 232 313 243 312 254  curveto
311 264 311 276 311 290  curveto
311 305 311 320 313 335  curveto
315 349 318 362 322 374  curveto
326 386 331 395 338 402  curveto
344 409 353 413 363 413  curveto
373 413 381 409 388 402  curveto
394 395 400 386 404 375  curveto
408 363 410 350 412 336  curveto
414 322 415 307 415 293  curveto
415 279 414 267 413 256  curveto
412 245 410 234 408 223  curveto
406 212 403 201 399 189  curveto
395 177 391 165 387 151  curveto
389 136 392 121 396 107  curveto
400 92 406 79 414 67  curveto
421 55 431 46 443 39  curveto
455 31 471 28 489 28  curveto
501 28 512 31 524 39  curveto
536 47 546 59 554 75  curveto
563 93 570 115 574 143  curveto
578 170 581 199 581 231  curveto
581 283 574 326 560 360  curveto
546 394 531 419 517 434  curveto
504 446 489 457 471 465  curveto
453 473 439 479 429 483  curveto
429 500 lineto
453 500 473 499 490 497  curveto
507 495 522 491 535 487  curveto
548 482 560 476 571 468  curveto
582 460 594 450 606 438  curveto
630 414 648 384 662 350  curveto
676 315 683 270 683 216  curveto
closepath
fill
		} def

	/x
		{
469 -35 moveto
469 -48 467 -63 464 -80  curveto
460 -96 455 -112 448 -126  curveto
430 -160 410 -185 386 -201  curveto
362 -217 337 -225 313 -225  curveto
309 -225 302 -224 293 -223  curveto
283 -222 274 -220 264 -216  curveto
254 -212 246 -207 239 -199  curveto
231 -191 228 -181 228 -168  curveto
228 -160 229 -153 232 -148  curveto
235 -143 239 -139 243 -136  curveto
247 -133 252 -131 257 -130  curveto
261 -129 265 -129 269 -129  curveto
273 -129 279 -129 287 -130  curveto
294 -131 302 -132 310 -133  curveto
318 -134 326 -135 334 -136  curveto
342 -137 350 -138 358 -138  curveto
370 -138 381 -135 391 -129  curveto
401 -123 408 -115 413 -106  curveto
417 -96 420 -85 420 -72  curveto
420 -64 419 -56 417 -48  curveto
415 -40 411 -32 406 -26  curveto
401 -19 394 -14 385 -10  curveto
375 -6 364 -4 350 -4  curveto
342 -4 328 -4 306 -5  curveto
284 -5 259 -6 231 -6  curveto
199 -6 171 -1 146 8  curveto
121 18 102 29 89 43  curveto
69 62 54 86 43 114  curveto
32 142 27 169 27 196  curveto
27 218 30 240 37 262  curveto
44 284 53 306 65 330  curveto
74 348 87 364 103 378  curveto
119 392 136 406 153 420  curveto
137 437 125 454 115 470  curveto
105 486 100 503 100 523  curveto
100 545 103 564 109 579  curveto
115 594 124 607 137 618  curveto
128 620 119 623 111 627  curveto
103 631 95 635 89 641  curveto
82 646 76 653 72 661  curveto
68 669 66 679 66 691  curveto
66 703 69 713 75 722  curveto
81 731 88 739 97 745  curveto
106 751 116 756 126 760  curveto
136 763 145 765 153 765  curveto
156 765 159 765 162 765  curveto
165 765 168 764 171 764  curveto
173 748 lineto
151 740 137 732 129 724  curveto
121 716 117 706 117 695  curveto
117 685 122 675 132 666  curveto
142 657 155 652 171 652  curveto
197 673 222 692 244 708  curveto
266 724 290 732 318 732  curveto
332 732 342 729 349 724  curveto
355 718 359 711 359 702  curveto
359 688 353 676 343 666  curveto
333 656 320 647 304 639  curveto
294 634 285 630 277 627  curveto
269 624 260 622 252 620  curveto
243 618 234 617 225 616  curveto
215 615 205 614 193 614  curveto
171 599 156 583 148 567  curveto
139 550 135 533 135 517  curveto
135 505 138 493 146 482  curveto
154 470 168 456 190 440  curveto
217 453 242 463 265 471  curveto
288 479 312 483 338 483  curveto
358 483 375 480 389 475  curveto
402 470 409 461 409 448  curveto
409 438 405 430 399 424  curveto
392 417 383 411 371 407  curveto
359 403 346 399 331 397  curveto
315 395 299 394 283 394  curveto
267 394 254 395 242 397  curveto
230 399 216 402 202 406  curveto
188 399 175 391 162 381  curveto
148 371 137 362 127 352  curveto
111 336 98 315 88 291  curveto
78 267 73 244 73 223  curveto
73 212 74 202 77 192  curveto
79 182 83 173 88 164  curveto
96 146 109 131 127 118  curveto
144 104 170 97 204 96  curveto
347 91 lineto
369 90 387 86 403 78  curveto
418 70 431 60 441 48  curveto
451 36 458 22 462 8  curveto
466 -6 469 -21 469 -35  curveto
closepath
fill
		} def

	/y
		{
701 470 moveto
687 467 676 464 668 462  curveto
659 459 652 456 647 453  curveto
642 450 638 447 635 444  curveto
632 440 630 436 628 432  curveto
622 422 619 404 619 380  curveto
619 355 617 324 613 286  curveto
611 274 610 260 608 245  curveto
606 230 604 215 601 200  curveto
598 185 595 170 591 156  curveto
587 141 582 128 577 118  curveto
560 84 536 56 505 32  curveto
473 8 434 -7 388 -17  curveto
388 -228 lineto
325 -228 lineto
325 -17 lineto
234 2 171 47 136 118  curveto
128 132 122 149 118 168  curveto
113 187 109 207 106 227  curveto
103 247 101 268 99 289  curveto
97 310 96 330 95 348  curveto
93 368 92 386 92 400  curveto
91 414 89 425 85 433  curveto
80 442 73 449 63 454  curveto
53 459 36 464 12 470  curveto
12 488 lineto
24 493 35 496 47 498  curveto
58 499 69 500 79 500  curveto
105 500 127 493 144 479  curveto
160 465 173 449 182 432  curveto
186 423 189 411 193 397  curveto
196 383 199 367 201 351  curveto
203 334 206 317 208 299  curveto
210 281 212 265 214 250  curveto
218 210 222 177 224 151  curveto
226 125 230 105 238 90  curveto
245 74 256 60 271 48  curveto
285 36 303 27 325 22  curveto
325 487 lineto
388 487 lineto
388 22 lineto
411 28 429 37 443 49  curveto
456 61 466 74 474 88  curveto
482 104 487 123 489 147  curveto
491 171 494 201 498 237  curveto
500 253 502 270 504 289  curveto
506 308 508 327 511 345  curveto
513 363 516 380 520 396  curveto
523 411 527 423 531 432  curveto
541 451 554 467 572 480  curveto
589 493 610 500 634 500  curveto
644 500 654 499 666 498  curveto
677 496 689 493 701 488  curveto
701 470 lineto
701 470 lineto
closepath
fill
		} def

	/z
		{
468 -51 moveto
468 -64 465 -80 461 -100  curveto
456 -120 447 -139 435 -157  curveto
422 -175 405 -191 384 -205  curveto
362 -218 335 -225 303 -225  curveto
293 -225 284 -224 276 -223  curveto
267 -221 259 -219 252 -216  curveto
242 -211 234 -205 227 -197  curveto
220 -189 217 -181 217 -173  curveto
217 -161 221 -150 230 -140  curveto
239 -130 252 -125 270 -125  curveto
276 -125 283 -126 291 -128  curveto
299 -130 308 -132 317 -134  curveto
325 -136 333 -138 341 -140  curveto
349 -142 355 -143 360 -143  curveto
380 -143 396 -134 408 -118  curveto
419 -102 425 -84 425 -66  curveto
425 -50 419 -35 407 -23  curveto
395 -10 376 -4 351 -4  curveto
339 -4 325 -5 308 -7  curveto
291 -9 270 -11 245 -11  curveto
226 -11 208 -7 191 -1  curveto
174 5 159 13 145 23  curveto
131 33 119 43 109 54  curveto
99 65 92 75 88 84  curveto
83 93 79 104 75 116  curveto
71 128 68 141 66 154  curveto
64 166 62 178 61 190  curveto
60 202 60 212 60 220  curveto
60 240 60 258 62 275  curveto
63 291 65 307 68 322  curveto
71 337 75 352 79 366  curveto
83 380 88 395 94 411  curveto
100 430 107 447 114 462  curveto
120 476 128 490 136 503  curveto
144 516 152 529 161 543  curveto
170 556 181 571 193 587  curveto
185 589 176 592 165 596  curveto
154 600 145 603 138 607  curveto
126 612 117 619 111 629  curveto
105 639 102 650 102 664  curveto
102 676 104 687 110 698  curveto
116 708 124 718 134 727  curveto
144 735 155 742 169 747  curveto
182 752 196 755 212 756  curveto
214 738 lineto
194 730 181 720 173 709  curveto
165 698 161 687 161 676  curveto
161 660 165 647 175 636  curveto
185 625 199 618 219 614  curveto
232 626 244 638 255 648  curveto
265 658 276 668 286 676  curveto
296 684 307 691 317 698  curveto
327 704 339 711 352 717  curveto
362 722 370 725 376 727  curveto
382 729 388 730 395 730  curveto
404 730 413 727 421 722  curveto
429 717 433 709 433 697  curveto
433 683 425 669 411 654  curveto
396 638 379 626 359 616  curveto
351 612 344 608 338 605  curveto
331 602 324 599 316 597  curveto
308 595 299 593 289 591  curveto
279 589 268 587 254 586  curveto
238 572 221 552 203 528  curveto
185 504 169 478 155 450  curveto
141 422 129 391 121 359  curveto
112 327 108 292 108 254  curveto
108 233 108 216 110 203  curveto
112 190 116 178 122 166  curveto
133 142 148 124 168 112  curveto
187 100 206 94 226 94  curveto
234 94 244 94 258 95  curveto
272 95 285 96 299 96  curveto
329 96 354 92 376 84  curveto
398 76 416 65 431 51  curveto
445 37 454 20 460 2  curveto
465 -15 468 -33 468 -51  curveto
closepath
fill
		} def

	/braceleft
		{
279 -183 moveto
249 -183 226 -176 210 -163  curveto
194 -150 186 -124 186 -84  curveto
186 121 lineto
186 143 182 161 175 175  curveto
168 188 159 198 147 206  curveto
135 213 122 218 107 222  curveto
91 226 75 229 58 232  curveto
58 258 lineto
76 260 92 263 108 267  curveto
124 271 137 276 149 284  curveto
160 292 169 302 176 316  curveto
182 329 186 347 186 370  curveto
186 571 lineto
186 591 188 608 192 622  curveto
196 635 202 645 210 653  curveto
218 661 228 666 240 669  curveto
252 671 266 673 282 673  curveto
397 673 lineto
397 648 lineto
346 648 lineto
320 648 300 643 284 633  curveto
268 623 261 603 261 574  curveto
261 370 lineto
261 344 254 324 242 309  curveto
229 294 214 282 198 273  curveto
182 264 165 257 149 253  curveto
133 249 121 245 114 242  curveto
124 239 137 236 154 232  curveto
170 228 186 221 202 213  curveto
218 205 231 193 243 179  curveto
255 164 261 144 261 120  curveto
261 -83 lineto
261 -112 268 -132 284 -142  curveto
299 -152 319 -158 345 -158  curveto
397 -158 lineto
397 -183 lineto
279 -183 lineto
closepath
fill
		} def

	/bar
		{
65 -177 moveto
65 673 lineto
135 673 lineto
135 -177 lineto
65 -177 lineto
closepath
fill
		} def

	/braceright
		{
418 232 moveto
400 229 384 226 369 222  curveto
353 218 340 213 328 206  curveto
316 198 307 188 300 175  curveto
293 161 290 143 290 121  curveto
290 -84 lineto
290 -124 282 -150 266 -163  curveto
250 -176 227 -183 197 -183  curveto
79 -183 lineto
79 -158 lineto
131 -158 lineto
156 -158 176 -152 192 -142  curveto
207 -132 215 -112 215 -83  curveto
215 120 lineto
215 144 220 164 232 179  curveto
244 193 257 205 273 213  curveto
289 221 305 228 322 232  curveto
338 236 352 239 362 242  curveto
354 245 342 249 326 253  curveto
310 257 293 264 277 273  curveto
261 282 246 294 234 309  curveto
221 324 215 344 215 370  curveto
215 574 lineto
215 603 207 623 191 633  curveto
175 643 155 648 130 648  curveto
79 648 lineto
79 673 lineto
194 673 lineto
210 673 224 671 236 669  curveto
248 666 258 661 266 653  curveto
274 645 280 635 284 622  curveto
288 608 290 591 290 571  curveto
290 370 lineto
290 347 293 329 300 316  curveto
306 302 315 292 327 284  curveto
338 276 351 271 367 267  curveto
383 263 400 260 418 258  curveto
418 232 lineto
418 232 lineto
closepath
fill
		} def

	/asciitilde
		{
529 283 moveto
516 259 498 241 475 227  curveto
452 213 426 206 396 206  curveto
374 206 353 208 333 214  curveto
313 219 293 225 274 232  curveto
254 238 235 244 217 250  curveto
198 255 179 258 160 258  curveto
148 258 137 256 128 254  curveto
119 252 111 248 103 244  curveto
95 240 88 234 81 227  curveto
74 220 66 212 58 203  curveto
17 228 lineto
29 246 41 260 54 270  curveto
67 280 80 288 93 294  curveto
106 299 119 302 132 304  curveto
144 305 156 306 167 306  curveto
187 306 207 303 225 297  curveto
243 291 262 285 280 279  curveto
298 273 315 267 333 261  curveto
351 255 370 253 390 253  curveto
412 253 431 257 447 266  curveto
463 275 478 289 492 307  curveto
529 283 lineto
529 283 lineto
closepath
fill
		} def

	/exclamdown
		{
610 587 moveto
610 572 608 559 604 549  curveto
600 538 594 529 588 522  curveto
581 515 574 510 566 506  curveto
558 502 551 501 545 501  curveto
537 501 531 502 525 506  curveto
519 510 514 514 510 519  curveto
506 524 502 530 500 536  curveto
498 542 497 547 497 552  curveto
497 562 498 570 502 576  curveto
506 582 510 587 515 592  curveto
519 596 523 601 527 605  curveto
531 609 533 615 533 622  curveto
533 630 528 635 518 639  curveto
508 642 499 644 490 644  curveto
475 644 458 636 438 622  curveto
418 607 401 586 387 558  curveto
379 543 373 528 368 512  curveto
362 496 358 478 354 458  curveto
350 438 348 415 346 391  curveto
344 366 344 338 344 307  curveto
344 297 344 282 344 264  curveto
344 245 344 225 344 203  curveto
344 181 345 160 345 139  curveto
345 117 345 99 345 85  curveto
345 59 351 41 365 32  curveto
378 22 401 18 435 18  curveto
435 0 lineto
151 0 lineto
151 18 lineto
185 18 209 23 222 33  curveto
234 43 241 60 241 84  curveto
241 105 241 125 241 143  curveto
241 161 240 178 240 196  curveto
240 214 240 232 240 251  curveto
240 269 240 290 240 313  curveto
240 325 239 340 238 359  curveto
236 378 234 398 231 419  curveto
228 439 224 460 219 480  curveto
214 500 208 517 201 532  curveto
190 553 177 572 161 589  curveto
145 606 124 619 99 627  curveto
15 654 lineto
3 658 -2 662 -2 667  curveto
-2 667 -1 669 -1 671  curveto
0 673 1 674 5 676  curveto
8 678 13 679 21 681  curveto
29 682 39 683 53 683  curveto
88 683 122 676 155 663  curveto
187 649 218 628 247 600  curveto
260 586 272 567 284 541  curveto
295 515 306 481 318 438  curveto
322 455 327 474 332 494  curveto
336 514 344 536 356 560  curveto
364 576 373 591 383 606  curveto
393 621 404 634 418 646  curveto
431 658 446 667 463 674  curveto
479 681 499 685 521 685  curveto
532 685 543 682 553 676  curveto
563 670 574 662 584 652  curveto
592 644 598 634 603 624  curveto
607 613 610 601 610 587  curveto
closepath
fill
		} def

	/cent
		{
229 679 moveto
229 675 226 671 222 665  curveto
67 469 lineto
65 467 63 464 60 462  curveto
57 459 54 458 51 458  curveto
45 458 39 459 34 463  curveto
29 467 27 471 27 477  curveto
27 481 29 487 33 495  curveto
134 720 lineto
136 724 138 727 142 730  curveto
145 733 152 735 164 735  curveto
172 735 180 733 188 731  curveto
196 729 203 725 209 719  curveto
213 714 217 708 222 700  curveto
226 692 229 685 229 679  curveto
closepath
fill
		} def

	/sterling
		{
29 0 moveto
29 55 lineto
526 55 lineto
526 0 lineto
29 0 lineto
closepath
29 347 moveto
29 409 lineto
526 639 lineto
526 577 lineto
93 378 lineto
526 179 lineto
526 117 lineto
29 347 lineto
closepath
fill
		} def

	/fraction
		{
fill
		} def

	/yen
		{
324 264 moveto
296 287 270 307 244 325  curveto
218 343 192 352 166 352  curveto
151 352 138 349 127 343  curveto
115 337 106 329 99 320  curveto
91 310 86 300 82 290  curveto
78 279 76 269 76 261  curveto
76 235 85 214 103 198  curveto
121 181 144 173 170 173  curveto
181 173 192 174 202 177  curveto
212 179 223 184 237 191  curveto
252 198 267 209 281 223  curveto
295 237 310 250 324 264  curveto
closepath
638 261 moveto
638 271 635 282 631 293  curveto
627 303 621 313 613 322  curveto
605 330 596 337 585 343  curveto
574 349 562 352 550 352  curveto
534 352 519 349 505 343  curveto
491 337 477 330 464 322  curveto
451 313 438 303 426 293  curveto
414 283 402 273 390 264  curveto
407 246 423 231 437 219  curveto
451 206 466 196 480 189  curveto
489 184 499 180 510 177  curveto
520 174 531 173 543 173  curveto
569 173 591 181 610 198  curveto
628 214 638 235 638 261  curveto
closepath
688 267 moveto
688 248 684 230 677 213  curveto
670 195 661 180 649 167  curveto
637 154 622 144 606 136  curveto
590 128 572 125 554 125  curveto
540 125 525 126 511 129  curveto
496 132 481 138 465 146  curveto
449 154 432 164 414 178  curveto
396 192 377 209 357 231  curveto
344 217 333 206 323 197  curveto
313 188 303 180 295 174  curveto
286 168 278 162 270 158  curveto
262 153 255 149 247 145  curveto
235 139 221 134 205 130  curveto
189 126 174 124 161 124  curveto
141 124 123 128 107 136  curveto
91 144 77 154 65 168  curveto
53 181 43 196 36 213  curveto
29 229 26 247 26 265  curveto
26 285 29 303 37 320  curveto
45 336 55 351 68 364  curveto
80 376 95 386 112 393  curveto
129 400 147 404 166 404  curveto
194 404 222 395 252 379  curveto
282 363 317 335 357 297  curveto
369 307 379 317 389 326  curveto
399 334 408 342 417 349  curveto
426 356 435 362 444 368  curveto
452 374 462 379 473 385  curveto
498 397 523 404 548 404  curveto
568 404 586 400 604 392  curveto
621 384 636 374 648 362  curveto
660 349 670 334 677 318  curveto
684 302 688 285 688 267  curveto
closepath
fill
		} def

	/florin
		{
fill
		} def

	/section
		{
660 179 moveto
660 141 650 112 632 91  curveto
613 69 588 59 556 59  curveto
537 59 519 63 503 71  curveto
487 79 473 90 463 102  curveto
453 112 444 121 436 130  curveto
428 138 420 143 414 143  curveto
408 143 403 138 401 129  curveto
399 120 398 108 398 93  curveto
398 79 398 68 399 58  curveto
400 48 402 38 405 29  curveto
408 20 412 11 417 3  curveto
422 -5 429 -15 437 -26  curveto
309 -26 lineto
317 -15 323 -5 328 3  curveto
333 11 337 20 340 29  curveto
343 38 345 48 346 58  curveto
347 68 348 79 348 93  curveto
348 106 347 117 345 127  curveto
343 137 340 142 334 142  curveto
328 142 320 137 310 129  curveto
300 120 292 111 285 103  curveto
275 91 262 81 246 72  curveto
229 63 210 59 190 59  curveto
160 59 135 69 115 89  curveto
95 109 86 139 86 177  curveto
86 195 88 215 94 235  curveto
99 255 107 270 118 281  curveto
126 289 136 296 149 302  curveto
161 308 176 311 194 311  curveto
210 311 224 308 236 304  curveto
248 299 259 294 269 288  curveto
279 282 288 276 296 272  curveto
304 267 313 265 321 265  curveto
326 265 330 266 333 268  curveto
335 270 337 274 337 282  curveto
337 288 335 293 331 297  curveto
327 301 323 304 318 308  curveto
312 312 307 315 301 319  curveto
295 323 289 327 284 333  curveto
274 343 264 356 256 372  curveto
248 388 244 404 244 422  curveto
244 434 246 447 251 461  curveto
256 474 264 486 275 497  curveto
285 507 299 516 315 523  curveto
331 529 351 533 374 533  curveto
396 533 416 529 432 522  curveto
448 515 462 506 472 495  curveto
482 484 490 472 495 459  curveto
499 446 502 434 502 423  curveto
502 413 500 403 498 394  curveto
495 385 492 377 488 369  curveto
484 361 479 355 475 349  curveto
471 343 467 338 464 335  curveto
457 328 450 322 444 318  curveto
437 314 431 310 426 307  curveto
421 303 417 300 414 296  curveto
410 292 409 286 409 280  curveto
409 270 414 265 425 265  curveto
433 265 441 267 450 272  curveto
458 276 467 282 477 288  curveto
487 294 498 299 510 304  curveto
522 308 535 311 551 311  curveto
567 311 582 308 595 302  curveto
608 296 619 289 628 281  curveto
638 270 646 255 652 235  curveto
657 215 660 196 660 179  curveto
closepath
fill
		} def

	/currency
		{
-124 -12 moveto
-180 -12 lineto
284 677 lineto
340 677 lineto
-124 -12 lineto
closepath
fill
		} def

	/quotesingle
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/quotedblleft
		{
fill
		} def

	/guillemotleft
		{
1024 248 moveto
984 212 944 174 904 132  curveto
864 90 821 41 775 -15  curveto
738 17 lineto
756 43 773 66 789 86  curveto
805 106 820 125 834 141  curveto
848 157 861 172 873 185  curveto
885 198 897 210 909 222  curveto
139 222 lineto
161 200 179 180 195 163  curveto
210 146 224 130 236 115  curveto
248 99 260 84 272 68  curveto
283 52 296 35 310 17  curveto
273 -15 lineto
241 23 204 64 164 110  curveto
124 156 77 202 24 248  curveto
56 276 84 303 108 327  curveto
132 351 153 373 172 394  curveto
191 415 209 435 225 454  curveto
241 473 257 492 273 511  curveto
310 479 lineto
296 458 282 440 270 424  curveto
258 408 245 392 233 377  curveto
220 361 206 345 191 329  curveto
176 313 159 294 139 274  curveto
909 274 lineto
897 286 885 299 873 311  curveto
861 323 848 337 834 353  curveto
820 369 806 387 790 407  curveto
774 427 757 451 738 479  curveto
775 511 lineto
795 486 815 462 834 440  curveto
853 418 872 396 892 375  curveto
912 354 932 333 954 312  curveto
975 291 998 270 1024 248  curveto
closepath
fill
		} def

	/guilsinglleft
		{
fill
		} def

	/guilsinglright
		{
fill
		} def

	/fi
		{
fill
		} def

	/fl
		{
fill
		} def

	/endash
		{
fill
		} def

	/dagger
		{
fill
		} def

	/daggerdbl
		{
fill
		} def

	/periodcentered
		{
411 293 moveto
411 267 406 244 397 222  curveto
387 200 374 181 358 165  curveto
342 149 323 136 301 127  curveto
279 117 255 113 231 113  curveto
205 113 182 117 160 127  curveto
138 136 119 149 103 165  curveto
87 181 74 200 65 222  curveto
55 244 51 267 51 293  curveto
51 317 55 341 65 363  curveto
74 385 87 404 103 420  curveto
119 436 138 449 160 459  curveto
182 468 205 473 231 473  curveto
255 473 279 468 301 459  curveto
323 449 342 436 358 420  curveto
374 404 387 385 397 363  curveto
406 341 411 317 411 293  curveto
closepath
fill
		} def

	/paragraph
		{
366 299 moveto
352 316 338 331 322 344  curveto
306 356 285 363 261 363  curveto
233 363 210 354 190 338  curveto
170 322 153 300 140 273  curveto
128 249 121 227 117 206  curveto
113 185 112 164 112 144  curveto
112 127 113 112 115 98  curveto
117 84 121 71 127 60  curveto
134 44 144 32 158 23  curveto
171 13 186 9 204 9  curveto
221 9 240 15 261 29  curveto
281 42 299 63 313 91  curveto
325 115 335 145 344 181  curveto
353 217 360 256 366 299  curveto
closepath
462 395 moveto
462 379 461 359 459 336  curveto
457 313 453 289 448 263  curveto
443 237 437 212 429 186  curveto
421 160 412 136 402 114  curveto
393 96 385 81 377 69  curveto
369 56 360 45 350 35  curveto
335 20 316 7 292 -4  curveto
268 -15 243 -21 215 -21  curveto
196 -21 178 -18 161 -13  curveto
144 -7 128 0 114 9  curveto
99 18 86 29 75 41  curveto
63 53 54 67 48 81  curveto
33 110 26 141 26 174  curveto
26 204 32 235 44 267  curveto
56 298 74 325 98 349  curveto
114 365 132 378 151 388  curveto
169 397 192 402 219 402  curveto
239 402 257 399 273 395  curveto
288 390 301 384 313 377  curveto
325 370 335 363 345 355  curveto
355 347 364 340 374 334  curveto
377 351 380 370 382 391  curveto
384 412 385 432 385 451  curveto
385 462 384 475 382 491  curveto
380 506 377 521 374 537  curveto
370 553 366 567 362 581  curveto
358 595 354 606 350 615  curveto
344 626 336 638 325 652  curveto
313 666 299 677 281 687  curveto
271 691 260 695 248 697  curveto
236 699 223 700 210 700  curveto
188 700 170 696 154 689  curveto
138 681 122 674 104 667  curveto
65 717 lineto
97 730 124 738 147 741  curveto
169 743 186 745 196 745  curveto
239 745 280 733 320 709  curveto
360 685 394 646 422 591  curveto
428 579 433 566 438 550  curveto
442 534 446 518 450 501  curveto
454 483 457 465 459 447  curveto
461 429 462 411 462 395  curveto
closepath
fill
		} def

	/bullet
		{
fill
		} def

	/quotesinglbase
		{
fill
		} def

	/quotedblbase
		{
fill
		} def

	/quotedblright
		{
fill
		} def

	/guillemotright
		{
527 219 moveto
519 205 509 193 498 183  curveto
486 173 474 164 462 158  curveto
449 152 436 147 424 144  curveto
411 141 399 140 387 140  curveto
373 140 359 142 345 146  curveto
206 186 lineto
195 189 187 191 181 192  curveto
175 193 166 194 156 194  curveto
131 194 112 189 98 179  curveto
84 169 71 154 57 135  curveto
14 162 lineto
32 185 52 204 76 219  curveto
99 233 127 241 160 241  curveto
168 241 177 240 187 238  curveto
197 236 205 235 213 233  curveto
356 193 lineto
362 191 366 190 370 190  curveto
373 189 378 189 385 189  curveto
405 189 425 193 444 203  curveto
463 213 478 226 490 243  curveto
527 219 lineto
527 219 lineto
closepath
527 370 moveto
519 356 509 344 498 334  curveto
486 324 474 315 462 309  curveto
449 303 436 298 424 295  curveto
411 292 399 291 387 291  curveto
373 291 359 293 345 297  curveto
206 337 lineto
195 340 187 342 181 343  curveto
175 344 166 345 156 345  curveto
131 345 112 340 98 330  curveto
84 320 71 305 57 286  curveto
14 313 lineto
32 336 52 355 76 370  curveto
99 384 127 392 160 392  curveto
168 392 177 391 187 389  curveto
197 387 205 386 213 384  curveto
356 344 lineto
362 342 366 341 370 341  curveto
373 340 378 340 385 340  curveto
405 340 425 344 444 354  curveto
463 364 478 377 490 394  curveto
527 370 lineto
527 370 lineto
closepath
fill
		} def

	/ellipsis
		{
fill
		} def

	/perthousand
		{
fill
		} def

	/questiondown
		{
181 68 moveto
181 -16 lineto
15 96 lineto
181 207 lineto
181 123 lineto
547 123 lineto
547 629 lineto
602 629 lineto
602 68 lineto
181 68 lineto
closepath
fill
		} def

	/grave
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/acute
		{
fill
		} def

	/circumflex
		{
fill
		} def

	/tilde
		{
fill
		} def

	/macron
		{
571 229 moveto
523 189 476 147 432 104  curveto
388 60 346 18 308 -22  curveto
267 20 224 63 180 107  curveto
135 150 90 191 45 229  curveto
80 264 lineto
92 253 108 240 126 226  curveto
144 211 163 196 182 180  curveto
201 164 219 148 237 133  curveto
254 117 268 104 280 93  curveto
280 888 lineto
336 888 lineto
336 93 lineto
346 104 360 117 378 133  curveto
395 148 413 164 432 180  curveto
451 196 470 211 488 226  curveto
506 240 522 253 536 264  curveto
571 229 lineto
571 229 lineto
closepath
fill
		} def

	/breve
		{
fill
		} def

	/dotaccent
		{
fill
		} def

	/dieresis
		{
374 -36 moveto
142 257 lineto
374 550 lineto
600 257 lineto
374 -36 lineto
closepath
fill
		} def

	/ring
		{
fill
		} def

	/cedilla
		{
324 127 moveto
324 111 318 98 307 87  curveto
296 76 283 71 268 71  curveto
252 71 239 76 228 87  curveto
217 98 212 111 212 127  curveto
212 142 217 155 228 166  curveto
239 177 252 183 268 183  curveto
283 183 296 177 307 166  curveto
318 155 324 142 324 127  curveto
closepath
10 236 moveto
10 291 lineto
536 291 lineto
536 236 lineto
10 236 lineto
closepath
324 400 moveto
324 384 318 371 307 360  curveto
296 349 283 344 268 344  curveto
252 344 239 349 228 360  curveto
217 371 212 384 212 400  curveto
212 415 217 428 228 439  curveto
239 450 252 456 268 456  curveto
283 456 296 450 307 439  curveto
318 428 324 415 324 400  curveto
closepath
fill
		} def

	/hungarumlaut
		{
fill
		} def

	/ogonek
		{
fill
		} def

	/caron
		{
fill
		} def

	/emdash
		{
fill
		} def

	/AE
		{
726 350 moveto
726 388 719 425 706 460  curveto
692 494 674 526 650 554  curveto
212 112 lineto
239 88 270 70 304 57  curveto
338 44 374 38 414 38  curveto
456 38 497 46 535 62  curveto
573 78 606 101 634 129  curveto
662 157 685 190 701 228  curveto
717 266 726 306 726 350  curveto
closepath
614 589 moveto
587 611 556 629 522 642  curveto
488 655 452 662 414 662  curveto
370 662 330 653 292 637  curveto
254 621 221 598 193 570  curveto
165 542 142 509 126 471  curveto
110 433 102 392 102 350  curveto
102 312 108 276 121 242  curveto
133 208 151 178 175 150  curveto
614 589 lineto
614 589 lineto
closepath
781 350 moveto
781 299 771 251 752 207  curveto
732 162 706 123 673 90  curveto
640 57 601 31 557 12  curveto
512 -7 464 -17 414 -17  curveto
367 -17 323 -9 283 7  curveto
242 23 205 45 173 74  curveto
76 -24 lineto
39 13 lineto
136 111 lineto
108 143 86 180 70 220  curveto
54 260 47 304 47 350  curveto
47 400 56 448 76 493  curveto
95 537 121 576 155 609  curveto
188 642 227 668 271 688  curveto
315 707 363 717 414 717  curveto
464 717 508 708 548 692  curveto
587 675 622 654 654 628  curveto
744 719 lineto
780 684 lineto
689 593 lineto
717 561 740 524 756 482  curveto
772 440 781 396 781 350  curveto
closepath
fill
		} def

	/ordfeminine
		{
629 134 moveto
629 121 627 108 623 95  curveto
619 81 614 69 606 59  curveto
598 48 588 39 576 32  curveto
564 25 549 22 533 22  curveto
513 22 497 27 486 39  curveto
474 50 465 63 458 77  curveto
451 91 445 103 441 115  curveto
436 126 430 132 422 132  curveto
416 132 410 127 405 118  curveto
400 109 398 95 398 76  curveto
398 57 400 38 406 20  curveto
411 1 421 -17 437 -36  curveto
305 -36 lineto
320 -17 330 1 336 20  curveto
341 38 344 57 344 76  curveto
344 95 341 109 336 118  curveto
331 127 326 132 320 132  curveto
312 132 305 126 301 115  curveto
296 103 290 91 283 77  curveto
276 63 267 50 256 39  curveto
244 27 229 22 209 22  curveto
192 22 178 25 166 32  curveto
154 39 144 48 136 59  curveto
128 69 122 81 118 95  curveto
114 108 113 121 113 134  curveto
113 147 114 160 118 174  curveto
122 188 126 200 132 212  curveto
137 222 147 238 163 258  curveto
178 278 197 302 219 331  curveto
241 359 265 392 291 428  curveto
317 464 343 504 371 548  curveto
397 504 424 464 450 428  curveto
476 392 501 359 523 331  curveto
545 302 563 278 579 258  curveto
594 238 604 222 610 212  curveto
615 200 619 188 623 174  curveto
627 160 629 147 629 134  curveto
closepath
fill
		} def

	/Lslash
		{
fill
		} def

	/Oslash
		{
625 0 moveto
625 233 lineto
15 233 lineto
15 288 lineto
680 288 lineto
680 0 lineto
625 0 lineto
closepath
fill
		} def

	/OE
		{
fill
		} def

	/ordmasculine
		{
14 82 moveto
14 137 lineto
538 137 lineto
538 82 lineto
14 82 lineto
closepath
14 235 moveto
14 290 lineto
538 290 lineto
538 235 lineto
14 235 lineto
closepath
14 388 moveto
14 443 lineto
538 443 lineto
538 388 lineto
14 388 lineto
closepath
fill
		} def

	/ae
		{
436 916 moveto
416 904 397 890 378 874  curveto
358 858 341 843 325 827  curveto
309 811 293 792 277 771  curveto
261 750 245 727 231 703  curveto
216 678 202 652 189 625  curveto
176 597 165 569 156 541  curveto
145 509 136 475 128 440  curveto
120 405 113 370 108 335  curveto
102 300 98 266 96 232  curveto
93 198 92 166 92 136  curveto
92 -293 lineto
40 -293 lineto
40 134 lineto
40 192 42 245 47 294  curveto
52 343 59 388 68 430  curveto
77 471 88 509 100 544  curveto
112 578 126 611 142 642  curveto
160 678 178 710 198 738  curveto
218 766 239 792 262 815  curveto
284 837 309 858 336 876  curveto
362 894 391 910 423 926  curveto
436 916 lineto
436 916 lineto
closepath
fill
		} def

	/dotlessi
		{
fill
		} def

	/lslash
		{
fill
		} def

	/oslash
		{
450 503 moveto
450 441 447 386 442 336  curveto
437 286 430 240 421 199  curveto
412 157 401 120 389 86  curveto
376 52 362 20 348 -9  curveto
326 -52 304 -89 282 -119  curveto
259 -149 236 -174 212 -196  curveto
188 -218 164 -236 140 -251  curveto
116 -266 91 -280 67 -293  curveto
54 -283 lineto
72 -271 91 -257 111 -242  curveto
131 -226 151 -208 171 -187  curveto
191 -166 210 -142 230 -114  curveto
250 -86 269 -54 288 -17  curveto
306 21 321 56 333 90  curveto
344 124 354 161 364 203  curveto
368 225 373 248 377 273  curveto
381 298 385 323 388 349  curveto
391 374 393 399 395 424  curveto
397 448 398 472 398 494  curveto
398 926 lineto
450 926 lineto
450 503 lineto
450 503 lineto
closepath
fill
		} def

	/oe
		{
fill
		} def

	/germandbls
		{
572 230 moveto
540 205 513 182 489 161  curveto
465 139 442 119 422 99  curveto
402 79 382 60 364 41  curveto
346 21 327 1 308 -19  curveto
268 23 228 65 187 105  curveto
146 145 98 186 44 230  curveto
77 271 lineto
175 194 lineto
175 890 lineto
228 890 lineto
228 146 lineto
308 65 lineto
388 146 lineto
388 890 lineto
441 890 lineto
441 194 lineto
539 271 lineto
572 230 lineto
572 230 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/MaplePi exch definefont pop
/MaplePi findfont 20.0 scalefont setfont
(w) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
46 345
-5.0 -5.0 translate
48.0 364.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 95 340 OPL
95 345
-5.0 -5.0 translate
96.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1) show
Q
5.0 5.0 translate
Q
q
1 143 340 OPL
143 345
-5.0 -5.0 translate
145.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 192 340 OPL
192 345
-5.0 -5.0 translate
193.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
5.0 5.0 translate
Q
q
1 240 340 OPL
240 345
-5.0 -5.0 translate
242.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 289 340 OPL
289 345
-5.0 -5.0 translate
290.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(5) show
Q
5.0 5.0 translate
Q
q
1 337 340 OPL
337 345
-5.0 -5.0 translate
339.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
q
1 386 340 OPL
386 345
-5.0 -5.0 translate
387.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(7) show
Q
5.0 5.0 translate
Q
Q
q
1 46 41 OPL
43 41
1 46 108 OPL
43 108
1 46 174 OPL
43 174
1 46 240 OPL
43 240
1 46 307 OPL
43 307
1 46 340 OPL
46 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
0 163 16 23 rc
4.0 182.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(z) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
40 340
-5.0 -5.0 translate
35.0 350.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 46 274 OPL
40 274
-5.0 -5.0 translate
26.0 283.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 46 207 OPL
40 207
-5.0 -5.0 translate
26.0 217.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 46 141 OPL
40 141
-5.0 -5.0 translate
26.0 150.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
q
1 46 74 OPL
40 74
-5.0 -5.0 translate
26.0 84.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 46 8 OPL
40 8
-5.0 -5.0 translate
26.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 815 1909 a
  {
 815 1909 a Fi(z)815
1909 y
  } 0/Place PSfrag
 815 1909 a 794 2126 a
  {
 794 2126 a Fi(!)794 2126
y
  } 1/Place PSfrag
 794 2126 a 0 2426 a Fu(Figure)j(4:)47 b(The)35 b(b)s(oundary)g(of)f
(con)m(v)m(ergence)k(of)c(the)h(generating)g(function)g(as)f(a)h
(function)g(of)f Fr(!)k Fu(when)0 2642 y(the)27 b(force)g(is)g(applied)
h(in)f(the)g Fr(x)p Fu(-direction.)43 b(The)27 b(rectangular)g(h)m(yp)s
(erb)s(ola)h(is)f(indep)s(enden)m(t)i(of)d(the)i(v)-5
b(alue)0 2859 y(of)38 b Fr(h)p Fu(.)60 b(The)39 b(three)g(curv)m(es)h
(with)f(p)s(oin)m(ts)g(mark)m(ed)g(corresp)s(ond)g(to)f
Fr(h)g Fu(=)f(1)h(\(top)f(curv)m(e\),)42 b Fr(h)37 b
Fu(=)g(1)p Fr(:)p Fu(5)h(and)0 3076 y Fr(h)28 b Fu(=)f(2)p
Fr(:)p Fu(0.)0 3341 y Ft(5)161 b(Extension)52 b(under)g(a)j(\014xed)d
(horizon)l(tal)g(force)0 3561 y Fu(W)-8 b(e)27 b(shall)g(no)m(w)h
(consider)g(the)f(a)m(v)m(erage)h(extension)g(of)f(the)g(p)s(olymer)g
(as)g(a)g(function)g(of)f(the)h(applied)h(force)0 3681
y(at)k(di\013eren)m(t)i(temp)s(eratures.)146 3801 y(F)-8
b(rom)33 b(Section)h(3)f(w)m(e)h(kno)m(w)g(that)f Fr(\024)p
Fu(\()p Fr(f)1580 3816 y Fp(x)1624 3801 y Fr(;)17 b Fu(0)p
Fr(;)g(\014)6 b Fu(\))32 b(is)i(a)f(con)m(tin)m(uous)i(function)e(of)g
Fr(\014)39 b Fu(and)33 b Fr(f)3388 3816 y Fp(x)3432 3801
y Fu(.)45 b(Moreo)m(v)m(er)0 3922 y(for)34 b(an)m(y)g(\014xed)i
Fr(f)622 3937 y Fp(x)700 3922 y Fu(the)e(free)h(energy)g
Fr(\024)p Fu(\()p Fr(f)1513 3937 y Fp(x)1557 3922 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))32 b(is)j(analytic)g(for)e(0)d
Fr(<)g(\014)36 b(<)30 b Fq(1)k Fu(except)i(at)d(at)h(most)h(one)0
4042 y(p)s(oin)m(t)i(whic)m(h)i(w)m(e)f(lab)s(el)f Fr(\014)992
4006 y Fp(t)1022 4042 y Fu(\()p Fr(f)1108 4057 y Fp(x)1151
4042 y Fu(\))g(when)i(it)e(exists.)59 b(This)38 b(transition)f(p)s(oin)
m(t)h(is)f(de\014ned)i(\(see)f(Ow)m(czarek)0 4162 y(and)33
b(Prellb)s(erg)g(2007\))f(via)1602 4357 y Fr(!)1663 4372
y Fp(t)1720 4357 y Fu(=)1824 4216 y Fl(\022)1908 4289
y Fr(!)1969 4304 y Fp(t)2020 4289 y Fu(+)22 b Fr(h)p
1907 4334 269 4 v 1907 4425 a(!)1968 4440 y Fp(t)2019
4425 y Fq(\000)h Fr(h)2185 4216 y Fl(\023)2259 4238 y
Fk(2)3699 4357 y Fu(\(5.1\))0 4596 y(recalling)41 b(that)g
Fr(h)h Fu(=)f Fr(e)878 4560 y Fp(\014)s(f)955 4568 y
Fm(x)998 4596 y Fu(.)69 b(Similarly)41 b(the)h(free)f(energy)h
Fr(\024)p Fu(\()p Fr(f)2350 4611 y Fp(x)2394 4596 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))39 b(is)i(an)g(analytic)g(function)h(of)
e Fr(f)3856 4611 y Fp(x)0 4716 y Fu(except)34 b(at)e(the)g(solutions)h
(of)f Fr(\014)1171 4680 y Fp(t)1200 4716 y Fu(\()p Fr(f)1286
4731 y Fp(x)1330 4716 y Fr(;)17 b Fu(0\))27 b(=)h Fr(\014)6
b Fu(.)43 b(Consideration)33 b(of)f(the)g(equation)h(\(5.1\))f(implies)
i(there)e(is)0 4837 y(a)h(single)h(solution.)47 b(Let)33
b(the)h(solution)g(for)f(this)h(`critical)g(force')f(b)s(e)h(lab)s
(elled)g Fr(f)2989 4800 y Fp(t)2978 4861 y(x)3055 4837
y Fu(and)g(so)f(b)m(y)h(\(5.1\))f(it)g(is)0 4957 y(giv)m(en)h(b)m(y)f
(the)g(function)1357 5138 y Fr(f)1416 5097 y Fp(t)1405
5163 y(x)1477 5138 y Fu(=)1596 5071 y(1)p 1590 5115 61
4 v 1590 5206 a Fr(\014)1677 5138 y Fu(log)1820 4998
y Fl(\022)1979 5071 y Fr(e)2024 5034 y Fp(\014)s(=)p
Fk(2)2164 5071 y Fq(\000)23 b Fu(1)p 1903 5115 486 4
v 1903 5206 a Fr(e)1948 5178 y Fj(\000)p Fp(\014)s(=)p
Fk(2)2143 5206 y Fu(+)f Fr(e)2286 5178 y Fj(\000)p Fp(\014)2398
4998 y Fl(\023)2516 5138 y Fr(;)1156 b Fu(\(5.2\))0 5372
y(whic)m(h)32 b(is)e(the)g(result)h(\(11\))f(of)f(Rosa)h
Fs(et)j(al)c Fu(\(2003\).)42 b(In)30 b(Figure)g(5)g(w)m(e)h(plot)f(the)
g(critical)h(force)f Fr(f)3533 5336 y Fp(t)3522 5397
y(x)3596 5372 y Fu(against)1901 5682 y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 100 a Fu(in)m(v)m(erse)41 b(temp)s(erature)f
Fr(\014)6 b Fu(.)63 b(W)-8 b(e)39 b(note)g(that)g(for)g
Fr(\014)44 b(<)38 b(\014)2087 63 y Fp(t)2117 100 y Fu(\(0)p
Fr(;)17 b Fu(0\))37 b Fq(\031)i Fu(1)p Fr(:)p Fu(218)g(\(equiv)-5
b(alen)m(tly)41 b Fr(T)3407 63 y Fp(t)3475 100 y Fq(\031)e
Fu(0)p Fr(:)p Fu(8205\))0 220 y(there)f(is)f(no)g(\(p)s(ositiv)m(e\))h
(critical)f(force,)i(and)e(that)f(for)h Fr(\014)j Fq(\025)c
Fr(\014)2367 184 y Fp(t)2396 220 y Fu(\(0)p Fr(;)17 b
Fu(0\))36 b(there)h(is)h(a)e(single)i(critical)g(force)0
340 y Fr(f)59 304 y Fp(t)48 365 y(x)92 340 y Fu(.)887
2606 y
 /PSfrag where{pop(bbb)[[0(Bl)1 0]](fxt)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2606 a @beginspecial 20 @llx 118 @lly 575
@urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/fT.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:32:00 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
58.0 6.017493 324.981812 338.982513 rc
49 59 64 OPL
59 64
60 64
60 64
60 64
61 64
62 64
63 64
64 64
66 64
69 64
72 64
79 64
86 64
93 65
99 65
106 67
113 69
119 71
126 75
133 78
140 83
146 88
153 94
159 100
167 107
173 113
180 121
186 128
193 137
200 145
207 154
213 162
220 172
227 182
233 191
240 201
247 212
253 222
260 233
267 245
274 256
281 267
287 278
294 290
300 302
307 314
314 326
321 339
327 352
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 349 344 OPL
349 346
1 284 344 OPL
284 346
1 220 344 OPL
220 346
1 156 344 OPL
156 346
1 91 344 OPL
91 346
1 59 344 OPL
381 344
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
200 367 38 23 rc
204.0 386.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(bbb) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
59 349
-5.0 -5.0 translate
61.0 368.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 123 344 OPL
123 349
-5.0 -5.0 translate
121.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 188 344 OPL
188 349
-5.0 -5.0 translate
185.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 252 344 OPL
252 349
-5.0 -5.0 translate
250.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 317 344 OPL
317 349
-5.0 -5.0 translate
314.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 381 344 OPL
381 349
-5.0 -5.0 translate
378.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
Q
q
1 59 36 OPL
56 36
1 59 92 OPL
56 92
1 59 148 OPL
56 148
1 59 204 OPL
56 204
1 59 260 OPL
56 260
1 59 316 OPL
56 316
1 59 344 OPL
59 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
1 165 29 23 rc
5.0 184.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(fxt) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
53 344
-5.0 -5.0 translate
48.0 354.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 59 288 OPL
53 288
-5.0 -5.0 translate
39.0 298.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 59 232 OPL
53 232
-5.0 -5.0 translate
39.0 242.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 59 176 OPL
53 176
-5.0 -5.0 translate
39.0 186.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 59 120 OPL
53 120
-5.0 -5.0 translate
39.0 130.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 59 64 OPL
53 64
-5.0 -5.0 translate
39.0 74.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
q
1 59 8 OPL
53 8
-5.0 -5.0 translate
39.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.2) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2606 a
 /End PSfrag
 887 2606 a 887 2064 a
 /Hide PSfrag
 887 2064
a 18 2133 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 2169
869 4 v 887 2173 a
 /Unhide PSfrag
 887 2173 a 704 2366 a
  {
 704 2366 a Ff(\014)777
2323 y Fd(\000)p Fb(1)704 2366 y
  } 0/Place PSfrag
 704 2366 a 778 2576
a
  {
 778 2576 a Ff(f)849 2533 y Fe(t)836 2606 y(x)778 2576
y
  } 1/Place PSfrag
 778 2576 a 0 2906 a Fu(Figure)45 b(5:)68 b(The)46 b(temp)s(erature)f
(dep)s(endence)j(of)c(the)i(critical)f(force)g(for)g(horizon)m(tal)g
(pulling)g(in)h(the)0 3122 y Fr(n)28 b Fq(!)f(1)j Fu(limit.)44
b(When)31 b(the)g(force)g(is)g(less)h(than)f(the)g(critical)g(force)g
(the)g(w)m(alk)g(is)g(compact)h(and)e(when)i(it)0 3339
y(is)h(greater)g(than)f(the)h(critical)g(force)g(it)g(is)g(expanded.)
146 3569 y(F)-8 b(or)32 b Fr(\014)382 3533 y Fp(t)411
3569 y Fu(\()p Fr(f)497 3584 y Fp(x)541 3569 y Fr(;)17
b Fu(0\))27 b Fq(\024)h Fr(\014)39 b Fu(w)m(e)33 b(ha)m(v)m(e)h
Fr(z)1311 3584 y Fp(c)1346 3569 y Fu(\()p Fr(h;)17 b
Fu(1)p Fr(;)g(!)t Fu(\))26 b(=)i(1)p Fr(=!)35 b Fu(and)e(so)1377
3787 y Fr(\024)p Fu(\()p Fr(f)1519 3802 y Fp(x)1563 3787
y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))27 b(=)g Fr(\014)136
b Fu(for)32 b Fr(\014)h Fq(\024)28 b Fr(\014)1182 b Fu(\(5.3\))0
4005 y(F)-8 b(or)34 b(0)d Fr(<)g(\014)37 b Fq(\024)32
b Fr(\014)626 3968 y Fp(t)655 4005 y Fu(\()p Fr(f)741
4020 y Fp(x)785 4005 y Fr(;)17 b Fu(0\))34 b(w)m(e)i(kno)m(w)g(that)f
Fr(z)1612 4020 y Fp(c)1647 4005 y Fu(\()p Fr(p;)17 b
Fu(1)p Fr(;)g(!)t Fu(\))33 b(is)i(a)f(strictly)i(decreasing)g(function)
g(of)e Fr(\014)6 b Fu(,)35 b(and)g(so)0 4125 y Fr(\024)p
Fu(\()p Fr(f)142 4140 y Fp(x)186 4125 y Fr(;)17 b Fu(0)p
Fr(;)g(\014)6 b Fu(\))29 b(is)h(a)g(strictly)h(increasing)g(function)f
(of)g Fr(\014)6 b Fu(.)42 b(Near)30 b(the)g(transition)g(w)m(e)h(kno)m
(w)g(from)f(Ow)m(czarek)0 4245 y(and)j(Prellb)s(erg)g(\(2007\))f(\(see)
h(the)g(discussion)i(after)d(equation)i(\(3.9\)\))e(that)969
4463 y Fr(\024)p Fu(\()p Fr(f)1111 4478 y Fp(x)1155 4463
y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))21 b Fq(\000)i
Fr(\014)33 b Fq(\030)28 b Fr(C)7 b Fu(\()p Fr(\014)1881
4422 y Fp(t)1932 4463 y Fq(\000)23 b Fr(\014)6 b Fu(\))2131
4422 y Fk(3)p Fp(=)p Fk(2)2370 4463 y Fu(as)33 b Fr(\014)h
Fq(!)27 b Fu(\()p Fr(\014)2805 4422 y Fp(t)2834 4463
y Fu(\))2872 4422 y Fj(\000)3699 4463 y Fu(\(5.4\))0
4681 y(and)33 b(similarly)933 4801 y Fr(\024)p Fu(\()p
Fr(f)1075 4816 y Fp(x)1119 4801 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))20 b Fq(\000)j Fr(\014)33 b Fq(\030)c Fr(D)s
Fu(\()p Fr(f)1839 4816 y Fp(x)1904 4801 y Fq(\000)23
b Fr(f)2063 4760 y Fp(t)2052 4826 y(x)2096 4801 y Fu(\))2134
4760 y Fk(3)p Fp(=)p Fk(2)2374 4801 y Fu(as)33 b Fr(f)2542
4816 y Fp(x)2613 4801 y Fq(!)28 b Fu(\()p Fr(f)2838 4760
y Fp(t)2827 4826 y(x)2870 4801 y Fu(\))2908 4760 y Fk(+)3699
4801 y Fu(\(5.5\))0 4975 y(for)k(some)h(constan)m(ts)h
Fr(C)40 b Fu(and)33 b Fr(D)s Fu(.)146 5095 y(F)-8 b(or)30
b(0)e Fr(<)f(\014)34 b(<)27 b(\014)752 5059 y Fp(t)781
5095 y Fu(\()p Fr(f)867 5110 y Fp(x)911 5095 y Fr(;)17
b Fu(0\),)31 b(the)g(singularit)m(y)h(in)f Fr(z)36 b
Fu(closest)c(to)f(the)g(origin)g(in)2941 5070 y(^)2919
5095 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g Fu(1)p
Fr(;)g(!)t Fu(\))30 b(is)h(a)f(simple)0 5215 y(p)s(ole.)44
b(F)-8 b(rom)32 b(this)h(w)m(e)g(deduce)i(that)828 5433
y Fr(Z)895 5448 y Fp(n)942 5433 y Fu(\()p Fr(f)1028 5448
y Fp(x)1071 5433 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))27
b(=)g Fr(e)1482 5392 y Fp(\024)p Fk(\()p Fp(f)1584 5400
y Fm(x)1624 5392 y Fp(;)p Fk(0)p Fp(;\014)s Fk(\))p Fp(n)p
Fk(+)p Fp(O)r Fk(\(1\))2146 5433 y Fu(for)32 b(0)c Fr(<)f(\014)33
b(<)28 b(\014)2728 5392 y Fp(t)2757 5433 y Fu(\()p Fr(f)2843
5448 y Fp(x)2887 5433 y Fr(;)17 b Fu(0\))27 b Fr(:)627
b Fu(\(5.6\))1901 5682 y(16)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 146 100 a Fu(By)23 b(noting)e(that)h(the)g
(uniform)g(asymptotics)h(of)f(the)g(discrete)h(mo)s(del)f(\(giv)m(en)h
(explicitly)h(b)m(y)f(Ow)m(czarek)0 220 y(and)36 b(Prellb)s(erg)g
(\(2007\)\))f(and)g(for)g(the)h(semi-con)m(tin)m(uous)i(mo)s(del)e
(\(giv)m(en)h(b)m(y)g(Ow)m(czarek)g Fs(et)h(al)d Fu(\(1993\)\))0
340 y(ha)m(v)m(e)j(the)f(same)h(functional)f(structure,)i(the)f
(results)g(for)e(the)h(scaling)h(of)e(the)h(partition)g(function)g(for)
0 461 y(the)c(semi-con)m(tin)m(uous)i(mo)s(del)e(found)g(in)f(Ow)m
(czarek)j(\(1993\))c(can)i(b)s(e)g(used)h(to)e(deduce)i(that)782
683 y Fr(Z)849 698 y Fp(n)896 683 y Fu(\()p Fr(f)982
698 y Fp(x)1026 683 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))26 b(=)i Fr(e)1437 642 y Fp(\014)s(n)p Fk(+)p
Fp(\024)1619 650 y Fm(s)1652 642 y Fk(\()p Fp(f)1713
650 y Fm(x)1752 642 y Fp(;)p Fk(0)p Fp(;\014)s Fk(\))p
Fp(n)1940 619 y Fo(1)p Fm(=)p Fo(2)2037 642 y Fk(+)p
Fp(O)r Fk(\(1\))2371 683 y Fu(for)33 b Fr(\014)2582 642
y Fp(t)2611 683 y Fu(\()p Fr(f)2697 698 y Fp(x)2741 683
y Fr(;)17 b Fu(0\))27 b Fr(<)g(\014)34 b(;)581 b Fu(\(5.7\))0
891 y Fa(DO)40 b(WE)f(REALL)-9 b(Y)38 b(KNO)m(W)h(THA)-9
b(T)38 b(THE)h(CORRECTION)f(TERM)h(IS)g(O\(1\)?)49 b
Fu(where)0 1011 y Fr(\024)56 1026 y Fp(s)93 1011 y Fu(\()p
Fr(f)179 1026 y Fp(x)223 1011 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))33 b(is)i(a)g(negativ)m(e)g(non-constan)m(t)h(analytic)f
(function)g(of)f Fr(\014)40 b Fu(and)35 b Fr(f)2853 1026
y Fp(x)2897 1011 y Fu(,)g(and)g(also)g(w)m(e)g(ha)m(v)m(e)h(that)0
1131 y(lim)135 1147 y Fp(\014)s Fj(!)p Fp(\014)292 1128
y Fm(t)341 1131 y Fr(\024)397 1146 y Fp(s)434 1131 y
Fu(\()p Fr(f)520 1146 y Fp(x)564 1131 y Fr(;)17 b Fu(0)p
Fr(;)g(\014)762 1095 y Fp(t)790 1131 y Fu(\))28 b(=)f(0.)146
1252 y(F)-8 b(or)32 b(completeness)j(w)m(e)f(note)f(that)f(at)g
Fr(\014)i Fu(=)27 b Fr(\014)1851 1216 y Fp(t)1880 1252
y Fu(\()p Fr(f)1966 1267 y Fp(x)2010 1252 y Fr(;)17 b
Fu(0\))32 b(w)m(e)i(ha)m(v)m(e)1138 1473 y Fr(Z)1205
1488 y Fp(n)1252 1473 y Fu(\()p Fr(f)1338 1488 y Fp(x)1382
1473 y Fr(;)17 b Fu(0)p Fr(;)g(\014)1580 1431 y Fp(t)1608
1473 y Fu(\()p Fr(f)1694 1488 y Fp(x)1738 1473 y Fr(;)g
Fu(0\)\))27 b(=)h Fr(e)2083 1431 y Fp(\014)2126 1408
y Fm(t)2154 1431 y Fp(n)p Fj(\000)2262 1404 y Fo(2)p
2261 1416 31 3 v 2261 1457 a(3)2314 1431 y Fk(log)q(\()p
Fp(n)p Fk(\)+)p Fp(O)r Fk(\(1\))2735 1473 y Fr(:)937
b Fu(\(5.8\))0 1680 y Fa(SAME)37 b(QUESTION)g(AS)g(ABO)m(VE)146
1801 y Fu(One)f(could)g(calculate)h(the)f(a)m(v)m(erage)h(extension)g
(in)f(the)g(generalised)h(ensem)m(ble)h(simply)f(b)m(y)g(di\013er-)0
1921 y(en)m(tiating)d(the)g(generating)f(function)h(with)g(resp)s(ect)h
(to)e(the)g(force.)46 b(In)34 b(the)g(discrete)h(mo)s(del)f(this)g(giv)
m(es)0 2041 y(a)g(complicated)h(expression)h(in)e(terms)h(of)f
Fr(q)t Fu(-Bessel)h(functions)g(and)f(its)g(deriv)-5
b(ativ)m(es.)50 b(Ho)m(w)m(ev)m(er)36 b(as)f(the)0 2162
y(equiv)-5 b(alence)30 b(of)c(the)i(thermo)s(dynamic)h(limits)f(of)f
(the)h(canonical)f(ensem)m(ble)j(and)e(generalised)g(ensem)m(ble)0
2282 y(is)j(limited)h(to)e(0)d Fr(<)h(\014)33 b Fq(\024)28
b Fr(\014)976 2246 y Fp(t)1036 2282 y Fu(it)i(is)h(simpler)h(to)e(use)i
(the)f(results)h(ab)s(o)m(v)m(e)f(to)f(deduce)i(the)f(b)s(eha)m(viour)g
(of)g(the)0 2402 y(a)m(v)m(erage)i(extension)g(in)f(the)h(canonical)f
(ensem)m(ble)i(directly)-8 b(.)45 b(In)32 b(the)g(canonical)g(ensem)m
(ble)j(the)d(a)m(v)m(erage)0 2523 y(extension)i Fr(<)28
b(s)581 2538 y Fp(x)652 2523 y Fr(>)728 2538 y Fp(n)803
2523 y Fu(\()p Fr(f)889 2538 y Fp(x)933 2523 y Fr(;)17
b(f)1025 2538 y Fp(y)1066 2523 y Fr(;)g(\014)6 b Fu(\))32
b(is)h(de\014ned)h(b)m(y)1043 2788 y Fr(<)28 b(s)1193
2803 y Fp(x)1264 2788 y Fr(>)1340 2803 y Fp(n)1415 2788
y Fu(\()p Fr(f)1501 2803 y Fp(x)1545 2788 y Fr(;)17 b(f)1637
2803 y Fp(y)1678 2788 y Fr(;)g(\014)6 b Fu(\))27 b(=)1967
2721 y(1)p 1961 2765 61 4 v 1961 2857 a Fr(\014)2042
2721 y(d)p Fu(\(log)17 b Fr(Z)2340 2736 y Fp(n)2387 2721
y Fu(\()p Fr(f)2473 2736 y Fp(x)2517 2721 y Fr(;)g(f)2609
2736 y Fp(y)2650 2721 y Fr(;)g(\014)6 b Fu(\))p 2042
2765 751 4 v 2354 2857 a Fr(d)-16 b(f)2437 2872 y Fp(x)2830
2788 y Fr(:)842 b Fu(\(5.9\))0 3046 y(The)34 b(result)f(\(5.6\))f
(implies)i(that)642 3309 y Fr(<)28 b(s)792 3324 y Fp(x)863
3309 y Fr(>)939 3324 y Fp(n)1014 3309 y Fu(\()p Fr(f)1100
3324 y Fp(x)1144 3309 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))26 b(=)1526 3241 y(1)p 1520 3286 61 4 v 1520
3377 a Fr(\014)1600 3241 y(d\024)p Fu(\()p Fr(f)1793
3256 y Fp(x)1837 3241 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))p 1600 3286 472 4 v 1773 3377 a Fr(d)-16 b(f)1856
3392 y Fp(x)2082 3309 y Fr(n)22 b Fu(+)g Fr(O)s Fu(\(1\))129
b(for)32 b(0)27 b Fr(<)h(\014)33 b(<)28 b(\014)3174 3268
y Fp(t)3231 3309 y Fr(;)393 b Fu(\(5.10\))0 3561 y Fa(SHOULDN'T)37
b(THESE)g(BE)f(P)-9 b(AR)g(TIAL)35 b(DERIV)-12 b(A)j(TIVES?)34
b(SHOULD)j(THE)g(ERR)m(OR)0 3681 y(TERM)47 b(HERE)f(BE)h(o\(n\))g(OR)g
(DO)h(WE)f(KNO)m(W)g(THA)-9 b(T)46 b(IT)i(IS)f(O\(1\)?)150
b Fu(so)42 b(that)g(the)0 3802 y(thermo)s(dynamic)34
b(limit)f(extension)i(p)s(er)d(unit)h(length)1131 4059
y Fr(S)1191 4074 y Fp(x)1235 4059 y Fu(\()p Fr(f)1321
4074 y Fp(x)1365 4059 y Fr(;)17 b(f)1457 4074 y Fp(y)1498
4059 y Fr(;)g(\014)6 b Fu(\))27 b(=)52 b(lim)1772 4119
y Fp(n)p Fj(!1)1982 3991 y Fr(<)28 b(s)2132 4006 y Fp(x)2203
3991 y Fr(>)2279 4006 y Fp(n)2354 3991 y Fu(\()p Fr(f)2440
4006 y Fp(x)2483 3991 y Fr(;)17 b(f)2575 4006 y Fp(y)2617
3991 y Fr(;)g(\014)6 b Fu(\))p 1982 4036 777 4 v 2341
4127 a Fr(n)3651 4059 y Fu(\(5.11\))0 4290 y(is)925 4441
y Fr(S)985 4456 y Fp(x)1029 4441 y Fu(\()p Fr(f)1115
4456 y Fp(x)1159 4441 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))26 b(=)1541 4373 y(1)p 1535 4418 61 4 v 1535
4509 a Fr(\014)1615 4373 y(d\024)p Fu(\()p Fr(f)1808
4388 y Fp(x)1852 4373 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))p 1615 4418 472 4 v 1788 4509 a Fr(d)-16 b(f)1871
4524 y Fp(x)2124 4441 y Fr(>)28 b Fu(0)k(for)g(0)c Fr(<)f(\014)33
b(<)28 b(\014)2891 4399 y Fp(t)2948 4441 y Fr(:)676 b
Fu(\(5.12\))0 4662 y(Moreo)m(v)m(er)39 b(the)e(scaling)h(near)f
Fr(\014)1212 4626 y Fp(t)1278 4662 y Fu(in)h(equation)f(\(5.5\))g(as)g
(giv)m(en)h(b)m(y)g(Ow)m(czarek)h(and)e(Prellb)s(erg)h(\(2007\))0
4783 y(implies)c(that)1212 4903 y Fr(S)1272 4918 y Fp(x)1316
4903 y Fu(\()p Fr(f)1402 4918 y Fp(x)1445 4903 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))27 b Fq(!)g Fu(0)1884
4862 y Fk(+)2073 4903 y Fu(as)33 b Fr(\014)g Fq(!)27
b Fu(\()p Fr(\014)2507 4862 y Fp(t)2537 4903 y Fu(\))2575
4862 y Fj(\000)2661 4903 y Fr(:)963 b Fu(\(5.13\))0 5072
y(One)30 b(can)g(calculate)h(this)f(quan)m(tit)m(y)h(from)f(the)g
(generalised)h(ensem)m(ble)h(in)e(the)g(semi-con)m(tin)m(uous)j(mo)s
(del)0 5192 y(\(see)27 b(equation)g(\(3.46\))f(in)g(Ow)m(czarek)i
Fs(et)h(al)d Fu(1993\))f(and)h(analyse)i(it)e(in)g(a)g(more)h(straigh)m
(tforw)m(ard)f(manner)0 5313 y(than)38 b(in)g(the)g(discrete)h(case)f
(\(since)h(it)f(in)m(v)m(olv)m(e)i(Bessel)f(functions)g(rather)f(than)f
Fr(q)t Fu(-Bessel)i(functions\),)0 5433 y(and)33 b(it)f(sho)m(ws)i(the)
f(same)h(b)s(eha)m(viour.)1901 5682 y(17)p eop end
%%Page: 18 18
TeXDict begin 18 17 bop 146 100 a Fu(On)33 b(the)g(other)g(hand)f(the)i
(result)f(\(5.7\))f(implies)i(that)686 358 y Fr(<)28
b(s)836 373 y Fp(x)907 358 y Fr(>)983 373 y Fp(n)1058
358 y Fu(\()p Fr(f)1144 373 y Fp(x)1188 358 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))26 b(=)1570 291 y(1)p
1564 335 61 4 v 1564 427 a Fr(\014)1644 291 y(d\024)1751
306 y Fp(s)1788 291 y Fu(\()p Fr(f)1874 306 y Fp(x)1918
291 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))p 1644 335
509 4 v 1835 427 a Fr(d)-16 b(f)1918 442 y Fp(x)2162
358 y Fr(n)2220 317 y Fk(1)p Fp(=)p Fk(2)2353 358 y Fu(+)22
b Fr(O)s Fu(\(1\))129 b(for)32 b Fr(\014)2993 317 y Fp(t)3050
358 y Fr(<)27 b(\014)443 b Fu(\(5.14\))0 607 y Fa(SIMILAR)37
b(QUESTION)g(ABOUT)g(ERR)m(OR)f(TERM)c Fu(and)g(so)h(that)1318
810 y Fr(S)1378 825 y Fp(x)1422 810 y Fu(\()p Fr(f)1508
825 y Fp(x)1552 810 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6
b Fu(\))26 b(=)i(0)129 b(for)32 b Fr(\014)2306 769 y
Fp(t)2363 810 y Fr(<)c(\014)33 b(:)1069 b Fu(\(5.15\))146
1014 y(W)-8 b(e)26 b(ha)m(v)m(e)h(calculated)f(the)g(stress-strain)h
(curv)m(es)g(b)m(y)f(computing)g(the)g(free)g(energy)g(from)f(the)h(b)s
(ound-)0 1134 y(ary)31 b(of)g(con)m(v)m(ergence)j(\(Section)e(4\))f
(and)g(then)h(n)m(umerically)i(di\013eren)m(tiating.)44
b(Using)32 b(these)g(results)h(and)0 1255 y(the)i(ab)s(o)m(v)m(e)g
(argumen)m(ts)g(w)m(e)g(can)g(mak)m(e)g(the)g(follo)m(wing)g(commen)m
(ts.)50 b(In)35 b(all)f(cases)h(the)g(function)g(of)f(the)0
1375 y(a)m(v)m(erage)g(extension)g(p)s(er)f(unit)g(length)g
Fr(S)1516 1390 y Fp(x)1560 1375 y Fu(\()p Fr(f)1646 1390
y Fp(x)1689 1375 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))32
b(is)h(a)f(con)m(tin)m(uous)i(function)f(of)f Fr(f)3165
1390 y Fp(x)3242 1375 y Fu(for)g Fr(f)3439 1390 y Fp(x)3511
1375 y Fq(\025)c Fu(0.)146 1495 y(A)m(t)j(high)g(temp)s(eratures)h
(where)g Fr(\014)h(<)28 b(\014)1625 1459 y Fp(t)1654
1495 y Fu(\(0)p Fr(;)17 b Fu(0\))30 b(there)h(is)g(no)g(critical)g
(force)g(and)f(the)i(a)m(v)m(erage)f(exten-)0 1616 y(sion)h(p)s(er)f
(unit)h(length)g Fr(S)931 1631 y Fp(x)974 1616 y Fu(\(0)p
Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))26 b Fr(>)i Fu(0)j(at)g(zero)h
(force.)43 b(A)m(t)31 b(suc)m(h)i(\014xed)g Fr(\014)j
Fu(the)c(function)g Fr(S)3395 1631 y Fp(x)3439 1616 y
Fu(\()p Fr(f)3525 1631 y Fp(x)3569 1616 y Fr(;)17 b Fu(0)p
Fr(;)g(\014)6 b Fu(\))29 b(is)0 1736 y(an)35 b(analytic)g(function)g
(of)g Fr(f)1057 1751 y Fp(x)1135 1736 y Fu(for)f Fr(f)1334
1751 y Fp(x)1410 1736 y Fq(\025)e Fu(0)i(and)h(is)g(strictly)h
(increasing)g(with)g(increasing)g(force.)50 b(There)0
1856 y(is)43 b(a)e(unit)i(horizon)m(tal)f(asymptote,)k(approac)m(hed)d
(from)e(b)s(elo)m(w)i(for)f(large)f(forces.)73 b(There)43
b(is)g(a)e(\014nite)0 1977 y(nonzero)36 b(slop)s(e)626
1929 y Fp(dS)705 1937 y Fm(x)744 1929 y Fk(\()p Fp(f)805
1937 y Fm(x)844 1929 y Fp(;)p Fk(0)p Fp(;\014)s Fk(\))p
626 1954 364 4 v 759 2011 a Fp(d)-12 b(f)817 2019 y Fm(x)1035
1977 y Fu(at)35 b Fr(f)1205 1992 y Fp(x)1281 1977 y Fu(=)e(0.)51
b(The)37 b(qualitativ)m(e)g(b)s(eha)m(viour)f(is)g(the)g(same)g(as)g
(that)f(sho)m(wn)i(in)0 2097 y(Figure)c(2)f(for)g(the)h(the)g
Fr(!)e Fu(=)c(1)33 b(case.)146 2218 y(A)m(t)43 b(the)g(critical)f(temp)
s(erature)h(for)f(zero)h(force)f Fr(\014)50 b Fu(=)44
b Fr(\014)2280 2181 y Fp(t)2309 2218 y Fu(\(0)p Fr(;)17
b Fu(0\))41 b(the)i(a)m(v)m(erage)g(extension)h(p)s(er)f(unit)0
2338 y(length)j Fr(S)371 2353 y Fp(x)415 2338 y Fu(\(0)p
Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))48 b(=)h(0)c(at)g(zero)h(force.)
82 b(Again)46 b(the)g(function)f Fr(S)2601 2353 y Fp(x)2645
2338 y Fu(\()p Fr(f)2731 2353 y Fp(x)2775 2338 y Fr(;)17
b Fu(0)p Fr(;)g(\014)2973 2302 y Fp(t)3002 2338 y Fu(\(0)p
Fr(;)g Fu(0\)\))44 b(is)i(an)f(analytic)0 2458 y(function)26
b(of)f Fr(f)527 2473 y Fp(x)596 2458 y Fu(for)g Fr(f)786
2473 y Fp(x)858 2458 y Fr(>)j Fu(0,)e(is)g(strictly)h(increasing)g
(with)f(increasing)h(force,)g(and)f(has)f(a)h(unit)g(horizon)m(tal)0
2588 y(asymptote,)44 b(approac)m(hed)e(from)e(b)s(elo)m(w)h(for)f
(large)h(forces.)68 b(No)m(w)42 b(ho)m(w)m(ev)m(er)h(the)e(slop)s(e)
3354 2540 y Fp(dS)3433 2548 y Fm(x)3472 2540 y Fk(\()p
Fp(f)3533 2548 y Fm(x)3572 2540 y Fp(;)p Fk(0)p Fp(;\014)3690
2517 y Fm(t)3718 2540 y Fk(\(0)p Fp(;)p Fk(0\)\))p 3354
2565 537 4 v 3573 2622 a Fp(d)-12 b(f)3631 2630 y Fm(x)0
2744 y Fu(div)m(erges)34 b(when)g Fr(f)677 2759 y Fp(x)749
2744 y Fq(!)27 b Fu(0)925 2708 y Fk(+)1016 2744 y Fu(as)33
b Fr(f)1195 2693 y Fj(\000)p Fk(1)p Fp(=)p Fk(2)1184
2754 y Fp(x)1360 2744 y Fu(.)43 b(See)34 b(Figure)e Fa(Figure)38
b(and)h(caption)f(still)f(to)g(b)s(e)h(added)p Fu(.)146
2864 y(A)m(t)31 b(lo)m(w)h(temp)s(eratures)g(where)g
Fr(\014)h(>)28 b(\014)1585 2828 y Fp(t)1614 2864 y Fu(\(0)p
Fr(;)17 b Fu(0\))30 b(\(so)h(there)h(is)f(a)g(critical)g(force)g
Fr(f)3058 2828 y Fp(t)3047 2889 y(x)3119 2864 y Fr(>)c
Fu(0\))k(there)g(are)g(t)m(w)m(o)0 2985 y(regimes.)44
b(F)-8 b(or)29 b(0)e Fq(\024)h Fr(f)791 3000 y Fp(x)863
2985 y Fq(\024)g Fr(f)1027 2949 y Fp(t)1016 3009 y(x)1089
2985 y Fu(the)j(a)m(v)m(erage)f(extension)i(p)s(er)d(unit)h(length)g
Fr(S)2755 3000 y Fp(x)2799 2985 y Fu(\()p Fr(f)2885 3000
y Fp(x)2929 2985 y Fr(;)17 b Fu(0)p Fr(;)g(\014)6 b Fu(\))27
b(=)g(0)i(regardless)i(of)0 3105 y(the)24 b(force.)40
b(Ho)m(w)m(ev)m(er)26 b(for)d Fr(f)1012 3069 y Fp(t)1001
3130 y(x)1072 3105 y Fr(<)28 b(f)1224 3120 y Fp(x)1291
3105 y Fu(the)c(function)f Fr(S)1882 3120 y Fp(x)1926
3105 y Fu(\()p Fr(f)2012 3120 y Fp(x)2056 3105 y Fr(;)17
b Fu(0)p Fr(;)g(\014)6 b Fu(\))22 b(is)i(an)f(analytic)h(function)g(of)
f Fr(f)3414 3120 y Fp(x)3458 3105 y Fu(,)i(is)f(strictly)0
3225 y(increasing)h(with)g(increasing)g(force,)h(and)e(has)h(a)e(unit)i
(horizon)m(tal)f(asymptote,)j(approac)m(hed)e(from)f(b)s(elo)m(w)0
3346 y(for)35 b(large)h(forces.)55 b(Again)36 b(the)g(slop)s(e)1437
3298 y Fp(dS)1516 3306 y Fm(x)1555 3298 y Fk(\()p Fp(f)1616
3306 y Fm(x)1655 3298 y Fp(;)p Fk(0)p Fp(;\014)s Fk(\))p
1437 3323 364 4 v 1570 3380 a Fp(d)-12 b(f)1628 3388
y Fm(x)1846 3346 y Fu(div)m(erges)38 b(when)f Fr(f)2530
3361 y Fp(x)2608 3346 y Fq(!)c Fu(\()p Fr(f)2838 3310
y Fp(t)2827 3370 y(x)2871 3346 y Fu(\))2909 3310 y Fk(+)3004
3346 y Fu(as)j(\()p Fr(f)3213 3361 y Fp(x)3281 3346 y
Fq(\000)25 b Fr(f)3442 3310 y Fp(t)3431 3370 y(x)3475
3346 y Fu(\))3513 3310 y Fj(\000)p Fk(1)p Fp(=)p Fk(2)3678
3346 y Fu(.)54 b(See)0 3466 y(Figure)33 b Fa(Figure)38
b(and)g(caption)g(still)g(to)f(b)s(e)g(added)p Fu(.)0
3943 y Ft(6)161 b(The)53 b(full)h(mo)t(del:)71 b(Pulling)53
b(in)g(b)t(oth)g(directions)0 4310 y Fg(6.1)135 b(No)46
b(self-in)l(teractions)h(\()p Ff(!)38 b Fy(=)33 b(1)p
Fg(\))0 4495 y Fu(As)i(in)f(Subsection)i(3.1)e(whic)m(h)i(describ)s(es)
g(the)f(solution)f(when)i(there)f(is)f(no)g(v)m(ertical)i(pulling)f
(\(and)f(no)0 4615 y(self-in)m(teractions\))27 b(one)e(can)h(write)g
(do)m(wn)g(a)f(simple)i(functional)e(equation)h(for)f(the)h(generating)
f(function)0 4736 y Fr(G)p Fu(\()p Fr(x;)17 b(y)262 4751
y Fk(+)321 4736 y Fr(;)g(y)413 4751 y Fj(\000)471 4736
y Fr(;)g Fu(1\))32 b(as)653 4963 y Fr(G)p Fu(\()p Fr(x;)17
b(y)915 4978 y Fk(+)974 4963 y Fr(;)g(y)1066 4978 y Fj(\000)1124
4963 y Fr(;)g Fu(1\))27 b(=)h Fr(x)p Fu(\(1)22 b(+)1743
4895 y Fr(y)1791 4910 y Fk(+)p 1658 4940 278 4 v 1658
5031 a Fu(1)g Fq(\000)h Fr(y)1877 5046 y Fk(+)1967 4963
y Fu(+)2161 4895 y Fr(y)2209 4910 y Fj(\000)p 2075 4940
V 2075 5031 a Fu(1)f Fq(\000)h Fr(y)2294 5046 y Fj(\000)2363
4963 y Fu(\)\(1)e(+)h Fr(G)p Fu(\()p Fr(x;)17 b(y)2869
4978 y Fk(+)2928 4963 y Fr(;)g(y)3020 4978 y Fj(\000)3078
4963 y Fr(;)g Fu(1\)\))452 b(\(6.1\))0 5213 y(so)33 b(that)1108
5353 y(1)22 b(+)g Fr(G)p Fu(\()p Fr(x;)17 b(y)1539 5368
y Fk(+)1597 5353 y Fr(;)g(y)1689 5368 y Fj(\000)1747
5353 y Fr(;)g Fu(1\))28 b(=)2349 5286 y(1)p 2019 5330
709 4 v 2019 5432 a(1)22 b Fq(\000)h Fr(x)2355 5385 y
Fk(1)p Fj(\000)p Fp(y)2480 5394 y Fo(+)2531 5385 y Fp(y)2566
5394 y Fn(\000)p 2255 5409 463 4 v 2255 5466 a Fk(\(1)p
Fj(\000)p Fp(y)2407 5475 y Fo(+)2458 5466 y Fk(\)\(1)p
Fj(\000)p Fp(y)2637 5475 y Fn(\000)2690 5466 y Fk(\))2765
5353 y Fr(;)907 b Fu(\(6.2\))1901 5682 y(18)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 100 a Fu(and)33 b(setting)g
Fr(x)28 b Fu(=)g Fr(hz)t Fu(,)33 b Fr(y)910 115 y Fk(+)996
100 y Fu(=)28 b Fr(z)t(v)37 b Fu(and)c Fr(y)1471 115
y Fj(\000)1557 100 y Fu(=)27 b Fr(z)t(=v)37 b Fu(w)m(e)d(get)1056
364 y(1)22 b(+)1247 339 y(^)1225 364 y Fr(G)p Fu(\()p
Fr(z)t Fu(;)17 b Fr(h;)g(v)t(;)g Fu(1\))27 b(=)2293 297
y(1)p 1855 341 924 4 v 1855 468 a(1)22 b Fq(\000)h Fr(hz)2149
357 y Fl(h)2384 428 y Fk(1)p Fj(\000)p Fp(z)2510 410
y Fo(2)p 2206 445 517 4 v 2206 502 a Fk(1)p Fj(\000)p
Fk(\()p Fp(v)r Fk(+)p Fp(v)2450 483 y Fn(\000)p Fo(1)2534
502 y Fk(\))p Fp(z)s Fk(+)p Fp(z)2688 483 y Fo(2)2732
357 y Fl(i)2817 364 y Fr(:)855 b Fu(\(6.3\))0 715 y(So)32
b(the)h(answ)m(er)g(is)g(a)f(simple)i(rational)d(function,)i(and)g(the)
f(critical)h Fr(z)k Fu(\(that)32 b(is)g Fr(z)3034 730
y Fp(c)3070 715 y Fu(\()p Fr(h;)17 b(v)t(;)g Fu(1\)\))31
b(is)h(the)h(ro)s(ot)0 835 y(of)f(a)g(cubic.)45 b(F)-8
b(or)32 b Fr(h)c Fu(=)f Fr(v)32 b Fu(=)27 b(1)32 b(this)i(simpli\014es)
g(as)f(exp)s(ected.)146 956 y(If)g(w)m(e)g(set)h Fr(f)588
971 y Fp(x)659 956 y Fu(=)28 b(0)k(then)1088 1215 y(1)22
b(+)1279 1190 y(^)1257 1215 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17
b(1)p Fr(;)g(v)t(;)g Fu(1\))26 b(=)2289 1147 y(1)p 1880
1192 868 4 v 1880 1318 a(1)c Fq(\000)g Fr(z)2117 1208
y Fl(h)2352 1279 y Fk(1)p Fj(\000)p Fp(z)2478 1260 y
Fo(2)p 2174 1295 517 4 v 2174 1353 a Fk(1)p Fj(\000)p
Fk(\()p Fp(v)r Fk(+)p Fp(v)2418 1334 y Fn(\000)p Fo(1)2502
1353 y Fk(\))p Fp(z)s Fk(+)p Fp(z)2656 1334 y Fo(2)2700
1208 y Fl(i)2785 1215 y Fr(;)887 b Fu(\(6.4\))0 1566
y(and)32 b(from)f(this)h(w)m(e)h(can)f(readily)g(calculate)h(the)f
(ratio)f Fq(h)p Fr(s)2139 1581 y Fp(y)2180 1566 y Fq(i)p
Fr(=)p Fq(h)p Fr(n)p Fq(i)g Fu(and)h(tak)m(e)g(the)g(thermo)s(dynamic)h
(limit)0 1686 y(b)m(y)g(letting)g Fr(z)g Fq(!)27 b Fr(z)694
1701 y Fp(c)729 1686 y Fu(\(1)p Fr(;)17 b(v)t(;)g Fu(1\))31
b(In)i(Figure)g(6)f(is)h(a)f(plot)h(of)f Fr(\014)6 b(f)2184
1701 y Fp(y)2258 1686 y Fu(against)32 b(lim)2730 1701
y Fp(z)s Fj(!)p Fp(z)2870 1709 y Fm(c)2905 1686 y Fq(h)p
Fr(s)2990 1701 y Fp(y)3031 1686 y Fq(i)p Fr(=)p Fq(h)p
Fr(n)p Fq(i)p Fu(.)887 3956 y
 /PSfrag where{pop(bfy)[[0(Bl)1 0]](lsn)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 3956 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/stress_strain_w1_vert.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:25:52 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
12.0 6.01579 370.981384 375.984222 rc
186 13 381 OPL
14 374
14 373
14 367
14 366
14 359
14 358
14 352
14 351
14 344
15 343
15 337
15 335
15 330
15 328
16 323
16 320
17 316
17 312
17 309
18 305
19 303
20 297
20 296
21 293
21 290
21 290
23 284
23 282
25 279
26 274
27 273
28 270
29 268
29 267
32 263
34 259
34 258
36 256
37 253
39 252
41 249
43 246
44 245
45 244
48 241
51 238
52 237
53 236
56 234
58 232
60 231
62 229
64 228
66 227
69 225
73 223
74 222
76 221
79 220
81 219
85 218
88 216
90 216
95 214
96 213
96 213
102 212
103 212
108 210
111 210
114 209
118 208
120 207
125 206
126 206
126 206
132 205
133 205
138 204
141 203
145 203
148 202
151 202
156 201
158 200
163 200
164 199
170 198
171 198
171 198
177 197
178 197
184 196
186 196
190 195
193 195
197 195
201 194
204 194
208 193
210 193
216 192
217 192
223 191
223 191
224 191
230 190
231 190
236 189
238 188
243 188
246 187
249 186
253 186
256 185
261 184
262 184
268 183
268 183
269 183
274 182
276 181
280 180
283 179
286 179
291 177
292 177
298 176
298 176
299 175
304 173
306 173
309 171
313 170
315 169
318 168
320 167
321 166
325 164
328 162
330 161
332 160
334 158
336 157
338 155
341 153
342 152
343 151
346 148
349 145
350 144
351 143
353 140
355 137
357 136
358 133
360 131
360 130
362 126
365 122
365 121
366 119
367 116
368 115
369 110
371 107
371 105
373 99
373 99
373 96
374 93
374 92
375 86
376 84
376 80
377 77
377 73
378 69
378 66
378 61
379 59
379 54
379 52
379 46
380 45
380 38
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 363 195 OPL
363 197
1 344 195 OPL
344 197
1 326 195 OPL
326 197
1 307 195 OPL
307 197
1 271 195 OPL
271 197
1 252 195 OPL
252 197
1 234 195 OPL
234 197
1 215 195 OPL
215 197
1 179 195 OPL
179 197
1 160 195 OPL
160 197
1 142 195 OPL
142 197
1 123 195 OPL
123 197
1 87 195 OPL
87 197
1 68 195 OPL
68 197
1 50 195 OPL
50 197
1 31 195 OPL
31 197
1 13 195 OPL
381 195
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
% ADR
% 274 217 29 21 rc
% 278.0 234.0 moveto
274 237 29 21 rc
278.0 254.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 18.0 scalefont setfont
(lsn) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 13 195 OPL
13 199
-5.0 -5.0 translate
q
6 208 7 13 rc
6.0 219.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -206 1090 806 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -206 1090 806
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 1000.0 def
		/quotedbl 500.0 def
		/numbersign 792.0 def
		/dollar 450.0 def
		/percent 500.0 def
		/ampersand 1000.0 def
		/quoteright 500.0 def
		/parenleft 1000.0 def
		/parenright 1000.0 def
		/asterisk 1000.0 def
		/plus 1000.0 def
		/comma 660.0 def
		/hyphen 1090.0 def
		/period 1090.0 def
		/slash 1090.0 def
		/zero 1090.0 def
		/one 1090.0 def
		/two 1000.0 def
		/three 1000.0 def
		/four 1000.0 def
		/five 1000.0 def
		/six 950.0 def
		/seven 1000.0 def
		/eight 950.0 def
		/nine 1000.0 def
		/colon 1000.0 def
		/semicolon 1000.0 def
		/less 1000.0 def
		/equal 1000.0 def
		/greater 1000.0 def
		/question 1000.0 def
		/at 1000.0 def
		/A 1000.0 def
		/B 1000.0 def
		/C 1000.0 def
		/D 1000.0 def
		/E 1000.0 def
		/F 1000.0 def
		/G 1000.0 def
		/H 1000.0 def
		/I 1000.0 def
		/J 1000.0 def
		/K 1000.0 def
		/L 1000.0 def
		/M 1000.0 def
		/N 1000.0 def
		/O 1000.0 def
		/P 1000.0 def
		/Q 500.0 def
		/R 1000.0 def
		/S 1000.0 def
		/T 790.0 def
		/U 1000.0 def
		/V 1000.0 def
		/W 1000.0 def
		/X 1000.0 def
		/Y 738.0 def
		/Z 536.0 def
		/bracketleft 430.0 def
		/backslash 500.0 def
		/bracketright 1000.0 def
		/asciicircum 1000.0 def
		/underscore 1000.0 def
		/quoteleft 500.0 def
		/a 750.0 def
		/b 750.0 def
		/c 750.0 def
		/d 1000.0 def
		/e 750.0 def
		/f 750.0 def
		/g 750.0 def
		/h 750.0 def
		/i 750.0 def
		/j 750.0 def
		/k 1000.0 def
		/l 1000.0 def
		/m 624.0 def
		/n 624.0 def
		/o 624.0 def
		/p 624.0 def
		/q 624.0 def
		/r 624.0 def
		/s 624.0 def
		/t 624.0 def
		/u 500.0 def
		/v 500.0 def
		/w 500.0 def
		/x 500.0 def
		/y 500.0 def
		/z 500.0 def
		/braceleft 500.0 def
		/bar 500.0 def
		/braceright 500.0 def
		/asciitilde 500.0 def
		/exclamdown 500.0 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 500.0 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 500.0 def
		/quotedblleft 500.0 def
		/guillemotleft 500.0 def
		/guilsinglleft 500.0 def
		/guilsinglright 500.0 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 1090.0 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 500.0 def
		/paragraph 500.0 def
		/bullet 500.0 def
		/quotesinglbase 500.0 def
		/quotedblbase 500.0 def
		/quotedblright 500.0 def
		/guillemotright 500.0 def
		/ellipsis 500.0 def
		/perthousand 500.0 def
		/questiondown 500.0 def
		/grave 500.0 def
		/acute 500.0 def
		/circumflex 500.0 def
		/tilde 500.0 def
		/macron 500.0 def
		/breve 500.0 def
		/dotaccent 500.0 def
		/dieresis 500.0 def
		/ring 500.0 def
		/cedilla 500.0 def
		/hungarumlaut 500.0 def
		/ogonek 500.0 def
		/caron 500.0 def
		/emdash 1090.0 def
		/AE 500.0 def
		/ordfeminine 500.0 def
		/Lslash 500.0 def
		/Oslash 500.0 def
		/OE 500.0 def
		/ordmasculine 500.0 def
		/ae 500.0 def
		/dotlessi 500.0 def
		/lslash 500.0 def
		/oslash 500.0 def
		/oe 500.0 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
464 300 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/quotedbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/numbersign
		{
622 128 moveto
568 74 lineto
396 246 lineto
224 75 lineto
170 129 lineto
342 300 lineto
170 471 lineto
224 525 lineto
396 354 lineto
568 526 lineto
622 472 lineto
450 300 lineto
622 128 lineto
closepath
fill
		} def

	/dollar
		{
281 300 moveto
281 285 275 272 264 260  curveto
252 248 239 243 224 243  curveto
210 243 198 248 186 258  curveto
174 268 168 282 168 300  curveto
168 315 173 328 184 339  curveto
195 350 208 356 224 356  curveto
241 356 255 349 267 337  curveto
276 325 281 313 281 300  curveto
closepath
fill
		} def

	/percent
		{
334 300 moveto
334 277 325 257 308 240  curveto
291 223 271 215 249 215  curveto
229 215 210 222 194 236  curveto
174 252 165 274 165 300  curveto
165 323 173 343 189 359  curveto
205 375 225 384 249 384  curveto
275 384 296 374 313 355  curveto
327 338 334 320 334 300  curveto
closepath
fill
		} def

	/ampersand
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
fill
		} def

	/quoteright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/parenleft
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
fill
		} def

	/parenright
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
462 300 moveto
222 541 lineto
222 60 lineto
462 300 lineto
closepath
fill
		} def

	/asterisk
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/plus
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
830 8 lineto
closepath
fill
		} def

	/comma
		{
492 12 moveto
466 -30 lineto
387 -2 336 34 314 79  curveto
296 113 287 176 287 267  curveto
287 418 lineto
287 455 282 483 273 501  curveto
264 519 244 538 214 558  curveto
168 588 lineto
194 630 lineto
259 597 lineto
308 572 340 540 356 502  curveto
368 472 374 427 374 365  curveto
374 349 374 325 374 293  curveto
373 261 373 238 373 222  curveto
373 125 397 63 446 36  curveto
453 32 468 24 492 12  curveto
closepath
fill
		} def

	/hyphen
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/period
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
678 274 moveto
412 274 lineto
412 326 lineto
678 326 lineto
678 274 lineto
closepath
fill
		} def

	/slash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
662 518 moveto
486 82 lineto
428 82 lineto
604 518 lineto
662 518 lineto
closepath
fill
		} def

	/zero
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
667 300 moveto
667 266 655 238 631 214  curveto
607 190 578 178 545 178  curveto
511 178 483 190 459 214  curveto
435 238 423 266 423 300  curveto
423 333 435 362 459 386  curveto
483 410 511 422 545 422  curveto
578 422 607 410 631 386  curveto
655 362 667 333 667 300  curveto
closepath
615 300 moveto
615 319 608 335 594 349  curveto
580 363 564 370 545 370  curveto
525 370 509 363 495 349  curveto
481 335 475 319 475 300  curveto
475 280 481 264 495 250  curveto
509 236 525 230 545 230  curveto
564 230 580 236 594 250  curveto
608 264 615 280 615 300  curveto
closepath
fill
		} def

	/one
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
602 323 moveto
602 308 596 295 585 283  curveto
573 271 560 266 545 266  curveto
531 266 519 271 507 281  curveto
495 291 489 305 489 323  curveto
489 338 494 351 505 362  curveto
516 373 529 379 545 379  curveto
562 379 576 372 588 360  curveto
597 348 602 336 602 323  curveto
closepath
fill
		} def

	/two
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
770 396 740 456 687 505  curveto
634 553 572 578 500 578  curveto
428 578 365 553 312 505  curveto
259 456 229 396 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 203 259 143 312 95  curveto
365 46 428 22 500 22  curveto
572 22 634 46 687 95  curveto
740 143 770 203 777 274  curveto
closepath
fill
		} def

	/three
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 372 753 434 705 487  curveto
656 540 596 570 526 577  curveto
526 23 lineto
596 29 656 59 705 112  curveto
753 165 778 228 778 300  curveto
closepath
474 23 moveto
474 577 lineto
403 570 343 540 295 487  curveto
246 434 222 372 222 300  curveto
222 228 246 165 295 112  curveto
343 59 403 29 474 23  curveto
closepath
fill
		} def

	/four
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
771 392 744 449 697 497  curveto
649 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
407 571 350 544 303 497  curveto
255 449 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 649 55 697 103  curveto
744 150 771 207 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 207 255 150 303 103  curveto
350 55 407 29 474 23  curveto
closepath
fill
		} def

	/five
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
677 514 moveto
625 556 566 578 500 578  curveto
433 578 374 556 323 514  curveto
500 337 lineto
677 514 lineto
closepath
778 300 moveto
778 366 756 425 714 477  curveto
537 300 lineto
714 123 lineto
756 174 778 233 778 300  curveto
closepath
463 300 moveto
286 477 lineto
243 425 222 366 222 300  curveto
222 233 243 174 286 123  curveto
463 300 lineto
closepath
677 86 moveto
500 263 lineto
323 86 lineto
374 43 433 22 500 22  curveto
566 22 625 43 677 86  curveto
closepath
fill
		} def

	/six
		{
782 274 moveto
524 274 lineto
524 -30 lineto
424 -30 340 -1 273 58  curveto
203 120 168 200 168 300  curveto
168 399 203 480 273 542  curveto
339 601 423 630 524 630  curveto
524 326 lineto
782 326 lineto
782 274 lineto
closepath
472 326 moveto
472 577 lineto
406 570 349 543 302 496  curveto
254 448 227 392 221 326  curveto
472 326 lineto
closepath
472 23 moveto
472 274 lineto
221 274 lineto
227 208 254 151 302 104  curveto
349 56 406 29 472 23  curveto
closepath
fill
		} def

	/seven
		{
792 82 moveto
755 45 lineto
540 260 lineto
364 84 lineto
415 42 473 22 538 22  curveto
538 -30 lineto
446 -30 368 2 304 66  curveto
240 130 208 208 208 300  curveto
208 391 240 469 304 533  curveto
368 597 446 630 538 630  curveto
538 578 lineto
471 578 412 556 360 513  curveto
540 333 lineto
755 548 lineto
792 511 lineto
577 296 lineto
792 82 lineto
closepath
503 296 moveto
323 476 lineto
281 424 260 366 260 300  curveto
260 232 282 172 327 120  curveto
503 296 lineto
closepath
fill
		} def

	/eight
		{
782 300 moveto
782 200 747 120 677 58  curveto
610 0 526 -30 426 -30  curveto
426 274 lineto
168 274 lineto
168 326 lineto
426 326 lineto
426 630 lineto
526 630 610 600 677 542  curveto
747 480 782 399 782 300  curveto
closepath
729 326 moveto
722 392 695 448 648 496  curveto
600 543 544 570 478 577  curveto
478 326 lineto
729 326 lineto
closepath
729 274 moveto
478 274 lineto
478 23 lineto
544 29 600 56 648 104  curveto
695 151 722 208 729 274  curveto
closepath
fill
		} def

	/nine
		{
792 300 moveto
792 208 759 130 695 66  curveto
631 2 553 -30 462 -30  curveto
462 22 lineto
526 22 584 42 636 84  curveto
460 260 lineto
245 45 lineto
208 82 lineto
423 296 lineto
208 511 lineto
245 548 lineto
460 333 lineto
640 513 lineto
588 556 528 578 462 578  curveto
462 630 lineto
553 630 631 597 695 533  curveto
759 469 792 391 792 300  curveto
closepath
740 300 moveto
740 366 719 424 677 476  curveto
497 296 lineto
673 120 lineto
717 172 740 232 740 300  curveto
closepath
fill
		} def

	/colon
		{
830 300 moveto
830 209 797 131 733 67  curveto
668 2 590 -30 500 -30  curveto
419 -30 348 -4 287 48  curveto
210 -30 lineto
170 10 lineto
247 88 lineto
195 149 170 220 170 300  curveto
170 390 202 468 267 533  curveto
331 597 409 630 500 630  curveto
580 630 650 604 712 553  curveto
789 630 lineto
829 590 lineto
752 513 lineto
804 451 830 380 830 300  curveto
closepath
778 300 moveto
778 366 757 424 715 476  curveto
324 85 lineto
375 43 434 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
675 516 moveto
624 557 566 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 234 242 175 284 125  curveto
675 516 lineto
closepath
fill
		} def

	/semicolon
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 376 750 442 696 496  curveto
642 550 576 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 223 249 157 303 103  curveto
357 49 423 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
672 201 moveto
652 193 635 190 621 190  curveto
608 190 597 192 587 198  curveto
579 202 567 216 551 239  curveto
537 259 522 274 507 285  curveto
508 269 514 249 525 225  curveto
536 200 542 182 542 172  curveto
542 151 527 127 499 101  curveto
469 124 455 148 455 173  curveto
455 181 460 198 472 223  curveto
482 245 488 266 490 284  curveto
474 273 460 258 446 238  curveto
439 228 427 215 410 199  curveto
400 193 388 190 375 190  curveto
361 190 344 193 326 201  curveto
334 238 348 262 367 273  curveto
377 279 394 283 418 285  curveto
442 287 463 292 481 300  curveto
464 307 443 312 419 315  curveto
407 315 389 319 367 325  curveto
346 337 333 362 327 400  curveto
347 406 363 409 376 409  curveto
388 409 400 406 410 401  curveto
417 397 429 383 445 361  curveto
458 342 473 327 489 316  curveto
487 333 480 353 470 377  curveto
460 400 455 417 455 427  curveto
455 451 470 475 500 499  curveto
528 473 542 449 542 427  curveto
542 417 536 400 525 376  curveto
515 354 509 333 507 314  curveto
518 322 531 337 547 359  curveto
563 381 576 395 586 401  curveto
596 407 608 410 622 410  curveto
635 410 651 407 670 401  curveto
664 363 650 338 630 326  curveto
620 320 603 316 578 314  curveto
565 312 545 308 517 300  curveto
535 292 555 287 577 285  curveto
593 283 602 283 604 283  curveto
614 281 622 278 630 274  curveto
649 262 663 238 672 201  curveto
closepath
fill
		} def

	/less
		{
980 274 moveto
829 274 lineto
822 188 787 115 724 57  curveto
660 0 586 -30 500 -30  curveto
414 -30 339 0 276 58  curveto
212 116 177 188 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 411 212 483 276 542  curveto
339 600 414 630 500 630  curveto
586 630 660 600 724 542  curveto
787 484 822 412 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
770 397 740 457 687 505  curveto
633 553 571 578 500 578  curveto
428 578 366 553 313 505  curveto
259 457 229 397 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 202 259 142 313 94  curveto
366 46 428 22 500 22  curveto
571 22 633 46 687 94  curveto
740 142 770 202 777 274  curveto
closepath
fill
		} def

	/equal
		{
980 274 moveto
829 274 lineto
823 193 791 124 733 66  curveto
675 8 606 -23 526 -29  curveto
526 -200 lineto
474 -200 lineto
474 -29 lineto
393 -23 324 8 266 66  curveto
208 124 177 193 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 406 208 475 266 533  curveto
324 591 393 623 474 629  curveto
474 800 lineto
526 800 lineto
526 629 lineto
606 622 675 590 733 533  curveto
790 475 822 406 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
771 392 744 448 696 496  curveto
648 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
408 571 351 544 303 496  curveto
255 448 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 648 55 696 103  curveto
744 151 771 208 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 208 255 151 303 103  curveto
351 55 408 29 474 23  curveto
closepath
fill
		} def

	/greater
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
222 578 lineto
222 326 lineto
778 326 lineto
closepath
778 22 moveto
778 274 lineto
222 274 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/question
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
526 578 lineto
526 326 lineto
778 326 lineto
closepath
474 326 moveto
474 578 lineto
222 578 lineto
222 326 lineto
474 326 lineto
closepath
778 22 moveto
778 274 lineto
526 274 lineto
526 22 lineto
778 22 lineto
closepath
474 22 moveto
474 274 lineto
222 274 lineto
222 22 lineto
474 22 lineto
closepath
fill
		} def

	/at
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 60 moveto
778 541 lineto
538 300 lineto
778 60 lineto
closepath
741 578 moveto
259 578 lineto
501 337 lineto
741 578 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
742 22 moveto
501 263 lineto
258 22 lineto
742 22 lineto
closepath
fill
		} def

	/A
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 22 moveto
778 578 lineto
222 578 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/B
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
fill
		} def

	/C
		{
830 274 moveto
526 274 lineto
526 -30 lineto
474 -30 lineto
474 274 lineto
170 274 lineto
170 326 lineto
474 326 lineto
474 630 lineto
526 630 lineto
526 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/D
		{
830 261 moveto
539 261 lineto
539 -30 lineto
461 -30 lineto
461 261 lineto
170 261 lineto
170 339 lineto
461 339 lineto
461 630 lineto
539 630 lineto
539 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/E
		{
830 394 moveto
526 394 lineto
526 90 lineto
474 90 lineto
474 394 lineto
170 394 lineto
170 446 lineto
474 446 lineto
474 750 lineto
526 750 lineto
526 446 lineto
830 446 lineto
830 394 lineto
closepath
555 -95 moveto
555 -110 549 -123 539 -134  curveto
528 -144 515 -150 500 -150  curveto
484 -150 471 -144 461 -134  curveto
450 -123 445 -110 445 -95  curveto
445 -79 450 -66 461 -56  curveto
471 -45 484 -40 500 -40  curveto
515 -40 528 -45 539 -56  curveto
549 -66 555 -79 555 -95  curveto
closepath
fill
		} def

	/F
		{
555 695 moveto
555 679 549 666 539 656  curveto
528 645 515 640 500 640  curveto
484 640 471 645 461 656  curveto
450 666 445 679 445 695  curveto
445 710 450 723 461 734  curveto
471 744 484 750 500 750  curveto
515 750 528 744 539 734  curveto
549 723 555 710 555 695  curveto
closepath
830 154 moveto
526 154 lineto
526 -150 lineto
474 -150 lineto
474 154 lineto
170 154 lineto
170 206 lineto
474 206 lineto
474 510 lineto
526 510 lineto
526 206 lineto
830 206 lineto
830 154 lineto
closepath
fill
		} def

	/G
		{
830 337 moveto
526 337 lineto
526 33 lineto
474 33 lineto
474 337 lineto
170 337 lineto
170 389 lineto
474 389 lineto
474 693 lineto
526 693 lineto
526 389 lineto
830 389 lineto
830 337 lineto
closepath
830 -94 moveto
170 -94 lineto
170 -42 lineto
830 -42 lineto
830 -94 lineto
closepath
fill
		} def

	/H
		{
830 641 moveto
170 641 lineto
170 693 lineto
830 693 lineto
830 641 lineto
closepath
830 210 moveto
526 210 lineto
526 -94 lineto
474 -94 lineto
474 210 lineto
170 210 lineto
170 262 lineto
474 262 lineto
474 566 lineto
526 566 lineto
526 262 lineto
830 262 lineto
830 210 lineto
closepath
fill
		} def

	/I
		{
526 404 moveto
474 404 lineto
474 630 lineto
526 630 lineto
526 404 lineto
closepath
830 274 moveto
604 274 lineto
604 326 lineto
830 326 lineto
830 274 lineto
closepath
396 326 moveto
396 274 lineto
170 274 lineto
170 326 lineto
396 326 lineto
closepath
526 -30 moveto
474 -30 lineto
474 196 lineto
526 196 lineto
526 -30 lineto
closepath
fill
		} def

	/J
		{
555 523 moveto
555 507 549 494 539 484  curveto
528 473 515 468 500 468  curveto
484 468 471 473 461 484  curveto
450 494 445 507 445 523  curveto
445 538 450 551 461 562  curveto
471 572 484 578 500 578  curveto
515 578 528 572 539 562  curveto
549 551 555 538 555 523  curveto
closepath
830 8 moveto
793 -30 lineto
501 263 lineto
207 -30 lineto
170 8 lineto
438 274 lineto
170 274 lineto
170 326 lineto
438 326 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
564 326 lineto
830 326 lineto
830 274 lineto
564 274 lineto
830 8 lineto
closepath
555 78 moveto
555 62 549 49 539 39  curveto
528 28 515 23 500 23  curveto
484 23 471 28 461 39  curveto
450 49 445 62 445 78  curveto
445 93 450 106 461 117  curveto
471 127 484 133 500 133  curveto
515 133 528 127 539 117  curveto
549 106 555 93 555 78  curveto
closepath
fill
		} def

	/K
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/L
		{
830 261 moveto
170 261 lineto
170 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/M
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/N
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/O
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/P
		{
778 485 moveto
778 469 772 456 762 446  curveto
751 435 738 430 723 430  curveto
707 430 694 435 684 446  curveto
673 456 668 469 668 485  curveto
668 500 673 513 684 524  curveto
694 534 707 540 723 540  curveto
738 540 751 534 762 524  curveto
772 513 778 500 778 485  curveto
closepath
778 115 moveto
778 99 772 86 762 76  curveto
751 65 738 60 723 60  curveto
707 60 694 65 684 76  curveto
673 86 668 99 668 115  curveto
668 130 673 143 684 154  curveto
694 164 707 170 723 170  curveto
738 170 751 164 762 154  curveto
772 143 778 130 778 115  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
332 485 moveto
332 469 326 456 316 446  curveto
305 435 292 430 277 430  curveto
261 430 248 435 238 446  curveto
227 456 222 469 222 485  curveto
222 500 227 513 238 524  curveto
248 534 261 540 277 540  curveto
292 540 305 534 316 524  curveto
326 513 332 500 332 485  curveto
closepath
332 115 moveto
332 99 326 86 316 76  curveto
305 65 292 60 277 60  curveto
261 60 248 65 238 76  curveto
227 86 222 99 222 115  curveto
222 130 227 143 238 154  curveto
248 164 261 170 277 170  curveto
292 170 305 164 316 154  curveto
326 143 332 130 332 115  curveto
closepath
fill
		} def

	/Q
		{
500 201 moveto
0 201 lineto
0 250 lineto
500 250 lineto
500 201 lineto
closepath
fill
		} def

	/R
		{
1000 201 moveto
0 201 lineto
0 250 lineto
1000 250 lineto
1000 201 lineto
closepath
fill
		} def

	/S
		{
726 446 moveto
654 446 lineto
500 597 lineto
346 446 lineto
274 446 lineto
500 668 lineto
726 446 lineto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/T
		{
621 479 moveto
621 463 615 450 605 440  curveto
594 429 581 424 566 424  curveto
550 424 537 429 527 440  curveto
516 450 511 463 511 479  curveto
511 494 516 507 527 518  curveto
537 528 550 534 566 534  curveto
581 534 594 528 605 518  curveto
615 507 621 494 621 479  curveto
closepath
278 479 moveto
278 463 272 450 262 440  curveto
251 429 238 424 223 424  curveto
207 424 194 429 184 440  curveto
173 450 168 463 168 479  curveto
168 494 173 507 184 518  curveto
194 528 207 534 223 534  curveto
238 534 251 528 262 518  curveto
272 507 278 494 278 479  curveto
closepath
621 121 moveto
621 105 615 92 605 82  curveto
594 71 581 66 566 66  curveto
550 66 537 71 527 82  curveto
516 92 511 105 511 121  curveto
511 136 516 149 527 160  curveto
537 170 550 176 566 176  curveto
581 176 594 170 605 160  curveto
615 149 621 136 621 121  curveto
closepath
278 121 moveto
278 105 272 92 262 82  curveto
251 71 238 66 223 66  curveto
207 66 194 71 184 82  curveto
173 92 168 105 168 121  curveto
168 136 173 149 184 160  curveto
194 170 207 176 223 176  curveto
238 176 251 170 262 160  curveto
272 149 278 136 278 121  curveto
closepath
fill
		} def

	/U
		{
830 25 moveto
170 300 lineto
830 575 lineto
830 25 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
305 300 lineto
778 103 lineto
closepath
fill
		} def

	/V
		{
830 300 moveto
170 25 lineto
170 575 lineto
830 300 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
222 497 lineto
222 103 lineto
695 300 lineto
closepath
fill
		} def

	/W
		{
830 -100 moveto
426 -100 lineto
386 -205 lineto
329 -205 lineto
370 -100 lineto
170 -100 lineto
170 -48 lineto
390 -48 lineto
475 173 lineto
170 300 lineto
592 476 lineto
666 667 lineto
721 667 lineto
658 503 lineto
830 575 lineto
830 25 lineto
523 153 lineto
446 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
632 436 lineto
542 201 lineto
778 103 lineto
closepath
566 409 moveto
305 300 lineto
494 221 lineto
566 409 lineto
closepath
fill
		} def

	/X
		{
830 -100 moveto
346 -100 lineto
306 -204 lineto
249 -204 lineto
289 -100 lineto
170 -100 lineto
170 -48 lineto
310 -48 lineto
370 109 lineto
170 25 lineto
170 575 lineto
498 438 lineto
568 617 lineto
623 617 lineto
546 418 lineto
830 300 lineto
437 136 lineto
366 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
528 370 lineto
463 204 lineto
695 300 lineto
closepath
480 390 moveto
222 497 lineto
222 103 lineto
397 176 lineto
480 390 lineto
closepath
fill
		} def

	/Y
		{
697 148 moveto
671 100 632 59 580 27  curveto
528 -5 476 -22 426 -22  curveto
315 -22 230 11 172 77  curveto
116 138 87 223 83 333  curveto
5 333 lineto
5 373 lineto
84 373 lineto
88 449 118 520 173 585  curveto
231 653 297 688 371 688  curveto
413 688 454 681 492 668  curveto
528 655 553 649 568 649  curveto
595 649 615 662 629 688  curveto
647 688 lineto
695 476 lineto
668 476 lineto
587 596 493 657 386 657  curveto
319 657 266 628 228 572  curveto
194 522 177 461 177 391  curveto
177 385 177 379 177 373  curveto
326 373 lineto
326 333 lineto
180 333 lineto
190 249 218 181 265 129  curveto
316 71 383 42 466 42  curveto
544 42 612 77 668 148  curveto
697 148 lineto
closepath
fill
		} def

	/Z
		{
516 154 moveto
444 51 390 0 353 0  curveto
337 0 323 6 312 18  curveto
300 30 295 45 295 61  curveto
295 69 299 91 308 125  curveto
319 163 331 202 343 242  curveto
359 296 367 333 367 353  curveto
367 372 361 382 351 382  curveto
316 382 273 341 222 260  curveto
182 197 153 140 135 88  curveto
130 70 125 52 121 34  curveto
113 11 101 0 85 0  curveto
62 0 51 8 51 24  curveto
51 26 56 50 66 97  curveto
142 453 lineto
56 410 lineto
56 457 lineto
154 506 lineto
163 549 lineto
170 583 174 605 174 617  curveto
174 627 172 634 169 639  curveto
161 647 138 651 98 653  curveto
98 675 lineto
257 675 lineto
229 544 lineto
323 591 lineto
323 544 lineto
218 491 lineto
155 190 lineto
247 352 324 433 385 433  curveto
420 433 438 408 438 358  curveto
438 342 430 307 414 253  curveto
404 221 394 190 385 160  curveto
372 118 366 87 366 67  curveto
366 55 372 49 384 49  curveto
406 49 444 88 498 168  curveto
516 154 lineto
closepath
fill
		} def

	/bracketleft
		{
402 25 moveto
381 -1 354 -14 321 -14  curveto
277 -14 226 24 168 101  curveto
143 74 104 35 51 -16  curveto
28 7 lineto
147 139 lineto
126 171 108 216 93 274  curveto
78 331 71 380 71 421  curveto
71 480 83 534 107 584  curveto
137 645 179 676 233 676  curveto
278 676 313 654 339 610  curveto
360 572 371 529 371 481  curveto
371 434 353 378 319 314  curveto
299 278 267 228 223 164  curveto
224 144 236 117 259 83  curveto
283 46 304 28 322 28  curveto
346 28 364 37 374 56  curveto
402 25 lineto
closepath
319 481 moveto
319 515 313 545 303 572  curveto
288 608 266 626 238 626  curveto
182 626 155 561 155 432  curveto
155 358 172 285 206 214  curveto
233 240 259 281 283 338  curveto
307 394 319 442 319 481  curveto
closepath
fill
		} def

	/backslash
		{
476 331 moveto
476 248 461 175 432 113  curveto
392 28 331 -14 250 -14  curveto
219 -14 191 -7 166 5  curveto
134 -92 lineto
90 -92 lineto
129 29 lineto
92 61 64 109 46 174  curveto
31 224 24 276 24 331  curveto
24 413 38 485 68 548  curveto
108 633 168 676 250 676  curveto
280 676 308 669 334 657  curveto
366 754 lineto
410 754 lineto
370 633 lineto
407 600 435 551 454 487  curveto
468 437 476 385 476 331  curveto
closepath
320 615 moveto
302 638 278 650 250 650  curveto
163 650 120 543 120 331  curveto
120 227 130 148 151 95  curveto
320 615 lineto
closepath
380 331 moveto
380 431 369 509 348 565  curveto
179 46 lineto
198 23 222 12 250 12  curveto
336 12 380 118 380 331  curveto
closepath
fill
		} def

	/bracketright
		{
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
fill
		} def

	/asciicircum
		{
950 456 moveto
50 456 lineto
50 508 lineto
950 508 lineto
950 456 lineto
closepath
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
950 92 moveto
50 92 lineto
50 144 lineto
950 144 lineto
950 92 lineto
closepath
fill
		} def

	/underscore
		{
950 547 moveto
50 547 lineto
50 599 lineto
950 599 lineto
950 547 lineto
closepath
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
950 1 moveto
50 1 lineto
50 53 lineto
950 53 lineto
950 1 lineto
closepath
fill
		} def

	/quoteleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/a
		{
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
fill
		} def

	/b
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/c
		{
700 547 moveto
50 547 lineto
50 599 lineto
700 599 lineto
700 547 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
700 1 moveto
50 1 lineto
50 53 lineto
700 53 lineto
700 1 lineto
closepath
fill
		} def

	/d
		{
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
fill
		} def

	/e
		{
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
fill
		} def

	/f
		{
700 365 moveto
550 365 lineto
550 417 lineto
700 417 lineto
700 365 lineto
closepath
450 365 moveto
300 365 lineto
300 417 lineto
450 417 lineto
450 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
200 417 moveto
200 365 lineto
50 365 lineto
50 417 lineto
200 417 lineto
closepath
fill
		} def

	/g
		{
700 183 moveto
550 183 lineto
550 235 lineto
700 235 lineto
700 183 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
450 235 moveto
450 183 lineto
300 183 lineto
300 235 lineto
450 235 lineto
closepath
200 183 moveto
50 183 lineto
50 235 lineto
200 235 lineto
200 183 lineto
closepath
fill
		} def

	/h
		{
700 456 moveto
550 456 lineto
550 508 lineto
700 508 lineto
700 456 lineto
closepath
450 456 moveto
300 456 lineto
300 508 lineto
450 508 lineto
450 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
200 508 moveto
200 456 lineto
50 456 lineto
50 508 lineto
200 508 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/i
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 92 moveto
550 92 lineto
550 144 lineto
700 144 lineto
700 92 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
450 144 moveto
450 92 lineto
300 92 lineto
300 144 lineto
450 144 lineto
closepath
200 92 moveto
50 92 lineto
50 144 lineto
200 144 lineto
200 92 lineto
closepath
fill
		} def

	/j
		{
700 379 moveto
700 365 696 353 687 343  curveto
677 333 666 328 652 328  curveto
638 327 626 331 616 341  curveto
606 351 600 363 600 377  curveto
599 391 603 402 613 412  curveto
623 422 635 427 649 428  curveto
663 428 674 424 684 414  curveto
694 404 699 393 700 379  curveto
closepath
425 379 moveto
425 365 421 353 412 343  curveto
402 333 391 328 377 328  curveto
363 327 351 331 341 341  curveto
331 351 325 363 325 377  curveto
324 391 328 402 338 412  curveto
348 422 360 427 374 428  curveto
388 428 399 424 409 414  curveto
419 404 424 393 425 379  curveto
closepath
700 172 moveto
50 172 lineto
50 224 lineto
700 224 lineto
700 172 lineto
closepath
150 379 moveto
150 365 146 353 137 343  curveto
127 333 116 328 102 328  curveto
88 327 76 331 66 341  curveto
56 351 50 363 50 377  curveto
49 391 53 402 63 412  curveto
73 422 85 427 99 428  curveto
113 428 124 424 134 414  curveto
144 404 149 393 150 379  curveto
closepath
fill
		} def

	/k
		{
868 435 moveto
730 0 lineto
269 0 lineto
132 435 lineto
500 702 lineto
868 435 lineto
closepath
807 415 moveto
500 638 lineto
193 415 lineto
307 52 lineto
692 52 lineto
807 415 lineto
closepath
fill
		} def

	/l
		{
906 351 moveto
703 0 lineto
297 0 lineto
94 351 lineto
297 702 lineto
703 702 lineto
906 351 lineto
closepath
846 351 moveto
673 650 lineto
327 650 lineto
154 351 lineto
327 52 lineto
673 52 lineto
846 351 lineto
closepath
fill
		} def

	/m
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
568 285 moveto
60 285 lineto
60 315 lineto
568 315 lineto
568 285 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/n
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
564 285 moveto
56 285 lineto
56 315 lineto
564 315 lineto
564 285 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/o
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/p
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/q
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 304 moveto
557 279 lineto
50 621 lineto
67 646 lineto
574 304 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/r
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 296 moveto
67 -46 lineto
50 -21 lineto
557 321 lineto
574 296 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/s
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 621 moveto
67 279 lineto
50 304 lineto
557 646 lineto
574 621 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/t
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -21 moveto
557 -46 lineto
50 296 lineto
67 321 lineto
574 -21 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/u
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/v
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/w
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/x
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/y
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/z
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bar
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/asciitilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/exclamdown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/sterling
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fraction
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/yen
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/florin
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/section
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/currency
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesingle
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/endash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/dagger
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/daggerdbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/periodcentered
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/paragraph
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bullet
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesinglbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ellipsis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/perthousand
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/questiondown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/grave
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/acute
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/circumflex
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/tilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/macron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/breve
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotaccent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dieresis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ring
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cedilla
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/hungarumlaut
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ogonek
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/caron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/emdash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/AE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordfeminine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/OE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordmasculine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ae
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotlessi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oe
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/germandbls
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/ESSTIXFive exch definefont pop
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
15.0 219.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
q
1 105 195 OPL
105 199
-5.0 -5.0 translate
q
97 208 7 13 rc
97.0 219.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
106.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
q
1 197 195 OPL
197 199
-5.0 -5.0 translate
193.0 216.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 289 195 OPL
289 199
-5.0 -5.0 translate
286.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
q
1 381 195 OPL
381 199
-5.0 -5.0 translate
378.0 219.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
Q
q
1 197 381 OPL
197 8
1 197 350 OPL
194 350
1 197 288 OPL
194 288
1 197 226 OPL
194 226
1 197 163 OPL
194 163
1 197 101 OPL
194 101
1 197 39 OPL
194 39
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
137 91 30 21 rc
141.0 108.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 18.0 scalefont setfont
(bfy) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 197 381 OPL
191 381
-5.0 -5.0 translate
q
177 380 7 13 rc
177.0 391.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
186.0 391.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
q
1 197 319 OPL
191 319
-5.0 -5.0 translate
q
177 317 7 13 rc
177.0 328.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
186.0 328.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 197 257 OPL
191 257
-5.0 -5.0 translate
q
177 255 7 13 rc
177.0 266.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
186.0 266.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 197 195 OPL
191 195
Q
q
1 197 132 OPL
191 132
-5.0 -5.0 translate
186.0 142.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 197 70 OPL
191 70
-5.0 -5.0 translate
186.0 80.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 197 8 OPL
191 8
-5.0 -5.0 translate
186.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 3956 a
 /End PSfrag
 887 3956 a 887 3340 a
 /Hide PSfrag
 887 3340
a 18 3410 a Fu(PSfrag)g(replacemen)m(ts)p 18 3445 869
4 v 887 3449 a
 /Unhide PSfrag
 887 3449 a 709 3631 a
  {
 709 3631 a Ff(\014)7
b(f)840 3649 y Fe(y)709 3631 y
  } 0/Place PSfrag
 709 3631 a 453 3844 a
  {

453 3844 a 18 w Fy(lim)453 3916 y Fe(z)t Fd(!)p Fe(z)618
3928 y Fc(c)681 3764 y Fx(h)p Ff(s)782 3781 y Fe(y)831
3764 y Fx(i)p 681 3817 196 5 v 698 3926 a(h)p Ff(n)p
Fx(i)453 3844 y
  } 1/Place PSfrag
 453 3844 a 729 4256 a Fu(Figure)32 b(6:)44
b(A)32 b(plot)h(of)f Fr(\014)6 b(f)1682 4271 y Fp(y)1756
4256 y Fu(against)50 b(lim)2092 4316 y Fp(z)s Fj(!)p
Fp(z)2232 4324 y Fm(c)2263 4256 y Fq(h)p Fr(s)2348 4271
y Fp(y)2389 4256 y Fq(i)p Fr(=)p Fq(h)p Fr(n)p Fq(i)32
b Fu(when)i Fr(!)d Fu(=)c(1.)0 4831 y Fg(6.2)135 b(Solution)46
b(of)f(the)g(full)h(mo)t(del)0 5016 y Fu(In)29 b(the)h(app)s(endix)g
(of)e(Ow)m(czarek)j Fs(et)h(al)c Fu(\(1993\))g(it)h(w)m(as)h(sho)m(wn)g
(that)f(if)f(one)i(adds)f(fugacit)m(y)h(v)-5 b(ariables)29
b Fr(y)3841 5031 y Fk(+)0 5136 y Fu(for)j(steps)i(in)f(the)g(p)s
(ositiv)m(e)h(v)m(ertical)f(direction)h(and)f Fr(y)2028
5151 y Fj(\000)2119 5136 y Fu(for)f(steps)i(in)e(the)h(negativ)m(e)h(v)
m(ertical)g(direction)0 5256 y(then)h(a)f(generalisation)i(of)e(the)h
(metho)s(d)g(for)f(solving)h(the)g(standard)g(problem)g(yields)i(the)e
(generating)1901 5682 y(19)p eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 100 a Fu(function)32 b Fr(G)p
Fu(\()p Fr(x;)17 b(y)643 115 y Fk(+)702 100 y Fr(;)g(y)794
115 y Fj(\000)852 100 y Fr(;)g(!)t Fu(\))30 b(as)i(describ)s(ed)i(in)d
(Section)i(2.)43 b(Using)32 b Fr(q)2467 115 y Fk(+)2554
100 y Fu(=)27 b Fr(y)2705 115 y Fk(+)2764 100 y Fr(!)35
b Fu(and)c Fr(q)3091 115 y Fj(\000)3178 100 y Fu(=)d
Fr(y)3330 115 y Fj(\000)3388 100 y Fr(!)35 b Fu(it)d(is)g(giv)m(en)0
220 y(b)m(y)617 390 y(1)22 b(+)g Fr(G)p Fu(\()p Fr(x;)17
b(y)1048 405 y Fk(+)1107 390 y Fr(;)g(y)1199 405 y Fj(\000)1257
390 y Fr(;)g(!)t Fu(\))27 b(=)2226 322 y(\(1)22 b Fq(\000)g
Fr(!)t Fu(\))p 1544 367 1675 4 v 1544 383 a Fl(\002)1586
464 y Fu(2)1664 438 y(\026)1635 464 y Fq(H)p Fu(\()p
Fr(x;)17 b(y)1904 479 y Fk(+)1963 464 y Fr(;)g(y)2055
479 y Fj(\000)2113 464 y Fr(;)g(!)t Fu(\))22 b Fq(\000)g
Fu(\(1)g(+)g Fr(!)k Fu(+)c(\(1)f Fq(\000)i Fr(!)t Fu(\))p
Fr(x)p Fu(\))3177 383 y Fl(\003)3256 390 y Fr(;)416 b
Fu(\(6.5\))0 630 y(where)513 861 y(\026)484 887 y Fq(H)q
Fu(\()p Fr(x;)17 b(y)754 902 y Fk(+)813 887 y Fr(;)g(y)905
902 y Fj(\000)963 887 y Fr(;)g(!)t Fu(\))82 b(=)1361
819 y(\()p Fr(A)1472 778 y Fk(+)1472 844 y(0)1553 819
y Fu(+)22 b Fr(B)1730 778 y Fk(+)1725 844 y(0)1789 819
y Fu(\)\()p Fr(A)1938 778 y Fk(+)1938 844 y(1)2019 819
y Fq(\000)h Fr(B)2198 778 y Fk(+)2193 844 y(1)2257 819
y Fu(\))f Fq(\000)h Fu(\()p Fr(A)2528 778 y Fj(\000)2528
844 y Fk(0)2609 819 y Fu(+)f Fr(B)2786 778 y Fj(\000)2781
844 y Fk(0)2845 819 y Fu(\)\()p Fr(A)2994 778 y Fj(\000)2994
844 y Fk(1)3076 819 y Fq(\000)g Fr(B)3254 778 y Fj(\000)3249
844 y Fk(1)3313 819 y Fu(\))p 1361 864 1991 4 v 1361
957 a(\()p Fr(A)1472 916 y Fk(+)1472 981 y(0)1553 957
y Fu(+)g Fr(B)1730 916 y Fk(+)1725 981 y(0)1789 957 y
Fu(\)\()p Fr(A)1938 916 y Fk(+)1938 981 y(0)2019 957
y Fq(\000)h Fr(B)2198 916 y Fk(+)2193 981 y(0)2257 957
y Fu(\))f Fq(\000)h Fu(\()p Fr(A)2528 916 y Fj(\000)2528
981 y Fk(0)2609 957 y Fu(+)f Fr(B)2786 916 y Fj(\000)2781
981 y Fk(0)2845 957 y Fu(\)\()p Fr(A)2994 916 y Fj(\000)2994
981 y Fk(0)3076 957 y Fq(\000)g Fr(B)3254 916 y Fj(\000)3249
981 y Fk(0)3313 957 y Fu(\))3389 887 y Fr(;)283 b Fu(\(6.6\))0
1159 y(with)674 1430 y Fr(A)747 1389 y Fj(\006)747 1455
y Fp(r)889 1430 y Fu(=)1089 1305 y Fj(1)1052 1335 y Fl(X)1048
1545 y Fp(m)p Fk(=0)1253 1363 y Fr(x)1308 1326 y Fk(2)p
Fp(m)1410 1363 y Fu(\()p Fr(!)26 b Fq(\000)c Fu(1\))1721
1326 y Fk(2)p Fp(m)1823 1363 y Fu(\()p Fr(q)1904 1378
y Fk(+)1963 1363 y Fr(q)2006 1378 y Fj(\000)2066 1363
y Fu(\))2104 1326 y Fp(m)p Fk(\()p Fp(m)p Fk(+)p Fp(r)r
Fk(\))2376 1363 y Fr(q)2419 1378 y Fj(\006)2478 1326
y Fp(m)p 1227 1407 1344 4 v 1227 1424 a Fl(Q)1321 1450
y Fp(m)1321 1527 y(k)r Fk(=1)1471 1498 y Fr(P)14 b Fu([\()p
Fr(q)1656 1513 y Fk(+)1715 1498 y Fr(q)1758 1513 y Fj(\000)1817
1498 y Fu(\))1855 1470 y Fp(k)r Fj(\000)p Fk(1)1988 1498
y Fr(q)2031 1513 y Fj(\006)2090 1498 y Fu(])p Fr(P)g
Fu([\()p Fr(q)2302 1513 y Fk(+)2361 1498 y Fr(q)2404
1513 y Fj(\000)2463 1498 y Fu(\))2501 1470 y Fp(k)2544
1498 y Fu(])3699 1430 y(\(6.7\))668 1751 y Fr(B)747 1710
y Fj(\006)742 1775 y Fp(r)889 1751 y Fu(=)1089 1626 y
Fj(1)1052 1656 y Fl(X)1048 1865 y Fp(m)p Fk(=0)1372 1683
y Fr(x)1427 1647 y Fk(2)p Fp(m)p Fk(+1)1619 1683 y Fu(\()p
Fr(!)26 b Fq(\000)c Fu(1\))1930 1647 y Fk(2)p Fp(m)p
Fk(+1)2122 1683 y Fu(\()p Fr(q)2203 1698 y Fk(+)2262
1683 y Fr(q)2305 1698 y Fj(\000)2365 1683 y Fu(\))2403
1647 y Fp(m)p Fk(\()p Fp(m)p Fk(+)p Fp(r)r Fk(\))2675
1683 y Fr(q)2718 1698 y Fj(\006)2777 1647 y Fp(r)r Fk(+)p
Fp(m)p Fk(+1)p 1227 1728 1941 4 v 1227 1819 a Fr(P)14
b Fu([\()p Fr(q)1412 1834 y Fk(+)1471 1819 y Fr(q)1514
1834 y Fj(\000)1573 1819 y Fu(\))1611 1790 y Fp(m)1678
1819 y Fr(q)1721 1834 y Fj(\006)1780 1819 y Fu(])1824
1744 y Fl(Q)1918 1771 y Fp(m)1918 1848 y(k)r Fk(=1)2067
1819 y Fr(P)g Fu([\()p Fr(q)2252 1834 y Fk(+)2311 1819
y Fr(q)2354 1834 y Fj(\000)2413 1819 y Fu(\))2451 1790
y Fp(k)r Fj(\000)p Fk(1)2584 1819 y Fr(q)2627 1834 y
Fj(\006)2686 1819 y Fu(])p Fr(P)g Fu([\()p Fr(q)2898
1834 y Fk(+)2957 1819 y Fr(q)3000 1834 y Fj(\000)3060
1819 y Fu(\))3098 1790 y Fp(k)3140 1819 y Fu(])3205 1751
y Fr(;)467 b Fu(\(6.8\))0 2052 y(and)1466 2173 y Fr(P)14
b Fu([)p Fr(\025)p Fu(])27 b(=)h(\()p Fr(\025)22 b Fq(\000)g
Fu(1\)\()p Fr(\025)g Fq(\000)h Fr(!)t Fu(\))p Fr(:)1264
b Fu(\(6.9\))0 2347 y(Note)39 b(that)f Fr(q)502 2362
y Fk(+)562 2347 y Fr(q)605 2362 y Fj(\000)702 2347 y
Fu(=)g Fr(q)863 2311 y Fk(2)902 2347 y Fu(,)i(and)f(giv)m(en)h(that)f
(all)f(the)h(parameters)h(are)f(p)s(ositiv)m(e)h(w)m(e)f(ha)m(v)m(e)h
Fr(q)i Fu(=)3585 2286 y Fq(p)p 3668 2286 205 4 v 61 x
Fr(q)3711 2362 y Fk(+)3771 2347 y Fr(q)3814 2362 y Fj(\000)3873
2347 y Fu(.)0 2468 y(This)27 b(solution)g(is)g(then)g(a)f(clear)h
(generalisation)g(of)f(the)h(form)f(for)g(the)g(horizon)m(tal)h
(pulling)g(mo)s(del)g(where)597 2726 y(1)22 b(+)g Fr(G)p
Fu(\()p Fr(x;)17 b(y)t(;)g(y)t(;)g(!)t Fu(\))25 b(=)2222
2659 y(1)d Fq(\000)h Fr(!)p 1413 2704 1853 4 v 1413 2795
a Fu([2)p Fq(H)q Fu(\()p Fr(y)t(;)17 b(y)t(!)t(;)g(xy)t
Fu(\()p Fr(!)22 b Fq(\000)h Fu(1\)\))f Fq(\000)g Fu(\(1)g(+)g
Fr(!)k Fu(+)c(\(1)f Fq(\000)i Fr(!)t Fu(\))p Fr(x)p Fu(\)])3276
2726 y Fr(:)348 b Fu(\(6.10\))0 3025 y(where)34 b Fq(H)q
Fu(\()p Fr(y)t(;)17 b(q)t(;)g(t)p Fu(\))26 b(=)805 2977
y Fp(H)5 b Fk(\()p Fp(y)r(;q)r(;q)r(t)p Fk(\))p 805 3002
288 4 v 822 3059 a Fp(H)g Fk(\()p Fp(y)r(;q)r(;t)p Fk(\))1135
3025 y Fu(is)33 b(giv)m(en)h(in)e(terms)i(of)e Fr(H)8
b Fu(\()p Fr(y)t(;)17 b(q)t(;)g(t)p Fu(\))30 b(de\014ned)k(b)m(y)g
(equation)f(\(3.31\).)146 3159 y(Ho)m(w)m(ev)m(er)38
b(the)e(problem)g(of)f(generalising)i(the)f(analysis)h(of)e(Prellb)s
(erg)h(\(1995\))e(is)i(a)f(daun)m(ting)i(one.)0 3279
y(On)29 b(the)h(other)f(hand)g(w)m(e)h(can)g(still)f(mak)m(e)i(some)f
(deductions)g(ab)s(out)f(the)g(b)s(eha)m(viour)h(of)f(the)h(generating)
0 3400 y(function.)80 b(Since)46 b(the)f(partition)g(function)g(is)g(p)
s(ositiv)m(e)h(w)m(e)g(kno)m(w)g(that)2868 3375 y(^)2846
3400 y Fr(G)o Fu(\()p Fr(z)t Fu(;)17 b Fr(h;)g(v)t(;)g(!)t
Fu(\))44 b(is)h(a)g(strictly)0 3520 y(increasing)34 b(function)f(of)f
Fr(z)37 b Fu(for)32 b(\014xed)i Fr(h;)17 b(v)t(;)g(!)30
b(>)e Fu(0.)146 3640 y(Let)h(us)g(consider)h Fr(!)h Fq(\025)d
Fu(1.)42 b(The)29 b(functions)g Fr(A)1814 3604 y Fj(\006)1814
3665 y Fp(r)1902 3640 y Fu(and)f Fr(B)2166 3604 y Fj(\006)2161
3665 y Fp(r)2254 3640 y Fu(con)m(v)m(erge)i(whenev)m(er)h
Fr(q)g(<)d Fu(1)g(and)h(moreo)m(v)m(er)0 3761 y(there)i(are)f
(singularities)i(when)f Fq(j)p Fr(q)t Fq(j)c Fu(=)g(1.)43
b(The)31 b(solution)g(for)e(the)i(generating)f(function)h
Fr(G)p Fu(\()p Fr(x;)17 b(y)3545 3776 y Fk(+)3604 3761
y Fr(;)g(y)3696 3776 y Fj(\000)3754 3761 y Fr(;)g(!)t
Fu(\))0 3881 y(is)35 b(giv)m(en)h(in)f(the)g(next)h(section)f(and)g
(one)g(\014nds)h(that)e Fr(G)p Fu(\()p Fr(x;)17 b(y)2276
3896 y Fk(+)2335 3881 y Fr(;)g(y)2427 3896 y Fj(\000)2485
3881 y Fr(;)g(!)t Fu(\))34 b(on)g(this)i(surface)f(is)g(\014nite)h
(when)0 4002 y Fr(!)c(>)d(!)259 4017 y Fp(t)288 4002
y Fu(,where)35 b Fr(!)659 4017 y Fp(t)721 4002 y Fu(is)f(giv)m(en)g(b)m
(y)g(the)g(solution)g(of)e(equation)i(\(6.26\).)45 b(The)34
b(only)g(singularities)h(that)e(can)0 4122 y(o)s(ccur)c(in)g(the)g
(generating)g(function)g(for)f Fr(q)j(<)d Fu(1)g(are)h(p)s(oles)g(o)s
(ccurring)g(when)g(the)g(denominator)g(of)f(\(6.5\))0
4242 y(is)39 b(zero.)60 b(The)39 b(nature)f(of)f(these)j(p)s(oles)e(is)
h(unclear)g(but)f(w)m(e)h(conjecture)g(that)f(they)h(are)f(simple)h(p)s
(oles)0 4363 y(and)33 b(that)f(they)i(only)f(exist)g(when)h
Fr(!)d(<)d(!)1577 4378 y Fp(t)1606 4363 y Fu(.)0 4771
y Fg(6.3)135 b(Solving)46 b(the)f(full)g(mo)t(del)h(on)f(the)g(sp)t
(ecial)g(surface)h Ff(z)38 b Fy(=)c(1)p Ff(=!)0 4956
y Fu(While)d(expression)i(\(6.6\))c(is)i(rather)f(un)m(wieldy)-8
b(,)33 b(it)d(is)h(p)s(ossible)g(to)f(\014nd)h(a)f(sub-manifold)g(of)g
(parameters)0 5076 y(for)i(whic)m(h)i(the)f(solution)g(can)g(b)s(e)g
(made)g(more)g(explicit.)45 b(If)32 b(w)m(e)i(restrict)g(to)1166
5296 y Fr(q)1209 5311 y Fk(+)1268 5296 y Fr(q)1311 5311
y Fj(\000)1398 5296 y Fu(=)28 b Fr(q)1549 5255 y Fk(2)1616
5296 y Fu(=)f(1)130 b(that)32 b(is)h Fr(q)f Fu(=)27 b
Fr(!)t(z)32 b Fu(=)c(1)f Fr(;)917 b Fu(\(6.11\))1901
5682 y(20)p eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 100 a Fu(then)36 b(\(6.6\))f(has)h(a)f
(singular)h(limit.)53 b(This)37 b(is)f(analogous)g(to)f(the)h(fact)f
(that)h(in)f(the)h(case)h(of)e(\(6.10\))g(one)0 220 y(obtains)e(an)f
(algebraic)h(function)g(for)f Fr(q)g Fu(=)27 b(1.)146
340 y(Hence)k(w)m(e)g(ha)m(v)m(e)g Fr(q)839 355 y Fk(+)926
340 y Fu(=)d Fr(v)33 b Fu(and)d Fr(q)1340 355 y Fj(\000)1427
340 y Fu(=)e(1)p Fr(=v)t Fu(.)42 b(Also,)31 b(w)m(e)f(shall)h(retain)f
(the)g(v)-5 b(ariable)30 b Fr(x)g Fu(for)g(con)m(v)m(enience)0
461 y(during)j(the)g(calculations)h(b)s(efore)e(substituting)i
Fr(x)28 b Fu(=)g Fr(h=!)36 b Fu(as)c(required)i(in)f(the)g(\014nal)g
(expressions.)146 581 y(Let)44 b Fr(g)383 545 y Fj(\006)379
606 y Fp(r)487 581 y Fu(=)h Fr(y)656 596 y Fj(\006)715
545 y(\000)p Fp(r)808 581 y Fr(G)885 545 y Fj(\006)885
606 y Fp(r)987 581 y Fu(where)f Fr(G)1356 545 y Fj(\006)1356
606 y Fp(r)1458 581 y Fu(is)g(the)g(generating)f(function)h(for)e(w)m
(alks)j(with)f Fr(r)i Fu(steps)e(in)g(the)0 702 y(p)s(ositiv)m(e)35
b(and)e(negativ)m(e)i(directions)f(resp)s(ectiv)m(ely)-8
b(,)37 b(and)c(w)m(e)i(ha)m(v)m(e)f(in)g(analogy)f(with)h(the)g(deriv)
-5 b(ation)33 b(of)0 822 y(the)g(full)g(problem)611 1042
y Fr(g)662 1001 y Fj(\006)658 1067 y Fp(r)r Fk(+4)808
1042 y Fq(\000)23 b Fu(\()p Fr(!)i Fu(+)d(1\)\()p Fr(q)1298
1057 y Fj(\006)1379 1042 y Fu(+)g(1\))p Fr(g)1615 1001
y Fj(\006)1611 1067 y Fp(r)r Fk(+3)1761 1042 y Fu(+)g(\()p
Fr(!)t Fu(\(1)f(+)h Fr(q)2211 1057 y Fj(\006)2271 1001
y Fk(2)2310 1042 y Fu(\))g(+)g(\()p Fr(!)j Fu(+)d(1\))2777
1001 y Fk(2)2817 1042 y Fr(q)2860 1057 y Fj(\006)2919
1042 y Fu(\))p Fr(g)3008 1001 y Fj(\006)3004 1067 y Fp(r)r
Fk(+2)808 1187 y Fq(\000)h Fr(!)t(q)1016 1202 y Fj(\006)1075
1187 y Fu(\()p Fr(!)i Fu(+)d(1\)\()p Fr(q)1465 1202 y
Fj(\006)1546 1187 y Fu(+)g(1\))p Fr(g)1782 1146 y Fj(\006)1778
1212 y Fp(r)r Fk(+1)1928 1187 y Fu(+)g Fr(!)2091 1146
y Fk(2)2129 1187 y Fr(q)2172 1202 y Fj(\006)2232 1146
y Fk(2)2271 1187 y Fr(g)2322 1146 y Fj(\006)2318 1212
y Fp(r)2408 1187 y Fu(=)28 b Fr(q)2555 1202 y Fj(\006)2614
1187 y Fr(x)2669 1146 y Fk(2)2709 1187 y Fu(\()p Fr(!)d
Fq(\000)e Fu(1\))3020 1146 y Fk(2)3059 1187 y Fr(g)3110
1146 y Fj(\006)3106 1212 y Fp(r)r Fk(+2)3262 1187 y Fr(:)362
b Fu(\(6.12\))0 1407 y(The)34 b(c)m(haracteristic)g(p)s(olynomial)f(is)
647 1627 y Fr(P)710 1642 y Fj(\006)769 1627 y Fu(\()p
Fr(\025)p Fu(\))27 b(=)h(\()p Fr(\025)22 b Fq(\000)g
Fu(1\)\()p Fr(\025)g Fq(\000)h Fr(!)t Fu(\)\()p Fr(\025)e
Fq(\000)i Fr(q)1915 1642 y Fj(\006)1974 1627 y Fu(\)\()p
Fr(\025)f Fq(\000)g Fr(q)2271 1642 y Fj(\006)2331 1627
y Fr(!)t Fu(\))f Fq(\000)i Fr(q)2598 1642 y Fj(\006)2657
1627 y Fr(x)2712 1586 y Fk(2)2752 1627 y Fu(\()p Fr(!)i
Fq(\000)e Fu(1\))3063 1586 y Fk(2)3102 1627 y Fr(\025)3159
1586 y Fk(2)3226 1627 y Fr(:)398 b Fu(\(6.13\))0 1847
y(Despite)29 b(b)s(eing)f(a)g(p)s(olynomial)g(of)g(degree)h(four,)f
Fr(P)1876 1862 y Fj(\006)1935 1847 y Fu(\()p Fr(\025)p
Fu(\))g(has)h(su\016cien)m(t)h(symmetry)g(to)e(allo)m(w)g(for)f(simple)
0 1968 y(explicit)37 b(solutions.)53 b(The)37 b(k)m(ey)g(observ)-5
b(ation)36 b(is)g(that)g(if)f Fr(\025)g Fu(is)h(a)g(ro)s(ot)e(of)h
Fr(P)2779 1983 y Fj(\006)2838 1968 y Fu(\()p Fr(\025)p
Fu(\),)h(then)h(so)e(is)h Fr(q)3526 1983 y Fj(\006)3586
1968 y Fr(!)t(=\025)p Fu(.)51 b(If)0 2088 y(w)m(e)34
b(de\014ne)1616 2208 y Fr(\026)1675 2223 y Fj(\006)1762
2208 y Fu(=)27 b Fr(\025)22 b Fu(+)2052 2141 y Fr(!)t(q)2160
2156 y Fj(\006)p 2052 2185 167 4 v 2107 2277 a Fr(\025)2257
2208 y(;)1367 b Fu(\(6.14\))0 2408 y(then)33 b Fr(\026)281
2423 y Fj(\006)372 2408 y Fu(satis\014es)685 2628 y Fr(\026)744
2643 y Fj(\006)825 2628 y Fq(\000)23 b Fu(\()p Fr(!)i
Fu(+)d(1\)\()p Fr(q)1315 2643 y Fj(\006)1396 2628 y Fu(+)g(1\))p
Fr(\026)1640 2643 y Fj(\006)1721 2628 y Fu(+)g(\()p Fr(!)j
Fu(+)d Fr(q)2084 2643 y Fj(\006)2144 2628 y Fu(\)\(1)f(+)h
Fr(!)t(q)2496 2643 y Fj(\006)2555 2628 y Fu(\))g Fq(\000)h
Fr(x)2770 2587 y Fk(2)2810 2628 y Fu(\()p Fr(!)i Fq(\000)e
Fu(1\))3121 2587 y Fk(2)3187 2628 y Fr(:)437 b Fu(\(6.15\))0
2848 y(W)-8 b(e)32 b(can)h(therefore)f(obtain)g(all)g(four)g(ro)s(ots)f
(of)h Fr(P)1815 2863 y Fj(\006)1874 2848 y Fu(\()p Fr(\025)p
Fu(\))g(b)m(y)g(solving)h(the)g(quadratic)f(equation)h(\(6.15\))e(for)0
2969 y Fr(\026)59 2984 y Fj(\006)118 2969 y Fu(,)h(follo)m(w)m(ed)i(b)m
(y)f(solving)h(the)f(quadratic)g(equation)g(\(6.14\))f(for)g
Fr(\025)p Fu(.)146 3089 y(The)i(general)f(solution)g(for)f(\(6.12\))g
(is)h(a)f(linear)h(com)m(bination)754 3399 y Fr(g)805
3358 y Fj(\006)801 3424 y Fp(r)891 3399 y Fu(=)1049 3275
y Fk(4)995 3304 y Fl(X)1010 3514 y Fp(i)p Fk(=1)1156
3399 y Fr(A)1229 3414 y Fp(i)1257 3399 y Fr(\025)1314
3358 y Fp(r)1314 3424 y Fj(\006)p Fp(;i)1611 3399 y Fu(resp)s(ectiv)m
(ely)199 b Fr(G)2383 3358 y Fj(\006)2383 3424 y Fp(r)2469
3399 y Fu(=)28 b Fr(y)2621 3414 y Fj(\006)2680 3358 y
Fp(r)2788 3275 y Fk(4)2734 3304 y Fl(X)2749 3514 y Fp(i)p
Fk(=1)2895 3399 y Fr(A)2968 3414 y Fp(i)2996 3399 y Fr(\025)3053
3358 y Fp(r)3053 3424 y(i)3118 3399 y Fr(:)506 b Fu(\(6.16\))146
3701 y(After)33 b(some)g(algebra)g(the)g(generating)g(function)g(can)g
(b)s(e)f(found)h(to)f(b)s(e)83 3946 y(1)22 b(+)274 3921
y(^)252 3946 y Fr(G)p Fu(\(1)p Fr(=!)t Fu(;)17 b Fr(h;)g(v)t(;)g(!)t
Fu(\))25 b(=)i Fr(G)p Fu(\()p Fr(h=!)t(;)17 b(v)t(=!)t(;)g
Fu(1)p Fr(=v)t(!)t(;)g(!)t Fu(\))23 b(=)1085 4095 y(\()p
Fr(t)1158 4110 y Fk(1)1198 4095 y Fr(t)1233 4110 y Fk(2)1273
4095 y Fr(!)i Fq(\000)e Fu(1\)\()p Fr(t)1619 4110 y Fk(1)1658
4095 y Fr(v)j Fq(\000)d Fu(1\)\()p Fr(t)1991 4110 y Fk(2)2030
4095 y Fr(v)j Fq(\000)c Fu(1\)\()p Fr(!)k Fq(\000)c Fu(1\))p
Fr(!)2665 4059 y Fk(2)p 10 4139 3770 4 v 10 4230 a Fu([)p
Fr(t)72 4245 y Fk(1)112 4230 y Fr(t)147 4245 y Fk(2)186
4230 y Fu(\()p Fr(!)k Fq(\000)c Fu(1\))497 4202 y Fk(2)537
4230 y Fr(h)593 4202 y Fk(2)654 4230 y Fu(+)g(\()p Fr(!)k
Fq(\000)c Fu(1\)\()p Fr(t)1136 4245 y Fk(1)1176 4230
y Fr(t)1211 4245 y Fk(2)1250 4230 y Fr(v)k Fq(\000)d
Fu(1\)\()p Fr(t)1583 4245 y Fk(1)1622 4230 y Fr(t)1657
4245 y Fk(2)1697 4230 y Fr(!)t(v)i Fq(\000)e Fu(1\))p
Fr(h!)i Fq(\000)e Fu(\()p Fr(t)2336 4245 y Fk(1)2397
4230 y Fq(\000)g Fu(1\)\()p Fr(t)2657 4245 y Fk(1)2696
4230 y Fr(v)j Fq(\000)d Fu(1\)\()p Fr(t)3029 4245 y Fk(2)3090
4230 y Fq(\000)g Fu(1\)\()p Fr(t)3350 4245 y Fk(2)3389
4230 y Fr(v)j Fq(\000)d Fu(1\))p Fr(!)3714 4202 y Fk(3)3752
4230 y Fu(])3817 4162 y Fr(;)3678 4348 y Fu(\(6.17\))0
4567 y(where)34 b Fr(t)317 4582 y Fk(1)389 4567 y Fu(and)f
Fr(t)614 4582 y Fk(2)686 4567 y Fu(are)f(t)m(w)m(o)i(distinct)f(ro)s
(ots)g(of)f Fr(L)p Fu(\()p Fr(t)p Fu(\))c(=)f(0)33 b(with)692
4787 y Fr(L)p Fu(\()p Fr(t)p Fu(\))28 b(=)f Fr(v)t(h)1107
4746 y Fk(2)1147 4787 y Fu(\()p Fr(!)e Fq(\000)e Fu(1\))1458
4746 y Fk(2)1497 4787 y Fr(t)1532 4746 y Fk(2)1594 4787
y Fq(\000)f Fu(\()p Fr(t)h Fq(\000)f Fu(1\)\()p Fr(!)t(t)f
Fq(\000)i Fu(1\)\()p Fr(v)t(t)f Fq(\000)g Fu(1\)\()p
Fr(!)t(v)t(t)g Fq(\000)g Fu(1\))p Fr(!)3115 4746 y Fk(2)3181
4787 y Fr(:)443 b Fu(\(6.18\))0 5007 y(W)-8 b(e)33 b(note)g(that)f
Fr(L)p Fu(\()p Fr(t)p Fu(\))h(is)g(a)f(quartic)i(p)s(olynomial)f(in)g
Fr(t)p Fu(.)43 b(If)33 b(w)m(e)g(let)1692 5271 y Fr(s)27
b Fu(=)1879 5204 y(1)p 1879 5248 49 4 v 1886 5339 a Fr(t)1960
5271 y Fu(+)22 b Fr(v)t(!)t(t)1442 b Fu(\(6.19\))1901
5682 y(21)p eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 100 a Fu(then)33 b Fr(s)g Fu(satis\014es)774
302 y Fr(s)820 261 y Fk(2)882 302 y Fq(\000)23 b Fu(\()p
Fr(!)i Fu(+)d(1\)\()p Fr(v)j Fu(+)d(1\))p Fr(s)g Fu(+)g(\()p
Fr(!)k Fu(+)c Fr(v)t Fu(\)\(1)f(+)h Fr(!)t(v)t Fu(\))27
b(=)g Fr(v)t(h)2661 261 y Fk(2)2711 235 y Fu(\()p Fr(!)e
Fq(\000)e Fu(1\))3022 198 y Fk(2)p 2711 279 351 4 v 2834
370 a Fr(!)2899 342 y Fk(2)3099 302 y Fr(;)525 b Fu(\(6.20\))0
496 y(and)33 b(the)g(t)m(w)m(o)g(solutions)g(of)g(this)g(equation)g
(are)686 733 y Fr(s)732 748 y Fj(\006)819 733 y Fu(=)932
664 y(\()p Fr(!)26 b Fu(+)c(1\)\()p Fr(v)j Fu(+)d(1\))g
Fq(\006)1659 579 y Fl(p)p 1758 579 1391 4 v 1758 664
a Fu(\()p Fr(!)k Fq(\000)c Fu(1\))2069 635 y Fk(2)2125
664 y Fu(\()p Fr(v)2214 635 y Fk(2)2275 664 y Fq(\000)h
Fu(2)p Fr(v)j Fu(+)c(1)g(+)g(4)p Fr(v)t(h)2920 635 y
Fk(2)2959 664 y Fr(=!)3073 635 y Fk(2)3111 664 y Fu(\))p
932 710 2217 4 v 2016 802 a(2)3187 733 y Fr(:)437 b Fu(\(6.21\))0
932 y(No)m(w)33 b(only)g(one)g(of)f(the)h(solutions)h(of)e(\(6.19\))g
(is)h(applicable,)g(namely)1546 1171 y Fr(t)28 b Fu(=)1722
1103 y Fr(s)22 b Fq(\000)1890 1021 y(p)p 1973 1021 371
4 v 82 x Fr(s)2019 1074 y Fk(2)2081 1103 y Fq(\000)g
Fu(4)p Fr(v)t(!)p 1722 1148 622 4 v 1951 1239 a Fu(2)p
Fr(v)t(!)3651 1171 y Fu(\(6.22\))0 1364 y(whic)m(h)34
b(giv)m(es)g(us)f(that)1479 1554 y Fr(t)1514 1569 y Fk(1)1581
1554 y Fu(=)1694 1484 y Fr(s)1740 1499 y Fk(+)1822 1484
y Fq(\000)1921 1400 y Fl(p)p 2021 1400 391 4 v 84 x Fr(s)2067
1450 y Fk(2)2067 1506 y(+)2148 1484 y Fq(\000)23 b Fu(4)p
Fr(v)t(!)p 1694 1531 717 4 v 1971 1623 a Fu(2)p Fr(v)t(!)3651
1554 y Fu(\(6.23\))0 1732 y(and)1451 1902 y Fr(t)1486
1917 y Fk(2)1554 1902 y Fu(=)1667 1833 y Fr(s)1713 1848
y Fj(\000)1794 1833 y Fq(\000)1894 1748 y Fl(p)p 1993
1748 391 4 v 1993 1833 a Fr(s)2039 1798 y Fk(2)2039 1854
y Fj(\000)2121 1833 y Fq(\000)f Fu(4)p Fr(v)t(!)p 1667
1880 717 4 v 1944 1971 a Fu(2)p Fr(v)t(!)2422 1902 y(:)1202
b Fu(\(6.24\))0 2080 y(Imp)s(ortan)m(tly)37 b(on)f(substitution)h(in)m
(to)f(the)g(generating)h(function)f(the)h(denominator)f(can)g(b)s(e)g
(found)g(to)0 2200 y(b)s(e)d(a)f(p)s(olynomial)h(with)g(a)g(factor)550
2288 y Fl(\000)595 2368 y Fr(v)t(!)711 2327 y Fk(2)772
2368 y Fu(+)22 b(2)p Fr(h!)t(v)j Fu(+)d Fr(v)t(h)1317
2327 y Fk(2)1378 2368 y Fq(\000)h Fu(2)p Fr(v)t(h)1634
2327 y Fk(2)1673 2368 y Fr(!)j Fu(+)c Fr(!)1923 2327
y Fk(4)1961 2368 y Fr(v)k Fq(\000)d Fu(2)p Fr(h!)2304
2327 y Fk(3)2343 2368 y Fr(v)i Fu(+)d Fr(v)t(h)2620 2327
y Fk(2)2660 2368 y Fr(!)2725 2327 y Fk(2)2786 2368 y
Fq(\000)g Fr(!)2950 2327 y Fk(3)3011 2368 y Fq(\000)h
Fr(v)3162 2327 y Fk(2)3201 2368 y Fr(!)3266 2327 y Fk(3)3305
2288 y Fl(\001)3651 2368 y Fu(\(6.25\))0 2537 y(and)34
b(no)f(other)h(relev)-5 b(an)m(t)35 b(factors.)47 b(Hence)35
b(the)f(generating)g(function)g(is)g(singular)g(on)g(the)g(curv)m(e)h
Fr(q)f Fu(=)29 b(1)0 2657 y(when)k(this)g(factor)e(is)h(zero.)44
b(It)32 b(can)g(b)s(e)g(seen)h(that)f(the)g(algebraic)h(singularit)m(y)
g(\(a)e(square)i(ro)s(ot\))e(o)s(ccurs)0 2777 y(in)c(the)h(generating)f
(function)h(at)e(the)i(same)g(place)f(b)m(y)h(considering)h(the)e
(discriminan)m(t)i(of)e(\(6.13\).)41 b(It)27 b(can)0
2898 y(therefore)h(b)s(e)f(deduced)i(that)e(the)h(exp)s(onen)m(t)g
Fr(\015)1739 2913 y Fp(u)1812 2898 y Fu(=)f(1)p Fr(=)p
Fu(2)g(describing)h(the)g(singularit)m(y)h(in)e(the)h(generating)0
3018 y(function)g(approac)m(hing)g(the)f(transition)h(p)s(oin)m(t)f
(tangen)m(tially)i(\(as)e(describ)s(ed)i(in)f(Ow)m(czarek)h
Fs(et)h(al)d Fu(1993\).)0 3138 y(The)32 b(exp)s(onen)m(t)h(is)f(indep)s
(enden)m(t)h(of)e(the)h(v)-5 b(alue)31 b(of)g Fr(h)g
Fu(and)h Fr(v)j Fu(and)c(so)g(of)g(whether)i(there)f(is)g(a)f(horizon)m
(tal)0 3259 y(and/or)h(v)m(ertical)i(pulling)f(force.)146
3379 y(W)-8 b(e)33 b(therefore)g(ha)m(v)m(e)h(the)f(lo)s(cation)g(of)f
(the)h(critical)g(p)s(oin)m(t)g(as)779 3547 y Fr(!)844
3506 y Fk(2)882 3547 y Fu(\(1)22 b(+)g Fr(!)1154 3506
y Fk(2)1193 3547 y Fu(\))g(+)g(2)p Fr(!)t Fu(\(1)f Fq(\000)i
Fr(!)1738 3506 y Fk(2)1776 3547 y Fu(\))p Fr(h)g Fu(+)f(\(1)g
Fq(\000)g Fr(!)t Fu(\))2302 3506 y Fk(2)2341 3547 y Fr(h)2397
3506 y Fk(2)2464 3547 y Fu(=)28 b Fr(!)2633 3506 y Fk(3)2671
3547 y Fu(\()p Fr(v)e Fu(+)c(1)p Fr(=v)t Fu(\))27 b Fr(:)530
b Fu(\(6.26\))0 3715 y(One)33 b(can)g(rewrite)g(this)h(as)312
3884 y(cosh)q(\()p Fr(\014)6 b(f)644 3899 y Fp(y)685
3884 y Fr(=)p Fu(2\))27 b(=)h(exp)q(\()p Fq(\000)p Fr(\014)6
b(=)p Fu(2\))17 b(cosh\()p Fr(\014)6 b Fu(\))21 b Fq(\000)i
Fu(exp)q(\()p Fq(\000)p Fr(\014)6 b Fu(\))17 b(sinh)q(\()p
Fr(\014)6 b(=)p Fu(2\)\(exp\()p Fr(\014)g(f)2994 3899
y Fp(x)3037 3884 y Fu(\))22 b Fq(\000)h Fu(1\))k Fr(:)313
b Fu(\(6.27\))146 4052 y(When)38 b(there)f(is)h(no)e(horizon)m(tal)h
(force,)h(that)f(is)g Fr(h)e Fu(=)f(1,)k(w)m(e)g(therefore)f(\014nd)g
(the)g(critical)g(p)s(oin)m(t)g(to)0 4172 y(b)s(e)c(when)1368
4312 y(\()p Fr(!)1471 4271 y Fk(2)1532 4312 y Fu(+)22
b(1\))1717 4271 y Fk(2)1784 4312 y Fu(=)27 b(\()p Fr(v)f
Fu(+)c(2)g(+)2276 4245 y(1)p 2275 4289 51 4 v 2275 4380
a Fr(v)2336 4312 y Fu(\))p Fr(!)2439 4271 y Fk(3)2505
4312 y Fr(;)1119 b Fu(\(6.28\))0 4495 y(whic)m(h)31 b(reduces)f(to)f
(the)h(kno)m(wn)g(result)g(of)f(Binder)p Fs(et)j(al)d
Fu(\(1990\))f(when)i Fr(v)i Fu(=)27 b(1.)42 b(F)-8 b(rom)29
b(this)h(equation)g(the)0 4615 y(critical)j(force)g(temp)s(erature)g
(plot)g(can)g(b)s(e)g(found)f(as)1188 4783 y Fr(f)1247
4742 y Fp(t)1236 4808 y(y)1306 4783 y Fu(=)27 b Fr(\014)1470
4742 y Fj(\000)p Fk(1)1581 4783 y Fu(cosh)1765 4741 y
Fj(\000)p Fk(1)1876 4703 y Fl(\000)1922 4783 y Fu(2)p
Fr(e)2016 4742 y Fj(\000)p Fp(\014)2135 4783 y Fu(cosh)2319
4741 y Fk(2)2359 4783 y Fu(\()p Fr(\014)6 b Fu(\))22
b Fq(\000)g Fu(1)2666 4703 y Fl(\001)3651 4783 y Fu(\(6.29\))0
4952 y(In)42 b(Figure)g(7)g(w)m(e)h(plot)f(the)g(critical)h(force)f
(against)g(temp)s(erature)h(for)e(v)m(ertical)j(pulling.)72
b(Note)42 b(that)0 5072 y(as)34 b(the)g(temp)s(erature)h(approac)m(hes)
g(the)g(critical)f(v)-5 b(alue)35 b(for)e(no)h(pulling)g(force)h(the)f
(slop)s(e)g(of)g(this)g(curv)m(e)0 5192 y(div)m(erges)g(in)f(con)m
(trast)g(to)g(the)g(analogous)f(horizon)m(tal)h(pulling)g(curv)m(e.)146
5313 y(Note)39 b(that)f(when)h Fr(v)i Fu(=)c(1)h(in)g(\(6.26\))g(w)m(e)
h(\014nd)g(equation)g(\(5.1\),)g(that)f(w)m(as)h(deriv)m(ed)h(in)f(a)e
(previous)0 5433 y(section.)1901 5682 y(22)p eop end
%%Page: 23 23
TeXDict begin 23 22 bop 887 2126 a
 /PSfrag where{pop(bb)[[0(Bl)1 0]](fyt)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/fyT.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:21:41 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
58.0 6.017493 324.981812 338.982513 rc
55 59 64 OPL
59 64
60 64
60 64
60 64
61 64
62 64
63 64
64 64
66 64
69 64
72 64
79 64
86 64
93 64
99 64
106 64
113 64
119 65
126 65
133 66
140 67
146 68
153 69
159 71
167 74
173 76
180 79
186 83
193 86
200 91
207 95
213 100
220 106
227 112
233 118
240 125
247 133
253 141
260 149
267 160
274 170
281 181
287 193
294 208
300 223
304 232
307 242
310 253
314 265
317 281
321 303
321 311
322 320
323 327
323 340
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 349 344 OPL
349 346
1 284 344 OPL
284 346
1 220 344 OPL
220 346
1 156 344 OPL
156 346
1 91 344 OPL
91 346
1 59 344 OPL
381 344
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
205 367 28 23 rc
209.0 386.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(bb) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
59 349
-5.0 -5.0 translate
61.0 368.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 123 344 OPL
123 349
-5.0 -5.0 translate
121.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 188 344 OPL
188 349
-5.0 -5.0 translate
185.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 252 344 OPL
252 349
-5.0 -5.0 translate
250.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 317 344 OPL
317 349
-5.0 -5.0 translate
314.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 381 344 OPL
381 349
-5.0 -5.0 translate
378.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
Q
q
1 59 36 OPL
56 36
1 59 92 OPL
56 92
1 59 148 OPL
56 148
1 59 204 OPL
56 204
1 59 260 OPL
56 260
1 59 316 OPL
56 316
1 59 344 OPL
59 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
1 165 29 23 rc
5.0 184.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(fyt) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
53 344
-5.0 -5.0 translate
48.0 354.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 59 288 OPL
53 288
-5.0 -5.0 translate
39.0 298.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 59 232 OPL
53 232
-5.0 -5.0 translate
39.0 242.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 59 176 OPL
53 176
-5.0 -5.0 translate
39.0 186.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 59 120 OPL
53 120
-5.0 -5.0 translate
39.0 130.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 59 64 OPL
53 64
-5.0 -5.0 translate
39.0 74.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
q
1 59 8 OPL
53 8
-5.0 -5.0 translate
39.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.2) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 704 1886 a
  {
 704 1886 a Ff(\014)777
1843 y Fd(\000)p Fb(1)704 1886 y
  } 0/Place PSfrag
 704 1886 a 781 2080
a
  {
 781 2080 a Ff(f)852 2037 y Fe(t)839 2110 y(y)781 2080
y
  } 1/Place PSfrag
 781 2080 a 0 2426 a Fu(Figure)c(7:)41 b(The)29 b(temp)s(erature)g
(dep)s(endence)h(of)e(the)g(critical)h(force)f(for)g(v)m(ertical)h
(pulling)f(in)h(the)f Fr(n)g Fq(!)f(1)0 2642 y Fu(limit.)0
2908 y Ft(7)161 b(F)-13 b(unctional)52 b(equation)h(metho)t(d)0
3276 y Fg(7.1)135 b(Horizon)l(tal)47 b(pulling)0 3460
y Fu(F)-8 b(or)37 b(the)i(case)g(of)e(horizon)m(tal)i(pulling)f(w)m(e)h
(can)g(construct)g(a)e(recursiv)m(e)k(functional)d(equation)h(for)f
(the)0 3581 y(partial)32 b(generating)h(functioa,)g Fs(cf)53
b Fu(Section)34 b(2.)43 b(Let)33 b(us)g(de\014ne)487
3801 y Fr(g)534 3816 y Fp(r)571 3801 y Fu(\()p Fr(x;)17
b(y)t(;)g(!)t Fu(\))26 b(=)i(2)p Fr(G)1163 3816 y Fp(r)1201
3801 y Fu(\()p Fr(x;)17 b(y)t(;)g(y)t(;)g(!)t Fu(\))29
b(for)j Fr(r)e Fq(\025)f Fu(1)j(and)h Fr(g)2309 3816
y Fk(0)2348 3801 y Fu(\()p Fr(x;)17 b(y)t(;)g(!)t Fu(\))26
b(=)h Fr(G)2890 3816 y Fk(0)2929 3801 y Fu(\()p Fr(x;)17
b(y)t(;)g(y)t(;)g(!)t Fu(\))25 b Fr(;)286 b Fu(\(7.1\))33
4046 y(so)32 b(that)704 4291 y Fr(F)14 b Fu(\()p Fr(p)p
Fu(\))27 b(=)1037 4196 y Fl(X)1047 4407 y Fp(r)r Fj(\025)p
Fk(0)1197 4291 y Fr(g)1244 4306 y Fp(r)1282 4291 y Fr(p)1331
4250 y Fp(r)1397 4291 y Fr(:)2275 b Fu(\(7.2\))146 4605
y(The)34 b(functional)g(equation)g(is)f(constructed)i(b)m(y)f
(considering)h(what)e(happ)s(ens)h(when)h(an)e(extra)g(col-)0
4725 y(umn)j(is)f(added)h(to)f(the)g(left)h(of)e(a)h(w)m(alk.)52
b(Let)35 b Fq(P)1797 4740 y Fp(r)1871 4725 y Fu(the)g(set)h(of)f(all)f
(paths)i(with)g(at)f(least)g(one)h(horizon)m(tal)0 4846
y(step)j(follo)m(w)m(ed)g(b)m(y)h Fr(r)g Fq(\025)d Fu(0)h(\014rst)h
(column)g(v)m(ertical)h(steps.)62 b(W)-8 b(e)38 b(can)h(partition)f
Fq(P)3067 4861 y Fp(r)3143 4846 y Fu(in)m(to)h(the)g(follo)m(wing)0
4966 y(\014v)m(e)34 b(disjoin)m(t)f(subsets.)146 5086
y(Let)g Fr(r)368 5050 y Fj(0)424 5086 y Fu(b)s(e)f(the)h(n)m(um)m(b)s
(er)h(of)e(second)i(column)g(v)m(ertical)g(steps.)0 5346
y Fa(Case)k(I:)98 b Fu(The)33 b(w)m(alk)h(has)f(only)g(one)g(step.)44
b(This)34 b(is)f(generated)g(b)m(y)h Fr(x)p Fu(.)1901
5682 y(23)p eop end
%%Page: 24 24
TeXDict begin 24 23 bop 296 1294 a @beginspecial 0 @llx
172 @lly 519 @urx 375 @ury 3968 @rwi @setspecial
%%BeginDocument: new_figs/fn_eqn1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: inkscape 0.46+devel
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 0 172 519 375
%%HiResBoundingBox: 0 172.8 518.4 374.4
%%EndComments
%%Page: 1 1
0 842 translate
0.8 -0.8 scale
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave [1 0 0 1 0 0] concat
gsave [1 0 0 1 -28.707381 488.44685] concat
grestore
gsave [1 0 0 1 7.292619 473.44685] concat
grestore
gsave [1 0 0 1 -18 2.6171874e-06] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
144 818.36218 moveto
144 674.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
108 818.36218 moveto
144 818.36218 lineto
stroke
gsave [1 0 0 1 39 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -87] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -123] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 75 -159] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -209 488.36218] concat
grestore
gsave [1 0 0 1 -101.91097 488.27711] concat
grestore
gsave [1 0 0 1 -12.000005 488.36218] concat
grestore
gsave [1 0 0 1 -21 0] concat
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 818.36218 moveto
72 818.36218 lineto
stroke
gsave [1 0 0 1 -33 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 3 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 18 -3.7382812e-05] concat
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
360 746.36218 moveto
396 746.36218 lineto
396 710.36218 lineto
396 701.8769 405.51472 692.36218 414 692.36218 curveto
432 692.36218 lineto
432 800.36218 lineto
414 800.36218 lineto
405.51472 800.36218 396 790.84746 396 782.36218 curveto
396 746.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
360 746.36218 moveto
396 746.36218 lineto
396 710.36218 lineto
396 701.8769 405.51472 692.36218 414 692.36218 curveto
432 692.36218 lineto
432 800.36218 lineto
414 800.36218 lineto
405.51472 800.36218 396 790.84746 396 782.36218 curveto
396 746.36218 lineto
stroke
gsave [1 0 0 1 36 -162] concat
gsave [1 0 0 1 198 18.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 198 18.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 198 54.000003] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 198 54.000003] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
288 980.36218 moveto
324 980.36218 lineto
324 908.36218 lineto
stroke
0 0 0 setrgbcolor
[2 2] 0 setdash
2 setlinewidth
1 setlinejoin
0 setlinecap
newpath
288 872.36218 moveto
288 980.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
288 764.36222 moveto
288 872.36222 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
252 764.36222 moveto
288 764.36222 lineto
stroke
gsave [1 0 0 -1 183 1633.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1633.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1705.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1741.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1813.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 219 1849.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1849.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1813.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
grestore
gsave [1 0 0 1 18 -35.999997] concat
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
540 710.36218 moveto
576 710.36218 lineto
576 674.36218 lineto
576 665.8769 585.51472 656.36218 594 656.36218 curveto
612 656.36218 lineto
612 764.36218 lineto
594 764.36218 lineto
585.51472 764.36218 576 754.84746 576 746.36218 curveto
576 710.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
540 710.36218 moveto
576 710.36218 lineto
576 674.36218 lineto
576 665.8769 585.51472 656.36218 594 656.36218 curveto
612 656.36218 lineto
612 764.36218 lineto
594 764.36218 lineto
585.51472 764.36218 576 754.84746 576 746.36218 curveto
576 710.36218 lineto
stroke
gsave [1 0 0 1 108 -53.999997] concat
gsave [1 0 0 1 306 -89.999997] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -89.999997] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -53.999997] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -53.999997] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 304.4868 -17.487497] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.513195 889.84967 moveto
94.513195 892.84967 lineto
96.513195 894.84967 98.513196 886.84967 100.51319 886.84967 curveto
102.51319 886.84967 104.51319 892.84967 106.51319 892.84967 curveto
108.51319 892.84967 110.5132 886.84967 112.5132 886.84967 curveto
114.5132 886.84967 116.5132 892.84967 118.5132 892.84967 curveto
120.5132 892.84967 122.5132 884.84967 124.5132 886.84967 curveto
127.5132 889.84967 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.5132 889.84967 moveto
94.5132 886.84967 lineto
96.5132 884.84967 98.513201 892.84967 100.5132 892.84967 curveto
102.51319 892.84967 104.51319 886.84967 106.51319 886.84967 curveto
108.51319 886.84967 110.5132 892.84967 112.5132 892.84967 curveto
114.5132 892.84967 116.5132 886.84967 118.5132 886.84967 curveto
120.5132 886.84967 122.5132 894.84967 124.5132 892.84967 curveto
127.5132 889.84967 lineto
stroke
grestore
gsave [1 0 0 1 304.4868 -17.487497] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.513195 889.84967 moveto
94.513195 892.84967 lineto
96.513195 894.84967 98.513196 886.84967 100.51319 886.84967 curveto
102.51319 886.84967 104.51319 892.84967 106.51319 892.84967 curveto
108.51319 892.84967 110.5132 886.84967 112.5132 886.84967 curveto
114.5132 886.84967 116.5132 892.84967 118.5132 892.84967 curveto
120.5132 892.84967 122.5132 884.84967 124.5132 886.84967 curveto
127.5132 889.84967 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.5132 889.84967 moveto
94.5132 886.84967 lineto
96.5132 884.84967 98.513201 892.84967 100.5132 892.84967 curveto
102.51319 892.84967 104.51319 886.84967 106.51319 886.84967 curveto
108.51319 886.84967 110.5132 892.84967 112.5132 892.84967 curveto
114.5132 892.84967 116.5132 886.84967 118.5132 886.84967 curveto
120.5132 886.84967 122.5132 894.84967 124.5132 892.84967 curveto
127.5132 889.84967 lineto
stroke
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
396 908.36218 moveto
432 908.36218 lineto
432 764.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
396 800.36222 moveto
396 908.36222 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
360 800.36222 moveto
396 800.36222 lineto
stroke
gsave [1 0 0 -1 291 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1705.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1741.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1741.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1705.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1633.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
grestore
gsave [1 0 0 1 57 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
198 674.36218 moveto
234 674.36218 lineto
234 620.36218 lineto
234 611.8769 243.51472 602.36218 252 602.36218 curveto
270 602.36218 lineto
270 674.36218 lineto
234 674.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
198 674.36218 moveto
234 674.36218 lineto
234 620.36218 lineto
234 611.8769 243.51472 602.36218 252 602.36218 curveto
270 602.36218 lineto
270 674.36218 lineto
234 674.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
198 818.36218 moveto
198 674.36218 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
162 818.36218 moveto
198 818.36218 lineto
stroke
gsave [1 0 0 1 93 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 129 -51] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 129 -87] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 129 -123] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 129 -159] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 129 -195] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 -6 18.000003] concat
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 800.36218 moveto
84 800.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
78 794.36218 moveto
78 806.36218 lineto
stroke
grestore
gsave [1 0 0 1 66 18.000003] concat
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 800.36218 moveto
84 800.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
78 794.36218 moveto
78 806.36218 lineto
stroke
grestore
gsave [1 0 0 1 210 18.000003] concat
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 800.36218 moveto
84 800.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
78 794.36218 moveto
78 806.36218 lineto
stroke
grestore
gsave [1 0 0 1 390 18.000003] concat
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 800.36218 moveto
84 800.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
78 794.36218 moveto
78 806.36218 lineto
stroke
grestore
grestore
showpage
%%EOF

%%EndDocument
 @endspecial 0 1701 a Fu(Figure)28 b(8:)41 b(Sc)m(hematic)29
b(represen)m(tation)h(of)d(the)i(terms)f(of)g(the)g(functional)g
(equation)h(\(7.3\))e(arising)h(from)0 1918 y(the)33
b(\014v)m(e)h(cases)g(describ)s(ed)g(in)f(Section)g(7.1.)0
2184 y Fa(Case)43 b(I)s(I:)97 b Fu(These)39 b(are)e(all)g(w)m(alks)h
(with)f(only)h(one)f(horizon)m(tal)g(step)h(and)f(at)f(least)i(one)f
(\014rst)g(column)0 2304 y(v)m(ertical)k(step.)65 b(These)41
b(are)e(generated)h(b)m(y)h(2)p Fr(xy)t(p)o(=)p Fu(\(1)22
b Fq(\000)g Fr(y)t(p)o Fu(\),)41 b(the)f(factor)f(of)g(t)m(w)m(o)h
(giving)g(all)f(up)m(w)m(ards)0 2424 y(and)33 b(all)f(do)m(wn)m(w)m
(ards)j(sequences)h(of)c(steps,)i(b)s(oth)e(generated)i(b)m(y)f
Fr(y)t(p)o(=)p Fu(\(1)22 b Fq(\000)g Fr(y)t(p)p Fu(\).)0
2684 y Fa(Case)54 b(I)s(I)s(I:)98 b Fu(These)48 b(are)f(all)g(paths)g
(with)g(at)g(least)g(t)m(w)m(o)g(horizon)m(tal)h(steps)g(and)f(the)g
(\014rst)g(column)0 2804 y(v)m(ertical)32 b(steps)h(\(if)d(an)m(y\))i
(are)f(in)g(the)g Fs(same)38 b Fu(direction)32 b(to)e(the)i(second)g
(column)g(v)m(ertical)g(steps)g(\(if)f(an)m(y\).)0 2925
y(These)37 b(are)d(generated)i(b)m(y)g Fr(xF)14 b Fu(\(1\))p
Fr(=)p Fu(\(1)21 b Fq(\000)i Fr(y)t(p)o Fu(\).)50 b(There)36
b(is)f(no)g(factor)f(of)g(t)m(w)m(o)i(for)e(the)h(follo)m(wing)g
(reason.)0 3045 y(The)j(pro)s(duct)g Fr(xF)14 b Fu(\(1\))p
Fr(=)p Fu(\(1)21 b Fq(\000)i Fr(y)t(p)o Fu(\))37 b(corresp)s(onds)i(to)
e(concatenating)h(on)g(a)f(sequence)j(of)d(v)m(ertical)h(steps,)0
3166 y Fr(V)49 b Fq(!)28 b Fu(1)p Fr(=)p Fu(\(1)21 b
Fq(\000)i Fr(y)t(p)o Fu(\))31 b(to)f(and)i(arbitrary)f(path)g
Fr(F)14 b Fu(\(1\).)42 b(The)32 b(generating)f(v)-5 b(ariable)32
b Fr(p)f Fu(is)g(set)h(to)f(one)g(in)g Fr(F)14 b Fu(\()p
Fr(p)p Fu(\))0 3286 y(since)37 b(the)f(leftmost)g(v)m(ertical)g(steps)h
(arise)f(from)f(the)h Fr(V)57 b Fu(sequence.)e(If)35
b(the)h(\014rst)g(v)m(ertical)g(sequence)i(of)0 3406
y(steps)32 b(of)f Fr(F)14 b Fu(\(1\))30 b(are)g(up)m(w)m(ard,)j(then)e
(the)h Fr(V)52 b Fu(steps)32 b(are)f(in)m(terpreted)i(as)e(also)g(b)s
(eing)g(up)m(w)m(ard)h(\(and)f(hence)0 3527 y(no)d(con)m(tacts)h(are)f
(created)h(b)m(y)g(the)g(concatenation,)h(th)m(us)f(no)f
Fr(!)j Fu(factor\).)42 b(If)28 b(the)g(\014rst)h(v)m(ertical)g
(sequence)0 3647 y(of)40 b(steps)j(of)d Fr(F)14 b Fu(\(1\))40
b(are)h(do)m(wn)m(w)m(ard,)k(then)d(the)f Fr(V)62 b Fu(steps)42
b(are)f(in)m(terpreted)i(as)e(also)g(b)s(eing)g(do)m(wn)m(w)m(ard)0
3768 y(\(and)33 b(again,)f(no)g(con)m(tacts)i(are)f(created)g(b)m(y)g
(the)g(concatenation\).)0 4027 y Fa(Case)53 b(IV:)97
b Fu(These)47 b(are)e(all)g(paths)h(with)g(at)f(least)g(t)m(w)m(o)h
(horizon)m(tal)g(steps)g(and)g(with)g Fr(r)3452 3991
y Fj(0)3524 4027 y Fr(>)j Fu(0)c(and)0 4148 y(0)27 b
Fr(<)h(r)i Fq(\024)e Fr(r)406 4112 y Fj(0)457 4148 y
Fu(and)f(with)h(the)g(\014rst)g(column)g(v)m(ertical)h(steps)g(are)e
(in)h(the)g Fs(opp)-5 b(osite)34 b Fu(direction)28 b(to)f(the)h(second)
0 4268 y(column)35 b(v)m(ertical)g(steps.)50 b(These)35
b(are)f(generated)h(b)m(y)g Fr(xy)t(pF)14 b Fu(\()p Fr(y)t(!)t(p)p
Fu(\))p Fr(=)p Fu(\(1)19 b Fq(\000)k Fr(y)t(p)o Fu(\).)48
b(The)35 b(argumen)m(t)g(for)e(this)0 4388 y(form)24
b(is)h(similar)h(to)e(that)g(of)g(Case)i(I)s(I)s(I,)e(except)i(no)m(w)g
(con)m(tacts)f(are)g(created)g(b)m(y)h(the)f(concatenation.)41
b(The)0 4509 y(con)m(tacts)36 b(are)f(accoun)m(ted)h(for)f(as)g(follo)m
(ws.)52 b(All)35 b(new)h(con)m(tacts)g(o)s(ccur)f(b)s(et)m(w)m(een)i
(the)f(o)m(v)m(erlap)g(b)s(et)m(w)m(een)0 4629 y(the)d(\014rst)f(and)h
(second)g(columns.)45 b(Since)33 b(the)g Fr(p)f Fu(in)g
Fr(F)14 b Fu(\()p Fr(p)p Fu(\))32 b(trac)m(ks)h(the)g(n)m(um)m(b)s(er)g
(of)f(v)m(ertical)i(steps)f(in)g(the)0 4750 y(second)j(column,)g(the)f
(new)g(con)m(tacts)h(can)e(b)s(e)h(accoun)m(ted)h(for)e(b)m(y)h
(replacing)h Fr(p)e Fu(b)m(y)h Fr(!)t(p)p Fu(.)49 b(The)35
b(factor)f(of)0 4870 y Fr(y)t(p)e Fu(in)i Fr(F)14 b Fu(\()p
Fr(y)t(!)t(p)p Fu(\))31 b(is)j(in)m(terpreted)h(as)e(giving)h(rise)g
(to)f(\014rst)h Fr(r)2159 4834 y Fj(0)2215 4870 y Fu(v)m(ertical)h
(steps)f(in)g(the)g Fs(\014rst)43 b Fu(column)34 b(\(these)0
4990 y(can)c(b)s(e)h(though)m(t)f(of)f(as)i(`virtual)f(steps'\))i(and)e
(the)g(remaining)h Fr(r)2397 4954 y Fj(0)2437 4990 y
Fq(\000)18 b Fr(r)32 b Fu(v)m(ertical)g(steps)f(are)f(generated)h(b)m
(y)0 5111 y(1)p Fr(=)p Fu(\(1)21 b Fq(\000)i Fr(y)t(p)o
Fu(\))35 b(and)g(are)g(in)m(terpreted)h(as)g(b)s(eing)f(concatenated)h
(on)f(to)f(the)h(virtual)h(steps,)h(as)e(illustrated)0
5231 y(b)m(y)e(the)g(fourth)g(term)g(in)g(Figure)f(8.)1901
5682 y(24)p eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 100 a Fa(Case)55 b(V:)98 b
Fu(These)49 b(are)f(all)f(paths)h(with)h(at)e(least)h(t)m(w)m(o)g
(horizon)m(tal)g(steps)h(and)f(with)g Fr(r)3441 63 y
Fj(0)3517 100 y Fr(>)54 b Fu(0)47 b(and)0 220 y(0)27
b Fr(<)h(r)227 184 y Fj(0)278 220 y Fq(\024)g Fr(r)i
Fu(and)d(with)h(the)g(\014rst)g(column)g(v)m(ertical)h(steps)g(are)e
(in)h(the)g Fs(opp)-5 b(osite)34 b Fu(direction)28 b(to)f(the)h(second)
0 340 y(column)36 b(v)m(ertical)g(steps.)52 b(These)36
b(are)f(generated)h(b)m(y)g Fr(x!)t(y)t(p)17 b Fu([)n
Fr(F)d Fu(\(1\))22 b Fq(\000)g Fr(F)14 b Fu(\()p Fr(!)t(y)t(p)p
Fu(\)])h Fr(=)p Fu(\(1)22 b Fq(\000)g Fr(y)t(p!)s Fu(\).)50
b(This)36 b(case)0 461 y(is)41 b(generated)h(b)m(y)g
(inclusion-exclusion.)71 b(W)-8 b(e)41 b(\014rst)h(term,)h
Fr(T)2306 476 y Fk(1)2387 461 y Fu(=)f Fr(x!)t(y)t(pF)14
b Fu(\(1\))p Fr(=)p Fu(\(1)20 b Fq(\000)i Fr(y)t(p!)s
Fu(\),)43 b(o)m(v)m(er-coun)m(t)0 581 y(and)c(then)h(the)g(un)m(w)m(an)
m(ted)h(cases)f(remo)m(v)m(ed)h(with)f Fr(T)1979 596
y Fk(2)2058 581 y Fu(=)e Fr(x!)t(y)t(pF)14 b Fu(\()p
Fr(!)t(y)t(p)p Fu(\))p Fr(=)p Fu(\(1)19 b Fq(\000)j Fr(y)t(p!)s
Fu(\).)63 b(In)39 b(this)h(case)g(all)0 702 y(the)30
b(con)m(tacts)h(are)e(generated)i(b)m(y)f(the)g(v)m(ertical)h(sequence)
i Fr(x!)t(y)t(p=)p Fu(\(1)20 b Fq(\000)j Fr(y)t(p!)r
Fu(\))30 b({)f(this)h(adds)g(in)g(to)s(o)f(man)m(y)0
822 y(con)m(tacts)49 b(when)g Fr(r)57 b(>)d(r)946 786
y Fj(0)1017 822 y Fu({)48 b(as)g(illustrated)h(left)f(b)s(elo)m(w)h({)f
(these)h(con\014gurations)g(are)f(remo)m(v)m(ed)i(b)m(y)0
942 y(generating)31 b(the)f(con)m(tacts)i(from)e(the)h(second)g(column)
h(in)e(the)h(same)g(w)m(a)m(y)h(as)e(Case)i(IV)e({)g(as)h(illustrated)0
1063 y(in)i(Figure)f(9)h(|)f(and)g(subtracting.)533 2444
y @beginspecial 14 @llx 172 @lly 476 @urx 375 @ury 3401
@rwi @setspecial
%%BeginDocument: new_figs/fn_eqn2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: inkscape 0.46+devel
%%Pages: 1
%%Orientation: Portrait
%%BoundingBox: 14 172 476 375
%%HiResBoundingBox: 14.4 172.8 475.2 374.4
%%EndComments
%%Page: 1 1
0 842 translate
0.8 -0.8 scale
0 0 0 setrgbcolor
[] 0 setdash
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave [1 0 0 1 0 0] concat
gsave [1 0 0 1 -28.707381 488.44685] concat
grestore
gsave [1 0 0 1 7.292619 473.44685] concat
grestore
gsave [1 0 0 1 -54 -3.4765625e-05] concat
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
324 602.36218 moveto
324 818.36218 lineto
stroke
gsave [1 0 0 1 288 -102] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 255 1471.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 288 -65.999997] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 255 1507.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 288 -29.999997] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 255 1543.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 288 6.0000022] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 255 1579.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 288 42.000001] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 1 288 78.000001] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
360 746.36214 moveto
396 746.36214 lineto
396 710.36214 lineto
396 701.87686 405.51472 692.36214 414 692.36214 curveto
432 692.36214 lineto
432 800.36214 lineto
414 800.36214 lineto
405.51472 800.36214 396 790.84742 396 782.36214 curveto
396 746.36214 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
360 746.36214 moveto
396 746.36214 lineto
396 710.36214 lineto
396 701.87686 405.51472 692.36214 414 692.36214 curveto
432 692.36214 lineto
432 800.36214 lineto
414 800.36214 lineto
405.51472 800.36214 396 790.84742 396 782.36214 curveto
396 746.36214 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
324 818.36214 moveto
360 818.36214 lineto
360 746.36214 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
288 602.36218 moveto
324 602.36218 lineto
stroke
gsave [1 0 0 -1 219 1471.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1615.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1651.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 255 1687.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 291 1687.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 291 1651.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 291 1615.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
gsave [1 0 0 1 -209 488.36218] concat
grestore
gsave [1 0 0 1 -101.91097 488.27711] concat
grestore
gsave [1 0 0 1 -12.000005 488.36218] concat
grestore
gsave [1 0 0 1 342 -3.4765625e-05] concat
0 0 0 setrgbcolor
[2 2] 0 setdash
2 setlinewidth
1 setlinejoin
0 setlinecap
newpath
126 710.36214 moveto
126 818.36214 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
126 602.36218 moveto
126 710.36218 lineto
stroke
gsave [1 0 0 1 90 -102] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 57 1471.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 90 -66] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 57 1507.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 90 -29.999997] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 57 1543.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 1 90 6.0000026] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [1 0 0 -1 57 1579.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [-1 0 0 1 198 42.000003] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave [-1 0 0 1 198 78] concat
gsave [1 0 0 1 0 2.6171874e-06] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 701.36218 lineto
41 699.36218 43.000001 707.36218 45 707.36218 curveto
46.99999 707.36218 48.99999 701.36218 50.99999 701.36218 curveto
52.99999 701.36218 55 707.36218 57 707.36218 curveto
59 707.36218 60 704.36218 60 704.36218 curveto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
36 704.36218 moveto
39 707.36218 lineto
41 709.36218 43.000001 701.36218 45 701.36218 curveto
46.99999 701.36218 48.99999 707.36218 50.99999 707.36218 curveto
52.99999 707.36218 55 701.36218 57 701.36218 curveto
59 701.36218 60 704.36218 60 704.36218 curveto
stroke
grestore
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
162 746.36214 moveto
198 746.36214 lineto
198 710.36214 lineto
198 701.87686 207.51472 692.36214 216 692.36214 curveto
234 692.36214 lineto
234 800.36214 lineto
216 800.36214 lineto
207.51472 800.36214 198 790.84742 198 782.36214 curveto
198 746.36214 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
162 746.36214 moveto
198 746.36214 lineto
198 710.36214 lineto
198 701.87686 207.51472 692.36214 216 692.36214 curveto
234 692.36214 lineto
234 800.36214 lineto
216 800.36214 lineto
207.51472 800.36214 198 790.84742 198 782.36214 curveto
198 746.36214 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
126 818.36214 moveto
162 818.36214 lineto
162 746.36214 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 602.36218 moveto
126 602.36218 lineto
stroke
gsave [1 0 0 -1 21 1471.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 57 1615.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 57 1651.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 57 1687.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 93 1687.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 93 1651.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 93 1615.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
399 746.36218 moveto
411 746.36218 lineto
stroke
gsave [1 0 0 1 -3 2.6171876e-06] concat
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
204 743.36218 moveto
216 743.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
204 749.36218 moveto
216 749.36218 lineto
stroke
grestore
gsave [1 0 0 1 -432 -36.023598] concat
gsave
0.7019608 0.7019608 0.7019608 setrgbcolor
newpath
540 710.36218 moveto
576 710.36218 lineto
576 674.36218 lineto
576 665.8769 585.51472 656.36218 594 656.36218 curveto
612 656.36218 lineto
612 764.36218 lineto
594 764.36218 lineto
585.51472 764.36218 576 754.84746 576 746.36218 curveto
576 710.36218 lineto
fill
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
540 710.36218 moveto
576 710.36218 lineto
576 674.36218 lineto
576 665.8769 585.51472 656.36218 594 656.36218 curveto
612 656.36218 lineto
612 764.36218 lineto
594 764.36218 lineto
585.51472 764.36218 576 754.84746 576 746.36218 curveto
576 710.36218 lineto
stroke
gsave [1 0 0 1 108 -53.999997] concat
gsave [1 0 0 1 306 -89.999997] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -89.999997] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -53.999997] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 306 -53.999997] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
89.999995 890.36218 moveto
92.999995 893.36218 lineto
94.999995 895.36218 96.999996 887.36218 98.999995 887.36218 curveto
100.99999 887.36218 102.99999 893.36218 104.99999 893.36218 curveto
106.99999 893.36218 109 887.36218 111 887.36218 curveto
113 887.36218 115 893.36218 117 893.36218 curveto
119 893.36218 121 885.36218 123 887.36218 curveto
126 890.36218 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
90 890.36218 moveto
93 887.36218 lineto
95 885.36218 97.000001 893.36218 99 893.36218 curveto
100.99999 893.36218 102.99999 887.36218 104.99999 887.36218 curveto
106.99999 887.36218 109 893.36218 111 893.36218 curveto
113 893.36218 115 887.36218 117 887.36218 curveto
119 887.36218 121 895.36218 123 893.36218 curveto
126 890.36218 lineto
stroke
grestore
gsave [1 0 0 1 304.4868 -17.487497] concat
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.513195 889.87327 moveto
94.513195 892.87327 lineto
96.513195 894.87327 98.513196 886.87327 100.51319 886.87327 curveto
102.51319 886.87327 104.51319 892.87327 106.51319 892.87327 curveto
108.51319 892.87327 110.5132 886.87327 112.5132 886.87327 curveto
114.5132 886.87327 116.5132 892.87327 118.5132 892.87327 curveto
120.5132 892.87327 122.5132 884.87327 124.5132 886.87327 curveto
127.5132 889.87327 lineto
stroke
1 0.33333334 0.33333334 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.5132 889.87327 moveto
94.5132 886.87327 lineto
96.5132 884.87327 98.513201 892.87327 100.5132 892.87327 curveto
102.51319 892.87327 104.51319 886.87327 106.51319 886.87327 curveto
108.51319 886.87327 110.5132 892.87327 112.5132 892.87327 curveto
114.5132 892.87327 116.5132 886.87327 118.5132 886.87327 curveto
120.5132 886.87327 122.5132 894.87327 124.5132 892.87327 curveto
127.5132 889.87327 lineto
stroke
grestore
gsave [1 0 0 1 304.4868 -17.487497] concat
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.513195 889.87327 moveto
94.513195 892.87327 lineto
96.513195 894.87327 98.513196 886.87327 100.51319 886.87327 curveto
102.51319 886.87327 104.51319 892.87327 106.51319 892.87327 curveto
108.51319 892.87327 110.5132 886.87327 112.5132 886.87327 curveto
114.5132 886.87327 116.5132 892.87327 118.5132 892.87327 curveto
120.5132 892.87327 122.5132 884.87327 124.5132 886.87327 curveto
127.5132 889.87327 lineto
stroke
0.66666669 0 0 setrgbcolor
[] 0 setdash
0.69999999 setlinewidth
1 setlinejoin
1 setlinecap
newpath
91.5132 889.87327 moveto
94.5132 886.87327 lineto
96.5132 884.87327 98.513201 892.87327 100.5132 892.87327 curveto
102.51319 892.87327 104.51319 886.87327 106.51319 886.87327 curveto
108.51319 886.87327 110.5132 892.87327 112.5132 892.87327 curveto
114.5132 892.87327 116.5132 886.87327 118.5132 886.87327 curveto
120.5132 886.87327 122.5132 894.87327 124.5132 892.87327 curveto
127.5132 889.87327 lineto
stroke
grestore
0 0 0 setrgbcolor
[] 0 setdash
1.5 setlinewidth
1 setlinejoin
0 setlinecap
newpath
396 908.36218 moveto
432 908.36218 lineto
432 764.36218 lineto
stroke
0 0 0 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
396 800.36222 moveto
396 908.36222 lineto
stroke
0 0 1 setrgbcolor
[] 0 setdash
3 setlinewidth
1 setlinejoin
1 setlinecap
newpath
360 800.36222 moveto
396 800.36222 lineto
stroke
gsave [1 0 0 -1 291 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1705.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1741.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 327 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1777.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1741.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1705.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1669.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
gsave [1 0 0 -1 363 1633.7244] concat
gsave
0 0.26666668 0.66666669 setrgbcolor
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
fill
grestore
0.60000002 0.60000002 0.60000002 setrgbcolor
[] 0 setdash
0.5 setlinewidth
1 setlinejoin
1 setlinecap
newpath
72 869.36218 moveto
72 871.01818 70.656 872.36218 69 872.36218 curveto
67.344 872.36218 66 871.01818 66 869.36218 curveto
66 867.70618 67.344 866.36218 69 866.36218 curveto
70.656 866.36218 72 867.70618 72 869.36218 curveto
closepath
stroke
grestore
grestore
grestore
grestore
showpage
%%EOF

%%EndDocument
 @endspecial 59 2851 a(Figure)g(9:)44 b(Sc)m(hematic)34
b(represen)m(tation)g(of)e(con)m(tribution)i(of)e(Case)h(V)g(to)f(the)h
(functional)g(equation.)146 3088 y(Com)m(bining)28 b(all)e(\014v)m(e)i
(cases)g(together,)g(as)e(illustrated)i(in)e(Figure)g(8,)i(generates)f
(all)g(the)f(w)m(alks.)43 b(Th)m(us)0 3208 y(w)m(e)34
b(get,)50 3480 y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))27 b(=)h
Fr(x)16 b Fu(+)g(2)p Fr(x)746 3413 y(y)t(p)p 660 3457
271 4 v 660 3549 a Fu(1)23 b Fq(\000)g Fr(y)t(p)958 3480
y Fu(+)16 b Fr(x)1227 3413 y Fu(1)p 1115 3457 V 1115
3549 a(1)23 b Fq(\000)f Fr(y)t(p)1396 3480 y(F)14 b Fu(\(1\))i(+)g
Fr(x)1857 3413 y(y)t(p)p 1771 3457 V 1771 3549 a Fu(1)23
b Fq(\000)f Fr(y)t(p)2053 3480 y(F)14 b Fu(\()p Fr(!)t(y)t(p)p
Fu(\))i(+)g Fr(x)2629 3413 y(!)t(y)t(p)p 2545 3457 335
4 v 2545 3549 a Fu(1)21 b Fq(\000)h Fr(!)t(y)t(p)2889
3340 y Fl(\024)2941 3480 y Fr(F)14 b Fu(\(1\))i Fq(\000)g
Fr(F)e Fu(\()p Fr(!)t(y)t(p)p Fu(\))3571 3340 y Fl(\025)3623
3480 y Fr(:)49 b Fu(\(7.3\))0 3758 y(This)24 b(functional)g(equation)g
(can)f(b)s(e)h(solv)m(ed)h(for)d Fr(F)14 b Fu(\()p Fr(p)p
Fu(\))23 b(b)m(y)h(the)g(metho)s(d)f(of)g(iteration)g({)g(see)h(M.)g
(Bousquet-)0 3878 y(Melou,)33 b(1996.)146 3998 y(The)h(case)f
Fr(!)t(y)d Fu(=)e(1)k(is)h(m)m(uc)m(h)i(simpler)e(to)g(solv)m(e.)45
b(Letting)32 b Fr(!)t(y)f Fu(=)c(1)32 b(giv)m(es,)195
4270 y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))27 b(=)g Fr(x)c
Fu(+)f(2)p Fr(x)902 4203 y(y)t(p)p 817 4247 271 4 v 817
4338 a Fu(1)g Fq(\000)h Fr(y)t(p)1120 4270 y Fu(+)f Fr(x)1394
4203 y Fu(1)p 1283 4247 V 1283 4338 a(1)g Fq(\000)h Fr(y)t(p)1564
4270 y(F)14 b Fu(\(1\))21 b(+)h Fr(x)2036 4203 y(y)t(p)p
1950 4247 V 1950 4338 a Fu(1)h Fq(\000)f Fr(y)t(p)2231
4270 y(F)14 b Fu(\()p Fr(p)p Fu(\))22 b(+)g Fr(x)2704
4203 y(p)p 2618 4247 220 4 v 2618 4338 a Fu(1)g Fq(\000)h
Fr(p)2848 4130 y Fl(\024)2901 4270 y Fr(F)14 b Fu(\(1\))21
b Fq(\000)i Fr(F)14 b Fu(\()p Fr(p)p Fu(\))3426 4130
y Fl(\025)3478 4270 y Fr(:)194 b Fu(\(7.4\))0 4547 y(Note,)43
b(to)e(\014nd)g Fr(F)14 b Fu(\(1\))40 b(from)h(equation)h(\(7.4\))e(w)m
(e)i(cannot)f(put)g Fr(p)h Fu(=)g(1)e(b)s(ecause)j(of)d(the)h
(denominator)0 4668 y(1)22 b Fq(\000)h Fr(p)p Fu(.)43
b(T)-8 b(o)33 b(a)m(v)m(oid)g(this)g(problem,)h(\014rst)f(collect)g(co)
s(e\016cien)m(ts)i(of)d Fr(F)14 b Fu(\()p Fr(p)p Fu(\))32
b(to)g(giv)m(e,)947 4888 y Fr(K)7 b Fu(\()p Fr(p)p Fu(\))p
Fr(F)14 b Fu(\()p Fr(p)p Fu(\))27 b(=)h Fr(x)p Fu(\(1)22
b Fq(\000)g Fr(p)p Fu(\)\(1)g(+)g Fr(y)t(p)p Fu(\))f(+)h
Fr(x)p Fu(\(1)h Fq(\000)f Fr(y)t(p)2675 4847 y Fk(2)2714
4888 y Fu(\))p Fr(F)14 b Fu(\(1\))745 b(\(7.5\))0 5133
y(where)34 b(the)f(\\k)m(ernel",)h Fr(K)7 b Fu(\()p Fr(p)p
Fu(\),)32 b(is)h(giv)m(en)h(b)m(y)1148 5378 y Fr(K)7
b Fu(\()p Fr(p)p Fu(\))28 b(=)g Fr(y)t(p)1596 5336 y
Fk(2)1656 5378 y Fq(\000)23 b Fu(\(1)f Fq(\000)g Fr(x)h
Fu(+)f Fr(y)j Fu(+)d Fr(xy)t Fu(\))17 b Fr(p)k Fu(+)h(1)p
Fr(:)982 b Fu(\(7.6\))1901 5682 y(25)p eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 100 a Fu(If)34 b(w)m(e)g(can)g(put)g
Fr(K)7 b Fu(\()p Fr(p)p Fu(\))29 b(=)h(0)j(in)h(\(7.5\))f(then,)i
(since)g(the)f(lefthand)g(side)g(is)h(zero,)f(w)m(e)h(can)e(solv)m(e)i
(for)f Fr(F)14 b Fu(\(1\).)0 220 y(Note,)39 b(the)g(condition)f
Fr(K)7 b Fu(\()p Fr(p)p Fu(\))37 b(=)f(0)i(implicitly)h(constrains)g
Fr(p)p Fu(,)g(whic)m(h,)i(since)e Fr(K)7 b Fu(\()p Fr(p)p
Fu(\))38 b(is)g(quadratic)h(in)f Fr(p)p Fu(,)0 340 y(implies)28
b(that)f(w)m(e)g(get)g(t)m(w)m(o)g(p)s(ossible)h(functions)g
Fr(p)1828 355 y Fj(\006)1887 340 y Fu(\()p Fr(x;)17 b(y)t
Fu(\).)40 b(Ho)m(w)m(ev)m(er)29 b(some)e(care)g(m)m(ust)h(b)s(e)f(tak)m
(en)h(as)e(this)0 461 y(w)m(a)m(y)34 b(of)e(\014nding)h
Fr(F)14 b Fu(\()p Fr(p)p Fu(\))32 b(assumes)i Fr(F)14
b Fu(\()p Fr(p)p Fu(\))p Fr(K)7 b Fu(\()p Fr(p)p Fu(\))27
b(=)h(0)k(whic)m(h)i(is)f(only)g(the)g(case)g(if)f(lim)3062
476 y Fp(p)p Fj(!)p Fp(p)3205 485 y Fn(\006)3276 461
y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))p Fr(K)7 b Fu(\()p Fr(p)p
Fu(\))28 b(=)f(0.)0 581 y(Th)m(us,)54 b(w)m(e)c(\014rst)f(assume)h
(this)f(is)g(the)g(case)h(for)e(one)h(of)f(the)h(solutions,)54
b(sa)m(y)49 b Fr(p)3110 596 y Fk(+)3218 581 y Fu(and)f(then)i(v)m
(erify)0 702 y(this)f(assumption)g(once)g Fr(F)14 b Fu(\()p
Fr(p)p Fu(\))48 b(has)g(b)s(een)h(explicitly)h(computed.)92
b(As)48 b(is)h(readily)g(sho)m(wn,)k(eac)m(h)c(of)0 822
y(the)33 b(t)m(w)m(o)f(assumptions)i(lim)1041 837 y Fp(p)p
Fj(!)p Fp(p)1184 846 y Fo(+)1254 822 y Fr(F)14 b Fu(\()p
Fr(p)p Fu(\))p Fr(K)7 b Fu(\()p Fr(p)p Fu(\))27 b(=)g(0)32
b(and)g(lim)2207 837 y Fp(p)p Fj(!)p Fp(p)2350 846 y
Fn(\000)2421 822 y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))p Fr(K)7
b Fu(\()p Fr(p)p Fu(\))28 b(=)f(0)32 b(giv)m(e)h(rise)g(to)f
Fs(di\013er)-5 b(ent)0 942 y Fu(functions,)28 b(denoted)f
Fr(F)867 957 y Fj(\006)926 942 y Fu(\()p Fr(p)p Fu(\).)41
b(In)26 b(fact,)h Fr(F)14 b Fu(\()p Fr(p)p Fu(\))25 b(is)h(an)f
(algebraic)h(function)g(and)g(eac)m(h)h(of)e(the)h(t)m(w)m(o)g
(functions)0 1063 y Fr(F)63 1078 y Fj(\006)122 1063 y
Fu(\()p Fr(p)p Fu(\))i(are)g(the)h(t)m(w)m(o)f(branc)m(hes)i(of)e
Fr(F)14 b Fu(\()p Fr(p)p Fu(\).)41 b(The)29 b(limit)g(lim)2113
1078 y Fp(p)p Fj(!)p Fp(p)2256 1087 y Fo(+)2326 1063
y Fr(F)14 b Fu(\()p Fr(p)p Fu(\))p Fr(K)7 b Fu(\()p Fr(p)p
Fu(\))28 b(only)g(v)-5 b(anishes)30 b(if)e(the)g(correct)0
1183 y(branc)m(h)33 b(is)g(com)m(bined)g(with)g(the)g(correct)f(limit)h
(\(the)f(other)h(branc)m(h)g(has)f(a)g(p)s(ole)g(at)g
Fr(p)3214 1198 y Fk(+)3305 1183 y Fu(and)g(hence)i(the)0
1303 y(limit)f(is)g(the)g(non-zero)g(residue)h(of)e Fr(F)14
b Fu(\()p Fr(p)p Fu(\))32 b(at)g Fr(p)1739 1318 y Fk(+)1798
1303 y Fu(\).)146 1424 y(Th)m(us,)i(assuming)g(lim)980
1439 y Fp(p)p Fj(!)p Fp(p)1123 1448 y Fo(+)1193 1424
y Fr(F)1256 1439 y Fk(+)1315 1424 y Fu(\()p Fr(p)p Fu(\))p
Fr(K)7 b Fu(\()p Fr(p)p Fu(\))27 b(=)h(0)k(and)h(taking)f(the)h(limit)g
(as)g Fr(p)27 b Fq(!)h Fr(p)3131 1439 y Fk(+)3222 1424
y Fu(on)k(b)s(oth)g(sides)i(of)0 1544 y(\(7.5\))e(giv)m(es)i
Fr(F)535 1559 y Fk(+)594 1544 y Fu(\(1\).)43 b(Th)m(us)34
b(w)m(e)g(obtain)f(the)g(branc)m(h)g Fr(F)2037 1559 y
Fk(+)2096 1544 y Fu(\(1\))f(on)h(the)g(line)g Fr(!)t(y)d
Fu(=)e(1)k(as)1145 1789 y Fr(F)1208 1804 y Fk(+)1267
1789 y Fu(\(1\))27 b(=)h Fq(\000)1610 1721 y Fu(\(1)22
b Fq(\000)h Fr(p)1868 1736 y Fk(+)1927 1721 y Fu(\)\(1)f(+)g
Fr(p)2221 1736 y Fk(+)2280 1721 y Fr(y)t Fu(\))p 1610
1766 759 4 v 1825 1857 a(1)g Fq(\000)g Fr(p)2044 1823
y Fk(2)2044 1879 y(+)2103 1857 y Fr(y)3699 1789 y Fu(\(7.7\))0
2057 y(or,)32 b(explicitly)976 2360 y(1)22 b(+)g Fr(F)1208
2375 y Fk(+)1267 2360 y Fu(\(1\))27 b(=)1523 2186 y Fl(s)p
1623 2186 1275 4 v 2149 2293 a Fr(y)e Fq(\000)e Fu(1)p
1633 2337 1255 4 v 1633 2429 a Fr(x)1688 2400 y Fk(2)1727
2429 y Fu(\()p Fr(y)j Fq(\000)c Fu(1\))g(+)g(2)p Fr(x)p
Fu(\()p Fr(y)j Fu(+)d(1\))g(+)g Fr(y)k Fq(\000)c Fu(1)2897
2360 y Fr(:)775 b Fu(\(7.8\))0 2633 y(Using)44 b(this)g(solution,)i
(one)e(then)f(v)m(eri\014es)j(the)d(assumption)i(that)e(lim)2716
2648 y Fp(p)p Fj(!)p Fp(p)2859 2657 y Fo(+)2929 2633
y Fr(F)2992 2648 y Fk(+)3052 2633 y Fu(\()p Fr(p)p Fu(\))p
Fr(K)7 b Fu(\()p Fr(p)p Fu(\))45 b(=)h(0.)75 b(This)0
2754 y(solution)33 b(has)g(a)f(square)i(ro)s(ot)e(singularit)m(y)i(at)
1219 2943 y Fr(x)1274 2902 y Fk(2)1314 2943 y Fu(\()p
Fr(y)25 b Fq(\000)e Fu(1\))f(+)g(2)p Fr(x)p Fu(\()p Fr(y)j
Fu(+)d(1\))g(+)g Fr(y)j Fq(\000)e Fu(1)k(=)h(0)p Fr(;)1018
b Fu(\(7.9\))0 3132 y(whic)m(h)33 b(giv)m(es)g(the)f(same)g(critical)g
(v)-5 b(alue)32 b(of)f Fr(x)p Fu(,)h Fr(x)1780 3147 y
Fp(c)1847 3132 y Fu(as)f(giv)m(en)i(b)m(y)f(equation)h(\(5.1\))e(using)
h(the)g(transforma-)0 3253 y(tions)d Fr(x)f Fu(=)f Fr(h=!)32
b Fu(and)c Fr(y)j Fu(=)d(1)p Fr(=!)t Fu(.)40 b(Th)m(us)30
b(w)m(e)g(see)f(that,)g(using)g(this)g(metho)s(d,)h Fr(x)2859
3268 y Fp(c)2922 3253 y Fu(arises)f(via)g Fr(p)3389 3268
y Fk(+)3476 3253 y Fu(and)g(hence)0 3373 y(from)j(the)h(k)m(ernel.)146
3494 y(The)38 b(functional)g(equation)g(\(7.3\))f(is)g(also)h(closely)h
(link)m(ed)f(to)f(the)h(recurrence)h(relation)e(\(3.16\).)57
b(If)0 3614 y(w)m(e)29 b(mak)m(e)h(the)e(substitution)i(\(2.21\))d(in)m
(to)i(\(7.3\))f(and)g(equate)h(co)s(e\016cien)m(ts)i(of)c
Fr(p)p Fu(,)i(then,)h(for)e Fr(r)i(>)e Fu(0)g(w)m(e)h(get)700
3893 y Fr(g)747 3908 y Fp(r)812 3893 y Fu(=)f Fr(xy)1023
3852 y Fp(r)r Fk(+1)1167 3723 y Fl( )1246 3893 y Fu(2)22
b(+)1415 3799 y Fl(X)1422 4011 y Fp(k)r Fj(\025)p Fk(0)1575
3893 y Fr(g)1622 3908 y Fp(k)1687 3893 y Fu(+)1795 3769
y Fp(r)r Fj(\000)p Fk(1)1785 3799 y Fl(X)1793 4011 y
Fp(k)r Fk(=0)1945 3893 y Fr(!)2010 3852 y Fp(k)2052 3893
y Fr(g)2099 3908 y Fp(k)2164 3893 y Fu(+)g Fr(!)2327
3852 y Fp(r)2381 3799 y Fl(X)2387 4009 y Fp(\024)p Fj(\025)p
Fk(0)2541 3893 y Fr(g)2588 3908 y Fp(k)2653 3893 y Fq(\000)g
Fr(!)2817 3852 y Fp(r)2881 3769 y(r)r Fj(\000)p Fk(1)2871
3799 y Fl(X)2879 4011 y Fp(k)r Fk(=0)3032 3893 y Fr(g)3079
3908 y Fp(k)3121 3723 y Fl(!)3651 3893 y Fu(\(7.10\))0
4184 y(whic)m(h)34 b(is)f(readily)h(put)e(in)h(the)g(same)h(form)e(as)h
(\(3.16\))o(.)0 4588 y Fg(7.2)135 b(V)-11 b(ertical)46
b(pulling)0 4773 y Fu(Let)33 b(us)g(de\014ne)1295 4919
y(^)1273 4944 y Fr(F)1350 4903 y Fk(+)1409 4944 y Fu(\()p
Fr(p)p Fu(\))27 b(=)1701 4820 y Fj(1)1665 4849 y Fl(X)1675
5059 y Fp(r)r Fk(=0)1825 4944 y Fr(G)1902 4903 y Fk(+)1902
4969 y Fp(r)1961 4944 y Fu(\()p Fr(x;)17 b(v)t(y)t(;)g(y)t(=v)t(;)g(!)t
Fu(\))p Fr(p)2593 4903 y Fp(r)3651 4944 y Fu(\(7.11\))0
5187 y(and)1267 5333 y(^)1245 5358 y Fr(F)1322 5317 y
Fj(\000)1381 5358 y Fu(\()p Fr(p)p Fu(\))28 b(=)1674
5234 y Fj(1)1637 5264 y Fl(X)1647 5473 y Fp(r)r Fk(=1)1798
5358 y Fr(G)1875 5317 y Fj(\000)1875 5383 y Fp(r)1934
5358 y Fu(\()p Fr(x;)17 b(y)t(=)t Fu(\026)-53 b Fr(v)r(;)17
b(y)7 b Fu(\026)-52 b Fr(v)s(;)17 b(!)t Fu(\))p Fr(p)2563
5317 y Fp(r)2628 5358 y Fr(:)996 b Fu(\(7.12\))1901 5682
y(26)p eop end
%%Page: 27 27
TeXDict begin 27 26 bop 146 100 a Fu(Using)28 b(similar)g(argumen)m(ts)
g(to)f(the)h(deriv)-5 b(ation)27 b(of)34 b(\(7.3\))27
b(w)m(e)h(obtain)f(the)h(follo)m(wing)f(pair)g(of)g(coupled)0
220 y(equations.)630 430 y(^)607 455 y Fr(F)684 414 y
Fk(+)743 455 y Fu(\()p Fr(p)p Fu(\))h(=)f Fr(x)c Fu(+)f
Fr(xv)1376 387 y(y)t(pv)p 1291 432 322 4 v 1291 523 a
Fu(1)g Fq(\000)h Fr(y)t(pv)1644 455 y Fu(+)f Fr(x)1919
387 y Fu(1)p 1807 432 271 4 v 1807 523 a(1)h Fq(\000)f
Fr(y)t(p)2111 430 y Fu(^)2088 455 y Fr(F)2165 414 y Fk(+)2224
455 y Fu(\(1\))g(+)g Fr(x)2620 387 y(y)t(pv)p 2534 432
322 4 v 2534 523 a Fu(1)g Fq(\000)h Fr(y)t(pv)2888 430
y Fu(^)2866 455 y Fr(F)2943 414 y Fj(\000)3001 455 y
Fu(\()p Fr(!)t(y)t(pv)t Fu(\))1085 720 y(+)f Fr(x)1334
653 y(!)t(y)t(pv)p 1248 697 386 4 v 1248 788 a Fu(1)h
Fq(\000)f Fr(y)t(p!)t(v)1644 580 y Fl(\024)1719 695 y
Fu(^)1697 720 y Fr(F)1774 679 y Fj(\000)1833 720 y Fu(\(1\))f
Fq(\000)2101 695 y Fu(^)2079 720 y Fr(F)2156 679 y Fj(\000)2215
720 y Fu(\()p Fr(!)t(y)t(pv)t Fu(\))2508 580 y Fl(\025)3651
720 y Fu(\(7.13\))0 993 y(and)630 1208 y(^)607 1233 y
Fr(F)684 1192 y Fj(\000)743 1233 y Fu(\()p Fr(p)p Fu(\))28
b(=)f Fr(x)1150 1165 y(y)t(p)t Fu(\026)-53 b Fr(v)p 1064
1210 322 4 v 1064 1301 a Fu(1)23 b Fq(\000)f Fr(y)t(p)t
Fu(\026)-53 b Fr(v)1418 1233 y Fu(+)22 b Fr(x)1718 1165
y Fu(1)p 1581 1210 V 1581 1301 a(1)g Fq(\000)h Fr(y)t(p)t
Fu(\026)-53 b Fr(v)1935 1208 y Fu(^)1913 1233 y Fr(F)1990
1192 y Fj(\000)2049 1233 y Fu(\(1\))21 b(+)h Fr(x)2444
1165 y(y)t(p)t Fu(\026)-53 b Fr(v)p 2358 1210 V 2358
1301 a Fu(1)23 b Fq(\000)f Fr(y)t(p)t Fu(\026)-53 b Fr(v)2712
1208 y Fu(^)2690 1233 y Fr(F)2767 1192 y Fk(+)2826 1233
y Fu(\()p Fr(!)t(y)t(p)t Fu(\026)g Fr(v)r Fu(\))1085
1498 y(+)22 b Fr(x)1334 1431 y(!)t(y)t(p)t Fu(\026)-53
b Fr(v)p 1248 1475 386 4 v 1248 1567 a Fu(1)23 b Fq(\000)f
Fr(!)t(y)t(p)t Fu(\026)-53 b Fr(v)1644 1358 y Fl(\024)1719
1473 y Fu(^)1697 1498 y Fr(F)1774 1457 y Fk(+)1833 1498
y Fu(\(1\))21 b Fq(\000)2101 1473 y Fu(^)2079 1498 y
Fr(F)2156 1457 y Fk(+)2215 1498 y Fu(\()p Fr(!)t(y)t(p)t
Fu(\026)-53 b Fr(v)r Fu(\))2506 1358 y Fl(\025)2586 1498
y Fr(:)1038 b Fu(\(7.14\))146 1746 y(These)43 b(equations)f(can)g
(again)e(b)s(e)i(solv)m(ed)g(b)m(y)g(the)g(metho)s(d)f(of)g(iteration,)
i(resulting)f(in)f(complex)0 1866 y Fr(q)t Fu(-series)34
b(similar)f(to)f(\(6.6\).)146 1986 y(There)i(is)f(also)g(the)g(simple)h
(case)f(o)s(ccurring)g(when)h Fr(!)t(y)c Fu(=)e(1.)43
b(Using)33 b(the)g(notation)456 2221 y Fr(L)522 2180
y Fj(0)545 2221 y Fu(\()p Fr(a)p Fu(\))28 b(=)900 2154
y(1)p 813 2198 222 4 v 813 2290 a(1)22 b Fq(\000)h Fr(a)1045
2221 y(;)212 b(L)p Fu(\()p Fr(a)p Fu(\))28 b(=)g Fr(aL)1726
2180 y Fj(0)1749 2221 y Fu(\()p Fr(a)p Fu(\))196 b(and)f(\001)p
Fr(L)p Fu(\()p Fr(a)p Fu(\))28 b(=)g Fr(L)p Fu(\()p Fr(y)t(a)p
Fu(\))22 b Fq(\000)g Fr(L)p Fu(\()p Fr(a)p Fu(\))28 b
Fr(;)0 2451 y Fu(w)m(e)34 b(can)e(write)i(the)f(t)m(w)m(o)g(functional)
g(equations)h(as)p 812 2576 77 4 v 812 2656 a Fr(F)889
2594 y Fk(+)948 2656 y Fu(\()p Fr(p)p Fu(\))28 b(=)f(1)22
b(+)g Fr(L)p Fu(\()p Fr(y)t(pv)t Fu(\))f(+)h Fr(L)1852
2615 y Fj(0)1876 2656 y Fu(\()p Fr(y)t(pv)t Fu(\))p 2104
2576 V Fr(F)2179 2594 y Fk(+)2238 2656 y Fu(\(1\))g(+)g
Fr(L)p Fu(\()p Fr(y)t(pv)t Fu(\))p 2777 2576 V Fr(F)2853
2594 y Fj(\000)2912 2656 y Fu(\()p Fr(pv)t Fu(\))1095
2840 y(+)g Fr(L)p Fu(\()p Fr(pv)t Fu(\))1452 2729 y Fl(h)p
1499 2760 V 111 x Fr(F)1575 2778 y Fj(\000)1634 2840
y Fu(\(1\))g Fq(\000)p 1881 2760 V 23 w Fr(F)1958 2778
y Fj(\000)2017 2840 y Fu(\()p Fr(pv)t Fu(\))2193 2729
y Fl(i)3651 2840 y Fu(\(7.15\))0 3082 y(and)p 812 3223
V 812 3303 a Fr(F)889 3241 y Fj(\000)948 3303 y Fu(\()p
Fr(p)p Fu(\))28 b(=)f Fr(L)p Fu(\()p Fr(y)t(p)t Fu(\026)-53
b Fr(v)s Fu(\))22 b(+)g Fr(L)1683 3262 y Fj(0)1707 3303
y Fu(\()p Fr(y)t(p)t Fu(\026)-53 b Fr(v)s Fu(\))p 1934
3223 V Fr(F)2010 3241 y Fj(\000)2070 3303 y Fu(\(1\))21
b(+)h Fr(L)p Fu(\()p Fr(y)t(p)t Fu(\026)-53 b Fr(v)s
Fu(\))p 2607 3223 V Fr(F)2684 3241 y Fk(+)2743 3303 y
Fu(\()p Fr(p)t Fu(\026)g Fr(v)t Fu(\))1095 3487 y(+)22
b Fr(L)p Fu(\()p Fr(pv)t Fu(\))1452 3376 y Fl(h)p 1499
3407 V 111 x Fr(F)1575 3425 y Fk(+)1634 3487 y Fu(\(1\))g
Fq(\000)p 1881 3407 V 23 w Fr(F)1958 3425 y Fk(+)2017
3487 y Fu(\()p Fr(p)t Fu(\026)-53 b Fr(v)s Fu(\))2192
3376 y Fl(i)2283 3487 y Fr(;)1341 b Fu(\(7.16\))0 3704
y(where)967 3825 y Fr(x)p 1022 3745 V(F)1099 3763 y Fk(+)1186
3825 y Fu(=)1321 3800 y(^)1299 3825 y Fr(F)1376 3784
y Fk(+)1435 3710 y Fl(\014)1435 3770 y(\014)1435 3830
y(\014)1468 3894 y Fp(!)r(y)r Fk(=1)1858 3825 y Fu(and)195
b Fr(x)p 2265 3745 V(F)2342 3763 y Fj(\000)2429 3825
y Fu(=)2565 3800 y(^)2542 3825 y Fr(F)2619 3784 y Fj(\000)2678
3710 y Fl(\014)2678 3770 y(\014)2678 3830 y(\014)2711
3894 y Fp(!)r(y)r Fk(=1)2906 3825 y Fr(:)0 4060 y Fu(Solving)33
b(the)g(t)m(w)m(o)g(equations)h(for)p 1282 3980 V 32
w Fr(F)1359 3999 y Fk(+)1418 4060 y Fu(\()p Fr(p)p Fu(\))e(and)p
1765 3980 V 33 w Fr(F)1842 3999 y Fj(\000)1901 4060 y
Fu(\()p Fr(p)p Fu(\))g(giv)m(es)i(the)f(pair)910 4271
y Fr(K)1000 4230 y Fk(+)1059 4271 y Fu(\()p Fr(p;)17
b(v)t Fu(\))p 1279 4191 V Fr(F)1355 4209 y Fk(+)1414
4271 y Fu(\()p Fr(p)p Fu(\))28 b(=)f(1)22 b(+)g Fr(L)p
Fu(\()p Fr(y)t(pv)t Fu(\))f(+)h Fr(xL)p Fu(\()p Fr(y)t(p)p
Fu(\)\001)p Fr(L)p Fu(\()p Fr(pv)t Fu(\))1741 4442 y(+)g([)p
Fr(L)1932 4401 y Fj(0)1956 4442 y Fu(\()p Fr(y)t(pv)t
Fu(\))f(+)h Fr(xL)p Fu(\()p Fr(p)p Fu(\)\001)p Fr(L)p
Fu(\()p Fr(pv)t Fu(\)])p 2916 4362 V 17 w Fr(F)2993 4380
y Fk(+)3052 4442 y Fu(\(1\))1741 4613 y(+)g([)p Fr(L)p
Fu(\()p Fr(pv)t Fu(\))g(+)g Fr(xL)2349 4572 y Fj(0)2373
4613 y Fu(\()p Fr(y)t(p)p Fu(\)\001)p Fr(L)p Fu(\()p
Fr(pv)t Fu(\)])p 2916 4533 V 16 w Fr(F)2993 4551 y Fj(\000)3052
4613 y Fu(\(1\))474 b(\(7.17\))0 4834 y(and)669 5055
y Fr(K)759 5013 y Fj(\000)818 5055 y Fu(\()p Fr(p;)17
b(v)t Fu(\))p 1038 4975 V Fr(F)1114 4993 y Fj(\000)1173
5055 y Fu(\()p Fr(s)p Fu(\))27 b(=)h Fr(L)p Fu(\()p Fr(y)t(p)t
Fu(\026)-53 b Fr(v)s Fu(\))22 b(+)g Fr(xL)p Fu(\()p Fr(y)t(p)p
Fu(\)\001)p Fr(L)p Fu(\()p Fr(p)t Fu(\026)-53 b Fr(v)t
Fu(\))17 b([1)22 b(+)g Fr(L)p Fu(\()p Fr(y)t(p)p Fu(\)])1741
5226 y(+)g([)p Fr(L)1932 5185 y Fj(0)1956 5226 y Fu(\()p
Fr(y)t(p)t Fu(\026)-53 b Fr(v)s Fu(\))22 b(+)g Fr(xL)p
Fu(\()p Fr(p)p Fu(\)\001)p Fr(L)p Fu(\()p Fr(p)t Fu(\026)-53
b Fr(v)5 b Fu(\)])p 2916 5146 V 16 w Fr(F)2993 5164 y
Fj(\000)3052 5226 y Fu(\(1\))1741 5397 y(+)22 b([)p Fr(L)p
Fu(\()p Fr(p)t Fu(\026)-53 b Fr(v)t Fu(\))22 b(+)g Fr(xL)2349
5356 y Fj(0)2373 5397 y Fu(\()p Fr(y)t(p)p Fu(\)\001)p
Fr(L)p Fu(\()p Fr(p)t Fu(\026)-53 b Fr(v)t Fu(\)])p 2916
5317 V 16 w Fr(F)2993 5335 y Fk(+)3052 5397 y Fu(\(1\))27
b Fr(;)420 b Fu(\(7.18\))1901 5682 y(27)p eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 100 a Fu(where)34 b(the)f(t)m(w)m(o)g(k)m
(ernels)i(are)d(giv)m(en)i(b)m(y)675 296 y Fr(K)765 255
y Fk(+)824 296 y Fu(\()p Fr(p;)17 b(v)t Fu(\))27 b(=\(1)22
b Fq(\000)g Fr(p)p Fu(\)\(1)g Fq(\000)h Fr(y)t(p)p Fu(\)\(1)e
Fq(\000)h Fr(pv)t Fu(\)\(1)g Fq(\000)g Fr(y)t(pv)t Fu(\))f
Fq(\000)i Fr(x)2709 255 y Fk(2)2749 296 y Fr(p)2798 255
y Fk(2)2837 296 y Fr(v)t Fu(\()p Fr(y)i Fq(\000)e Fu(1\))3186
255 y Fk(2)3651 296 y Fu(\(7.19\))675 442 y Fr(K)765
401 y Fj(\000)824 442 y Fu(\()p Fr(p;)17 b(v)t Fu(\))27
b(=)p Fr(K)1237 401 y Fk(+)1296 442 y Fu(\()p Fr(p;)20
b Fu(\026)-52 b Fr(v)t Fu(\))27 b Fr(:)2081 b Fu(\(7.20\))0
639 y(Th)m(us)34 b(w)m(e)g(c)m(ho)s(ose)f Fr(p)g Fu(suc)m(h)h(that)1286
835 y Fr(K)1376 794 y Fj(\000)1435 835 y Fu(\()p Fr(p)p
Fu(\()p Fr(v)t Fu(\))p Fr(;)17 b(v)t Fu(\))27 b(=)g Fr(K)2002
794 y Fk(+)2061 835 y Fu(\()p Fr(p)p Fu(\()t(\026)-53
b Fr(v)t Fu(\))p Fr(;)20 b Fu(\026)-52 b Fr(v)s Fu(\))28
b(=)f(0)p Fr(;)1037 b Fu(\(7.21\))0 1032 y(whic)m(h)34
b(is)g(the)f(same)g(equation)h(as)f(the)g(c)m(haracteristic)i(equation)
e(\(6.13\))f(with)i Fr(p)28 b Fq(!)f Fr(\025)33 b Fu(and)g
Fr(y)j Fu(replaced)0 1152 y(b)m(y)f(1)p Fr(=!)t Fu(.)48
b(Th)m(us)35 b(w)m(e)h(see)f(that)f(the)h(the)g(k)m(ernel)h(that)e
(arises)h(from)f(the)h(functional)f(equation)i(approac)m(h)0
1273 y(corresp)s(onds)31 b(to)f(the)g(c)m(haracteristic)i(equation)f
(\(6.13\))e(required)j(to)d(solv)m(e)j(the)e(T)-8 b(emp)s(erley)32
b(recurrence)0 1393 y(relations)h(\(6.12\))o(.)0 1869
y Ft(8)161 b(Three-dimensional)51 b(mo)t(del)0 2088 y
Fu(The)31 b(mo)s(del)f(can)g(b)s(e)g(generalized)i(to)d(a)h(three)g
(dimensional)i(partially)e(directed)h(w)m(alk)g(mo)s(del)f(in)g(whic)m
(h)0 2208 y(the)k(w)m(alk)g(is)g(self-a)m(v)m(oiding,)h(can)f(tak)m(e)g
(steps)h(in)f(the)g(+)p Fr(x)g Fu(or)f(+)p Fr(y)j Fu(directions)f(or)e
(in)h(the)g Fq(\006)p Fr(z)k Fu(directions.)0 2329 y(Again)f(it)f(will)
i(b)s(e)f(con)m(v)m(enien)m(t)i(to)d(require)i(that)f(the)g(\014rst)g
(step)h(is)f(in)g(the)g(+)p Fr(x)g Fu(or)f(+)p Fr(y)k
Fu(direction.)57 b(W)-8 b(e)0 2449 y(shall)33 b(only)g(consider)h(a)e
(force)h(applied)g(in)g(the)g(\()p Fr(x;)17 b(y)t Fu(\)-plane)32
b(and)h(as)f(suc)m(h)i(w)m(e)g(shall)f(k)m(eep)h(trac)m(k)f(of)g(the)0
2569 y(span)g(in)g(the)g Fr(x)g Fu(and)g Fr(y)i Fu(directions)f(as)f(w)
m(ell)h(as)f(the)g(n)m(um)m(b)s(er)h(of)e(con)m(tacts.)146
2690 y(If)h(w)m(e)g(write)h Fr(c)679 2705 y Fp(n)758
2690 y Fu(for)e(the)h(n)m(um)m(b)s(er)h(of)e(these)i(w)m(alks)g(with)f
Fr(n)g Fu(steps)h(it)f(is)g(easy)g(to)g(see)g(that)1243
2886 y(lim)1219 2946 y Fp(n)p Fj(!1)1419 2886 y Fr(n)1477
2845 y Fj(\000)p Fk(1)1588 2886 y Fu(log)18 b Fr(c)1773
2901 y Fp(n)1848 2886 y Fu(=)27 b(log)q([\(3)22 b(+)2311
2799 y Fq(p)p 2394 2799 98 4 v 87 x Fu(17\))p Fr(=)p
Fu(2])p Fr(:)1017 b Fu(\(8.1\))0 3116 y(Supp)s(ose)34
b(that)e Fr(c)636 3131 y Fp(n)683 3116 y Fu(\()p Fr(s)767
3131 y Fp(x)811 3116 y Fr(;)17 b(s)901 3131 y Fp(y)942
3116 y Fr(;)g(m)p Fu(\))33 b(is)g(the)g(n)m(um)m(b)s(er)h(of)e(w)m
(alks)j(with)e Fr(n)g Fu(steps,)h Fr(m)f Fu(con)m(tacts,)h(and)f(with)g
(spans)0 3236 y Fr(s)46 3251 y Fp(x)122 3236 y Fu(and)g
Fr(s)358 3251 y Fp(y)432 3236 y Fu(in)g(the)g Fr(x)g
Fu(and)f Fr(y)k Fu(directions.)45 b(The)33 b(corresp)s(onding)h
(canonical)f(partition)f(function)i(is)1031 3453 y Fr(Z)1098
3468 y Fp(n)1145 3453 y Fu(\()p Fr(h)1239 3468 y Fp(x)1283
3453 y Fr(;)17 b(h)1383 3468 y Fp(y)1424 3453 y Fr(;)g(!)t
Fu(\))27 b(=)1751 3359 y Fl(X)1701 3568 y Fp(s)1734 3576
y Fm(x)1773 3568 y Fp(;s)1826 3576 y Fm(y)1862 3568 y
Fp(;m)1961 3453 y Fr(c)2003 3468 y Fp(n)2050 3453 y Fu(\()p
Fr(s)2134 3468 y Fp(x)2178 3453 y Fr(;)17 b(s)2268 3468
y Fp(y)2309 3453 y Fr(;)g(m)p Fu(\))p Fr(h)2532 3412
y Fp(s)2565 3420 y Fm(x)2532 3478 y Fp(x)2608 3453 y
Fr(h)2664 3412 y Fp(s)2697 3420 y Fm(y)2664 3478 y Fp(y)2738
3453 y Fr(!)2803 3412 y Fp(m)3699 3453 y Fu(\(8.2\))0
3750 y(and)33 b(w)m(e)g(de\014ne)h(the)f(generating)g(function)1197
3933 y(^)1175 3958 y Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b
Fr(h)1439 3973 y Fp(x)1483 3958 y Fr(;)g(h)1583 3973
y Fp(y)1625 3958 y Fr(;)g(!)t Fu(\))26 b(=)1902 3864
y Fl(X)1952 4073 y Fp(n)2062 3958 y Fr(Z)2129 3973 y
Fp(n)2176 3958 y Fu(\()p Fr(h)2270 3973 y Fp(x)2314 3958
y Fr(;)17 b(h)2414 3973 y Fp(y)2455 3958 y Fr(;)g(!)t
Fu(\))p Fr(z)2651 3917 y Fp(n)2698 3958 y Fr(:)974 b
Fu(\(8.3\))146 4237 y(Concatenation)36 b(argumen)m(ts)g(can)f(b)s(e)g
(used,)i(as)e(in)g(Section)g(3,)h(to)e(establish)j(the)e(existence)i
(of)e(the)0 4357 y(limiting)e(free)g(energy)1105 4477
y Fr(\024)p Fu(\()p Fr(h)1255 4492 y Fp(x)1299 4477 y
Fr(;)17 b(h)1399 4492 y Fp(y)1440 4477 y Fr(;)g(!)t Fu(\))27
b(=)51 b(lim)1717 4537 y Fp(n)p Fj(!1)1918 4477 y Fr(n)1976
4436 y Fj(\000)p Fk(1)2087 4477 y Fu(log)17 b Fr(Z)2296
4492 y Fp(n)2343 4477 y Fu(\()p Fr(h)2437 4492 y Fp(x)2481
4477 y Fr(;)g(h)2581 4492 y Fp(y)2622 4477 y Fr(;)g(!)t
Fu(\))p Fr(:)903 b Fu(\(8.4\))0 4674 y(Metho)s(ds)28
b(exactly)g(analogous)e(to)g(those)h(in)g(Section)g(3)g(can)g(b)s(e)f
(used)i(to)e(sho)m(w)i(that)e Fr(\024)p Fu(\()p Fr(h)3271
4689 y Fp(x)3315 4674 y Fr(;)17 b(h)3415 4689 y Fp(y)3457
4674 y Fr(;)g(!)t Fu(\))25 b(is)i(con-)0 4795 y(v)m(ex)i(and)e(con)m
(tin)m(uous,)j(and)d(di\013eren)m(tiable)i(almost)e(ev)m(erywhere.)45
b(A)m(t)28 b(\014xed)g Fr(!)t(;)17 b(h)3013 4810 y Fp(x)3083
4795 y Fu(and)27 b Fr(h)3323 4810 y Fp(y)3392 4795 y
Fr(G)g Fu(con)m(v)m(erges)0 4915 y(if)32 b Fr(z)h(<)27
b(z)315 4930 y Fp(c)350 4915 y Fu(\()p Fr(h)444 4930
y Fp(x)488 4915 y Fr(;)17 b(h)588 4930 y Fp(y)630 4915
y Fr(;)g(!)t Fu(\))26 b(=)i(exp)q([)p Fq(\000)p Fr(\024)p
Fu(\()p Fr(h)1310 4930 y Fp(x)1355 4915 y Fr(;)17 b(h)1455
4930 y Fp(y)1496 4915 y Fr(;)g(!)t Fu(\)],)32 b(and)g(the)h(phase)h(b)s
(oundary)f Fr(z)f Fu(=)c Fr(z)3023 4930 y Fp(c)3090 4915
y Fu(is)33 b(con)m(tin)m(uous.)146 5035 y(If)38 b(w)m(e)g(turn)g(o\013)
f(the)h(in)m(teractions)h(b)m(y)f(setting)h Fr(x)d Fu(=)g(1)h(and)h
(write)g Fr(G)2750 5050 y Fk(0)2825 5035 y Fq(\021)f
Fr(G)p Fu(\()p Fr(z)t Fu(;)17 b Fr(h)3203 5050 y Fp(x)3247
5035 y Fr(;)g(h)3347 5050 y Fp(y)3389 5035 y Fr(;)g Fu(1\))36
b(then)j Fr(G)3861 5050 y Fk(0)0 5156 y Fu(satis\014es)34
b(the)f(equation)907 5406 y Fr(G)984 5421 y Fk(0)1052
5406 y Fu(=)27 b(\()p Fr(h)1249 5421 y Fp(x)1315 5406
y Fu(+)22 b Fr(h)1469 5421 y Fp(y)1511 5406 y Fu(\)\()p
Fr(G)1664 5421 y Fk(0)1725 5406 y Fu(+)g(1\))p Fr(z)27
b Fu(+)2090 5339 y(2)p Fr(z)2188 5303 y Fk(2)2228 5339
y Fu(\()p Fr(h)2322 5354 y Fp(x)2388 5339 y Fu(+)22 b
Fr(h)2542 5354 y Fp(y)2583 5339 y Fu(\))p 2090 5383 532
4 v 2245 5475 a(1)g Fq(\000)h Fr(z)2631 5406 y Fu(\()p
Fr(G)2746 5421 y Fk(0)2808 5406 y Fu(+)f(1\))706 b(\(8.5\))1901
5682 y(28)p eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 100 a Fu(so)33 b(that)1178
240 y(1)22 b(+)g Fr(G)1424 255 y Fk(0)1491 240 y Fu(=)2035
172 y(1)f Fq(\000)i Fr(z)p 1605 217 1080 4 v 1605 308
a Fu(1)f Fq(\000)g Fr(z)27 b Fq(\000)c Fr(z)t Fu(\()p
Fr(z)k Fu(+)22 b(1\)\()p Fr(h)2385 323 y Fp(x)2451 308
y Fu(+)g Fr(h)2605 323 y Fp(y)2647 308 y Fu(\))2695 240
y Fr(:)977 b Fu(\(8.6\))0 467 y(The)24 b(force-extension)g(curv)m(e)g
(can)g(b)s(e)f(calculated)g(as)g(in)g(Section)h(3)f(and)f(this)i(has)f
(the)g(same)h(general)f(form)0 588 y(as)35 b(for)f(the)i(t)m(w)m(o)f
(dimensional)i(mo)s(del,)f(and)f(as)g(found)g(exp)s(erimen)m(tally)i
(for)d(go)s(o)s(d)g(solv)m(en)m(t)j(conditions)0 708
y(\(Gunari)32 b Fs(et)j(al)43 b Fu(2007\).)146 828 y(F)-8
b(or)40 b(attractiv)m(e)h(in)m(teractions)g(\()p Fr(x)g(>)g
Fu(1\))f(the)g(T)-8 b(emp)s(erley)42 b(approac)m(h)f(describ)s(ed)h(in)
f(Section)g(3)e(for)0 949 y(the)31 b(t)m(w)m(o)g(dimensional)i(case)e
(immediately)i(generalises)f(to)f(this)g(mo)s(del.)43
b(De\014ning)31 b(partial)g(generating)0 1069 y(functions)j(as)e(in)h
(Section)h(2,)e(the)h(partial)f(generating)h(functions)h(ob)s(ey)f(the)
g(relations)1459 1289 y Fr(g)1506 1304 y Fk(0)1573 1289
y Fu(=)27 b(\()p Fr(h)1770 1304 y Fp(x)1836 1289 y Fu(+)22
b Fr(h)1990 1304 y Fp(y)2032 1289 y Fu(\))p Fr(z)t Fu(\(1)g(+)g
Fr(G)p Fu(\))1258 b(\(8.7\))0 1509 y(and)690 1692 y Fr(g)737
1707 y Fp(r)802 1692 y Fu(=)27 b(\()p Fr(h)999 1707 y
Fp(x)1066 1692 y Fu(+)22 b Fr(h)1220 1707 y Fp(y)1261
1692 y Fu(\))p Fr(z)1348 1651 y Fp(r)r Fk(+1)1494 1521
y Fl( )1572 1692 y Fu(2)g(+)1796 1567 y Fp(r)1741 1597
y Fl(X)1749 1809 y Fp(k)r Fk(=0)1885 1692 y Fu(\(1)g(+)g
Fr(!)2157 1651 y Fp(k)2199 1692 y Fu(\))p Fr(g)2284 1707
y Fp(k)2349 1692 y Fu(+)g(\(1)f(+)h Fr(!)2718 1651 y
Fp(r)2756 1692 y Fu(\))2811 1597 y Fl(X)2819 1809 y Fp(k)r(>r)2971
1692 y Fr(g)3018 1707 y Fp(k)3060 1521 y Fl(!)3183 1692
y Fr(;)489 b Fu(\(8.8\))0 1955 y(so)33 b(that)f Fr(g)378
1970 y Fp(r)448 1955 y Fu(satis\014es)j(the)e(relation)814
2175 y Fr(g)861 2190 y Fp(r)r Fk(+1)1011 2175 y Fq(\000)22
b Fu(\()p Fr(z)27 b Fu(+)22 b Fr(q)t Fu(\))p Fr(g)1450
2190 y Fp(r)1510 2175 y Fu(+)g Fr(q)1655 2134 y Fp(r)1692
2175 y Fu(\()p Fr(h)1786 2190 y Fp(x)1853 2175 y Fu(+)g
Fr(h)2007 2190 y Fp(y)2048 2175 y Fu(\))p Fr(z)t Fu(\()p
Fr(q)27 b Fq(\000)22 b Fr(z)t Fu(\))p Fr(g)2476 2190
y Fp(r)2537 2175 y Fu(+)g Fr(q)t(z)t(g)2778 2190 y Fp(r)r
Fj(\000)p Fk(1)2934 2175 y Fu(=)28 b(0)612 b(\(8.9\))0
2395 y(with)33 b Fr(q)f Fu(=)27 b Fr(!)t(z)t Fu(.)146
2515 y(The)33 b(analysis)g(go)s(es)f(through)g(as)g(in)g(Section)h(3)f
(and)g(one)g(can)g(\014nd)g(the)h(temp)s(erature)g(dep)s(endence)0
2636 y(of)i(the)i(critical)f(force.)53 b(By)37 b(c)m(ho)s(osing)f(the)g
(relativ)m(e)h(magnitudes)g(of)f Fr(h)2669 2651 y Fp(x)2748
2636 y Fu(and)g Fr(h)2997 2651 y Fp(y)3075 2636 y Fu(one)g(can)g(c)m
(hange)h(the)0 2756 y(direction)c(in)f(the)g(\()p Fr(x;)17
b(y)t Fu(\)-plane)31 b(in)h(whic)m(h)h(the)g(force)f(is)g(applied.)44
b(In)32 b(all)g(cases)h(the)f(force-temp)s(erature)0
2876 y(curv)m(e)42 b(is)f(monotonic)g(and)f(do)s(es)h(not)f(sho)m(w)i
(reen)m(trance.)68 b(Presumably)43 b(this)e(is)g(b)s(ecause)h(the)f(mo)
s(del)0 2997 y(do)s(es)e(not)g(ha)m(v)m(e)h(extensiv)m(e)i(ground)c
(state)i(en)m(trop)m(y)-8 b(.)63 b(The)40 b(phase)f(diagram)g(can)g
(also)g(b)s(e)g(calculated,)0 3117 y(using)33 b(the)g(same)h(metho)s
(ds)f(as)g(in)g(Section)g(3,)g(with)g(qualitativ)m(ely)h(similar)g
(results.)146 3238 y(If)42 b(w)m(e)g(set)g Fr(h)622 3253
y Fp(y)706 3238 y Fu(=)g(0)f(w)m(e)i(repro)s(duce)f(the)g(results)g(of)
f(Section)h(3.)70 b(W)-8 b(e)41 b(consider)i(t)m(w)m(o)f(other)f
(cases.)0 3358 y(First)30 b(w)m(e)h(set)g Fr(h)582 3373
y Fp(x)654 3358 y Fu(=)d Fr(h)i Fu(and)g Fr(h)1087 3373
y Fp(y)1156 3358 y Fu(=)e(1.)42 b(This)32 b(corresp)s(onds)f(to)f
(applying)h(a)f(force)g(in)g(the)h Fr(x)p Fu(-direction.)44
b(W)-8 b(e)0 3478 y(sho)m(w)36 b(the)g(critical)g(force-temp)s(erature)
g(curv)m(e)g(in)g(Figure)f(10)g(and)g(the)h(b)s(oundary)f(of)g(con)m(v)
m(ergence)j(in)0 3599 y(Figure)33 b(11.)146 3719 y(These)i(are)e
(qualitativ)m(ely)i(similar)e(to)g(the)g(corresp)s(onding)h(\014gures)g
(for)e(horizon)m(tal)i(pulling)f(in)g(t)m(w)m(o)0 3839
y(dimensions,)k(though)d(with)h(quan)m(titativ)m(e)h(di\013erences,)h
(of)d(course.)50 b(In)34 b(particular)h(the)f(critical)h(force-)0
3960 y(temp)s(erature)h(curv)m(e)h(has)f(zero)g(slop)s(e)g(in)g(the)g
Fr(T)46 b Fq(!)33 b Fu(0)i(limit)h(and)f(is)h(monotone)g(decreasing.)54
b(W)-8 b(e)36 b(also)0 4080 y(set)f Fr(h)210 4095 y Fp(x)285
4080 y Fu(=)c Fr(h)448 4095 y Fp(y)521 4080 y Fu(=)f
Fr(h)35 b Fu(whic)m(h)h(corresp)s(onds)g(to)e(pulling)h(in)g(the)g
Fr(xy)t Fu(-plane)f(but)h(at)f(45)3071 4044 y Fp(o)3143
4080 y Fu(to)h(the)f Fr(x)p Fu(-axis.)51 b(W)-8 b(e)0
4201 y(sho)m(w)36 b(the)g(critical)g(force-temp)s(erature)g(curv)m(e)g
(in)g(Figure)f(12)g(and)g(the)h(b)s(oundary)f(of)g(con)m(v)m(ergence)j
(in)0 4321 y(Figure)33 b(13.)146 4441 y(The)g(critical)g(force)f(no)m
(w)g(has)g(negativ)m(e)i(limiting)e(slop)s(e)g(in)g(the)h
Fr(T)41 b Fq(!)27 b Fu(0)32 b(limit)g(but)h(remains)f(mono-)0
4562 y(tone)j(decreasing.)52 b(This)36 b(is)g(b)s(ecause)g(of)f(the)g
(curious)h(feature)f(of)g(this)g(mo)s(del)g(that)g(the)h(ground)f
(state)0 4682 y(has)41 b(no)f(\(extensiv)m(e\))j(en)m(trop)m(y)e(in)g
(the)f(compact)h(state)g(but)f(acquires)i(en)m(trop)m(y)f(under)g(the)g
(in\015uence)0 4803 y(of)e(a)f(force.)63 b(The)40 b(lo)m(w)g(temp)s
(erature)g(b)s(eha)m(viour)g(can)f(b)s(e)g(understo)s(o)s(d)h(b)m(y)g
(the)f(follo)m(wing)g(crude)h(lo)m(w)0 4923 y(temp)s(erature)32
b(argumen)m(t.)43 b(Think)32 b(of)e(an)h Fr(n)p Fu(-edge)g(w)m(alk)h
(at)e(lo)m(w)h(temp)s(erature)h Fr(T)44 b Fu(under)31
b(a)g(tensile)h(force)0 5043 y Fr(f)42 b Fu(at)32 b(45)307
5007 y Fp(o)376 5043 y Fu(to)f(the)h Fr(x)p Fu(-axis.)44
b(If)32 b Fr(n)21 b Fq(\000)f Fr(m)32 b Fu(edges)h(of)e(the)h(w)m(alk)h
(are)f(in)g(a)f(compact)h(state)g(and)g(the)g(remaining)0
5164 y Fr(m)h Fu(edges)h(are)e(extended)j(the)e(\(extensiv)m(e\))i
(free)e(energy)h(can)f(b)s(e)f(written)i(as)1266 5384
y Fr(F)42 b Fu(=)27 b(\()p Fr(n)c Fq(\000)f Fr(m)p Fu(\))p
Fr(\017)h Fq(\000)g Fr(f)11 b(m)22 b Fq(\000)g Fr(T)14
b(m)j Fu(log)h(2)p Fr(;)1017 b Fu(\(8.10\))1901 5682
y(29)p eop end
%%Page: 30 30
TeXDict begin 30 29 bop 887 2126 a
 /PSfrag where{pop(fxt)[[0(Bl)1 0]](bbb)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/3d_fT.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:27:46 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
58.0 6.017493 333.0 338.982513 rc
48 60 64 OPL
60 64
61 64
61 64
62 64
62 64
63 64
63 64
63 64
64 64
64 64
64 64
65 64
65 64
66 64
66 64
67 64
67 64
68 64
68 64
69 64
69 64
70 64
70 64
70 64
71 64
71 64
71 64
72 64
72 64
73 64
73 64
74 64
74 64
75 64
75 64
76 64
76 64
77 64
77 64
77 64
78 64
78 64
79 64
79 64
79 64
80 64
80 64
81 64
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
1.0 0.0 0.0 RG
58.0 6.017493 333.0 338.982513 rc
49 81 64 OPL
84 64
98 64
101 64
114 65
120 66
131 68
145 73
148 74
150 75
165 82
175 89
181 93
192 102
198 107
207 116
215 123
219 129
229 140
231 142
231 143
240 156
248 167
250 169
251 172
258 183
265 194
266 196
267 198
273 210
279 221
280 223
282 226
286 236
289 242
292 250
298 263
298 263
299 263
304 277
306 283
309 290
313 302
314 304
315 307
318 317
320 321
323 331
325 339
327 344
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 389 344 OPL
389 346
1 345 344 OPL
345 346
1 301 344 OPL
301 346
1 257 344 OPL
257 346
1 213 344 OPL
213 346
1 169 344 OPL
169 346
1 125 344 OPL
125 346
1 81 344 OPL
81 346
1 59 344 OPL
389 344
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
205 367 38 23 rc
209.0 386.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(bbb) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
59 349
-5.0 -5.0 translate
61.0 368.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 103 344 OPL
103 349
-5.0 -5.0 translate
101.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 147 344 OPL
147 349
-5.0 -5.0 translate
145.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 191 344 OPL
191 349
-5.0 -5.0 translate
189.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
q
1 235 344 OPL
235 349
-5.0 -5.0 translate
233.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 279 344 OPL
279 349
-5.0 -5.0 translate
277.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
q
1 323 344 OPL
323 349
-5.0 -5.0 translate
321.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 367 344 OPL
367 349
-5.0 -5.0 translate
365.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.7) show
Q
5.0 5.0 translate
Q
Q
q
1 59 36 OPL
56 36
1 59 92 OPL
56 92
1 59 148 OPL
56 148
1 59 204 OPL
56 204
1 59 260 OPL
56 260
1 59 316 OPL
56 316
1 59 344 OPL
59 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
1 165 29 23 rc
5.0 184.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(fxt) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 59 344 OPL
53 344
-5.0 -5.0 translate
48.0 354.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 59 288 OPL
53 288
-5.0 -5.0 translate
39.0 298.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 59 232 OPL
53 232
-5.0 -5.0 translate
39.0 242.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 59 176 OPL
53 176
-5.0 -5.0 translate
39.0 186.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 59 120 OPL
53 120
-5.0 -5.0 translate
39.0 130.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 59 64 OPL
53 64
-5.0 -5.0 translate
39.0 74.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
q
1 59 8 OPL
53 8
-5.0 -5.0 translate
39.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.2) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 778 1880 a
  {
 778 1880 a Ff(f)849
1836 y Fe(t)836 1909 y(x)778 1880 y
  } 0/Place PSfrag
 778 1880 a 704 2103
a
  {
 704 2103 a Ff(\014)777 2059 y Fd(\000)p Fb(1)704 2103
y
  } 1/Place PSfrag
 704 2103 a 0 2426 a Fu(Figure)c(10:)41 b(The)29 b(temp)s(erature)g
(dep)s(endence)i(of)c(the)i(critical)g(force)f(for)g(the)g(three)h
(dimensional)h(mo)s(del)0 2642 y(in)j(the)g Fr(n)28 b
Fq(!)f(1)32 b Fu(limit)h(when)h(the)f(force)g(is)g(applied)g(in)g(the)g
Fr(x)p Fu(-direction.)0 2927 y(where)41 b Fr(\017)f(<)g
Fu(0)f(is)i(the)f(v)m(ertex-v)m(ertex)j(attractiv)m(e)d(energy)-8
b(.)66 b(Di\013eren)m(tiating)40 b(with)g(resp)s(ect)h(to)f
Fr(m)g Fu(and)0 3048 y(setting)33 b(the)g(deriv)-5 b(ativ)m(e)34
b(equal)g(to)e(zero)h(giv)m(es)1583 3268 y Fr(f)38 b
Fu(=)28 b Fq(\000)p Fr(\017)23 b Fq(\000)f Fr(T)31 b
Fu(log)17 b(2)p Fr(:)1334 b Fu(\(8.11\))0 3488 y(Setting)26
b Fr(\017)i Fu(=)g Fq(\000)p Fu(1)e(giv)m(es)h(a)e(critical)h(force)g
(of)f(1)h(at)f Fr(T)42 b Fu(=)27 b(0)f(and)f(the)h(limiting)h(slop)s(e)
f Fr(d)-16 b(f)11 b(=dT)40 b Fu(=)27 b Fq(\000)17 b Fu(log)h(2)28
b Fr(<)f Fu(0.)0 3967 y Ft(9)161 b(Discussion)0 4186
y Fu(W)-8 b(e)24 b(ha)m(v)m(e)i(analysed)f(the)f(p)s(olymer)h(mo)s(del)
f(of)g(partially-directed)h(w)m(alks)h(with)e(self-in)m(teraction,)j
(so)d(as)g(to)0 4306 y(induce)31 b(a)e(collapse)i(transition,)f(under)h
(the)e(in\015uence)j(of)d(tensile)i(forces)f(on)f(the)h(ends)h(of)e
(the)h(p)s(olymer.)0 4427 y(The)24 b(problem)g(of)e(forces)i(only)f(in)
h(the)f(preferred)h(direction)g(of)f(the)g(w)m(alk)h(can)f(b)s(e)h
(elucidated)g(completely)-8 b(.)0 4547 y(The)33 b(phase)g(transition)f
(whic)m(h)i(is)f(second)g(order)f(without)h(an)m(y)f(force)h(in)f(unc)m
(hanged)h(b)m(y)g(the)g(presence)0 4667 y(of)j(suc)m(h)h(a)f(force.)55
b(The)37 b(force)g(extension)h(curv)m(es)g(at)e(high)g(temp)s(eratures)
i(lo)s(ok)e(qualitativ)m(ely)i(similar)0 4788 y(to)32
b(those)h(of)g(AFM)f(exp)s(erimen)m(ts)j(\(Gunari)e Fs(et)i(al)42
b Fu(2007\).)146 4908 y(The)k(solution)g(of)f(the)h(full)f(mo)s(del)h
(is)f(more)h(problematic.)82 b(While)46 b(the)g(exact)g(solution)g(of)f
(the)0 5028 y(generating)c(function)h(of)e(partition)h(functions)h(can)
f(b)s(e)g(written)h(do)m(wn)g(in)f(terms)h(of)f Fr(q)t
Fu(-series,)j(these)0 5149 y(functions)30 b(are)e(ev)m(en)j(more)e
(complicated)h(than)f(those)g(encoun)m(tered)i(in)e(the)g(standard)g
(mo)s(del)g(that)g(has)0 5269 y(only)37 b(forces)h(in)f(the)g
(preferred)h(direction)g(\(those)g(are)e Fr(q)t Fu(-Bessel)i
(functions\).)58 b(W)-8 b(e)37 b(ha)m(v)m(e)h(b)s(een)g(able)f(to)0
5390 y(solv)m(e)43 b(the)g(mo)s(del)f(on)f(the)i(imp)s(ortan)m(t)f(sp)s
(ecial)h(curv)m(e)g(in)f(parameter)g(space)h(whic)m(h)h(should)e(con)m
(tain)1901 5682 y(30)p eop end
%%Page: 31 31
TeXDict begin 31 30 bop 887 2126 a
 /PSfrag where{pop(z)[[0(Bl)1 0]](w)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/3d_y1_zc.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Saturday, 5 July 2008 02:27:42 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.0 w
[ 2.0 5.0 ] 0.0 d
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
18 206 4 OPL
214 19
216 24
219 30
226 42
230 47
236 57
245 70
246 71
248 74
256 84
259 87
266 96
272 102
276 106
285 115
286 116
289 119
296 125
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2.0 w
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
20 296 125 OPL
298 126
306 133
309 135
315 140
320 144
324 147
331 151
334 153
342 158
343 159
350 163
353 165
353 165
362 170
364 171
372 175
374 176
381 180
385 181
390 184
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
1.0 0.0 0.0 RG
94.0 28.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-94.0 -28.0 translate
98.0 30.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-98.0 -30.0 translate
108.0 34.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-108.0 -34.0 translate
118.0 39.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-118.0 -39.0 translate
128.0 43.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-128.0 -43.0 translate
137.0 47.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-137.0 -47.0 translate
147.0 51.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-147.0 -51.0 translate
157.0 56.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-157.0 -56.0 translate
166.0 60.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-166.0 -60.0 translate
176.0 64.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-176.0 -64.0 translate
186.0 69.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-186.0 -69.0 translate
196.0 73.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-196.0 -73.0 translate
205.0 77.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-205.0 -77.0 translate
215.0 82.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-215.0 -82.0 translate
225.0 86.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-225.0 -86.0 translate
234.0 91.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-234.0 -91.0 translate
244.0 96.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-244.0 -96.0 translate
254.0 101.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-254.0 -101.0 translate
264.0 105.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-264.0 -105.0 translate
273.0 111.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-273.0 -111.0 translate
283.0 116.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-283.0 -116.0 translate
295.0 124.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-295.0 -124.0 translate
Q
q
1.0 0.0 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 29 OPL
97 30
99 31
103 33
107 34
111 36
115 38
119 40
124 42
128 43
132 45
136 47
141 49
145 51
149 53
153 55
158 57
162 58
166 60
170 62
175 64
179 66
183 68
187 70
192 72
196 74
200 76
204 78
209 80
213 81
217 83
222 86
226 87
230 90
234 91
239 94
243 96
247 98
251 100
255 102
260 104
264 106
268 109
272 111
277 113
281 115
286 118
291 122
296 125
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
0.0 0.0 1.0 RG
93.0 45.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-93.0 -45.0 translate
97.0 47.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-97.0 -47.0 translate
107.0 51.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-107.0 -51.0 translate
117.0 54.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-117.0 -54.0 translate
127.0 58.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-127.0 -58.0 translate
136.0 62.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-136.0 -62.0 translate
146.0 65.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-146.0 -65.0 translate
156.0 69.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-156.0 -69.0 translate
165.0 73.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-165.0 -73.0 translate
175.0 77.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-175.0 -77.0 translate
185.0 81.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-185.0 -81.0 translate
195.0 84.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-195.0 -84.0 translate
204.0 88.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-204.0 -88.0 translate
214.0 92.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-214.0 -92.0 translate
224.0 96.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-224.0 -96.0 translate
233.0 100.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-233.0 -100.0 translate
243.0 104.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-243.0 -104.0 translate
253.0 108.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-253.0 -108.0 translate
263.0 112.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-263.0 -112.0 translate
272.0 117.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-272.0 -117.0 translate
282.0 121.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-282.0 -121.0 translate
292.0 126.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-292.0 -126.0 translate
301.0 131.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-301.0 -131.0 translate
310.0 136.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-310.0 -136.0 translate
Q
q
0.0 0.0 1.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 47 OPL
97 48
100 49
104 51
108 52
113 54
118 56
122 58
127 59
132 61
136 63
141 65
146 66
150 68
155 70
159 72
164 74
169 75
174 77
178 79
183 81
187 83
192 85
197 86
201 88
206 90
211 92
215 94
220 96
225 98
229 100
234 102
239 103
244 105
248 107
253 109
257 111
262 113
266 115
271 117
276 119
281 122
285 124
290 126
295 128
299 131
304 133
308 135
312 138
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
0.0 0.392157 0.0 RG
94.0 70.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-94.0 -70.0 translate
98.0 71.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-98.0 -71.0 translate
108.0 74.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-108.0 -74.0 translate
118.0 77.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-118.0 -77.0 translate
128.0 80.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-128.0 -80.0 translate
137.0 83.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-137.0 -83.0 translate
147.0 86.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-147.0 -86.0 translate
157.0 89.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-157.0 -89.0 translate
166.0 92.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-166.0 -92.0 translate
176.0 96.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-176.0 -96.0 translate
186.0 99.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-186.0 -99.0 translate
196.0 102.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-196.0 -102.0 translate
205.0 105.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-205.0 -105.0 translate
215.0 108.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-215.0 -108.0 translate
225.0 112.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-225.0 -112.0 translate
234.0 115.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-234.0 -115.0 translate
244.0 118.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-244.0 -118.0 translate
254.0 122.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-254.0 -122.0 translate
264.0 125.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-264.0 -125.0 translate
273.0 128.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-273.0 -128.0 translate
283.0 132.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-283.0 -132.0 translate
293.0 135.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-293.0 -135.0 translate
302.0 139.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-302.0 -139.0 translate
312.0 143.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-312.0 -143.0 translate
322.0 147.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-322.0 -147.0 translate
335.0 154.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-335.0 -154.0 translate
Q
q
0.0 0.392157 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 71 OPL
97 71
100 72
105 74
110 75
115 77
120 78
125 80
130 82
135 83
141 85
145 86
150 88
156 90
161 91
165 93
171 95
175 96
181 98
186 99
191 101
196 103
201 104
206 106
211 108
216 109
221 111
226 113
231 114
236 116
241 118
247 120
252 121
257 123
262 125
267 127
272 128
277 130
282 132
287 134
292 136
297 138
302 140
307 142
312 144
317 146
323 148
329 151
336 155
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
q
1 313 340 OPL
313 342
1 362 340 OPL
362 342
1 216 340 OPL
216 342
1 265 340 OPL
265 342
1 119 340 OPL
119 342
1 167 340 OPL
167 342
1 70 340 OPL
70 342
1 46 340 OPL
386 340
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
204 363 22 27 rc
208.0 385.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -293 1042 1010 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -293 1042 1010
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0 def
		/quotedbl 713.0 def
		/numbersign 500.0 def
		/dollar 549.0 def
		/percent 833.0 def
		/ampersand 778.0 def
		/quoteright 439.0 def
		/parenleft 333.0 def
		/parenright 333.0 def
		/asterisk 500.0 def
		/plus 549.0 def
		/comma 250.0 def
		/hyphen 584.0 def
		/period 250.0 def
		/slash 278.0 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 278.0 def
		/semicolon 278.0 def
		/less 549.0 def
		/equal 549.0 def
		/greater 549.0 def
		/question 444.0 def
		/at 549.0 def
		/A 722.0 def
		/B 667.0 def
		/C 722.0 def
		/D 612.0 def
		/E 611.0 def
		/F 763.0 def
		/G 603.0 def
		/H 722.0 def
		/I 333.0 def
		/J 631.0 def
		/K 722.0 def
		/L 686.0 def
		/M 889.0 def
		/N 722.0 def
		/O 722.0 def
		/P 768.0 def
		/Q 741.0 def
		/R 556.0 def
		/S 592.0 def
		/T 611.0 def
		/U 690.0 def
		/V 439.0 def
		/W 768.0 def
		/X 645.0 def
		/Y 795.0 def
		/Z 611.0 def
		/bracketleft 333.0 def
		/backslash 863.0 def
		/bracketright 333.0 def
		/asciicircum 658.0 def
		/underscore 500.0 def
		/quoteleft 500.0 def
		/a 631.0 def
		/b 549.0 def
		/c 549.0 def
		/d 494.0 def
		/e 439.0 def
		/f 521.0 def
		/g 411.0 def
		/h 603.0 def
		/i 329.0 def
		/j 603.0 def
		/k 549.0 def
		/l 549.0 def
		/m 576.0 def
		/n 521.0 def
		/o 549.0 def
		/p 549.0 def
		/q 521.0 def
		/r 549.0 def
		/s 603.0 def
		/t 439.0 def
		/u 576.0 def
		/v 713.0 def
		/w 686.0 def
		/x 493.0 def
		/y 686.0 def
		/z 494.0 def
		/braceleft 480.0 def
		/bar 200.0 def
		/braceright 480.0 def
		/asciitilde 549.0 def
		/exclamdown 620.0 def
		/cent 247.0 def
		/sterling 549.0 def
		/fraction 584.0 def
		/yen 713.0 def
		/florin 584.0 def
		/section 753.0 def
		/currency 167.0 def
		/quotesingle 439.0 def
		/quotedblleft 584.0 def
		/guillemotleft 1042.0 def
		/guilsinglleft 584.0 def
		/guilsinglright 584.0 def
		/fi 584.0 def
		/fl 584.0 def
		/endash 584.0 def
		/dagger 584.0 def
		/daggerdbl 584.0 def
		/periodcentered 460.0 def
		/paragraph 494.0 def
		/bullet 584.0 def
		/quotesinglbase 584.0 def
		/quotedblbase 584.0 def
		/quotedblright 584.0 def
		/guillemotright 549.0 def
		/ellipsis 584.0 def
		/perthousand 584.0 def
		/questiondown 658.0 def
		/grave 500.0 def
		/acute 584.0 def
		/circumflex 584.0 def
		/tilde 584.0 def
		/macron 603.0 def
		/breve 584.0 def
		/dotaccent 584.0 def
		/dieresis 753.0 def
		/ring 584.0 def
		/cedilla 549.0 def
		/hungarumlaut 584.0 def
		/ogonek 584.0 def
		/caron 584.0 def
		/emdash 584.0 def
		/AE 823.0 def
		/ordfeminine 753.0 def
		/Lslash 584.0 def
		/Oslash 713.0 def
		/OE 584.0 def
		/ordmasculine 549.0 def
		/ae 384.0 def
		/dotlessi 584.0 def
		/lslash 584.0 def
		/oslash 384.0 def
		/oe 584.0 def
		/germandbls 603.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
240 39 moveto
240 23 234 10 223 0  curveto
212 -11 199 -17 184 -17  curveto
168 -17 155 -11 144 0  curveto
133 10 128 23 128 39  curveto
128 54 133 67 144 78  curveto
155 89 168 95 184 95  curveto
199 95 212 89 223 78  curveto
234 67 240 54 240 39  curveto
closepath
240 580 moveto
240 571 239 562 238 552  curveto
237 542 236 532 234 523  curveto
232 513 231 504 230 496  curveto
228 488 227 481 227 476  curveto
194 209 lineto
193 205 192 200 191 196  curveto
189 192 187 190 184 190  curveto
180 190 178 192 177 196  curveto
175 200 174 205 174 209  curveto
141 475 lineto
140 479 139 486 138 494  curveto
136 502 135 511 133 521  curveto
131 531 130 541 129 551  curveto
128 561 128 570 128 579  curveto
128 604 131 626 139 644  curveto
147 662 162 672 184 672  curveto
200 672 214 665 224 651  curveto
234 637 240 614 240 580  curveto
closepath
fill
		} def

	/quotedbl
		{
199 447 moveto
361 70 lineto
517 447 lineto
199 447 lineto
closepath
388 0 moveto
329 0 lineto
31 705 lineto
88 705 lineto
175 502 lineto
540 502 lineto
624 705 lineto
681 705 lineto
388 0 lineto
closepath
fill
		} def

	/numbersign
		{
201 420 moveto
176 238 lineto
301 238 lineto
325 420 lineto
201 420 lineto
closepath
475 420 moveto
372 420 lineto
348 238 lineto
451 238 lineto
445 192 lineto
341 192 lineto
313 -16 lineto
266 -16 lineto
294 192 lineto
170 192 lineto
141 -16 lineto
94 -16 lineto
123 192 lineto
20 192 lineto
26 238 lineto
129 238 lineto
154 420 lineto
54 420 lineto
60 466 lineto
160 466 lineto
189 673 lineto
236 673 lineto
207 466 lineto
332 466 lineto
360 673 lineto
407 673 lineto
379 466 lineto
481 466 lineto
475 420 lineto
closepath
fill
		} def

	/dollar
		{
25 0 moveto
25 55 lineto
423 55 lineto
423 342 lineto
69 342 lineto
69 397 lineto
423 397 lineto
423 652 lineto
25 652 lineto
25 707 lineto
478 707 lineto
478 0 lineto
25 0 lineto
closepath
fill
		} def

	/percent
		{
741 212 moveto
741 222 739 233 736 244  curveto
732 254 727 264 721 272  curveto
715 280 707 287 698 292  curveto
688 297 678 300 666 300  curveto
652 300 641 297 632 291  curveto
622 285 613 277 603 267  curveto
599 263 595 258 591 254  curveto
587 249 583 244 579 238  curveto
575 232 570 224 566 215  curveto
561 206 555 195 549 183  curveto
539 163 531 144 525 125  curveto
518 105 515 88 515 74  curveto
515 46 521 26 533 16  curveto
545 5 559 0 575 0  curveto
591 0 605 2 617 8  curveto
628 14 639 22 651 34  curveto
666 49 679 66 691 85  curveto
702 103 711 121 719 138  curveto
726 155 731 170 735 184  curveto
739 197 741 206 741 212  curveto
closepath
365 536 moveto
365 542 364 549 363 557  curveto
362 565 361 572 360 579  curveto
340 587 325 595 317 601  curveto
308 607 301 611 296 615  curveto
294 615 293 615 291 615  curveto
289 615 288 616 287 616  curveto
280 616 273 614 267 612  curveto
260 609 252 603 243 594  curveto
238 589 233 583 227 576  curveto
221 568 215 560 209 552  curveto
203 544 198 535 193 526  curveto
187 517 183 509 179 501  curveto
169 478 160 457 153 438  curveto
146 419 143 399 143 379  curveto
143 355 148 339 158 329  curveto
168 319 183 314 201 314  curveto
217 314 232 317 246 325  curveto
260 332 272 341 284 353  curveto
296 364 306 376 315 390  curveto
323 403 331 415 337 427  curveto
347 448 355 469 359 490  curveto
363 510 365 526 365 536  curveto
closepath
771 226 moveto
771 207 768 188 763 168  curveto
757 148 750 128 741 109  curveto
732 90 722 72 710 55  curveto
698 38 686 23 674 11  curveto
656 -6 638 -18 620 -25  curveto
601 -32 581 -36 560 -36  curveto
523 -36 493 -24 469 -1  curveto
445 22 434 52 434 90  curveto
434 119 438 146 448 170  curveto
457 194 469 216 484 236  curveto
499 256 516 273 535 287  curveto
554 301 573 314 593 324  curveto
603 329 614 333 626 335  curveto
638 337 649 338 660 338  curveto
698 338 726 328 744 309  curveto
762 289 771 262 771 226  curveto
closepath
229 -28 moveto
174 -28 lineto
563 583 lineto
551 578 540 574 531 571  curveto
522 568 514 566 506 564  curveto
498 562 489 560 481 559  curveto
473 558 463 558 453 558  curveto
441 558 431 558 423 560  curveto
415 561 404 565 390 573  curveto
390 567 391 560 392 550  curveto
393 540 394 530 394 520  curveto
394 502 392 485 389 470  curveto
385 455 379 439 371 422  curveto
355 392 338 365 320 343  curveto
301 320 282 304 263 295  curveto
251 289 238 285 222 281  curveto
206 277 192 276 179 276  curveto
162 276 146 279 132 286  curveto
118 292 105 302 95 314  curveto
85 326 77 340 71 356  curveto
65 372 63 389 63 408  curveto
63 424 65 440 69 458  curveto
73 476 79 492 87 506  curveto
95 522 106 538 118 553  curveto
130 567 142 580 154 592  curveto
166 603 177 612 188 620  curveto
199 628 208 633 215 637  curveto
228 643 240 648 250 650  curveto
260 652 270 653 282 653  curveto
303 653 319 650 330 646  curveto
340 641 348 637 353 633  curveto
355 630 359 626 365 621  curveto
371 615 378 610 386 605  curveto
394 600 405 596 417 592  curveto
429 588 442 586 458 586  curveto
472 586 487 588 503 592  curveto
519 596 533 601 547 607  curveto
561 613 573 621 583 629  curveto
593 637 599 646 602 655  curveto
657 655 lineto
229 -28 lineto
closepath
fill
		} def

	/ampersand
		{
400 108 moveto
364 150 333 193 308 235  curveto
282 277 262 312 246 340  curveto
224 327 206 314 192 301  curveto
177 288 165 275 157 262  curveto
148 248 142 234 138 220  curveto
134 206 133 191 133 176  curveto
133 158 136 141 143 125  curveto
150 108 160 93 172 80  curveto
184 67 197 57 213 49  curveto
228 41 244 37 260 37  curveto
282 37 305 43 330 55  curveto
355 67 378 85 400 108  curveto
closepath
433 548 moveto
433 576 425 595 410 607  curveto
395 619 378 625 359 625  curveto
345 625 334 623 325 619  curveto
315 615 307 609 300 602  curveto
292 594 287 584 284 571  curveto
280 558 279 545 279 532  curveto
279 510 283 490 291 470  curveto
299 450 307 430 317 411  curveto
330 418 343 425 357 433  curveto
371 441 383 450 395 460  curveto
406 470 415 483 422 497  curveto
429 511 433 528 433 548  curveto
closepath
750 100 moveto
744 86 737 74 729 64  curveto
721 54 713 44 706 35  curveto
694 19 678 7 657 -3  curveto
635 -13 613 -18 589 -18  curveto
571 -18 553 -14 535 -6  curveto
517 1 501 10 487 21  curveto
472 31 459 42 448 53  curveto
436 63 428 72 422 78  curveto
409 64 394 52 378 41  curveto
362 29 345 19 327 10  curveto
309 1 290 -5 271 -10  curveto
252 -15 234 -18 216 -18  curveto
191 -18 166 -14 141 -6  curveto
116 2 97 12 84 26  curveto
70 39 60 56 52 76  curveto
44 96 41 119 41 143  curveto
41 174 48 202 64 227  curveto
79 252 97 274 118 293  curveto
138 312 159 328 181 342  curveto
202 355 219 366 232 374  curveto
228 387 224 399 220 409  curveto
216 419 212 429 209 438  curveto
206 447 204 456 202 466  curveto
200 475 199 485 199 497  curveto
199 523 203 547 212 567  curveto
220 587 231 604 245 618  curveto
259 632 275 643 293 650  curveto
310 657 330 661 354 661  curveto
378 661 398 658 416 652  curveto
433 646 450 635 466 619  curveto
474 611 480 601 484 590  curveto
488 578 491 567 491 555  curveto
491 539 486 521 477 499  curveto
468 477 456 458 440 442  curveto
427 429 412 418 396 410  curveto
379 401 358 391 332 380  curveto
336 372 342 361 351 345  curveto
359 329 369 312 381 293  curveto
393 274 406 255 420 235  curveto
434 215 448 198 462 182  curveto
472 194 483 207 494 221  curveto
505 235 515 249 524 264  curveto
533 279 540 294 546 310  curveto
551 325 554 340 554 354  curveto
554 368 550 379 543 388  curveto
535 397 519 402 495 402  curveto
495 420 lineto
706 420 lineto
706 402 lineto
681 402 663 397 651 388  curveto
639 378 629 365 619 349  curveto
609 333 600 317 590 299  curveto
580 281 569 264 558 246  curveto
547 228 536 210 524 192  curveto
512 174 500 158 487 144  curveto
493 136 502 128 514 118  curveto
526 108 538 98 552 89  curveto
566 80 579 73 593 67  curveto
606 61 618 58 630 58  curveto
646 58 662 62 677 71  curveto
691 80 710 94 734 114  curveto
750 100 lineto
750 100 lineto
closepath
fill
		} def

	/quoteright
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/parenleft
		{
290 -191 moveto
283 -191 272 -185 256 -173  curveto
240 -161 222 -146 204 -128  curveto
186 -110 168 -89 150 -67  curveto
132 -45 117 -23 107 -2  curveto
71 70 53 151 53 241  curveto
53 285 57 327 66 368  curveto
74 408 87 445 104 478  curveto
116 504 132 528 151 552  curveto
170 576 189 596 208 614  curveto
226 632 243 646 258 657  curveto
273 667 284 673 290 673  curveto
300 656 lineto
276 636 256 617 241 600  curveto
225 583 212 566 202 549  curveto
192 532 183 515 177 497  curveto
171 479 165 460 160 440  curveto
156 424 152 408 149 394  curveto
146 379 144 364 142 348  curveto
140 332 138 316 138 299  curveto
137 281 137 262 137 241  curveto
137 199 138 162 142 132  curveto
146 102 151 73 159 46  curveto
163 32 167 17 172 1  curveto
176 -15 183 -32 193 -50  curveto
202 -68 215 -88 232 -109  curveto
249 -129 272 -151 300 -174  curveto
290 -191 lineto
closepath
fill
		} def

	/parenright
		{
277 241 moveto
277 151 259 70 223 -2  curveto
212 -23 198 -45 180 -67  curveto
162 -89 143 -110 125 -128  curveto
107 -146 90 -161 74 -173  curveto
58 -185 46 -191 40 -191  curveto
30 -174 lineto
58 -151 80 -129 97 -109  curveto
114 -88 127 -68 137 -50  curveto
146 -32 153 -15 158 1  curveto
162 17 167 32 171 46  curveto
178 73 183 102 187 132  curveto
191 162 193 199 193 241  curveto
193 262 192 281 192 299  curveto
191 316 190 332 188 348  curveto
186 364 183 379 180 394  curveto
177 408 174 424 170 440  curveto
164 460 158 479 152 497  curveto
146 515 137 532 127 549  curveto
117 566 104 583 89 600  curveto
73 617 54 636 30 656  curveto
40 673 lineto
46 673 56 667 71 657  curveto
86 646 103 632 122 614  curveto
140 596 159 576 178 552  curveto
196 528 212 504 226 478  curveto
242 445 255 408 264 368  curveto
272 327 277 285 277 241  curveto
closepath
fill
		} def

	/asterisk
		{
427 253 moveto
427 244 424 237 418 231  curveto
412 225 404 223 392 223  curveto
380 223 370 226 363 234  curveto
358 238 353 244 348 252  curveto
342 259 335 267 326 277  curveto
314 289 301 299 287 309  curveto
273 319 265 324 261 324  curveto
256 324 254 318 254 308  curveto
254 289 255 274 258 263  curveto
261 251 264 241 268 233  curveto
272 224 275 216 278 208  curveto
281 200 283 190 283 178  curveto
283 164 278 153 270 146  curveto
261 138 253 135 246 135  curveto
239 135 231 138 222 145  curveto
213 151 209 162 209 177  curveto
209 189 210 200 213 208  curveto
216 216 219 224 223 232  curveto
227 240 230 250 233 262  curveto
236 273 238 288 238 308  curveto
238 311 237 314 237 318  curveto
236 322 234 324 231 324  curveto
229 324 225 322 221 320  curveto
216 317 211 313 205 309  curveto
199 305 192 300 185 294  curveto
178 288 172 283 166 277  curveto
156 267 149 259 144 252  curveto
138 244 133 238 129 234  curveto
121 226 112 223 100 223  curveto
88 223 79 225 73 231  curveto
67 237 65 244 65 253  curveto
65 259 66 266 69 274  curveto
72 282 78 288 87 292  curveto
90 294 97 296 109 299  curveto
120 302 132 305 146 309  curveto
159 313 172 316 184 320  curveto
196 324 204 327 210 330  curveto
212 331 215 333 219 335  curveto
222 337 224 340 224 344  curveto
224 348 220 352 214 355  curveto
195 364 179 370 167 374  curveto
155 378 144 380 135 382  curveto
126 383 118 384 112 385  curveto
105 386 98 388 92 392  curveto
88 394 82 398 76 405  curveto
69 412 66 420 66 429  curveto
66 437 68 445 73 452  curveto
77 459 86 463 100 463  curveto
106 463 114 461 122 458  curveto
130 455 137 450 144 444  curveto
148 439 153 433 157 426  curveto
161 418 168 410 178 401  curveto
186 392 196 384 208 378  curveto
220 371 228 368 232 368  curveto
236 368 238 372 238 381  curveto
238 400 236 416 233 428  curveto
230 440 227 451 224 461  curveto
220 471 217 480 214 488  curveto
211 496 210 506 210 518  curveto
210 526 212 533 216 540  curveto
220 547 230 551 246 551  curveto
261 551 271 547 275 540  curveto
279 532 282 525 282 517  curveto
282 506 280 496 277 488  curveto
274 480 271 471 268 462  curveto
264 452 261 441 258 429  curveto
255 416 254 400 254 381  curveto
254 372 256 368 260 368  curveto
264 368 271 371 283 378  curveto
295 384 305 392 314 401  curveto
323 410 330 418 334 426  curveto
338 433 343 439 348 444  curveto
354 450 362 455 370 458  curveto
378 461 385 463 392 463  curveto
405 463 414 459 419 452  curveto
423 445 426 437 426 429  curveto
426 420 422 412 416 405  curveto
409 398 404 394 400 392  curveto
392 388 385 386 379 385  curveto
373 384 365 383 356 382  curveto
347 380 336 378 324 374  curveto
312 370 296 364 278 355  curveto
271 352 268 348 268 344  curveto
268 340 269 337 273 335  curveto
276 333 279 331 282 330  curveto
286 327 295 324 307 320  curveto
319 316 332 313 346 309  curveto
359 305 371 302 383 299  curveto
394 296 401 294 405 292  curveto
413 288 419 282 422 274  curveto
425 266 427 259 427 253  curveto
closepath
fill
		} def

	/plus
		{
302 243 moveto
302 0 lineto
247 0 lineto
247 243 lineto
10 243 lineto
10 298 lineto
247 298 lineto
247 533 lineto
302 533 lineto
302 298 lineto
539 298 lineto
539 243 lineto
302 243 lineto
closepath
fill
		} def

	/comma
		{
194 20 moveto
194 0 190 -20 182 -41  curveto
174 -61 161 -81 142 -101  curveto
137 -105 131 -111 125 -117  curveto
118 -123 111 -128 104 -134  curveto
97 -139 90 -143 84 -147  curveto
77 -151 71 -153 67 -153  curveto
64 -153 61 -152 59 -151  curveto
57 -149 56 -147 56 -145  curveto
56 -139 57 -135 60 -132  curveto
62 -129 66 -126 71 -124  curveto
124 -91 151 -55 151 -16  curveto
151 -5 147 0 139 0  curveto
135 0 130 -1 124 -3  curveto
118 -5 112 -6 108 -6  curveto
91 -6 78 -1 69 8  curveto
60 17 56 30 56 46  curveto
56 62 61 76 72 87  curveto
83 98 97 104 115 104  curveto
127 104 137 101 146 97  curveto
155 92 164 86 172 78  curveto
180 70 185 62 189 54  curveto
192 46 194 34 194 20  curveto
closepath
fill
		} def

	/hyphen
		{
fill
		} def

	/period
		{
181 39 moveto
181 23 175 10 164 0  curveto
153 -11 140 -17 125 -17  curveto
109 -17 96 -11 85 0  curveto
74 10 69 23 69 39  curveto
69 54 74 67 85 78  curveto
96 89 109 95 125 95  curveto
140 95 153 89 164 78  curveto
175 67 181 54 181 39  curveto
closepath
fill
		} def

	/slash
		{
44 -18 moveto
0 -18 lineto
210 646 lineto
254 646 lineto
44 -18 lineto
closepath
fill
		} def

	/zero
		{
377 332 moveto
377 352 376 375 375 400  curveto
373 424 371 448 369 471  curveto
366 494 363 515 359 535  curveto
355 555 350 570 344 582  curveto
334 600 321 615 304 628  curveto
286 641 267 648 247 648  curveto
227 648 209 641 191 629  curveto
173 617 159 601 150 582  curveto
144 572 140 558 136 540  curveto
132 522 128 502 126 480  curveto
123 458 121 434 119 408  curveto
117 382 117 357 117 331  curveto
117 285 119 241 125 197  curveto
130 153 140 117 156 87  curveto
166 67 179 51 195 39  curveto
211 26 228 20 248 20  curveto
265 20 282 26 299 39  curveto
315 52 328 68 338 86  curveto
347 104 354 125 360 149  curveto
365 172 369 195 371 218  curveto
373 241 375 263 376 283  curveto
376 303 377 320 377 332  curveto
closepath
471 340 moveto
471 305 467 267 461 227  curveto
454 187 439 144 417 99  curveto
405 74 391 54 377 39  curveto
362 24 347 12 332 4  curveto
317 -3 302 -9 288 -12  curveto
273 -15 260 -17 248 -17  curveto
206 -17 171 -6 144 15  curveto
116 37 94 65 77 99  curveto
41 171 23 251 23 340  curveto
23 372 25 403 31 433  curveto
36 463 43 491 52 517  curveto
60 543 70 566 82 586  curveto
93 606 105 623 117 635  curveto
134 652 154 665 177 673  curveto
199 681 222 685 245 685  curveto
253 685 263 684 274 683  curveto
285 681 297 679 309 675  curveto
321 671 333 666 345 659  curveto
357 652 368 643 380 632  curveto
389 622 399 608 410 590  curveto
420 572 430 550 439 525  curveto
448 499 456 471 462 440  curveto
468 408 471 375 471 340  curveto
closepath
fill
		} def

	/one
		{
120 0 moveto
120 18 lineto
128 18 137 18 148 20  curveto
159 22 169 25 179 30  curveto
188 35 196 42 203 52  curveto
209 62 213 74 213 90  curveto
213 563 lineto
213 573 211 580 207 584  curveto
203 588 198 590 191 590  curveto
184 590 174 587 162 583  curveto
149 578 134 572 117 566  curveto
117 584 lineto
279 673 lineto
297 673 lineto
297 91 lineto
297 75 300 62 307 52  curveto
313 42 321 35 331 30  curveto
341 25 351 22 362 20  curveto
372 18 382 18 390 18  curveto
390 0 lineto
120 0 lineto
closepath
fill
		} def

	/two
		{
416 0 moveto
25 0 lineto
27 15 lineto
207 206 lineto
224 224 240 244 256 266  curveto
271 287 284 309 296 331  curveto
307 353 316 374 323 396  curveto
329 417 333 436 333 454  curveto
333 499 321 536 298 564  curveto
275 592 241 606 195 606  curveto
161 606 131 595 107 574  curveto
83 553 65 521 53 479  curveto
32 479 lineto
34 510 42 538 54 562  curveto
66 586 79 606 95 622  curveto
119 646 143 662 167 672  curveto
191 681 217 686 245 686  curveto
265 686 286 682 310 674  curveto
333 666 355 651 377 630  curveto
385 620 393 610 399 599  curveto
405 587 409 575 413 563  curveto
416 550 418 538 420 526  curveto
421 514 422 503 422 493  curveto
422 473 418 453 410 431  curveto
402 409 391 387 378 365  curveto
365 343 350 321 333 300  curveto
316 278 299 258 282 240  curveto
124 73 lineto
353 73 lineto
370 73 384 74 395 78  curveto
405 81 414 86 421 92  curveto
427 98 433 104 438 112  curveto
442 120 448 128 454 136  curveto
475 136 lineto
416 0 lineto
closepath
fill
		} def

	/three
		{
435 206 moveto
435 164 423 126 401 94  curveto
379 62 350 37 314 19  curveto
290 7 265 -1 237 -7  curveto
209 -13 178 -17 144 -17  curveto
124 -17 109 -14 97 -10  curveto
85 -5 75 0 69 7  curveto
62 14 57 21 55 28  curveto
53 35 52 41 52 47  curveto
52 55 55 62 61 70  curveto
67 77 78 81 94 81  curveto
105 81 115 78 124 72  curveto
133 66 141 60 149 54  curveto
158 46 167 38 177 32  curveto
186 26 202 23 226 23  curveto
246 23 264 26 280 34  curveto
296 41 310 51 322 63  curveto
334 75 343 90 349 107  curveto
355 123 359 141 359 161  curveto
359 173 357 185 355 198  curveto
352 211 348 224 344 236  curveto
339 248 333 260 327 271  curveto
320 281 313 290 306 298  curveto
296 308 285 316 275 322  curveto
264 328 253 332 242 335  curveto
231 338 220 340 208 342  curveto
196 343 183 344 171 345  curveto
165 345 159 347 155 349  curveto
151 351 149 354 149 358  curveto
149 361 150 364 154 366  curveto
157 368 161 370 165 372  curveto
211 387 247 407 272 432  curveto
288 448 299 463 304 477  curveto
309 491 312 507 312 526  curveto
312 538 309 550 305 562  curveto
300 574 293 584 284 594  curveto
274 603 262 610 248 616  curveto
234 622 217 625 198 625  curveto
169 625 144 617 123 601  curveto
102 585 80 560 58 524  curveto
39 524 lineto
45 548 53 569 64 589  curveto
75 609 89 626 106 640  curveto
122 654 142 665 165 673  curveto
188 681 215 685 245 685  curveto
267 685 288 681 306 675  curveto
324 668 339 659 352 648  curveto
365 636 375 623 382 608  curveto
389 592 393 576 393 559  curveto
393 536 386 512 372 488  curveto
358 464 335 440 302 418  curveto
316 412 328 405 339 399  curveto
349 393 359 386 367 378  curveto
375 370 382 362 389 352  curveto
395 342 402 330 409 317  curveto
426 282 435 245 435 206  curveto
closepath
fill
		} def

	/four
		{
298 562 moveto
60 229 lineto
298 229 lineto
298 562 lineto
closepath
382 159 moveto
382 0 lineto
298 0 lineto
298 159 lineto
16 159 lineto
16 230 lineto
332 685 lineto
382 685 lineto
382 229 lineto
469 229 lineto
469 159 lineto
382 159 lineto
closepath
fill
		} def

	/five
		{
401 583 moveto
183 583 lineto
143 501 lineto
216 487 lineto
244 481 270 472 294 458  curveto
318 444 339 428 359 409  curveto
378 389 394 364 407 333  curveto
419 302 426 261 426 211  curveto
426 193 424 178 421 166  curveto
418 153 412 138 404 121  curveto
396 105 385 89 371 73  curveto
357 57 340 42 320 29  curveto
299 15 274 4 246 -4  curveto
218 -12 186 -17 150 -17  curveto
133 -17 117 -15 102 -13  curveto
87 -11 74 -7 63 -2  curveto
52 2 43 8 37 16  curveto
31 24 28 33 28 45  curveto
28 55 31 64 38 72  curveto
44 80 55 85 69 85  curveto
82 85 95 81 107 75  curveto
119 69 132 62 144 54  curveto
156 46 168 38 181 32  curveto
194 26 208 23 224 23  curveto
246 23 267 30 287 46  curveto
307 62 322 81 334 103  curveto
340 116 345 129 348 143  curveto
350 157 352 172 352 188  curveto
352 229 341 265 321 297  curveto
300 328 272 353 236 371  curveto
212 383 186 392 159 398  curveto
131 404 98 409 59 413  curveto
180 673 lineto
369 673 lineto
372 673 376 672 381 672  curveto
385 672 390 672 396 672  curveto
404 672 410 673 415 676  curveto
419 678 425 681 431 685  curveto
443 680 lineto
401 583 lineto
closepath
fill
		} def

	/six
		{
376 186 moveto
376 223 371 256 363 285  curveto
354 314 343 336 329 350  curveto
316 362 303 371 289 375  curveto
275 379 262 381 249 381  curveto
223 381 201 376 182 368  curveto
162 359 148 350 139 342  curveto
137 331 136 316 134 296  curveto
132 276 132 256 132 236  curveto
132 226 132 214 133 199  curveto
134 183 137 167 141 150  curveto
145 132 150 115 157 98  curveto
164 81 174 67 186 55  curveto
197 43 210 34 226 28  curveto
241 22 256 19 271 19  curveto
288 19 304 23 319 33  curveto
334 42 347 57 357 77  curveto
362 88 366 103 370 123  curveto
374 142 376 163 376 186  curveto
closepath
467 211 moveto
467 165 459 128 444 99  curveto
429 69 411 46 389 29  curveto
367 11 343 0 319 -7  curveto
295 -14 274 -18 256 -18  curveto
242 -18 226 -16 210 -12  curveto
193 -8 176 -2 160 7  curveto
143 16 127 29 111 45  curveto
95 61 80 81 68 107  curveto
57 128 49 151 44 177  curveto
38 203 36 233 36 269  curveto
36 306 39 339 45 369  curveto
51 398 60 423 70 443  curveto
93 490 121 530 153 563  curveto
185 596 223 624 269 647  curveto
293 659 319 668 349 675  curveto
378 681 411 685 447 685  curveto
446 668 lineto
419 664 390 656 360 644  curveto
330 632 301 615 273 593  curveto
245 571 219 543 197 510  curveto
174 477 157 438 146 392  curveto
162 398 177 404 190 409  curveto
203 414 215 418 226 421  curveto
237 424 247 426 257 428  curveto
267 429 277 430 288 430  curveto
307 430 328 425 350 417  curveto
372 408 392 394 411 376  curveto
427 359 441 337 451 310  curveto
461 282 467 249 467 211  curveto
closepath
fill
		} def

	/seven
		{
234 -16 moveto
175 -16 lineto
370 583 lineto
143 583 lineto
129 583 117 580 107 576  curveto
97 571 89 565 82 558  curveto
74 550 68 542 63 533  curveto
57 523 52 514 46 504  curveto
24 513 lineto
85 673 lineto
448 673 lineto
448 641 lineto
234 -16 lineto
closepath
fill
		} def

	/eight
		{
364 128 moveto
364 149 360 169 352 187  curveto
344 205 334 220 322 233  curveto
314 240 307 246 300 252  curveto
292 258 284 264 276 270  curveto
267 276 258 282 248 288  curveto
238 294 228 302 216 312  curveto
204 306 193 298 183 288  curveto
172 277 163 265 155 252  curveto
147 238 140 224 136 210  curveto
131 195 129 181 129 168  curveto
129 150 131 132 136 114  curveto
141 96 149 80 159 66  curveto
169 52 182 40 198 31  curveto
213 22 231 18 253 18  curveto
269 18 284 20 299 26  curveto
313 31 325 38 335 48  curveto
344 57 351 68 356 81  curveto
361 94 364 110 364 128  curveto
closepath
352 548 moveto
352 562 349 575 345 586  curveto
341 596 335 606 327 615  curveto
307 637 278 648 242 648  curveto
222 648 206 645 195 640  curveto
183 635 173 628 164 619  curveto
152 608 145 597 141 586  curveto
137 575 135 564 135 552  curveto
135 534 141 512 154 488  curveto
167 464 187 443 215 425  curveto
257 397 lineto
282 412 304 432 323 458  curveto
342 484 352 514 352 548  curveto
closepath
441 153 moveto
441 131 437 110 430 90  curveto
422 70 411 52 397 38  curveto
379 20 357 7 330 -3  curveto
303 -13 275 -18 247 -18  curveto
221 -18 197 -14 174 -6  curveto
151 2 131 13 113 27  curveto
95 41 80 59 70 79  curveto
59 99 54 121 54 145  curveto
54 161 57 179 63 197  curveto
69 215 77 232 88 250  curveto
99 267 112 283 128 299  curveto
143 314 160 328 180 340  curveto
125 397 lineto
110 412 97 431 85 453  curveto
73 475 67 503 67 535  curveto
67 558 71 579 81 598  curveto
91 616 104 632 120 645  curveto
136 658 155 668 177 675  curveto
199 681 222 685 247 685  curveto
269 685 289 682 307 678  curveto
325 674 341 668 355 661  curveto
379 649 396 632 408 612  curveto
419 592 425 571 425 549  curveto
425 512 413 479 390 451  curveto
367 422 334 395 290 370  curveto
303 362 317 351 332 339  curveto
347 326 362 312 378 297  curveto
396 279 411 257 423 233  curveto
435 209 441 182 441 153  curveto
closepath
fill
		} def

	/nine
		{
361 377 moveto
361 387 360 400 360 417  curveto
359 433 357 451 355 470  curveto
353 489 349 508 345 528  curveto
341 547 335 564 328 580  curveto
318 598 304 614 286 628  curveto
267 642 247 650 226 650  curveto
207 650 190 644 175 634  curveto
159 623 148 610 141 595  curveto
133 581 128 566 126 548  curveto
124 530 123 509 123 486  curveto
123 416 134 364 156 332  curveto
178 299 206 283 241 283  curveto
257 283 276 286 298 294  curveto
320 301 340 314 359 334  curveto
360 339 361 345 361 352  curveto
361 359 361 367 361 377  curveto
closepath
460 393 moveto
460 358 456 325 448 293  curveto
440 261 430 232 416 204  curveto
383 138 336 85 276 46  curveto
215 7 144 -14 64 -18  curveto
62 1 lineto
97 9 131 21 164 37  curveto
197 52 226 72 251 98  curveto
261 109 272 122 284 138  curveto
296 153 306 169 316 187  curveto
326 204 334 222 341 240  curveto
347 258 352 275 354 291  curveto
330 275 305 263 279 253  curveto
252 243 228 239 207 239  curveto
183 239 160 244 139 254  curveto
117 264 99 278 83 296  curveto
67 314 54 335 45 361  curveto
35 386 31 414 31 444  curveto
31 480 37 514 51 547  curveto
64 579 81 606 102 627  curveto
121 646 141 660 162 670  curveto
183 680 207 685 235 685  curveto
255 685 279 680 306 671  curveto
333 661 359 644 385 619  curveto
396 607 406 593 416 576  curveto
425 558 433 539 439 519  curveto
445 498 450 477 454 455  curveto
458 433 460 413 460 393  curveto
closepath
fill
		} def

	/colon
		{
193 39 moveto
193 23 187 10 176 0  curveto
165 -11 152 -17 137 -17  curveto
121 -17 108 -11 97 0  curveto
86 10 81 23 81 39  curveto
81 54 86 67 97 78  curveto
108 89 121 95 137 95  curveto
152 95 165 89 176 78  curveto
187 67 193 54 193 39  curveto
closepath
193 404 moveto
193 388 187 375 176 364  curveto
165 353 152 348 137 348  curveto
121 348 108 353 97 364  curveto
86 375 81 388 81 404  curveto
81 419 86 432 97 443  curveto
108 454 121 460 137 460  curveto
152 460 165 454 176 443  curveto
187 432 193 419 193 404  curveto
closepath
fill
		} def

	/semicolon
		{
221 20 moveto
221 0 217 -20 209 -41  curveto
201 -61 188 -81 169 -101  curveto
164 -105 158 -111 152 -117  curveto
145 -123 138 -128 131 -134  curveto
124 -139 117 -143 111 -147  curveto
104 -151 98 -153 94 -153  curveto
91 -153 88 -152 86 -151  curveto
84 -149 83 -147 83 -145  curveto
83 -139 84 -135 87 -132  curveto
89 -129 93 -126 98 -124  curveto
151 -91 178 -55 178 -16  curveto
178 -5 174 0 166 0  curveto
162 0 157 -1 151 -3  curveto
145 -5 139 -6 135 -6  curveto
118 -6 105 -1 96 8  curveto
87 17 83 30 83 46  curveto
83 62 88 76 99 87  curveto
110 98 124 104 142 104  curveto
154 104 164 101 173 97  curveto
182 92 191 86 199 78  curveto
207 70 212 62 216 54  curveto
219 46 221 34 221 20  curveto
closepath
204 404 moveto
204 388 198 375 187 364  curveto
176 353 163 348 148 348  curveto
132 348 119 353 108 364  curveto
97 375 92 388 92 404  curveto
92 419 97 432 108 443  curveto
119 454 132 460 148 460  curveto
163 460 176 454 187 443  curveto
198 432 204 419 204 404  curveto
closepath
fill
		} def

	/less
		{
26 230 moveto
26 292 lineto
523 522 lineto
523 460 lineto
90 261 lineto
523 62 lineto
523 0 lineto
26 230 lineto
closepath
fill
		} def

	/equal
		{
11 141 moveto
11 196 lineto
537 196 lineto
537 141 lineto
11 141 lineto
closepath
11 335 moveto
11 390 lineto
537 390 lineto
537 335 lineto
11 335 lineto
closepath
fill
		} def

	/greater
		{
26 0 moveto
26 62 lineto
459 261 lineto
26 460 lineto
26 522 lineto
523 292 lineto
523 230 lineto
26 0 lineto
closepath
fill
		} def

	/question
		{
286 39 moveto
286 23 280 10 269 0  curveto
258 -11 245 -17 230 -17  curveto
214 -17 201 -11 190 0  curveto
179 10 174 23 174 39  curveto
174 54 179 67 190 78  curveto
201 89 214 95 230 95  curveto
245 95 258 89 269 78  curveto
280 67 286 54 286 39  curveto
closepath
412 514 moveto
412 488 403 462 387 434  curveto
370 406 351 379 330 355  curveto
324 347 316 339 308 329  curveto
299 319 291 307 283 293  curveto
275 278 267 260 260 240  curveto
253 220 248 195 245 167  curveto
224 167 lineto
229 211 237 249 247 282  curveto
257 314 268 344 278 372  curveto
288 400 296 426 304 451  curveto
312 475 316 501 316 529  curveto
316 545 313 560 308 576  curveto
303 591 296 604 287 616  curveto
278 627 267 636 254 643  curveto
241 650 227 654 211 654  curveto
201 654 190 652 179 648  curveto
168 644 158 640 149 634  curveto
139 628 132 621 126 613  curveto
120 605 117 596 117 587  curveto
117 579 119 573 123 568  curveto
127 563 131 558 136 553  curveto
141 548 146 543 150 538  curveto
154 533 157 527 157 520  curveto
157 506 152 495 144 486  curveto
135 477 126 473 117 473  curveto
103 473 92 478 83 488  curveto
74 498 70 515 70 538  curveto
70 558 73 577 81 595  curveto
88 613 98 629 112 643  curveto
140 671 179 686 228 686  curveto
284 686 331 668 367 632  curveto
376 622 386 608 396 588  curveto
406 568 412 544 412 514  curveto
closepath
fill
		} def

	/at
		{
11 0 moveto
11 55 lineto
537 55 lineto
537 0 lineto
11 0 lineto
closepath
11 194 moveto
11 249 lineto
537 249 lineto
537 194 lineto
11 194 lineto
closepath
530 451 moveto
526 440 519 430 510 421  curveto
501 411 491 403 479 396  curveto
467 389 454 384 440 380  curveto
426 376 411 374 397 374  curveto
375 374 354 376 334 382  curveto
314 387 294 393 275 400  curveto
255 406 236 412 218 418  curveto
199 423 180 426 161 426  curveto
137 426 118 421 104 412  curveto
90 402 74 388 58 370  curveto
18 396 lineto
30 414 43 428 56 438  curveto
69 448 82 456 95 462  curveto
108 467 121 470 133 472  curveto
145 473 157 474 168 474  curveto
188 474 208 471 226 465  curveto
244 459 263 453 281 447  curveto
299 441 316 435 334 429  curveto
352 423 371 421 391 421  curveto
413 421 432 425 448 434  curveto
464 443 479 457 493 475  curveto
530 451 lineto
530 451 lineto
closepath
fill
		} def

	/A
		{
317 528 moveto
204 260 lineto
430 260 lineto
317 528 lineto
closepath
434 0 moveto
434 18 lineto
451 18 466 20 479 25  curveto
492 29 499 40 499 58  curveto
499 65 497 74 493 86  curveto
444 218 lineto
185 218 lineto
140 94 lineto
134 78 131 66 131 58  curveto
131 44 136 34 146 28  curveto
156 21 172 18 196 18  curveto
196 0 lineto
4 0 lineto
4 18 lineto
18 18 29 19 37 23  curveto
45 26 52 30 58 36  curveto
63 42 67 49 71 57  curveto
74 65 78 74 82 84  curveto
330 673 lineto
356 673 lineto
606 84 lineto
610 74 613 66 617 58  curveto
620 50 624 43 630 37  curveto
635 31 642 26 650 23  curveto
658 19 670 18 684 18  curveto
684 0 lineto
434 0 lineto
closepath
fill
		} def

	/B
		{
478 177 moveto
478 198 475 216 470 231  curveto
465 245 459 258 451 268  curveto
443 278 435 287 425 293  curveto
415 299 405 305 395 311  curveto
379 318 364 323 348 325  curveto
332 327 316 328 301 328  curveto
223 328 lineto
223 84 lineto
223 72 225 62 230 54  curveto
234 46 245 42 263 42  curveto
327 42 lineto
353 42 376 45 395 53  curveto
414 61 430 71 442 84  curveto
454 96 463 111 469 127  curveto
475 143 478 159 478 177  curveto
closepath
460 497 moveto
460 521 455 542 445 560  curveto
435 577 421 591 403 602  curveto
385 612 365 620 341 625  curveto
317 629 292 632 265 632  curveto
245 632 233 631 229 630  curveto
225 628 223 626 223 622  curveto
223 370 lineto
305 370 lineto
327 370 347 372 366 377  curveto
384 381 401 389 415 399  curveto
429 409 440 422 448 438  curveto
456 454 460 473 460 497  curveto
closepath
592 185 moveto
592 168 589 152 583 136  curveto
577 120 570 105 561 91  curveto
552 77 542 64 531 53  curveto
519 42 508 34 496 28  curveto
488 24 478 20 468 17  curveto
457 13 446 10 435 8  curveto
423 5 412 3 401 2  curveto
390 0 380 0 371 0  curveto
29 0 lineto
29 18 lineto
59 18 82 22 97 31  curveto
111 39 119 57 119 84  curveto
119 590 lineto
119 612 112 629 100 639  curveto
88 649 64 655 29 655  curveto
29 673 lineto
300 673 lineto
389 673 455 659 498 631  curveto
541 603 563 559 563 497  curveto
563 463 552 434 532 410  curveto
512 386 480 367 436 354  curveto
436 352 lineto
486 340 525 320 552 290  curveto
578 260 592 225 592 185  curveto
closepath
fill
		} def

	/C
		{
404 0 moveto
404 18 lineto
434 18 454 20 465 26  curveto
476 32 482 38 482 46  curveto
482 53 479 60 474 68  curveto
469 76 464 84 459 93  curveto
332 292 lineto
170 83 lineto
166 77 162 72 160 67  curveto
157 62 156 57 156 51  curveto
156 41 160 33 169 27  curveto
178 21 195 18 221 18  curveto
221 0 lineto
-9 0 lineto
-9 18 lineto
6 18 19 19 30 22  curveto
40 24 50 28 58 33  curveto
66 37 73 43 80 50  curveto
86 57 93 65 101 75  curveto
305 333 lineto
108 609 lineto
96 625 84 636 70 644  curveto
56 651 38 655 15 655  curveto
15 673 lineto
315 673 lineto
315 655 lineto
285 655 264 652 253 648  curveto
242 643 237 636 237 627  curveto
237 621 238 617 240 613  curveto
242 609 244 604 248 599  curveto
369 413 lineto
506 590 lineto
511 596 516 603 520 610  curveto
524 616 526 622 526 628  curveto
526 636 521 643 511 648  curveto
501 652 482 655 455 655  curveto
455 673 lineto
687 673 lineto
687 655 lineto
669 655 655 653 643 650  curveto
631 647 621 643 613 637  curveto
605 631 597 623 590 615  curveto
582 607 574 597 566 587  curveto
396 375 lineto
607 70 lineto
617 54 629 42 643 32  curveto
656 22 676 18 704 18  curveto
704 0 lineto
404 0 lineto
closepath
fill
		} def

	/D
		{
290 517 moveto
72 49 lineto
484 49 lineto
290 517 lineto
closepath
6 0 moveto
326 688 lineto
608 0 lineto
6 0 lineto
closepath
fill
		} def

	/E
		{
571 0 moveto
32 0 lineto
32 18 lineto
46 18 58 18 70 20  curveto
81 22 90 25 98 30  curveto
106 34 112 41 116 50  curveto
120 58 122 70 122 84  curveto
122 590 lineto
122 614 115 631 102 641  curveto
88 650 65 655 32 655  curveto
32 673 lineto
563 673 lineto
563 525 lineto
536 525 lineto
532 537 529 550 527 562  curveto
525 574 521 584 515 594  curveto
509 603 500 610 489 616  curveto
477 622 461 625 439 625  curveto
226 625 lineto
226 375 lineto
385 375 lineto
405 375 421 377 434 382  curveto
446 386 456 393 464 401  curveto
472 409 477 419 480 431  curveto
482 442 484 455 484 469  curveto
507 469 lineto
507 239 lineto
484 239 lineto
484 253 482 265 480 277  curveto
477 289 472 299 464 307  curveto
456 315 446 321 433 326  curveto
420 330 404 333 384 333  curveto
226 333 lineto
226 87 lineto
226 71 229 60 235 53  curveto
241 45 251 42 267 42  curveto
270 42 276 42 284 42  curveto
292 42 299 43 304 43  curveto
430 46 lineto
453 46 473 50 490 57  curveto
506 64 521 73 533 85  curveto
545 96 555 109 563 124  curveto
571 138 578 154 586 170  curveto
617 170 lineto
571 0 lineto
closepath
fill
		} def

	/F
		{
334 534 moveto
306 534 281 528 258 518  curveto
235 508 215 494 199 477  curveto
183 459 170 439 161 417  curveto
151 394 147 370 147 346  curveto
147 302 153 267 165 241  curveto
177 215 192 194 211 180  curveto
229 165 250 155 272 150  curveto
294 145 314 143 334 143  curveto
334 534 lineto
closepath
623 343 moveto
623 371 618 396 608 420  curveto
598 443 584 463 567 480  curveto
550 497 530 510 508 520  curveto
485 529 461 534 436 534  curveto
436 143 lineto
458 143 481 146 503 152  curveto
525 158 545 168 563 184  curveto
581 199 595 219 606 245  curveto
617 271 623 303 623 343  curveto
closepath
741 331 moveto
741 285 730 247 708 217  curveto
686 187 658 163 624 146  curveto
588 128 554 117 524 113  curveto
493 109 464 108 436 108  curveto
436 74 444 51 460 38  curveto
476 25 502 18 538 18  curveto
538 0 lineto
232 0 lineto
232 18 lineto
267 18 293 25 309 38  curveto
325 50 334 74 334 108  curveto
308 108 286 108 268 110  curveto
249 112 232 114 218 118  curveto
203 121 190 125 178 130  curveto
166 134 154 140 143 146  curveto
103 165 74 191 55 223  curveto
35 255 26 292 26 333  curveto
26 358 30 385 40 413  curveto
50 441 65 465 87 487  curveto
106 506 126 521 148 532  curveto
169 542 190 550 212 555  curveto
234 560 255 563 276 564  curveto
296 564 316 565 334 565  curveto
334 597 326 620 310 634  curveto
294 647 269 654 233 655  curveto
233 673 lineto
537 673 lineto
537 655 lineto
501 654 475 647 459 634  curveto
443 620 436 597 436 565  curveto
454 565 474 564 495 563  curveto
516 562 537 559 558 554  curveto
579 549 600 541 621 531  curveto
641 520 661 505 681 486  curveto
701 466 716 442 726 415  curveto
736 388 741 360 741 331  curveto
closepath
fill
		} def

	/G
		{
584 511 moveto
581 535 576 555 568 570  curveto
560 585 545 598 522 610  curveto
508 616 493 621 477 624  curveto
460 626 440 628 417 628  curveto
229 628 lineto
229 80 lineto
229 66 231 55 236 47  curveto
240 39 247 32 255 28  curveto
263 24 273 21 284 20  curveto
295 18 307 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
47 18 58 18 69 19  curveto
79 20 89 23 97 27  curveto
105 31 112 38 117 46  curveto
122 54 125 66 125 81  curveto
125 550 lineto
125 570 122 586 117 600  curveto
112 613 105 623 96 631  curveto
87 639 76 644 64 648  curveto
52 651 38 653 24 653  curveto
24 673 lineto
592 673 lineto
609 511 lineto
584 511 lineto
closepath
fill
		} def

	/H
		{
445 0 moveto
445 18 lineto
459 18 471 18 483 20  curveto
494 22 503 25 511 30  curveto
519 34 525 41 529 49  curveto
533 57 535 68 535 82  curveto
535 323 lineto
233 323 lineto
233 83 lineto
233 57 240 39 255 31  curveto
269 22 292 18 323 18  curveto
323 0 lineto
39 0 lineto
39 18 lineto
69 18 91 22 106 30  curveto
121 38 129 55 129 83  curveto
129 590 lineto
129 614 122 631 109 641  curveto
95 650 72 655 39 655  curveto
39 673 lineto
323 673 lineto
323 655 lineto
289 655 265 650 252 640  curveto
239 630 233 613 233 589  curveto
233 365 lineto
535 365 lineto
535 591 lineto
535 616 528 633 514 642  curveto
500 650 477 655 445 655  curveto
445 673 lineto
729 673 lineto
729 655 lineto
697 655 674 650 660 641  curveto
646 632 639 615 639 590  curveto
639 84 lineto
639 56 646 38 662 30  curveto
677 22 699 18 729 18  curveto
729 0 lineto
445 0 lineto
closepath
fill
		} def

	/I
		{
32 0 moveto
32 18 lineto
50 18 65 19 77 22  curveto
89 24 98 28 105 34  curveto
111 40 116 47 118 55  curveto
120 63 122 73 122 85  curveto
122 593 lineto
122 607 119 618 114 626  curveto
109 634 102 641 94 645  curveto
85 649 75 652 65 653  curveto
54 654 43 655 32 655  curveto
32 673 lineto
316 673 lineto
316 655 lineto
283 655 260 650 246 641  curveto
232 631 226 615 226 591  curveto
226 85 lineto
226 61 232 44 244 34  curveto
256 23 280 18 316 18  curveto
316 0 lineto
32 0 lineto
closepath
fill
		} def

	/J
		{
470 380 moveto
468 394 466 409 464 427  curveto
462 445 460 463 458 481  curveto
455 499 452 517 448 533  curveto
444 549 440 563 435 575  curveto
423 597 410 614 395 628  curveto
380 642 363 649 344 649  curveto
334 649 325 646 318 641  curveto
310 636 304 630 299 623  curveto
293 615 289 607 287 598  curveto
284 588 283 579 283 571  curveto
283 557 287 541 295 523  curveto
303 505 318 485 340 464  curveto
359 444 380 428 402 414  curveto
424 400 447 389 470 380  curveto
closepath
549 309 moveto
547 279 543 247 538 212  curveto
533 177 523 144 508 113  curveto
494 87 480 65 466 48  curveto
452 31 436 18 420 8  curveto
403 -1 385 -8 367 -12  curveto
348 -16 328 -18 308 -18  curveto
290 -18 274 -17 261 -15  curveto
248 -13 237 -11 227 -7  curveto
217 -3 209 0 201 6  curveto
193 11 186 18 178 26  curveto
159 44 146 66 140 91  curveto
134 115 131 138 131 159  curveto
131 163 132 175 134 193  curveto
136 211 139 231 142 252  curveto
145 273 148 293 150 311  curveto
152 329 154 341 154 347  curveto
154 355 152 362 150 368  curveto
147 374 144 380 140 384  curveto
136 388 131 391 127 393  curveto
123 395 119 396 117 396  curveto
104 396 93 393 85 389  curveto
76 384 69 378 63 371  curveto
57 364 51 357 47 349  curveto
42 341 38 333 34 327  curveto
18 332 lineto
64 419 lineto
69 429 79 439 93 449  curveto
107 459 125 464 146 464  curveto
173 464 194 456 210 441  curveto
219 431 227 419 233 404  curveto
239 389 242 374 242 359  curveto
242 353 240 342 238 326  curveto
236 309 233 290 231 269  curveto
228 248 225 227 223 206  curveto
221 184 220 166 220 152  curveto
220 133 222 115 226 98  curveto
230 81 236 66 244 53  curveto
252 40 263 30 277 22  curveto
290 14 306 10 324 10  curveto
332 10 341 11 351 14  curveto
361 16 370 20 380 26  curveto
390 32 399 39 407 48  curveto
415 56 423 66 429 78  curveto
434 88 439 100 444 113  curveto
449 125 454 140 458 157  curveto
462 173 465 192 468 213  curveto
470 233 472 257 472 284  curveto
472 286 472 289 472 294  curveto
472 299 471 304 471 310  curveto
471 316 471 321 471 326  curveto
471 331 471 335 471 337  curveto
457 343 443 350 429 358  curveto
415 366 401 374 387 382  curveto
373 390 361 399 350 407  curveto
338 415 329 422 322 430  curveto
298 453 280 476 268 500  curveto
255 523 249 548 249 574  curveto
249 595 252 613 260 627  curveto
268 641 276 652 285 661  curveto
294 670 303 677 313 682  curveto
323 686 335 689 350 689  curveto
378 689 406 678 434 656  curveto
462 634 487 601 509 558  curveto
521 532 531 503 537 472  curveto
543 441 547 401 549 353  curveto
623 326 lineto
623 273 lineto
549 309 lineto
closepath
fill
		} def

	/K
		{
418 0 moveto
418 18 lineto
448 18 469 20 479 26  curveto
489 32 495 38 495 46  curveto
495 54 492 62 487 70  curveto
481 78 476 85 471 91  curveto
262 327 lineto
229 297 lineto
229 82 lineto
229 56 236 39 250 31  curveto
264 22 287 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
68 18 91 22 105 32  curveto
118 41 125 58 125 83  curveto
125 589 lineto
125 612 118 629 106 639  curveto
94 649 70 655 35 655  curveto
35 673 lineto
319 673 lineto
319 655 lineto
283 655 259 650 247 640  curveto
235 630 229 612 229 588  curveto
229 360 lineto
280 402 325 442 365 479  curveto
405 516 438 549 466 578  curveto
475 588 482 597 487 606  curveto
491 615 492 623 488 631  curveto
484 638 476 644 463 648  curveto
450 652 431 655 405 655  curveto
405 673 lineto
665 673 lineto
665 655 lineto
652 655 641 654 631 652  curveto
621 650 612 648 603 644  curveto
594 640 585 634 576 627  curveto
567 620 557 611 547 600  curveto
527 579 510 561 495 546  curveto
480 530 465 515 450 500  curveto
434 485 418 469 400 452  curveto
382 435 360 415 336 392  curveto
593 102 lineto
605 87 617 75 628 65  curveto
638 55 649 46 659 40  curveto
669 33 679 28 689 24  curveto
699 20 710 18 722 18  curveto
722 0 lineto
418 0 lineto
closepath
fill
		} def

	/L
		{
408 0 moveto
408 18 lineto
414 18 422 18 430 19  curveto
438 20 446 22 454 26  curveto
461 30 467 35 472 41  curveto
476 47 479 55 479 65  curveto
479 72 478 79 476 85  curveto
474 91 471 101 466 114  curveto
310 496 lineto
166 107 lineto
162 98 159 89 157 80  curveto
155 70 154 63 154 58  curveto
154 40 160 29 172 25  curveto
184 20 200 18 221 18  curveto
221 0 lineto
6 0 lineto
6 18 lineto
14 18 24 19 35 23  curveto
45 27 56 32 66 38  curveto
76 44 85 51 93 60  curveto
101 68 107 78 111 89  curveto
336 688 lineto
584 98 lineto
588 88 592 78 598 69  curveto
604 59 611 51 619 43  curveto
627 35 636 29 646 25  curveto
656 20 667 18 680 18  curveto
680 0 lineto
408 0 lineto
closepath
fill
		} def

	/M
		{
603 0 moveto
603 18 lineto
621 18 636 19 648 22  curveto
660 24 669 28 676 34  curveto
682 40 687 47 689 55  curveto
691 63 693 73 693 85  curveto
693 572 lineto
448 0 lineto
430 0 lineto
170 543 lineto
170 85 lineto
170 63 177 46 191 35  curveto
205 23 228 18 260 18  curveto
260 0 lineto
31 0 lineto
31 18 lineto
91 18 121 40 121 84  curveto
121 582 lineto
121 597 119 609 117 618  curveto
115 627 110 634 104 639  curveto
98 644 88 648 76 650  curveto
64 652 48 653 28 655  curveto
28 673 lineto
229 673 lineto
463 163 lineto
687 673 lineto
885 673 lineto
885 655 lineto
880 655 875 655 871 655  curveto
866 655 862 656 858 656  curveto
834 656 818 650 810 640  curveto
801 630 797 615 797 597  curveto
797 85 lineto
797 73 798 63 800 55  curveto
802 47 807 40 813 35  curveto
819 29 828 25 840 22  curveto
852 19 867 18 887 18  curveto
887 0 lineto
603 0 lineto
closepath
fill
		} def

	/N
		{
720 655 moveto
700 655 685 653 673 650  curveto
661 647 651 643 645 637  curveto
639 631 635 623 633 615  curveto
631 606 630 596 630 586  curveto
630 -8 lineto
608 -8 lineto
168 539 lineto
168 84 lineto
168 60 175 43 191 33  curveto
207 23 229 18 258 18  curveto
258 0 lineto
29 0 lineto
29 18 lineto
58 18 80 23 96 34  curveto
111 44 119 61 119 84  curveto
119 602 lineto
111 613 104 622 98 629  curveto
92 636 86 642 81 646  curveto
75 650 70 652 64 654  curveto
58 655 52 656 46 656  curveto
44 656 41 655 39 655  curveto
37 655 34 655 31 655  curveto
31 673 lineto
198 673 lineto
581 185 lineto
581 590 lineto
581 613 574 630 562 640  curveto
549 650 525 655 491 655  curveto
491 673 lineto
720 673 lineto
720 655 lineto
720 655 lineto
closepath
fill
		} def

	/O
		{
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 485 171 448  curveto
162 411 158 371 158 328  curveto
158 292 160 258 165 227  curveto
170 195 180 164 196 133  curveto
203 118 213 104 225 91  curveto
237 77 250 65 266 55  curveto
281 45 298 37 317 31  curveto
336 25 356 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/P
		{
461 0 moveto
461 18 lineto
497 18 521 23 533 33  curveto
545 43 551 60 551 84  curveto
551 632 lineto
218 632 lineto
219 90 lineto
219 78 220 67 222 58  curveto
224 49 228 42 234 36  curveto
240 30 249 25 261 22  curveto
273 19 289 18 309 18  curveto
309 0 lineto
25 0 lineto
25 18 lineto
45 18 61 19 73 22  curveto
85 25 94 30 100 36  curveto
106 42 110 49 112 58  curveto
114 66 115 76 115 88  curveto
115 576 lineto
115 585 113 594 111 604  curveto
109 613 104 621 98 629  curveto
91 637 82 643 71 648  curveto
59 652 45 655 27 655  curveto
27 673 lineto
742 673 lineto
742 655 lineto
724 655 709 652 698 648  curveto
686 643 677 637 671 630  curveto
665 623 660 615 658 606  curveto
655 596 654 587 654 578  curveto
655 89 lineto
655 76 656 65 658 56  curveto
660 47 665 40 672 34  curveto
678 28 687 24 699 22  curveto
711 19 726 18 745 18  curveto
745 0 lineto
461 0 lineto
closepath
fill
		} def

	/Q
		{
508 251 moveto
501 271 492 285 480 293  curveto
468 300 456 304 442 304  curveto
317 304 lineto
301 304 288 300 276 293  curveto
264 286 255 272 248 251  curveto
233 252 lineto
234 263 235 276 237 292  curveto
238 307 239 322 239 338  curveto
239 353 238 368 237 382  curveto
235 396 234 410 233 423  curveto
248 424 lineto
254 402 264 388 276 381  curveto
288 374 300 371 314 371  curveto
442 371 lineto
474 371 496 388 508 424  curveto
523 423 lineto
521 413 520 400 519 384  curveto
517 368 517 353 517 338  curveto
517 322 517 307 519 292  curveto
520 276 521 263 523 252  curveto
508 251 lineto
closepath
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 487 170 453  curveto
161 419 157 377 157 328  curveto
157 292 159 258 165 226  curveto
170 194 181 162 197 130  curveto
205 114 215 100 227 87  curveto
239 73 253 62 269 52  curveto
285 42 302 35 320 30  curveto
338 24 358 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/R
		{
455 477 moveto
455 502 452 525 447 545  curveto
441 565 432 581 420 594  curveto
406 607 388 617 366 624  curveto
343 631 320 635 298 635  curveto
281 635 268 634 258 633  curveto
248 632 240 630 235 628  curveto
229 626 226 623 224 619  curveto
222 615 222 611 222 607  curveto
222 353 lineto
226 349 233 347 243 345  curveto
252 343 265 342 282 342  curveto
286 342 293 342 303 343  curveto
313 343 325 344 337 346  curveto
349 347 361 349 373 351  curveto
385 353 394 356 402 360  curveto
417 367 430 380 440 399  curveto
450 418 455 444 455 477  curveto
closepath
563 486 moveto
563 474 561 460 559 446  curveto
556 432 551 417 543 403  curveto
535 389 525 375 512 361  curveto
498 347 481 335 460 325  curveto
422 306 374 297 316 297  curveto
303 297 288 297 271 298  curveto
253 298 237 299 222 300  curveto
222 81 lineto
222 56 229 39 243 31  curveto
257 22 280 18 312 18  curveto
312 0 lineto
28 0 lineto
28 18 lineto
46 18 62 19 74 22  curveto
86 25 95 29 101 35  curveto
107 41 112 48 114 56  curveto
116 64 118 74 118 86  curveto
118 588 lineto
118 614 111 631 97 641  curveto
83 650 60 655 28 655  curveto
28 673 lineto
303 673 lineto
340 673 373 670 403 665  curveto
433 660 459 652 481 641  curveto
508 627 528 606 542 577  curveto
556 548 563 518 563 486  curveto
closepath
fill
		} def

	/S
		{
552 0 moveto
5 0 lineto
286 327 lineto
17 673 lineto
535 673 lineto
545 522 lineto
526 522 lineto
517 560 502 587 482 603  curveto
462 619 435 627 402 627  curveto
180 627 lineto
381 369 lineto
145 94 lineto
446 94 lineto
478 94 503 102 522 118  curveto
541 134 557 163 569 205  curveto
589 205 lineto
552 0 lineto
closepath
fill
		} def

	/T
		{
581 500 moveto
581 526 576 547 568 564  curveto
559 580 548 594 535 604  curveto
521 614 506 621 489 625  curveto
471 629 454 631 438 632  curveto
372 634 lineto
372 85 lineto
372 59 378 41 392 32  curveto
406 22 429 18 462 18  curveto
462 0 lineto
178 0 lineto
178 18 lineto
210 18 233 22 247 31  curveto
261 40 268 58 268 85  curveto
268 634 lineto
202 632 lineto
176 631 154 627 136 620  curveto
118 613 103 604 91 592  curveto
79 580 71 567 66 551  curveto
61 535 59 518 59 500  curveto
33 502 lineto
38 673 lineto
602 673 lineto
607 502 lineto
581 500 lineto
closepath
fill
		} def

	/U
		{
694 655 moveto
678 655 665 654 655 652  curveto
644 650 635 648 627 644  curveto
619 640 612 634 606 628  curveto
600 622 594 614 588 605  curveto
398 313 lineto
398 83 lineto
398 57 405 40 419 31  curveto
433 22 456 18 488 18  curveto
488 0 lineto
204 0 lineto
204 18 lineto
235 18 258 22 272 31  curveto
286 39 294 57 294 83  curveto
294 300 lineto
86 603 lineto
70 625 55 639 40 645  curveto
25 651 9 655 -8 655  curveto
-8 673 lineto
289 673 lineto
289 655 lineto
267 655 249 653 234 649  curveto
218 645 211 637 211 626  curveto
211 621 212 616 215 611  curveto
217 605 222 597 230 587  curveto
376 363 lineto
517 596 lineto
521 603 524 609 526 613  curveto
528 617 529 623 529 629  curveto
529 639 523 645 513 649  curveto
502 653 485 655 462 655  curveto
462 673 lineto
694 673 lineto
694 655 lineto
694 655 lineto
closepath
fill
		} def

	/V
		{
437 -52 moveto
437 -63 435 -75 433 -87  curveto
430 -99 426 -112 421 -124  curveto
416 -136 410 -147 403 -159  curveto
395 -170 387 -180 379 -189  curveto
365 -202 349 -213 331 -221  curveto
313 -229 294 -233 275 -233  curveto
247 -233 226 -226 213 -214  curveto
199 -201 193 -188 193 -174  curveto
193 -164 195 -156 199 -150  curveto
203 -144 209 -140 215 -137  curveto
221 -134 228 -132 235 -132  curveto
241 -131 247 -131 253 -131  curveto
266 -131 279 -133 291 -139  curveto
303 -144 314 -147 325 -147  curveto
343 -147 359 -140 373 -127  curveto
387 -114 395 -96 395 -73  curveto
395 -53 390 -39 381 -30  curveto
372 -21 360 -17 345 -17  curveto
317 -17 295 -17 279 -17  curveto
262 -17 249 -18 239 -18  curveto
229 -18 222 -19 218 -19  curveto
213 -19 209 -20 206 -20  curveto
183 -20 161 -14 141 -4  curveto
121 6 103 21 88 41  curveto
73 61 61 85 52 113  curveto
43 141 39 172 39 207  curveto
39 245 46 282 62 320  curveto
77 358 100 392 130 422  curveto
157 449 184 469 212 481  curveto
240 493 273 500 312 500  curveto
326 500 340 498 352 495  curveto
364 491 375 487 384 482  curveto
393 477 400 471 405 465  curveto
410 458 413 451 413 445  curveto
413 430 407 420 397 414  curveto
387 408 374 405 358 405  curveto
338 405 319 407 300 413  curveto
280 419 260 422 239 422  curveto
210 422 185 415 165 401  curveto
145 387 128 370 115 350  curveto
102 330 93 308 87 286  curveto
81 263 78 243 78 227  curveto
78 205 82 184 91 162  curveto
100 140 112 122 126 108  curveto
135 98 146 92 158 88  curveto
170 84 183 82 197 82  curveto
216 82 236 82 257 84  curveto
277 86 295 87 311 87  curveto
327 87 341 84 355 80  curveto
369 75 381 67 393 56  curveto
406 42 417 25 425 5  curveto
433 -15 437 -34 437 -52  curveto
closepath
fill
		} def

	/W
		{
441 0 moveto
457 152 lineto
469 156 482 162 495 169  curveto
507 175 519 184 529 194  curveto
552 217 569 247 581 283  curveto
593 319 599 360 599 404  curveto
599 450 592 489 579 523  curveto
566 557 551 582 534 600  curveto
516 617 496 631 473 641  curveto
450 651 421 656 385 656  curveto
348 656 318 651 296 641  curveto
273 631 253 617 236 600  curveto
216 580 200 552 188 517  curveto
176 481 171 445 171 407  curveto
171 359 177 317 189 281  curveto
201 245 219 215 242 193  curveto
251 183 261 175 273 169  curveto
285 163 298 157 313 152  curveto
329 0 lineto
34 0 lineto
34 162 lineto
49 162 lineto
55 134 63 117 73 111  curveto
83 104 97 101 115 101  curveto
273 101 lineto
271 129 lineto
236 139 209 150 189 160  curveto
169 170 151 184 135 201  curveto
107 228 87 259 74 294  curveto
60 329 54 365 54 401  curveto
54 435 60 470 74 504  curveto
87 538 106 567 132 593  curveto
160 621 195 643 239 661  curveto
282 679 331 688 385 688  curveto
437 688 484 679 528 662  curveto
572 645 609 622 639 592  curveto
663 568 681 538 695 504  curveto
709 469 716 434 716 400  curveto
716 367 709 333 697 298  curveto
685 262 664 230 634 200  curveto
618 184 599 170 578 159  curveto
557 148 531 138 499 129  curveto
497 101 lineto
654 101 lineto
666 101 676 102 684 105  curveto
692 107 698 111 703 117  curveto
707 122 711 128 713 136  curveto
715 143 718 152 721 162  curveto
736 162 lineto
736 0 lineto
441 0 lineto
closepath
fill
		} def

	/X
		{
40 0 moveto
40 194 lineto
58 194 lineto
60 172 63 155 67 142  curveto
71 128 76 118 83 111  curveto
90 103 99 98 110 96  curveto
120 94 134 93 150 93  curveto
485 93 lineto
501 93 514 94 525 96  curveto
536 98 545 102 553 109  curveto
561 116 567 126 571 140  curveto
575 153 579 171 581 194  curveto
599 194 lineto
599 0 lineto
40 0 lineto
closepath
474 250 moveto
472 271 468 286 462 294  curveto
455 302 442 306 423 306  curveto
217 306 lineto
195 306 181 301 176 293  curveto
170 284 167 270 165 250  curveto
147 250 lineto
147 457 lineto
165 457 lineto
166 435 170 421 177 413  curveto
183 405 196 401 216 401  curveto
422 401 lineto
437 401 449 403 458 409  curveto
467 415 472 431 474 457  curveto
492 457 lineto
492 250 lineto
474 250 lineto
closepath
561 522 moveto
559 545 553 561 542 570  curveto
530 578 514 583 494 583  curveto
146 583 lineto
119 583 101 577 93 566  curveto
84 554 79 540 79 522  curveto
62 522 lineto
62 673 lineto
577 673 lineto
577 522 lineto
561 522 lineto
closepath
fill
		} def

	/Y
		{
781 666 moveto
770 662 762 657 756 653  curveto
750 649 745 644 742 638  curveto
738 632 736 625 735 617  curveto
733 609 732 599 732 588  curveto
725 464 lineto
723 436 714 410 697 388  curveto
680 366 659 348 635 336  curveto
621 329 609 323 597 319  curveto
585 315 573 311 559 308  curveto
545 305 529 303 512 302  curveto
494 300 474 300 450 300  curveto
450 86 lineto
450 61 456 43 468 33  curveto
480 23 504 18 540 18  curveto
540 0 lineto
256 0 lineto
256 18 lineto
291 18 315 23 327 33  curveto
339 43 346 60 346 85  curveto
346 300 lineto
322 300 301 300 284 302  curveto
266 303 251 305 237 308  curveto
223 311 210 315 198 319  curveto
186 323 173 329 161 336  curveto
136 348 115 366 98 388  curveto
81 410 72 436 71 464  curveto
64 588 lineto
63 599 62 609 61 617  curveto
59 625 57 632 54 638  curveto
50 644 46 649 40 653  curveto
34 657 25 662 15 666  curveto
15 684 lineto
32 682 47 681 59 679  curveto
71 677 81 675 90 672  curveto
98 669 106 665 112 661  curveto
118 657 125 652 131 646  curveto
143 634 153 618 162 600  curveto
171 582 176 567 178 555  curveto
186 469 lineto
188 441 194 418 203 402  curveto
211 385 223 372 237 363  curveto
251 353 267 347 285 344  curveto
303 341 324 340 346 340  curveto
346 587 lineto
346 612 339 630 326 640  curveto
313 650 290 655 256 655  curveto
256 673 lineto
540 673 lineto
540 655 lineto
505 655 481 650 469 640  curveto
456 630 450 612 450 588  curveto
450 340 lineto
472 340 492 341 510 344  curveto
528 347 545 353 559 363  curveto
573 372 584 385 593 402  curveto
601 418 607 441 610 469  curveto
618 555 lineto
619 567 624 582 633 600  curveto
642 618 653 634 665 646  curveto
671 652 677 657 683 661  curveto
689 665 697 669 706 672  curveto
714 675 725 677 737 679  curveto
749 681 763 682 781 684  curveto
781 666 lineto
781 666 lineto
closepath
fill
		} def

	/Z
		{
611 0 moveto
44 0 lineto
44 19 lineto
473 631 lineto
243 631 lineto
211 631 187 627 169 619  curveto
151 611 137 601 127 589  curveto
117 577 110 563 106 547  curveto
102 531 97 514 93 498  curveto
68 498 lineto
83 673 lineto
605 673 lineto
605 646 lineto
192 42 lineto
440 42 lineto
469 42 493 45 513 52  curveto
532 58 548 68 560 80  curveto
572 92 582 106 589 123  curveto
595 140 601 159 607 181  curveto
636 181 lineto
611 0 lineto
closepath
fill
		} def

	/bracketleft
		{
86 -155 moveto
86 674 lineto
299 674 lineto
299 649 lineto
221 649 lineto
199 649 184 645 176 637  curveto
167 629 163 616 163 598  curveto
163 -81 lineto
163 -96 167 -108 175 -117  curveto
183 -125 198 -130 220 -130  curveto
299 -130 lineto
299 -155 lineto
86 -155 lineto
closepath
fill
		} def

	/backslash
		{
293 65 moveto
293 47 286 31 274 19  curveto
261 6 246 0 228 0  curveto
210 0 194 6 182 19  curveto
169 31 163 47 163 65  curveto
163 82 169 97 181 110  curveto
193 123 209 130 228 130  curveto
247 130 263 123 275 110  curveto
287 97 293 82 293 65  curveto
closepath
701 65 moveto
701 47 694 31 681 19  curveto
668 6 653 0 636 0  curveto
618 0 603 6 590 19  curveto
577 31 571 47 571 65  curveto
571 82 577 97 589 110  curveto
601 123 617 130 636 130  curveto
655 130 671 123 683 110  curveto
695 97 701 82 701 65  curveto
closepath
497 413 moveto
497 395 490 379 477 367  curveto
464 354 449 348 432 348  curveto
414 348 399 354 386 367  curveto
373 379 367 395 367 413  curveto
367 430 373 445 385 458  curveto
397 471 413 478 432 478  curveto
451 478 467 471 479 458  curveto
491 445 497 430 497 413  curveto
closepath
fill
		} def

	/bracketright
		{
33 -155 moveto
33 -130 lineto
112 -130 lineto
133 -130 148 -125 156 -117  curveto
164 -108 169 -96 169 -81  curveto
169 598 lineto
169 616 164 629 156 637  curveto
147 645 132 649 111 649  curveto
33 649 lineto
33 674 lineto
246 674 lineto
246 -155 lineto
33 -155 lineto
closepath
fill
		} def

	/asciicircum
		{
15 0 moveto
15 55 lineto
306 55 lineto
306 674 lineto
361 674 lineto
361 55 lineto
652 55 lineto
652 0 lineto
15 0 lineto
closepath
fill
		} def

	/underscore
		{
-2 -252 moveto
-2 -206 lineto
502 -206 lineto
502 -252 lineto
-2 -252 lineto
closepath
fill
		} def

	/quoteleft
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/a
		{
407 223 moveto
403 249 399 273 395 294  curveto
391 314 387 332 382 348  curveto
377 363 371 377 365 389  curveto
358 401 350 412 340 422  curveto
326 436 311 446 296 452  curveto
280 458 265 461 249 461  curveto
232 461 217 454 205 442  curveto
193 430 183 416 176 401  curveto
165 379 157 354 152 326  curveto
147 298 145 269 145 241  curveto
145 209 147 179 151 149  curveto
155 119 162 95 172 77  curveto
181 57 193 42 209 32  curveto
224 21 240 16 256 16  curveto
266 16 277 18 289 24  curveto
301 29 312 37 322 47  curveto
332 57 343 72 353 91  curveto
363 110 372 129 380 149  curveto
407 223 lineto
407 223 lineto
closepath
620 79 moveto
620 69 618 58 614 47  curveto
610 36 605 26 599 17  curveto
593 7 585 0 577 -6  curveto
568 -12 559 -15 549 -15  curveto
537 -15 527 -10 517 -1  curveto
507 7 499 18 491 32  curveto
483 46 475 61 469 77  curveto
462 93 456 109 451 124  curveto
445 113 438 100 431 86  curveto
423 71 412 56 396 40  curveto
378 22 355 8 327 -2  curveto
298 -12 270 -18 243 -18  curveto
217 -18 192 -13 168 -3  curveto
144 7 123 20 107 37  curveto
63 81 41 145 41 229  curveto
41 274 46 313 56 347  curveto
66 380 83 409 109 435  curveto
121 447 132 457 144 465  curveto
155 473 167 479 179 485  curveto
191 490 203 494 217 496  curveto
231 498 246 500 263 500  curveto
283 500 302 496 320 488  curveto
338 480 355 468 370 452  curveto
385 436 398 416 409 392  curveto
420 368 428 341 433 309  curveto
435 309 lineto
499 487 lineto
587 487 lineto
472 170 lineto
474 157 477 144 481 130  curveto
485 116 491 104 498 93  curveto
504 82 512 73 521 66  curveto
530 59 540 56 552 56  curveto
556 56 561 57 566 60  curveto
571 63 575 66 579 70  curveto
584 75 589 82 594 92  curveto
598 101 602 116 604 137  curveto
622 137 lineto
620 79 lineto
closepath
fill
		} def

	/b
		{
412 188 moveto
412 232 405 271 392 305  curveto
378 339 363 366 345 384  curveto
337 392 330 397 325 399  curveto
319 401 313 402 307 402  curveto
301 402 294 401 286 400  curveto
277 398 269 398 261 398  curveto
245 398 234 401 228 407  curveto
221 413 218 419 218 425  curveto
218 433 221 441 229 449  curveto
236 457 247 461 263 461  curveto
271 461 280 459 291 457  curveto
302 455 310 454 314 454  curveto
320 454 327 457 335 465  curveto
342 473 348 482 354 494  curveto
358 502 361 512 364 526  curveto
366 539 368 552 368 565  curveto
368 587 364 607 358 625  curveto
351 643 342 658 332 670  curveto
322 682 310 691 296 697  curveto
282 703 269 707 255 707  curveto
239 707 225 703 213 695  curveto
201 687 190 678 182 667  curveto
173 656 166 644 162 632  curveto
157 620 155 609 155 599  curveto
155 93 lineto
158 89 161 86 164 84  curveto
167 81 170 78 174 75  curveto
188 60 206 49 228 41  curveto
250 33 271 30 293 30  curveto
307 30 322 32 336 38  curveto
350 44 361 51 371 61  curveto
382 72 392 87 400 106  curveto
408 124 412 152 412 188  curveto
closepath
515 199 moveto
515 167 510 137 500 111  curveto
490 85 477 62 460 43  curveto
443 23 422 8 398 -2  curveto
374 -12 347 -18 319 -18  curveto
291 -18 264 -14 240 -6  curveto
215 1 188 15 158 37  curveto
156 -149 lineto
156 -160 155 -172 153 -185  curveto
151 -197 149 -210 148 -223  curveto
61 -223 lineto
63 -199 67 -173 71 -147  curveto
75 -121 77 -94 77 -67  curveto
77 588 lineto
77 614 84 638 99 660  curveto
114 682 140 703 176 721  curveto
188 727 201 731 215 735  curveto
229 739 245 741 263 741  curveto
298 741 332 732 366 716  curveto
394 702 418 683 436 659  curveto
454 635 463 609 463 580  curveto
463 566 460 551 456 537  curveto
452 522 447 510 442 501  curveto
438 493 433 486 427 479  curveto
421 471 416 465 410 459  curveto
404 453 398 447 392 443  curveto
386 438 382 434 379 432  curveto
425 412 459 381 481 339  curveto
503 297 515 250 515 199  curveto
closepath
fill
		} def

	/c
		{
522 -50 moveto
518 -84 511 -114 503 -140  curveto
495 -165 483 -185 468 -201  curveto
458 -210 447 -217 435 -223  curveto
423 -228 410 -231 396 -231  curveto
363 -231 336 -209 315 -167  curveto
310 -157 305 -145 301 -129  curveto
296 -113 291 -96 287 -76  curveto
283 -56 279 -34 275 -12  curveto
271 10 268 33 265 57  curveto
263 57 lineto
115 -216 lineto
13 -216 lineto
232 185 lineto
220 229 211 267 205 298  curveto
198 329 191 352 184 368  curveto
176 383 166 395 154 405  curveto
141 415 126 420 110 420  curveto
86 420 68 410 56 390  curveto
44 370 35 347 30 321  curveto
12 321 lineto
19 379 31 423 49 454  curveto
67 484 90 500 119 500  curveto
145 500 167 490 184 472  curveto
201 453 213 429 221 399  curveto
259 236 lineto
392 480 lineto
494 479 lineto
290 105 lineto
294 89 298 70 304 47  curveto
310 24 316 1 323 -21  curveto
329 -43 336 -64 344 -83  curveto
351 -101 358 -114 365 -121  curveto
374 -130 382 -136 389 -138  curveto
396 -140 404 -142 414 -142  curveto
436 -142 455 -134 471 -118  curveto
478 -110 484 -101 489 -91  curveto
494 -81 499 -67 503 -50  curveto
522 -50 lineto
522 -50 lineto
closepath
fill
		} def

	/d
		{
385 194 moveto
385 216 382 239 378 262  curveto
373 285 366 306 357 324  curveto
347 342 337 358 326 374  curveto
314 389 301 404 286 418  curveto
258 412 236 402 218 390  curveto
200 378 186 363 176 346  curveto
165 329 157 310 153 289  curveto
149 268 147 246 147 222  curveto
147 202 149 180 153 158  curveto
157 136 163 116 171 100  curveto
175 90 179 81 185 73  curveto
191 65 197 57 205 50  curveto
213 43 222 38 232 34  curveto
242 30 254 28 268 28  curveto
282 28 295 30 308 36  curveto
320 42 331 49 341 59  curveto
355 73 365 92 373 116  curveto
381 140 385 166 385 194  curveto
closepath
481 228 moveto
481 199 477 173 469 150  curveto
461 126 451 105 438 86  curveto
424 67 409 50 391 36  curveto
373 22 355 10 335 0  curveto
321 -6 307 -11 292 -14  curveto
276 -17 262 -19 248 -19  curveto
238 -19 226 -17 211 -15  curveto
195 -13 182 -9 170 -3  curveto
150 6 131 18 113 34  curveto
95 49 78 71 64 101  curveto
54 120 48 138 45 156  curveto
41 173 40 189 40 203  curveto
40 232 46 261 58 290  curveto
70 319 86 344 107 365  curveto
142 400 191 427 255 447  curveto
141 551 lineto
126 564 115 579 108 597  curveto
101 614 98 629 98 643  curveto
98 653 99 662 102 670  curveto
105 678 111 686 121 696  curveto
125 700 132 706 140 712  curveto
148 718 155 722 162 726  curveto
173 731 185 735 199 737  curveto
213 739 227 740 243 740  curveto
247 740 252 739 260 739  curveto
268 739 276 738 285 737  curveto
293 736 302 735 311 734  curveto
319 733 327 732 333 730  curveto
371 718 398 705 415 690  curveto
431 674 440 657 440 639  curveto
440 627 435 618 425 610  curveto
415 602 405 599 395 599  curveto
385 599 376 601 368 606  curveto
360 610 352 616 344 623  curveto
336 629 329 636 322 644  curveto
314 652 308 659 302 665  curveto
287 679 271 689 255 693  curveto
239 697 227 700 219 700  curveto
206 700 195 697 185 693  curveto
175 688 167 682 160 675  curveto
150 665 146 654 146 640  curveto
146 630 148 621 153 613  curveto
158 605 164 597 172 590  curveto
187 574 203 561 221 549  curveto
239 537 257 525 277 513  curveto
287 507 296 501 306 495  curveto
316 489 326 483 336 476  curveto
346 469 356 461 367 452  curveto
378 443 390 433 402 421  curveto
425 397 444 369 459 337  curveto
473 304 481 268 481 228  curveto
closepath
fill
		} def

	/e
		{
427 107 moveto
425 83 418 63 405 46  curveto
391 29 375 16 356 7  curveto
346 2 336 -1 325 -5  curveto
314 -8 303 -11 292 -13  curveto
280 -15 269 -17 258 -18  curveto
247 -19 238 -20 230 -20  curveto
194 -20 160 -14 129 -3  curveto
98 7 75 20 60 36  curveto
34 61 22 91 22 126  curveto
22 154 31 180 49 203  curveto
67 226 95 242 133 252  curveto
120 257 108 263 96 269  curveto
84 275 74 282 65 290  curveto
56 298 49 308 44 320  curveto
38 332 36 346 36 363  curveto
36 385 42 405 55 425  curveto
67 445 88 462 118 477  curveto
133 484 151 490 171 495  curveto
191 499 215 502 241 502  curveto
260 502 277 500 292 498  curveto
307 496 324 490 342 481  curveto
360 471 373 460 382 448  curveto
391 435 396 423 396 412  curveto
396 398 391 387 382 378  curveto
373 369 363 365 351 365  curveto
331 365 318 370 311 382  curveto
303 394 297 407 293 422  curveto
289 433 281 443 269 452  curveto
257 461 241 466 222 466  curveto
208 466 196 463 184 458  curveto
172 452 162 445 154 437  curveto
136 419 127 393 127 361  curveto
127 335 134 314 148 297  curveto
162 280 184 272 215 272  curveto
225 272 238 273 254 275  curveto
270 277 283 278 293 278  curveto
306 278 316 275 322 271  curveto
328 266 331 261 331 256  curveto
331 249 325 242 315 235  curveto
305 228 293 225 279 225  curveto
269 225 259 226 247 228  curveto
235 230 225 232 215 232  curveto
189 232 167 223 151 206  curveto
135 188 127 164 127 132  curveto
127 115 128 102 132 93  curveto
136 83 142 74 152 65  curveto
163 53 179 44 200 37  curveto
220 29 244 26 272 26  curveto
302 26 329 31 352 43  curveto
374 55 391 78 401 114  curveto
427 107 lineto
427 107 lineto
closepath
fill
		} def

	/f
		{
235 464 moveto
214 460 196 452 182 440  curveto
167 428 155 414 146 396  curveto
136 378 129 358 125 335  curveto
121 312 119 287 119 261  curveto
119 235 121 208 127 182  curveto
132 156 140 131 152 109  curveto
157 98 163 88 170 78  curveto
177 68 184 60 192 52  curveto
200 44 208 37 216 32  curveto
224 26 232 23 240 23  curveto
235 464 lineto
closepath
402 214 moveto
402 242 399 270 393 298  curveto
387 326 380 351 370 371  curveto
359 391 347 409 335 423  curveto
322 437 303 450 279 464  curveto
282 24 lineto
309 27 330 36 344 50  curveto
358 64 370 82 380 102  curveto
387 117 392 134 396 154  curveto
400 173 402 193 402 214  curveto
closepath
490 244 moveto
490 197 482 156 467 122  curveto
451 88 434 61 414 41  curveto
396 23 377 11 355 4  curveto
333 -3 309 -9 282 -13  curveto
283 -224 lineto
243 -212 lineto
241 -14 lineto
217 -8 192 -1 167 8  curveto
141 17 119 31 101 50  curveto
77 73 59 101 46 134  curveto
33 167 27 201 27 236  curveto
27 254 29 272 33 292  curveto
37 311 42 330 49 348  curveto
56 366 64 384 74 400  curveto
84 416 95 430 107 442  curveto
142 477 185 497 235 501  curveto
233 671 lineto
278 656 lineto
279 498 lineto
309 492 334 485 355 477  curveto
376 468 396 454 415 436  curveto
441 410 460 380 472 348  curveto
484 315 490 280 490 244  curveto
closepath
fill
		} def

	/g
		{
280 58 moveto
284 31 288 5 292 -19  curveto
296 -43 298 -69 298 -95  curveto
298 -115 296 -133 293 -149  curveto
289 -165 285 -178 280 -190  curveto
274 -202 267 -210 260 -216  curveto
252 -222 243 -225 231 -225  curveto
213 -225 200 -218 192 -204  curveto
183 -190 179 -174 179 -155  curveto
179 -137 181 -119 185 -99  curveto
189 -79 195 -60 201 -41  curveto
207 -21 214 -3 221 14  curveto
227 32 233 47 239 60  curveto
235 93 230 125 224 157  curveto
218 188 212 217 205 245  curveto
198 272 191 297 183 319  curveto
175 341 168 361 160 377  curveto
152 392 142 403 130 410  curveto
117 417 105 421 95 421  curveto
78 421 63 414 49 400  curveto
38 389 31 377 28 364  curveto
24 351 22 335 22 317  curveto
5 317 lineto
5 344 lineto
5 370 7 392 12 412  curveto
17 431 22 445 27 454  curveto
34 469 44 480 58 488  curveto
72 495 87 499 105 499  curveto
125 499 142 494 156 485  curveto
169 476 181 461 192 440  curveto
201 420 208 401 214 381  curveto
219 361 225 337 232 307  curveto
237 283 243 257 249 227  curveto
255 197 261 169 265 142  curveto
267 142 lineto
380 494 lineto
484 494 lineto
280 58 lineto
closepath
fill
		} def

	/h
		{
438 -202 moveto
435 -186 432 -172 429 -158  curveto
426 -144 424 -126 424 -103  curveto
411 347 lineto
410 380 402 404 387 420  curveto
378 428 368 435 356 439  curveto
344 443 333 445 322 445  curveto
308 445 296 442 285 438  curveto
273 433 263 427 254 420  curveto
244 412 236 404 228 395  curveto
220 385 212 376 206 366  curveto
206 0 lineto
121 0 lineto
121 349 lineto
121 358 120 369 119 383  curveto
117 397 114 409 109 421  curveto
104 430 98 437 92 443  curveto
85 449 77 452 68 452  curveto
60 452 54 450 48 447  curveto
42 443 37 437 33 428  curveto
29 420 26 411 24 399  curveto
21 387 19 374 18 360  curveto
0 360 lineto
0 383 2 400 5 412  curveto
8 423 12 434 18 446  curveto
28 467 42 482 59 492  curveto
76 501 94 506 114 506  curveto
130 506 144 502 158 495  curveto
172 487 182 477 189 464  curveto
193 456 196 448 199 439  curveto
201 430 204 420 207 408  curveto
227 438 250 464 274 484  curveto
298 504 328 514 364 514  curveto
376 514 388 512 401 510  curveto
413 507 425 502 435 495  curveto
440 491 446 486 454 480  curveto
461 474 468 467 475 458  curveto
481 448 487 437 492 423  curveto
496 409 499 391 500 371  curveto
511 -126 lineto
511 -141 514 -155 518 -169  curveto
522 -182 525 -193 527 -202  curveto
438 -202 lineto
closepath
fill
		} def

	/i
		{
301 101 moveto
297 77 292 58 285 43  curveto
278 28 270 16 260 7  curveto
250 -1 239 -7 227 -11  curveto
215 -15 204 -17 192 -17  curveto
175 -17 161 -14 150 -10  curveto
138 -5 128 1 119 11  curveto
110 19 103 30 97 42  curveto
91 54 88 66 88 78  curveto
88 309 lineto
88 335 86 357 82 373  curveto
78 389 73 401 67 409  curveto
60 417 52 423 44 426  curveto
36 428 27 430 19 430  curveto
0 430 lineto
0 450 lineto
27 455 55 462 83 471  curveto
111 479 141 490 173 503  curveto
173 118 lineto
173 102 174 88 178 78  curveto
182 67 186 59 191 54  curveto
198 45 203 39 207 36  curveto
211 32 216 31 223 31  curveto
229 31 235 31 241 33  curveto
247 35 253 38 259 43  curveto
264 48 268 55 272 64  curveto
276 73 279 85 281 101  curveto
301 101 lineto
301 101 lineto
closepath
fill
		} def

	/j
		{
502 214 moveto
502 242 499 267 494 291  curveto
488 314 482 334 474 350  curveto
470 357 465 365 459 374  curveto
453 382 446 390 438 398  curveto
430 405 423 411 415 416  curveto
407 421 399 424 392 424  curveto
386 424 379 422 373 420  curveto
367 418 362 415 358 411  curveto
351 404 345 392 341 374  curveto
337 356 335 335 335 310  curveto
335 305 335 298 335 290  curveto
335 282 336 277 336 275  curveto
347 23 lineto
383 27 411 38 433 58  curveto
455 77 471 97 481 117  curveto
488 132 493 147 497 163  curveto
500 179 502 196 502 214  curveto
closepath
587 247 moveto
587 213 580 179 566 146  curveto
552 112 535 86 515 66  curveto
505 56 495 47 483 38  curveto
471 29 459 21 445 13  curveto
431 5 417 0 403 -5  curveto
388 -9 374 -12 360 -12  curveto
347 -12 lineto
347 -224 lineto
284 -224 lineto
284 -13 lineto
272 -11 258 -8 244 -5  curveto
230 -2 215 1 200 7  curveto
185 13 170 20 155 29  curveto
139 37 125 49 111 63  curveto
101 73 91 85 82 100  curveto
72 114 64 130 58 147  curveto
51 164 46 182 42 202  curveto
38 221 36 241 36 261  curveto
36 291 41 321 52 350  curveto
62 378 77 402 97 422  curveto
116 441 138 457 162 471  curveto
186 485 215 492 248 492  curveto
248 474 lineto
227 464 210 453 196 439  curveto
182 425 171 409 163 391  curveto
155 373 149 353 146 332  curveto
142 310 141 288 141 265  curveto
141 234 143 205 149 179  curveto
155 152 162 130 171 113  curveto
185 85 202 63 223 49  curveto
243 35 264 27 284 26  curveto
275 311 lineto
275 315 274 321 274 329  curveto
274 336 274 343 274 350  curveto
274 363 276 378 280 395  curveto
284 412 290 428 300 444  curveto
310 459 322 472 338 483  curveto
354 493 373 499 397 499  curveto
415 499 433 495 451 489  curveto
469 482 489 468 511 446  curveto
532 424 550 396 565 362  curveto
579 327 587 289 587 247  curveto
closepath
fill
		} def

	/k
		{
323 0 moveto
323 18 lineto
340 18 352 19 358 23  curveto
364 26 368 30 368 36  curveto
368 42 365 47 361 52  curveto
356 57 351 63 346 71  curveto
194 258 lineto
194 0 lineto
119 0 lineto
119 344 lineto
119 362 117 378 114 390  curveto
110 402 105 411 98 417  curveto
91 423 82 428 71 430  curveto
60 432 47 434 33 434  curveto
33 455 lineto
43 457 54 459 65 461  curveto
76 463 88 465 101 468  curveto
113 471 127 475 142 481  curveto
157 486 174 493 194 501  curveto
194 284 lineto
215 305 236 326 258 346  curveto
280 366 300 385 319 402  curveto
338 419 355 434 370 446  curveto
385 458 397 467 406 473  curveto
411 478 421 484 436 490  curveto
450 496 466 500 484 500  curveto
508 500 527 494 539 482  curveto
551 470 557 459 557 447  curveto
557 435 552 423 543 411  curveto
534 399 520 394 501 394  curveto
491 394 483 395 477 399  curveto
470 403 464 407 458 411  curveto
452 415 447 418 442 422  curveto
437 426 432 428 426 428  curveto
418 428 407 424 395 416  curveto
383 408 370 397 356 385  curveto
342 373 328 359 314 345  curveto
300 331 286 317 274 305  curveto
461 70 lineto
478 48 494 34 508 28  curveto
522 21 538 18 558 18  curveto
558 0 lineto
323 0 lineto
closepath
fill
		} def

	/l
		{
547 153 moveto
547 127 545 105 542 88  curveto
538 70 533 55 527 42  curveto
515 20 502 4 487 -4  curveto
471 -12 457 -17 444 -17  curveto
425 -17 408 -10 393 1  curveto
377 13 365 28 357 46  curveto
353 53 349 64 345 79  curveto
340 94 335 111 331 130  curveto
326 149 321 170 317 192  curveto
313 214 309 235 305 256  curveto
301 277 298 297 295 316  curveto
292 335 290 351 289 365  curveto
287 365 lineto
116 0 lineto
24 0 lineto
255 498 lineto
249 524 243 547 237 568  curveto
231 589 224 607 217 623  curveto
210 636 201 646 189 653  curveto
177 659 166 663 154 663  curveto
142 663 132 660 122 656  curveto
112 651 103 645 96 638  curveto
86 628 80 617 77 605  curveto
74 593 71 581 68 570  curveto
49 570 lineto
54 622 64 664 79 694  curveto
93 724 116 739 146 739  curveto
168 739 187 732 205 719  curveto
222 705 235 691 243 675  curveto
252 656 261 631 271 600  curveto
280 569 289 536 299 501  curveto
303 484 307 462 313 436  curveto
319 410 325 382 331 352  curveto
337 322 343 293 349 264  curveto
355 234 360 208 366 186  curveto
370 169 375 152 382 135  curveto
388 118 397 104 408 94  curveto
423 78 440 71 460 71  curveto
470 71 481 73 491 79  curveto
501 85 509 94 516 108  curveto
519 114 522 121 524 131  curveto
526 140 527 147 529 153  curveto
547 153 lineto
547 153 lineto
closepath
fill
		} def

	/m
		{
566 101 moveto
563 79 557 61 549 46  curveto
540 31 530 19 518 10  curveto
506 0 494 -6 482 -10  curveto
469 -14 457 -17 446 -17  curveto
428 -17 413 -12 399 -4  curveto
385 4 374 16 367 32  curveto
363 38 361 46 360 54  curveto
358 62 357 71 355 81  curveto
349 73 345 68 343 64  curveto
340 60 335 55 329 49  curveto
307 27 286 11 265 0  curveto
243 -11 219 -17 193 -17  curveto
174 -17 158 -12 144 -4  curveto
130 3 115 15 97 31  curveto
97 10 lineto
97 -5 98 -19 102 -32  curveto
105 -45 109 -58 113 -70  curveto
117 -82 120 -95 124 -108  curveto
127 -121 129 -135 129 -151  curveto
129 -172 124 -189 115 -203  curveto
106 -216 95 -223 81 -223  curveto
69 -223 58 -217 48 -205  curveto
38 -193 33 -176 33 -153  curveto
33 -137 34 -123 37 -111  curveto
40 -99 43 -87 47 -75  curveto
50 -63 53 -51 56 -38  curveto
59 -25 61 -10 61 7  curveto
61 500 lineto
147 500 lineto
147 164 lineto
147 125 157 96 177 76  curveto
185 67 196 61 208 57  curveto
220 53 231 51 243 51  curveto
252 51 262 53 273 57  curveto
284 61 295 67 306 74  curveto
316 81 326 89 334 99  curveto
342 108 349 118 354 128  curveto
354 500 lineto
440 500 lineto
440 116 lineto
440 92 444 72 454 56  curveto
464 40 477 32 494 32  curveto
512 32 526 41 536 61  curveto
538 66 540 72 542 79  curveto
543 86 544 93 546 101  curveto
566 101 lineto
566 101 lineto
closepath
fill
		} def

	/n
		{
475 439 moveto
475 435 473 428 471 418  curveto
468 408 464 397 460 385  curveto
456 372 451 358 445 344  curveto
439 330 433 316 427 304  curveto
412 274 396 243 379 210  curveto
361 177 345 146 330 116  curveto
314 86 301 59 290 35  curveto
278 11 271 -5 269 -16  curveto
232 -16 lineto
64 414 lineto
60 424 56 432 53 437  curveto
50 442 46 446 41 449  curveto
34 452 25 454 15 455  curveto
4 455 -3 456 -9 457  curveto
-9 476 lineto
9 478 23 479 34 480  curveto
45 481 55 483 64 485  curveto
72 487 81 489 89 493  curveto
97 496 108 501 122 507  curveto
280 103 lineto
358 253 lineto
364 265 369 276 373 285  curveto
377 294 379 302 381 309  curveto
383 315 384 321 384 326  curveto
384 330 385 334 385 338  curveto
385 357 382 376 376 396  curveto
370 416 368 433 368 448  curveto
368 452 369 457 371 463  curveto
373 469 376 474 380 480  curveto
384 486 389 490 395 494  curveto
401 498 409 500 419 500  curveto
431 500 443 495 456 485  curveto
468 475 475 460 475 439  curveto
closepath
fill
		} def

	/o
		{
404 223 moveto
404 258 401 289 395 316  curveto
389 342 381 365 372 385  curveto
358 412 341 433 320 447  curveto
299 461 277 469 255 469  curveto
225 469 199 457 175 433  curveto
163 421 152 401 144 375  curveto
135 349 131 315 131 273  curveto
131 249 133 222 138 192  curveto
143 162 154 131 170 99  curveto
181 76 197 57 217 43  curveto
237 29 259 22 283 22  curveto
307 22 329 29 347 45  curveto
365 61 378 82 388 110  curveto
393 125 397 142 400 161  curveto
402 180 404 201 404 223  curveto
closepath
501 241 moveto
501 229 499 215 497 199  curveto
495 183 491 167 485 150  curveto
479 132 470 114 459 96  curveto
448 77 434 59 417 42  curveto
399 24 378 10 353 -1  curveto
328 -13 300 -19 268 -19  curveto
246 -19 226 -16 207 -10  curveto
188 -4 171 1 156 9  curveto
117 37 87 70 66 110  curveto
45 149 35 194 35 244  curveto
35 274 40 305 51 336  curveto
61 366 76 394 96 418  curveto
116 442 140 461 168 476  curveto
196 491 228 499 264 499  curveto
294 499 323 492 352 480  curveto
380 467 407 448 433 423  curveto
449 407 464 383 479 353  curveto
493 323 501 285 501 241  curveto
closepath
fill
		} def

	/p
		{
530 151 moveto
530 131 527 112 522 92  curveto
516 72 509 54 499 38  curveto
489 22 476 9 461 -1  curveto
446 -11 429 -16 410 -16  curveto
391 -16 374 -8 359 8  curveto
343 24 331 48 322 80  curveto
320 84 319 90 318 98  curveto
317 105 316 113 316 121  curveto
315 129 314 136 314 144  curveto
314 152 314 158 314 164  curveto
314 202 316 241 322 281  curveto
327 321 331 361 335 401  curveto
222 401 lineto
215 326 208 263 202 212  curveto
195 160 188 114 181 74  curveto
179 63 177 53 175 44  curveto
173 34 170 26 167 20  curveto
159 4 150 -5 140 -11  curveto
129 -16 119 -19 110 -19  curveto
94 -19 82 -13 72 -2  curveto
62 8 57 20 57 33  curveto
57 47 60 58 68 68  curveto
75 77 83 87 93 99  curveto
101 109 109 119 117 130  curveto
125 141 130 155 132 172  curveto
161 401 lineto
114 401 lineto
103 401 91 398 79 393  curveto
66 387 55 379 47 367  curveto
27 338 lineto
10 338 lineto
24 384 43 421 65 447  curveto
87 473 116 487 152 487  curveto
522 487 lineto
522 401 lineto
396 401 lineto
394 381 392 361 390 340  curveto
388 318 387 297 386 276  curveto
385 255 384 235 384 217  curveto
384 198 384 182 384 169  curveto
384 157 385 146 387 135  curveto
389 124 393 114 399 106  curveto
404 97 411 90 419 84  curveto
427 78 438 76 450 76  curveto
457 76 466 78 476 84  curveto
486 89 494 98 500 110  curveto
502 115 504 121 505 128  curveto
506 135 507 143 508 151  curveto
530 151 lineto
530 151 lineto
closepath
fill
		} def

	/q
		{
144 316 moveto
150 212 lineto
151 187 155 163 162 140  curveto
169 117 178 97 188 79  curveto
198 61 210 47 224 37  curveto
237 26 251 21 265 21  curveto
279 21 292 26 306 38  curveto
319 50 331 65 341 83  curveto
351 101 359 121 366 144  curveto
372 166 376 189 378 211  curveto
384 316 lineto
144 316 lineto
closepath
379 463 moveto
378 471 377 481 375 493  curveto
373 504 370 515 367 527  curveto
364 538 361 549 358 560  curveto
354 570 351 579 347 587  curveto
337 607 324 623 308 636  curveto
292 649 277 656 263 656  curveto
252 656 238 650 222 638  curveto
206 626 193 611 184 593  curveto
179 583 175 573 171 562  curveto
167 550 163 539 160 527  curveto
157 515 155 504 153 493  curveto
151 481 149 472 149 464  curveto
143 368 lineto
385 368 lineto
379 463 lineto
closepath
485 351 moveto
485 296 481 248 473 208  curveto
465 168 455 135 443 110  curveto
435 93 424 77 412 62  curveto
400 46 386 33 370 21  curveto
354 9 338 0 320 -6  curveto
302 -13 284 -17 265 -17  curveto
230 -17 196 -6 164 16  curveto
132 38 106 69 86 109  curveto
72 137 61 170 54 210  curveto
46 250 43 297 43 351  curveto
43 396 46 434 52 465  curveto
58 495 68 523 81 549  curveto
91 569 102 588 116 605  curveto
130 622 145 637 161 650  curveto
177 662 193 672 211 679  curveto
229 686 247 690 265 690  curveto
279 690 294 687 310 681  curveto
326 675 343 667 359 655  curveto
375 643 391 628 407 610  curveto
422 592 436 570 449 546  curveto
461 520 470 491 476 459  curveto
482 427 485 391 485 351  curveto
closepath
fill
		} def

	/r
		{
401 214 moveto
401 248 394 281 382 313  curveto
370 345 353 371 332 393  curveto
298 427 262 444 224 444  curveto
212 444 202 442 194 439  curveto
186 435 179 430 172 423  curveto
158 409 148 395 144 381  curveto
140 367 138 354 138 343  curveto
138 336 138 328 138 320  curveto
138 312 139 305 139 300  curveto
144 116 lineto
144 110 146 102 151 92  curveto
155 82 162 72 172 62  curveto
182 52 194 43 208 36  curveto
222 28 238 25 258 25  curveto
302 25 336 42 362 76  curveto
388 110 401 156 401 214  curveto
closepath
490 252 moveto
490 226 486 201 479 176  curveto
471 151 463 129 454 110  curveto
442 88 429 68 414 52  curveto
399 36 383 22 367 12  curveto
351 2 334 -5 317 -11  curveto
299 -16 283 -19 269 -19  curveto
246 -19 223 -13 199 -3  curveto
175 6 158 21 147 40  curveto
147 -134 lineto
147 -147 146 -162 145 -179  curveto
143 -196 141 -213 137 -230  curveto
50 -230 lineto
51 -217 53 -203 57 -189  curveto
60 -175 62 -157 62 -137  curveto
62 -121 61 -106 61 -92  curveto
61 -78 61 -69 61 -67  curveto
58 200 lineto
58 203 58 208 58 215  curveto
58 221 57 228 57 236  curveto
57 244 57 251 57 259  curveto
57 267 57 274 57 280  curveto
57 308 61 333 70 357  curveto
78 380 92 401 112 421  curveto
123 432 135 442 148 452  curveto
160 462 176 471 194 481  curveto
210 489 223 494 235 496  curveto
247 498 258 499 270 499  curveto
312 499 349 489 383 469  curveto
417 449 445 417 467 373  curveto
474 358 480 340 484 320  curveto
488 300 490 277 490 252  curveto
closepath
fill
		} def

	/s
		{
430 199 moveto
430 239 421 277 405 311  curveto
388 345 359 380 318 414  curveto
288 414 lineto
267 414 247 410 227 402  curveto
207 394 190 383 176 369  curveto
164 357 154 340 146 319  curveto
138 297 134 274 134 248  curveto
134 212 140 177 153 145  curveto
165 113 184 85 208 61  curveto
217 51 229 42 245 33  curveto
261 23 277 19 295 19  curveto
325 19 348 25 366 39  curveto
383 52 397 69 407 89  curveto
415 105 420 121 424 139  curveto
428 156 430 176 430 199  curveto
closepath
371 414 moveto
371 412 lineto
383 408 397 400 411 390  curveto
425 380 439 368 453 355  curveto
466 342 478 328 489 314  curveto
500 300 509 287 515 275  curveto
521 261 526 248 528 236  curveto
530 224 532 211 532 199  curveto
532 179 529 160 523 141  curveto
517 122 509 104 499 87  curveto
488 70 475 54 459 40  curveto
443 26 426 14 407 4  curveto
397 0 387 -4 376 -7  curveto
364 -10 353 -13 341 -15  curveto
329 -17 318 -18 307 -19  curveto
296 -20 287 -21 279 -21  curveto
249 -21 220 -14 193 -2  curveto
165 10 142 26 123 46  curveto
91 78 67 112 52 149  curveto
37 186 30 223 30 261  curveto
30 289 36 317 48 344  curveto
60 370 75 392 93 410  curveto
107 424 124 437 143 448  curveto
162 459 182 468 203 476  curveto
224 484 245 490 267 494  curveto
288 498 308 500 327 500  curveto
588 500 lineto
588 414 lineto
371 414 lineto
closepath
fill
		} def

	/t
		{
264 408 moveto
262 384 261 360 259 334  curveto
257 308 255 284 253 262  curveto
251 239 250 219 249 202  curveto
247 185 247 174 247 170  curveto
247 158 248 147 251 136  curveto
254 124 258 114 264 105  curveto
270 96 277 89 285 83  curveto
293 77 302 74 312 74  curveto
329 74 342 79 352 91  curveto
361 103 367 123 371 152  curveto
390 152 lineto
390 130 389 112 387 98  curveto
385 83 382 70 379 60  curveto
375 49 371 40 366 32  curveto
360 24 355 18 349 12  curveto
337 0 325 -8 312 -12  curveto
299 -16 288 -19 279 -19  curveto
270 -19 261 -17 251 -14  curveto
241 -10 233 -5 226 2  curveto
206 21 194 44 189 72  curveto
184 100 182 127 182 153  curveto
182 187 183 224 187 264  curveto
190 304 195 351 203 407  curveto
113 407 lineto
97 407 82 398 67 381  curveto
52 363 39 340 28 311  curveto
10 311 lineto
19 349 29 379 41 402  curveto
53 425 66 444 82 460  curveto
97 475 114 485 133 491  curveto
151 497 168 500 183 500  curveto
418 500 lineto
418 408 lineto
264 408 lineto
closepath
fill
		} def

	/u
		{
535 243 moveto
535 225 533 208 531 190  curveto
528 172 524 154 518 136  curveto
512 118 505 100 496 84  curveto
486 68 475 53 462 40  curveto
444 22 422 8 395 -2  curveto
368 -12 340 -18 311 -18  curveto
291 -18 271 -15 252 -10  curveto
233 -5 215 5 199 22  curveto
193 27 188 33 184 40  curveto
180 46 175 53 171 61  curveto
160 78 152 96 148 116  curveto
144 136 141 157 141 180  curveto
141 192 141 206 141 224  curveto
141 242 140 260 140 279  curveto
139 298 138 317 137 335  curveto
136 353 135 368 133 382  curveto
128 411 116 426 97 426  curveto
82 426 69 420 58 409  curveto
52 403 47 395 42 384  curveto
36 372 32 363 30 356  curveto
7 356 lineto
9 366 12 377 16 389  curveto
20 401 24 412 28 423  curveto
32 433 37 443 41 452  curveto
45 460 50 467 56 473  curveto
64 481 74 488 86 494  curveto
98 500 111 503 126 503  curveto
134 503 142 501 152 498  curveto
161 495 170 491 178 485  curveto
186 479 192 472 198 464  curveto
204 456 207 446 209 436  curveto
211 422 213 405 215 385  curveto
217 364 219 342 221 318  curveto
223 294 224 269 225 243  curveto
226 217 227 193 227 171  curveto
227 158 228 144 231 130  curveto
233 115 238 101 246 87  curveto
253 71 264 57 278 43  curveto
292 29 307 23 324 23  curveto
335 23 347 25 359 30  curveto
371 35 381 42 390 51  curveto
400 61 410 75 418 91  curveto
426 107 432 124 438 143  curveto
443 162 447 182 450 203  curveto
452 223 454 243 454 263  curveto
454 281 453 300 451 321  curveto
449 341 444 362 436 382  curveto
428 402 417 422 402 441  curveto
386 459 365 476 339 490  curveto
345 507 lineto
371 497 396 484 419 470  curveto
442 455 462 437 479 416  curveto
496 395 510 370 520 342  curveto
530 314 535 281 535 243  curveto
closepath
fill
		} def

	/v
		{
573 221 moveto
573 243 571 262 569 279  curveto
567 296 564 311 560 324  curveto
556 336 552 347 548 357  curveto
544 367 540 376 536 384  curveto
526 402 517 416 508 427  curveto
498 437 489 446 479 453  curveto
469 460 459 466 449 471  curveto
439 476 428 482 418 490  curveto
294 489 lineto
289 486 283 483 276 480  curveto
269 476 262 473 254 469  curveto
246 465 238 460 230 455  curveto
222 449 214 443 208 437  curveto
200 429 192 418 184 406  curveto
176 394 168 379 162 361  curveto
156 343 151 322 147 298  curveto
143 274 141 246 141 214  curveto
141 186 143 161 147 137  curveto
151 113 156 93 164 78  curveto
171 64 180 51 190 40  curveto
200 29 215 24 233 24  curveto
249 24 264 29 279 39  curveto
294 49 306 63 315 81  curveto
319 90 323 101 325 113  curveto
327 125 329 137 331 147  curveto
322 167 315 188 311 209  curveto
307 230 305 254 305 280  curveto
305 308 307 333 311 355  curveto
313 369 319 381 329 392  curveto
339 403 348 409 358 409  curveto
366 409 372 406 378 400  curveto
384 394 388 386 392 376  curveto
396 366 398 356 400 344  curveto
402 332 403 321 403 309  curveto
403 294 402 280 401 268  curveto
399 255 397 243 395 231  curveto
392 219 389 206 386 194  curveto
383 181 380 167 378 152  curveto
378 147 380 138 382 124  curveto
384 110 388 96 395 82  curveto
401 68 411 55 423 44  curveto
435 32 453 27 475 27  curveto
483 27 492 28 502 32  curveto
512 36 520 41 526 47  curveto
530 51 535 58 541 68  curveto
547 77 552 89 557 103  curveto
561 117 565 133 568 153  curveto
571 173 573 195 573 221  curveto
closepath
491 490 moveto
511 483 528 475 543 467  curveto
558 459 571 450 583 440  curveto
594 430 604 418 613 406  curveto
621 393 629 379 637 365  curveto
648 341 656 317 661 291  curveto
666 265 669 240 669 218  curveto
669 193 666 168 661 143  curveto
655 118 648 96 638 76  curveto
629 58 618 44 606 32  curveto
593 20 580 11 566 4  curveto
552 -3 539 -8 525 -12  curveto
511 -15 498 -17 487 -17  curveto
469 -17 452 -13 435 -6  curveto
417 1 403 10 392 22  curveto
385 28 379 37 373 48  curveto
367 58 361 69 356 80  curveto
345 60 334 44 322 32  curveto
310 19 297 9 285 2  curveto
272 -5 260 -10 248 -13  curveto
236 -16 226 -18 216 -18  curveto
196 -18 176 -14 157 -6  curveto
137 1 121 12 107 26  curveto
81 51 63 80 52 113  curveto
40 145 35 184 35 228  curveto
35 242 36 259 38 277  curveto
40 295 44 313 49 331  curveto
54 349 61 366 70 383  curveto
78 400 89 415 101 427  curveto
112 438 125 448 139 458  curveto
153 468 166 477 180 487  curveto
158 485 140 484 127 482  curveto
113 480 101 478 91 475  curveto
81 471 71 467 62 461  curveto
52 455 41 447 28 437  curveto
12 436 lineto
18 455 27 473 38 490  curveto
48 506 60 521 72 534  curveto
84 546 98 556 112 564  curveto
126 571 140 575 154 575  curveto
670 583 lineto
671 495 lineto
491 490 lineto
closepath
fill
		} def

	/w
		{
683 216 moveto
683 187 680 162 675 142  curveto
669 121 662 102 653 84  curveto
637 52 616 27 590 9  curveto
564 -8 536 -17 505 -17  curveto
495 -17 486 -16 476 -14  curveto
466 -12 457 -9 448 -4  curveto
428 5 412 16 399 30  curveto
386 44 374 61 363 82  curveto
350 57 336 38 321 25  curveto
305 12 291 2 278 -4  curveto
267 -9 258 -12 251 -14  curveto
244 -16 234 -17 222 -17  curveto
194 -17 168 -10 146 2  curveto
124 15 105 33 90 55  curveto
74 77 62 102 54 130  curveto
46 158 42 188 42 220  curveto
42 232 42 244 44 258  curveto
45 271 47 284 49 298  curveto
51 312 55 325 59 338  curveto
63 350 67 362 73 373  curveto
84 395 99 416 117 436  curveto
135 455 154 470 176 481  curveto
192 489 210 494 231 496  curveto
252 498 274 500 297 500  curveto
297 483 lineto
280 477 266 471 254 465  curveto
242 459 231 452 222 445  curveto
213 438 205 430 198 421  curveto
191 411 184 400 178 388  curveto
169 370 161 349 155 323  curveto
148 297 145 265 145 227  curveto
145 215 145 203 146 189  curveto
147 175 149 162 151 148  curveto
153 134 155 121 159 109  curveto
162 96 166 85 171 77  curveto
178 61 187 49 199 41  curveto
210 32 224 28 240 28  curveto
256 28 271 32 285 41  curveto
299 50 310 62 318 78  curveto
323 87 327 98 330 110  curveto
333 122 336 135 339 151  curveto
334 165 330 178 326 190  curveto
322 201 319 212 317 222  curveto
315 232 313 243 312 254  curveto
311 264 311 276 311 290  curveto
311 305 311 320 313 335  curveto
315 349 318 362 322 374  curveto
326 386 331 395 338 402  curveto
344 409 353 413 363 413  curveto
373 413 381 409 388 402  curveto
394 395 400 386 404 375  curveto
408 363 410 350 412 336  curveto
414 322 415 307 415 293  curveto
415 279 414 267 413 256  curveto
412 245 410 234 408 223  curveto
406 212 403 201 399 189  curveto
395 177 391 165 387 151  curveto
389 136 392 121 396 107  curveto
400 92 406 79 414 67  curveto
421 55 431 46 443 39  curveto
455 31 471 28 489 28  curveto
501 28 512 31 524 39  curveto
536 47 546 59 554 75  curveto
563 93 570 115 574 143  curveto
578 170 581 199 581 231  curveto
581 283 574 326 560 360  curveto
546 394 531 419 517 434  curveto
504 446 489 457 471 465  curveto
453 473 439 479 429 483  curveto
429 500 lineto
453 500 473 499 490 497  curveto
507 495 522 491 535 487  curveto
548 482 560 476 571 468  curveto
582 460 594 450 606 438  curveto
630 414 648 384 662 350  curveto
676 315 683 270 683 216  curveto
closepath
fill
		} def

	/x
		{
469 -35 moveto
469 -48 467 -63 464 -80  curveto
460 -96 455 -112 448 -126  curveto
430 -160 410 -185 386 -201  curveto
362 -217 337 -225 313 -225  curveto
309 -225 302 -224 293 -223  curveto
283 -222 274 -220 264 -216  curveto
254 -212 246 -207 239 -199  curveto
231 -191 228 -181 228 -168  curveto
228 -160 229 -153 232 -148  curveto
235 -143 239 -139 243 -136  curveto
247 -133 252 -131 257 -130  curveto
261 -129 265 -129 269 -129  curveto
273 -129 279 -129 287 -130  curveto
294 -131 302 -132 310 -133  curveto
318 -134 326 -135 334 -136  curveto
342 -137 350 -138 358 -138  curveto
370 -138 381 -135 391 -129  curveto
401 -123 408 -115 413 -106  curveto
417 -96 420 -85 420 -72  curveto
420 -64 419 -56 417 -48  curveto
415 -40 411 -32 406 -26  curveto
401 -19 394 -14 385 -10  curveto
375 -6 364 -4 350 -4  curveto
342 -4 328 -4 306 -5  curveto
284 -5 259 -6 231 -6  curveto
199 -6 171 -1 146 8  curveto
121 18 102 29 89 43  curveto
69 62 54 86 43 114  curveto
32 142 27 169 27 196  curveto
27 218 30 240 37 262  curveto
44 284 53 306 65 330  curveto
74 348 87 364 103 378  curveto
119 392 136 406 153 420  curveto
137 437 125 454 115 470  curveto
105 486 100 503 100 523  curveto
100 545 103 564 109 579  curveto
115 594 124 607 137 618  curveto
128 620 119 623 111 627  curveto
103 631 95 635 89 641  curveto
82 646 76 653 72 661  curveto
68 669 66 679 66 691  curveto
66 703 69 713 75 722  curveto
81 731 88 739 97 745  curveto
106 751 116 756 126 760  curveto
136 763 145 765 153 765  curveto
156 765 159 765 162 765  curveto
165 765 168 764 171 764  curveto
173 748 lineto
151 740 137 732 129 724  curveto
121 716 117 706 117 695  curveto
117 685 122 675 132 666  curveto
142 657 155 652 171 652  curveto
197 673 222 692 244 708  curveto
266 724 290 732 318 732  curveto
332 732 342 729 349 724  curveto
355 718 359 711 359 702  curveto
359 688 353 676 343 666  curveto
333 656 320 647 304 639  curveto
294 634 285 630 277 627  curveto
269 624 260 622 252 620  curveto
243 618 234 617 225 616  curveto
215 615 205 614 193 614  curveto
171 599 156 583 148 567  curveto
139 550 135 533 135 517  curveto
135 505 138 493 146 482  curveto
154 470 168 456 190 440  curveto
217 453 242 463 265 471  curveto
288 479 312 483 338 483  curveto
358 483 375 480 389 475  curveto
402 470 409 461 409 448  curveto
409 438 405 430 399 424  curveto
392 417 383 411 371 407  curveto
359 403 346 399 331 397  curveto
315 395 299 394 283 394  curveto
267 394 254 395 242 397  curveto
230 399 216 402 202 406  curveto
188 399 175 391 162 381  curveto
148 371 137 362 127 352  curveto
111 336 98 315 88 291  curveto
78 267 73 244 73 223  curveto
73 212 74 202 77 192  curveto
79 182 83 173 88 164  curveto
96 146 109 131 127 118  curveto
144 104 170 97 204 96  curveto
347 91 lineto
369 90 387 86 403 78  curveto
418 70 431 60 441 48  curveto
451 36 458 22 462 8  curveto
466 -6 469 -21 469 -35  curveto
closepath
fill
		} def

	/y
		{
701 470 moveto
687 467 676 464 668 462  curveto
659 459 652 456 647 453  curveto
642 450 638 447 635 444  curveto
632 440 630 436 628 432  curveto
622 422 619 404 619 380  curveto
619 355 617 324 613 286  curveto
611 274 610 260 608 245  curveto
606 230 604 215 601 200  curveto
598 185 595 170 591 156  curveto
587 141 582 128 577 118  curveto
560 84 536 56 505 32  curveto
473 8 434 -7 388 -17  curveto
388 -228 lineto
325 -228 lineto
325 -17 lineto
234 2 171 47 136 118  curveto
128 132 122 149 118 168  curveto
113 187 109 207 106 227  curveto
103 247 101 268 99 289  curveto
97 310 96 330 95 348  curveto
93 368 92 386 92 400  curveto
91 414 89 425 85 433  curveto
80 442 73 449 63 454  curveto
53 459 36 464 12 470  curveto
12 488 lineto
24 493 35 496 47 498  curveto
58 499 69 500 79 500  curveto
105 500 127 493 144 479  curveto
160 465 173 449 182 432  curveto
186 423 189 411 193 397  curveto
196 383 199 367 201 351  curveto
203 334 206 317 208 299  curveto
210 281 212 265 214 250  curveto
218 210 222 177 224 151  curveto
226 125 230 105 238 90  curveto
245 74 256 60 271 48  curveto
285 36 303 27 325 22  curveto
325 487 lineto
388 487 lineto
388 22 lineto
411 28 429 37 443 49  curveto
456 61 466 74 474 88  curveto
482 104 487 123 489 147  curveto
491 171 494 201 498 237  curveto
500 253 502 270 504 289  curveto
506 308 508 327 511 345  curveto
513 363 516 380 520 396  curveto
523 411 527 423 531 432  curveto
541 451 554 467 572 480  curveto
589 493 610 500 634 500  curveto
644 500 654 499 666 498  curveto
677 496 689 493 701 488  curveto
701 470 lineto
701 470 lineto
closepath
fill
		} def

	/z
		{
468 -51 moveto
468 -64 465 -80 461 -100  curveto
456 -120 447 -139 435 -157  curveto
422 -175 405 -191 384 -205  curveto
362 -218 335 -225 303 -225  curveto
293 -225 284 -224 276 -223  curveto
267 -221 259 -219 252 -216  curveto
242 -211 234 -205 227 -197  curveto
220 -189 217 -181 217 -173  curveto
217 -161 221 -150 230 -140  curveto
239 -130 252 -125 270 -125  curveto
276 -125 283 -126 291 -128  curveto
299 -130 308 -132 317 -134  curveto
325 -136 333 -138 341 -140  curveto
349 -142 355 -143 360 -143  curveto
380 -143 396 -134 408 -118  curveto
419 -102 425 -84 425 -66  curveto
425 -50 419 -35 407 -23  curveto
395 -10 376 -4 351 -4  curveto
339 -4 325 -5 308 -7  curveto
291 -9 270 -11 245 -11  curveto
226 -11 208 -7 191 -1  curveto
174 5 159 13 145 23  curveto
131 33 119 43 109 54  curveto
99 65 92 75 88 84  curveto
83 93 79 104 75 116  curveto
71 128 68 141 66 154  curveto
64 166 62 178 61 190  curveto
60 202 60 212 60 220  curveto
60 240 60 258 62 275  curveto
63 291 65 307 68 322  curveto
71 337 75 352 79 366  curveto
83 380 88 395 94 411  curveto
100 430 107 447 114 462  curveto
120 476 128 490 136 503  curveto
144 516 152 529 161 543  curveto
170 556 181 571 193 587  curveto
185 589 176 592 165 596  curveto
154 600 145 603 138 607  curveto
126 612 117 619 111 629  curveto
105 639 102 650 102 664  curveto
102 676 104 687 110 698  curveto
116 708 124 718 134 727  curveto
144 735 155 742 169 747  curveto
182 752 196 755 212 756  curveto
214 738 lineto
194 730 181 720 173 709  curveto
165 698 161 687 161 676  curveto
161 660 165 647 175 636  curveto
185 625 199 618 219 614  curveto
232 626 244 638 255 648  curveto
265 658 276 668 286 676  curveto
296 684 307 691 317 698  curveto
327 704 339 711 352 717  curveto
362 722 370 725 376 727  curveto
382 729 388 730 395 730  curveto
404 730 413 727 421 722  curveto
429 717 433 709 433 697  curveto
433 683 425 669 411 654  curveto
396 638 379 626 359 616  curveto
351 612 344 608 338 605  curveto
331 602 324 599 316 597  curveto
308 595 299 593 289 591  curveto
279 589 268 587 254 586  curveto
238 572 221 552 203 528  curveto
185 504 169 478 155 450  curveto
141 422 129 391 121 359  curveto
112 327 108 292 108 254  curveto
108 233 108 216 110 203  curveto
112 190 116 178 122 166  curveto
133 142 148 124 168 112  curveto
187 100 206 94 226 94  curveto
234 94 244 94 258 95  curveto
272 95 285 96 299 96  curveto
329 96 354 92 376 84  curveto
398 76 416 65 431 51  curveto
445 37 454 20 460 2  curveto
465 -15 468 -33 468 -51  curveto
closepath
fill
		} def

	/braceleft
		{
279 -183 moveto
249 -183 226 -176 210 -163  curveto
194 -150 186 -124 186 -84  curveto
186 121 lineto
186 143 182 161 175 175  curveto
168 188 159 198 147 206  curveto
135 213 122 218 107 222  curveto
91 226 75 229 58 232  curveto
58 258 lineto
76 260 92 263 108 267  curveto
124 271 137 276 149 284  curveto
160 292 169 302 176 316  curveto
182 329 186 347 186 370  curveto
186 571 lineto
186 591 188 608 192 622  curveto
196 635 202 645 210 653  curveto
218 661 228 666 240 669  curveto
252 671 266 673 282 673  curveto
397 673 lineto
397 648 lineto
346 648 lineto
320 648 300 643 284 633  curveto
268 623 261 603 261 574  curveto
261 370 lineto
261 344 254 324 242 309  curveto
229 294 214 282 198 273  curveto
182 264 165 257 149 253  curveto
133 249 121 245 114 242  curveto
124 239 137 236 154 232  curveto
170 228 186 221 202 213  curveto
218 205 231 193 243 179  curveto
255 164 261 144 261 120  curveto
261 -83 lineto
261 -112 268 -132 284 -142  curveto
299 -152 319 -158 345 -158  curveto
397 -158 lineto
397 -183 lineto
279 -183 lineto
closepath
fill
		} def

	/bar
		{
65 -177 moveto
65 673 lineto
135 673 lineto
135 -177 lineto
65 -177 lineto
closepath
fill
		} def

	/braceright
		{
418 232 moveto
400 229 384 226 369 222  curveto
353 218 340 213 328 206  curveto
316 198 307 188 300 175  curveto
293 161 290 143 290 121  curveto
290 -84 lineto
290 -124 282 -150 266 -163  curveto
250 -176 227 -183 197 -183  curveto
79 -183 lineto
79 -158 lineto
131 -158 lineto
156 -158 176 -152 192 -142  curveto
207 -132 215 -112 215 -83  curveto
215 120 lineto
215 144 220 164 232 179  curveto
244 193 257 205 273 213  curveto
289 221 305 228 322 232  curveto
338 236 352 239 362 242  curveto
354 245 342 249 326 253  curveto
310 257 293 264 277 273  curveto
261 282 246 294 234 309  curveto
221 324 215 344 215 370  curveto
215 574 lineto
215 603 207 623 191 633  curveto
175 643 155 648 130 648  curveto
79 648 lineto
79 673 lineto
194 673 lineto
210 673 224 671 236 669  curveto
248 666 258 661 266 653  curveto
274 645 280 635 284 622  curveto
288 608 290 591 290 571  curveto
290 370 lineto
290 347 293 329 300 316  curveto
306 302 315 292 327 284  curveto
338 276 351 271 367 267  curveto
383 263 400 260 418 258  curveto
418 232 lineto
418 232 lineto
closepath
fill
		} def

	/asciitilde
		{
529 283 moveto
516 259 498 241 475 227  curveto
452 213 426 206 396 206  curveto
374 206 353 208 333 214  curveto
313 219 293 225 274 232  curveto
254 238 235 244 217 250  curveto
198 255 179 258 160 258  curveto
148 258 137 256 128 254  curveto
119 252 111 248 103 244  curveto
95 240 88 234 81 227  curveto
74 220 66 212 58 203  curveto
17 228 lineto
29 246 41 260 54 270  curveto
67 280 80 288 93 294  curveto
106 299 119 302 132 304  curveto
144 305 156 306 167 306  curveto
187 306 207 303 225 297  curveto
243 291 262 285 280 279  curveto
298 273 315 267 333 261  curveto
351 255 370 253 390 253  curveto
412 253 431 257 447 266  curveto
463 275 478 289 492 307  curveto
529 283 lineto
529 283 lineto
closepath
fill
		} def

	/exclamdown
		{
610 587 moveto
610 572 608 559 604 549  curveto
600 538 594 529 588 522  curveto
581 515 574 510 566 506  curveto
558 502 551 501 545 501  curveto
537 501 531 502 525 506  curveto
519 510 514 514 510 519  curveto
506 524 502 530 500 536  curveto
498 542 497 547 497 552  curveto
497 562 498 570 502 576  curveto
506 582 510 587 515 592  curveto
519 596 523 601 527 605  curveto
531 609 533 615 533 622  curveto
533 630 528 635 518 639  curveto
508 642 499 644 490 644  curveto
475 644 458 636 438 622  curveto
418 607 401 586 387 558  curveto
379 543 373 528 368 512  curveto
362 496 358 478 354 458  curveto
350 438 348 415 346 391  curveto
344 366 344 338 344 307  curveto
344 297 344 282 344 264  curveto
344 245 344 225 344 203  curveto
344 181 345 160 345 139  curveto
345 117 345 99 345 85  curveto
345 59 351 41 365 32  curveto
378 22 401 18 435 18  curveto
435 0 lineto
151 0 lineto
151 18 lineto
185 18 209 23 222 33  curveto
234 43 241 60 241 84  curveto
241 105 241 125 241 143  curveto
241 161 240 178 240 196  curveto
240 214 240 232 240 251  curveto
240 269 240 290 240 313  curveto
240 325 239 340 238 359  curveto
236 378 234 398 231 419  curveto
228 439 224 460 219 480  curveto
214 500 208 517 201 532  curveto
190 553 177 572 161 589  curveto
145 606 124 619 99 627  curveto
15 654 lineto
3 658 -2 662 -2 667  curveto
-2 667 -1 669 -1 671  curveto
0 673 1 674 5 676  curveto
8 678 13 679 21 681  curveto
29 682 39 683 53 683  curveto
88 683 122 676 155 663  curveto
187 649 218 628 247 600  curveto
260 586 272 567 284 541  curveto
295 515 306 481 318 438  curveto
322 455 327 474 332 494  curveto
336 514 344 536 356 560  curveto
364 576 373 591 383 606  curveto
393 621 404 634 418 646  curveto
431 658 446 667 463 674  curveto
479 681 499 685 521 685  curveto
532 685 543 682 553 676  curveto
563 670 574 662 584 652  curveto
592 644 598 634 603 624  curveto
607 613 610 601 610 587  curveto
closepath
fill
		} def

	/cent
		{
229 679 moveto
229 675 226 671 222 665  curveto
67 469 lineto
65 467 63 464 60 462  curveto
57 459 54 458 51 458  curveto
45 458 39 459 34 463  curveto
29 467 27 471 27 477  curveto
27 481 29 487 33 495  curveto
134 720 lineto
136 724 138 727 142 730  curveto
145 733 152 735 164 735  curveto
172 735 180 733 188 731  curveto
196 729 203 725 209 719  curveto
213 714 217 708 222 700  curveto
226 692 229 685 229 679  curveto
closepath
fill
		} def

	/sterling
		{
29 0 moveto
29 55 lineto
526 55 lineto
526 0 lineto
29 0 lineto
closepath
29 347 moveto
29 409 lineto
526 639 lineto
526 577 lineto
93 378 lineto
526 179 lineto
526 117 lineto
29 347 lineto
closepath
fill
		} def

	/fraction
		{
fill
		} def

	/yen
		{
324 264 moveto
296 287 270 307 244 325  curveto
218 343 192 352 166 352  curveto
151 352 138 349 127 343  curveto
115 337 106 329 99 320  curveto
91 310 86 300 82 290  curveto
78 279 76 269 76 261  curveto
76 235 85 214 103 198  curveto
121 181 144 173 170 173  curveto
181 173 192 174 202 177  curveto
212 179 223 184 237 191  curveto
252 198 267 209 281 223  curveto
295 237 310 250 324 264  curveto
closepath
638 261 moveto
638 271 635 282 631 293  curveto
627 303 621 313 613 322  curveto
605 330 596 337 585 343  curveto
574 349 562 352 550 352  curveto
534 352 519 349 505 343  curveto
491 337 477 330 464 322  curveto
451 313 438 303 426 293  curveto
414 283 402 273 390 264  curveto
407 246 423 231 437 219  curveto
451 206 466 196 480 189  curveto
489 184 499 180 510 177  curveto
520 174 531 173 543 173  curveto
569 173 591 181 610 198  curveto
628 214 638 235 638 261  curveto
closepath
688 267 moveto
688 248 684 230 677 213  curveto
670 195 661 180 649 167  curveto
637 154 622 144 606 136  curveto
590 128 572 125 554 125  curveto
540 125 525 126 511 129  curveto
496 132 481 138 465 146  curveto
449 154 432 164 414 178  curveto
396 192 377 209 357 231  curveto
344 217 333 206 323 197  curveto
313 188 303 180 295 174  curveto
286 168 278 162 270 158  curveto
262 153 255 149 247 145  curveto
235 139 221 134 205 130  curveto
189 126 174 124 161 124  curveto
141 124 123 128 107 136  curveto
91 144 77 154 65 168  curveto
53 181 43 196 36 213  curveto
29 229 26 247 26 265  curveto
26 285 29 303 37 320  curveto
45 336 55 351 68 364  curveto
80 376 95 386 112 393  curveto
129 400 147 404 166 404  curveto
194 404 222 395 252 379  curveto
282 363 317 335 357 297  curveto
369 307 379 317 389 326  curveto
399 334 408 342 417 349  curveto
426 356 435 362 444 368  curveto
452 374 462 379 473 385  curveto
498 397 523 404 548 404  curveto
568 404 586 400 604 392  curveto
621 384 636 374 648 362  curveto
660 349 670 334 677 318  curveto
684 302 688 285 688 267  curveto
closepath
fill
		} def

	/florin
		{
fill
		} def

	/section
		{
660 179 moveto
660 141 650 112 632 91  curveto
613 69 588 59 556 59  curveto
537 59 519 63 503 71  curveto
487 79 473 90 463 102  curveto
453 112 444 121 436 130  curveto
428 138 420 143 414 143  curveto
408 143 403 138 401 129  curveto
399 120 398 108 398 93  curveto
398 79 398 68 399 58  curveto
400 48 402 38 405 29  curveto
408 20 412 11 417 3  curveto
422 -5 429 -15 437 -26  curveto
309 -26 lineto
317 -15 323 -5 328 3  curveto
333 11 337 20 340 29  curveto
343 38 345 48 346 58  curveto
347 68 348 79 348 93  curveto
348 106 347 117 345 127  curveto
343 137 340 142 334 142  curveto
328 142 320 137 310 129  curveto
300 120 292 111 285 103  curveto
275 91 262 81 246 72  curveto
229 63 210 59 190 59  curveto
160 59 135 69 115 89  curveto
95 109 86 139 86 177  curveto
86 195 88 215 94 235  curveto
99 255 107 270 118 281  curveto
126 289 136 296 149 302  curveto
161 308 176 311 194 311  curveto
210 311 224 308 236 304  curveto
248 299 259 294 269 288  curveto
279 282 288 276 296 272  curveto
304 267 313 265 321 265  curveto
326 265 330 266 333 268  curveto
335 270 337 274 337 282  curveto
337 288 335 293 331 297  curveto
327 301 323 304 318 308  curveto
312 312 307 315 301 319  curveto
295 323 289 327 284 333  curveto
274 343 264 356 256 372  curveto
248 388 244 404 244 422  curveto
244 434 246 447 251 461  curveto
256 474 264 486 275 497  curveto
285 507 299 516 315 523  curveto
331 529 351 533 374 533  curveto
396 533 416 529 432 522  curveto
448 515 462 506 472 495  curveto
482 484 490 472 495 459  curveto
499 446 502 434 502 423  curveto
502 413 500 403 498 394  curveto
495 385 492 377 488 369  curveto
484 361 479 355 475 349  curveto
471 343 467 338 464 335  curveto
457 328 450 322 444 318  curveto
437 314 431 310 426 307  curveto
421 303 417 300 414 296  curveto
410 292 409 286 409 280  curveto
409 270 414 265 425 265  curveto
433 265 441 267 450 272  curveto
458 276 467 282 477 288  curveto
487 294 498 299 510 304  curveto
522 308 535 311 551 311  curveto
567 311 582 308 595 302  curveto
608 296 619 289 628 281  curveto
638 270 646 255 652 235  curveto
657 215 660 196 660 179  curveto
closepath
fill
		} def

	/currency
		{
-124 -12 moveto
-180 -12 lineto
284 677 lineto
340 677 lineto
-124 -12 lineto
closepath
fill
		} def

	/quotesingle
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/quotedblleft
		{
fill
		} def

	/guillemotleft
		{
1024 248 moveto
984 212 944 174 904 132  curveto
864 90 821 41 775 -15  curveto
738 17 lineto
756 43 773 66 789 86  curveto
805 106 820 125 834 141  curveto
848 157 861 172 873 185  curveto
885 198 897 210 909 222  curveto
139 222 lineto
161 200 179 180 195 163  curveto
210 146 224 130 236 115  curveto
248 99 260 84 272 68  curveto
283 52 296 35 310 17  curveto
273 -15 lineto
241 23 204 64 164 110  curveto
124 156 77 202 24 248  curveto
56 276 84 303 108 327  curveto
132 351 153 373 172 394  curveto
191 415 209 435 225 454  curveto
241 473 257 492 273 511  curveto
310 479 lineto
296 458 282 440 270 424  curveto
258 408 245 392 233 377  curveto
220 361 206 345 191 329  curveto
176 313 159 294 139 274  curveto
909 274 lineto
897 286 885 299 873 311  curveto
861 323 848 337 834 353  curveto
820 369 806 387 790 407  curveto
774 427 757 451 738 479  curveto
775 511 lineto
795 486 815 462 834 440  curveto
853 418 872 396 892 375  curveto
912 354 932 333 954 312  curveto
975 291 998 270 1024 248  curveto
closepath
fill
		} def

	/guilsinglleft
		{
fill
		} def

	/guilsinglright
		{
fill
		} def

	/fi
		{
fill
		} def

	/fl
		{
fill
		} def

	/endash
		{
fill
		} def

	/dagger
		{
fill
		} def

	/daggerdbl
		{
fill
		} def

	/periodcentered
		{
411 293 moveto
411 267 406 244 397 222  curveto
387 200 374 181 358 165  curveto
342 149 323 136 301 127  curveto
279 117 255 113 231 113  curveto
205 113 182 117 160 127  curveto
138 136 119 149 103 165  curveto
87 181 74 200 65 222  curveto
55 244 51 267 51 293  curveto
51 317 55 341 65 363  curveto
74 385 87 404 103 420  curveto
119 436 138 449 160 459  curveto
182 468 205 473 231 473  curveto
255 473 279 468 301 459  curveto
323 449 342 436 358 420  curveto
374 404 387 385 397 363  curveto
406 341 411 317 411 293  curveto
closepath
fill
		} def

	/paragraph
		{
366 299 moveto
352 316 338 331 322 344  curveto
306 356 285 363 261 363  curveto
233 363 210 354 190 338  curveto
170 322 153 300 140 273  curveto
128 249 121 227 117 206  curveto
113 185 112 164 112 144  curveto
112 127 113 112 115 98  curveto
117 84 121 71 127 60  curveto
134 44 144 32 158 23  curveto
171 13 186 9 204 9  curveto
221 9 240 15 261 29  curveto
281 42 299 63 313 91  curveto
325 115 335 145 344 181  curveto
353 217 360 256 366 299  curveto
closepath
462 395 moveto
462 379 461 359 459 336  curveto
457 313 453 289 448 263  curveto
443 237 437 212 429 186  curveto
421 160 412 136 402 114  curveto
393 96 385 81 377 69  curveto
369 56 360 45 350 35  curveto
335 20 316 7 292 -4  curveto
268 -15 243 -21 215 -21  curveto
196 -21 178 -18 161 -13  curveto
144 -7 128 0 114 9  curveto
99 18 86 29 75 41  curveto
63 53 54 67 48 81  curveto
33 110 26 141 26 174  curveto
26 204 32 235 44 267  curveto
56 298 74 325 98 349  curveto
114 365 132 378 151 388  curveto
169 397 192 402 219 402  curveto
239 402 257 399 273 395  curveto
288 390 301 384 313 377  curveto
325 370 335 363 345 355  curveto
355 347 364 340 374 334  curveto
377 351 380 370 382 391  curveto
384 412 385 432 385 451  curveto
385 462 384 475 382 491  curveto
380 506 377 521 374 537  curveto
370 553 366 567 362 581  curveto
358 595 354 606 350 615  curveto
344 626 336 638 325 652  curveto
313 666 299 677 281 687  curveto
271 691 260 695 248 697  curveto
236 699 223 700 210 700  curveto
188 700 170 696 154 689  curveto
138 681 122 674 104 667  curveto
65 717 lineto
97 730 124 738 147 741  curveto
169 743 186 745 196 745  curveto
239 745 280 733 320 709  curveto
360 685 394 646 422 591  curveto
428 579 433 566 438 550  curveto
442 534 446 518 450 501  curveto
454 483 457 465 459 447  curveto
461 429 462 411 462 395  curveto
closepath
fill
		} def

	/bullet
		{
fill
		} def

	/quotesinglbase
		{
fill
		} def

	/quotedblbase
		{
fill
		} def

	/quotedblright
		{
fill
		} def

	/guillemotright
		{
527 219 moveto
519 205 509 193 498 183  curveto
486 173 474 164 462 158  curveto
449 152 436 147 424 144  curveto
411 141 399 140 387 140  curveto
373 140 359 142 345 146  curveto
206 186 lineto
195 189 187 191 181 192  curveto
175 193 166 194 156 194  curveto
131 194 112 189 98 179  curveto
84 169 71 154 57 135  curveto
14 162 lineto
32 185 52 204 76 219  curveto
99 233 127 241 160 241  curveto
168 241 177 240 187 238  curveto
197 236 205 235 213 233  curveto
356 193 lineto
362 191 366 190 370 190  curveto
373 189 378 189 385 189  curveto
405 189 425 193 444 203  curveto
463 213 478 226 490 243  curveto
527 219 lineto
527 219 lineto
closepath
527 370 moveto
519 356 509 344 498 334  curveto
486 324 474 315 462 309  curveto
449 303 436 298 424 295  curveto
411 292 399 291 387 291  curveto
373 291 359 293 345 297  curveto
206 337 lineto
195 340 187 342 181 343  curveto
175 344 166 345 156 345  curveto
131 345 112 340 98 330  curveto
84 320 71 305 57 286  curveto
14 313 lineto
32 336 52 355 76 370  curveto
99 384 127 392 160 392  curveto
168 392 177 391 187 389  curveto
197 387 205 386 213 384  curveto
356 344 lineto
362 342 366 341 370 341  curveto
373 340 378 340 385 340  curveto
405 340 425 344 444 354  curveto
463 364 478 377 490 394  curveto
527 370 lineto
527 370 lineto
closepath
fill
		} def

	/ellipsis
		{
fill
		} def

	/perthousand
		{
fill
		} def

	/questiondown
		{
181 68 moveto
181 -16 lineto
15 96 lineto
181 207 lineto
181 123 lineto
547 123 lineto
547 629 lineto
602 629 lineto
602 68 lineto
181 68 lineto
closepath
fill
		} def

	/grave
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/acute
		{
fill
		} def

	/circumflex
		{
fill
		} def

	/tilde
		{
fill
		} def

	/macron
		{
571 229 moveto
523 189 476 147 432 104  curveto
388 60 346 18 308 -22  curveto
267 20 224 63 180 107  curveto
135 150 90 191 45 229  curveto
80 264 lineto
92 253 108 240 126 226  curveto
144 211 163 196 182 180  curveto
201 164 219 148 237 133  curveto
254 117 268 104 280 93  curveto
280 888 lineto
336 888 lineto
336 93 lineto
346 104 360 117 378 133  curveto
395 148 413 164 432 180  curveto
451 196 470 211 488 226  curveto
506 240 522 253 536 264  curveto
571 229 lineto
571 229 lineto
closepath
fill
		} def

	/breve
		{
fill
		} def

	/dotaccent
		{
fill
		} def

	/dieresis
		{
374 -36 moveto
142 257 lineto
374 550 lineto
600 257 lineto
374 -36 lineto
closepath
fill
		} def

	/ring
		{
fill
		} def

	/cedilla
		{
324 127 moveto
324 111 318 98 307 87  curveto
296 76 283 71 268 71  curveto
252 71 239 76 228 87  curveto
217 98 212 111 212 127  curveto
212 142 217 155 228 166  curveto
239 177 252 183 268 183  curveto
283 183 296 177 307 166  curveto
318 155 324 142 324 127  curveto
closepath
10 236 moveto
10 291 lineto
536 291 lineto
536 236 lineto
10 236 lineto
closepath
324 400 moveto
324 384 318 371 307 360  curveto
296 349 283 344 268 344  curveto
252 344 239 349 228 360  curveto
217 371 212 384 212 400  curveto
212 415 217 428 228 439  curveto
239 450 252 456 268 456  curveto
283 456 296 450 307 439  curveto
318 428 324 415 324 400  curveto
closepath
fill
		} def

	/hungarumlaut
		{
fill
		} def

	/ogonek
		{
fill
		} def

	/caron
		{
fill
		} def

	/emdash
		{
fill
		} def

	/AE
		{
726 350 moveto
726 388 719 425 706 460  curveto
692 494 674 526 650 554  curveto
212 112 lineto
239 88 270 70 304 57  curveto
338 44 374 38 414 38  curveto
456 38 497 46 535 62  curveto
573 78 606 101 634 129  curveto
662 157 685 190 701 228  curveto
717 266 726 306 726 350  curveto
closepath
614 589 moveto
587 611 556 629 522 642  curveto
488 655 452 662 414 662  curveto
370 662 330 653 292 637  curveto
254 621 221 598 193 570  curveto
165 542 142 509 126 471  curveto
110 433 102 392 102 350  curveto
102 312 108 276 121 242  curveto
133 208 151 178 175 150  curveto
614 589 lineto
614 589 lineto
closepath
781 350 moveto
781 299 771 251 752 207  curveto
732 162 706 123 673 90  curveto
640 57 601 31 557 12  curveto
512 -7 464 -17 414 -17  curveto
367 -17 323 -9 283 7  curveto
242 23 205 45 173 74  curveto
76 -24 lineto
39 13 lineto
136 111 lineto
108 143 86 180 70 220  curveto
54 260 47 304 47 350  curveto
47 400 56 448 76 493  curveto
95 537 121 576 155 609  curveto
188 642 227 668 271 688  curveto
315 707 363 717 414 717  curveto
464 717 508 708 548 692  curveto
587 675 622 654 654 628  curveto
744 719 lineto
780 684 lineto
689 593 lineto
717 561 740 524 756 482  curveto
772 440 781 396 781 350  curveto
closepath
fill
		} def

	/ordfeminine
		{
629 134 moveto
629 121 627 108 623 95  curveto
619 81 614 69 606 59  curveto
598 48 588 39 576 32  curveto
564 25 549 22 533 22  curveto
513 22 497 27 486 39  curveto
474 50 465 63 458 77  curveto
451 91 445 103 441 115  curveto
436 126 430 132 422 132  curveto
416 132 410 127 405 118  curveto
400 109 398 95 398 76  curveto
398 57 400 38 406 20  curveto
411 1 421 -17 437 -36  curveto
305 -36 lineto
320 -17 330 1 336 20  curveto
341 38 344 57 344 76  curveto
344 95 341 109 336 118  curveto
331 127 326 132 320 132  curveto
312 132 305 126 301 115  curveto
296 103 290 91 283 77  curveto
276 63 267 50 256 39  curveto
244 27 229 22 209 22  curveto
192 22 178 25 166 32  curveto
154 39 144 48 136 59  curveto
128 69 122 81 118 95  curveto
114 108 113 121 113 134  curveto
113 147 114 160 118 174  curveto
122 188 126 200 132 212  curveto
137 222 147 238 163 258  curveto
178 278 197 302 219 331  curveto
241 359 265 392 291 428  curveto
317 464 343 504 371 548  curveto
397 504 424 464 450 428  curveto
476 392 501 359 523 331  curveto
545 302 563 278 579 258  curveto
594 238 604 222 610 212  curveto
615 200 619 188 623 174  curveto
627 160 629 147 629 134  curveto
closepath
fill
		} def

	/Lslash
		{
fill
		} def

	/Oslash
		{
625 0 moveto
625 233 lineto
15 233 lineto
15 288 lineto
680 288 lineto
680 0 lineto
625 0 lineto
closepath
fill
		} def

	/OE
		{
fill
		} def

	/ordmasculine
		{
14 82 moveto
14 137 lineto
538 137 lineto
538 82 lineto
14 82 lineto
closepath
14 235 moveto
14 290 lineto
538 290 lineto
538 235 lineto
14 235 lineto
closepath
14 388 moveto
14 443 lineto
538 443 lineto
538 388 lineto
14 388 lineto
closepath
fill
		} def

	/ae
		{
436 916 moveto
416 904 397 890 378 874  curveto
358 858 341 843 325 827  curveto
309 811 293 792 277 771  curveto
261 750 245 727 231 703  curveto
216 678 202 652 189 625  curveto
176 597 165 569 156 541  curveto
145 509 136 475 128 440  curveto
120 405 113 370 108 335  curveto
102 300 98 266 96 232  curveto
93 198 92 166 92 136  curveto
92 -293 lineto
40 -293 lineto
40 134 lineto
40 192 42 245 47 294  curveto
52 343 59 388 68 430  curveto
77 471 88 509 100 544  curveto
112 578 126 611 142 642  curveto
160 678 178 710 198 738  curveto
218 766 239 792 262 815  curveto
284 837 309 858 336 876  curveto
362 894 391 910 423 926  curveto
436 916 lineto
436 916 lineto
closepath
fill
		} def

	/dotlessi
		{
fill
		} def

	/lslash
		{
fill
		} def

	/oslash
		{
450 503 moveto
450 441 447 386 442 336  curveto
437 286 430 240 421 199  curveto
412 157 401 120 389 86  curveto
376 52 362 20 348 -9  curveto
326 -52 304 -89 282 -119  curveto
259 -149 236 -174 212 -196  curveto
188 -218 164 -236 140 -251  curveto
116 -266 91 -280 67 -293  curveto
54 -283 lineto
72 -271 91 -257 111 -242  curveto
131 -226 151 -208 171 -187  curveto
191 -166 210 -142 230 -114  curveto
250 -86 269 -54 288 -17  curveto
306 21 321 56 333 90  curveto
344 124 354 161 364 203  curveto
368 225 373 248 377 273  curveto
381 298 385 323 388 349  curveto
391 374 393 399 395 424  curveto
397 448 398 472 398 494  curveto
398 926 lineto
450 926 lineto
450 503 lineto
450 503 lineto
closepath
fill
		} def

	/oe
		{
fill
		} def

	/germandbls
		{
572 230 moveto
540 205 513 182 489 161  curveto
465 139 442 119 422 99  curveto
402 79 382 60 364 41  curveto
346 21 327 1 308 -19  curveto
268 23 228 65 187 105  curveto
146 145 98 186 44 230  curveto
77 271 lineto
175 194 lineto
175 890 lineto
228 890 lineto
228 146 lineto
308 65 lineto
388 146 lineto
388 890 lineto
441 890 lineto
441 194 lineto
539 271 lineto
572 230 lineto
572 230 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/MaplePi exch definefont pop
/MaplePi findfont 20.0 scalefont setfont
(w) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
46 345
-5.0 -5.0 translate
48.0 364.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 95 340 OPL
95 345
-5.0 -5.0 translate
96.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1) show
Q
5.0 5.0 translate
Q
q
1 143 340 OPL
143 345
-5.0 -5.0 translate
145.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 192 340 OPL
192 345
-5.0 -5.0 translate
193.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
5.0 5.0 translate
Q
q
1 240 340 OPL
240 345
-5.0 -5.0 translate
242.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 289 340 OPL
289 345
-5.0 -5.0 translate
290.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(5) show
Q
5.0 5.0 translate
Q
q
1 337 340 OPL
337 345
-5.0 -5.0 translate
339.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
q
1 386 340 OPL
386 345
-5.0 -5.0 translate
387.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(7) show
Q
5.0 5.0 translate
Q
Q
q
1 46 63 OPL
43 63
1 46 174 OPL
43 174
1 46 285 OPL
43 285
1 46 340 OPL
46 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
0 163 16 23 rc
4.0 182.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(z) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
40 340
-5.0 -5.0 translate
35.0 350.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 46 229 OPL
40 229
-5.0 -5.0 translate
26.0 239.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 46 119 OPL
40 119
-5.0 -5.0 translate
26.0 128.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 46 8 OPL
40 8
-5.0 -5.0 translate
26.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 815 1909 a
  {
 815 1909 a Fi(z)815
1909 y
  } 0/Place PSfrag
 815 1909 a 794 2126 a
  {
 794 2126 a Fi(!)794 2126
y
  } 1/Place PSfrag
 794 2126 a 0 2426 a Fu(Figure)38 b(11:)54 b(The)39
b(b)s(oundary)g(of)e(con)m(v)m(ergence)k(of)d(the)h(generating)f
(function)h(as)f(a)g(function)g(of)g Fr(!)j Fu(for)0
2642 y(the)c(three)g(dimensional)i(mo)s(del)d(when)i(the)f(force)g(is)g
(applied)h(in)f(the)g Fr(x)p Fu(-direction.)56 b(The)38
b(rectangular)0 2859 y(h)m(yp)s(erb)s(ola)26 b(is)g(indep)s(enden)m(t)i
(of)d(the)h(v)-5 b(alue)26 b(of)f Fr(h)1755 2874 y Fp(x)1799
2859 y Fu(.)41 b(The)27 b(three)f(curv)m(es)i(with)e(p)s(oin)m(ts)g
(mark)m(ed)h(corresp)s(ond)0 3076 y(to)32 b Fr(h)175
3091 y Fp(x)247 3076 y Fu(=)27 b(1)33 b(\(top)f(curv)m(e\),)i
Fr(h)1024 3091 y Fp(x)1096 3076 y Fu(=)28 b(1)p Fr(:)p
Fu(2)k(and)g Fr(h)1602 3091 y Fp(x)1674 3076 y Fu(=)c(1)p
Fr(:)p Fu(5.)0 3366 y(the)35 b(transition)g(p)s(oin)m(t.)49
b(This)35 b(seems)i(to)d(indicate)h(that,)g(again,)f(the)h(transition)g
(is)g(una\013ected)g(b)m(y)h(the)0 3487 y(force.)78 b(This)45
b(is)f(more)h(di\016cult)g(to)e(understand)i(ph)m(ysically)i(as)d(the)g
(force)h(m)m(ust)g(c)m(hange)f(the)h(high)0 3607 y(temp)s(erature)36
b(state)g(of)f(the)h(p)s(olymer,)h(unlik)m(e)g(a)e(force)h(applied)g
(only)g(in)g(the)g(preferred)g(direction.)53 b(It)0 3728
y(w)m(ould)34 b(therefore)f(b)s(e)f(in)m(teresting)j(to)d(analyse)i
(this)f(full)f(mo)s(del)h(further.)0 3948 y Fa(Ac)m(kno)m(wledgemen)m
(ts:)62 b Fu(The)42 b(authors)g(w)m(ould)g(lik)m(e)h(to)e(thank)g(the)h
(Australian)g(Researc)m(h)h(Council)0 4068 y(and)33 b(NSER)m(C)g(of)g
(Canada)f(for)g(\014nancial)h(supp)s(ort.)0 4547 y Ft(References)0
4826 y Fu(Bemis)h(J)e(E,)h(Akhremitc)m(hev)j(B)d(B)f(and)h(W)-8
b(alk)m(er)33 b(G)g(C)g(1999)e Fs(L)-5 b(angmuir)32 b
Fa(15)h Fu(2799{2805)0 5006 y(Binder)h(P-M,)g(Ow)m(czarek)h(A)e(L,)g(V)
-8 b(eal)34 b(A)f(R)g(and)h(Y)-8 b(eomans)34 b(J)f(M)h(1990)e
Fs(J.)k(Phys.)47 b(A:)35 b(Math.)47 b(Gen.)f Fa(23)0
5127 y Fu(L975-L979)0 5307 y(Brak)33 b(R,)f(Guttmann)h(A)f(J)h(and)g
(Whittington)g(S)f(G)g(1992)g Fs(J.)j(Phys.)45 b(A:)35
b(Math.)45 b(Gen.)e Fa(25)33 b Fu(2437-2446)1901 5682
y(31)p eop end
%%Page: 32 32
TeXDict begin 32 31 bop 887 2126 a
 /PSfrag where{pop(ft)[[0(Bl)1 0]](bbb)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/3d_fyyT.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 9 July 2008 02:28:04 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
49.0 6.017493 342.0 338.982513 rc
48 51 64 OPL
51 64
52 65
52 65
53 65
53 65
54 66
54 66
55 66
55 66
55 66
56 66
56 67
57 67
57 67
58 67
58 68
59 68
59 68
59 68
60 68
60 68
61 69
61 69
62 69
62 69
63 69
63 70
64 70
64 70
64 70
65 70
65 71
66 71
66 71
67 71
67 71
68 72
68 72
69 72
69 72
70 72
70 73
71 73
71 73
72 73
72 73
72 74
73 74
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
1.0 0.0 0.0 RG
49.0 6.017493 342.0 338.982513 rc
43 73 74 OPL
76 75
90 81
105 89
107 90
113 94
124 100
127 102
141 113
145 116
158 127
160 129
167 136
174 142
176 144
187 156
193 162
199 169
210 182
211 183
212 184
222 196
227 203
232 210
240 220
243 223
244 225
253 236
262 249
262 250
263 251
272 263
279 273
281 277
284 281
290 290
296 298
299 304
303 309
308 317
313 324
317 331
321 337
326 344
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 389 344 OPL
389 346
1 344 344 OPL
344 346
1 299 344 OPL
299 346
1 253 344 OPL
253 346
1 208 344 OPL
208 346
1 163 344 OPL
163 346
1 118 344 OPL
118 346
1 73 344 OPL
73 346
1 50 344 OPL
389 344
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
200 367 38 23 rc
204.0 386.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(bbb) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 50 344 OPL
50 349
-5.0 -5.0 translate
52.0 368.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 95 344 OPL
95 349
-5.0 -5.0 translate
93.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 140 344 OPL
140 349
-5.0 -5.0 translate
138.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 186 344 OPL
186 349
-5.0 -5.0 translate
183.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
q
1 231 344 OPL
231 349
-5.0 -5.0 translate
228.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 276 344 OPL
276 349
-5.0 -5.0 translate
274.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.5) show
Q
5.0 5.0 translate
Q
q
1 321 344 OPL
321 349
-5.0 -5.0 translate
319.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 366 344 OPL
366 349
-5.0 -5.0 translate
364.0 368.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.7) show
Q
5.0 5.0 translate
Q
Q
q
1 50 92 OPL
47 92
1 50 36 OPL
47 36
1 50 148 OPL
47 148
1 50 260 OPL
47 260
1 50 204 OPL
47 204
1 50 316 OPL
47 316
1 50 344 OPL
50 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
0 165 20 23 rc
4.0 184.0 moveto
q 1 -1 scale
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(ft) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 50 344 OPL
44 344
-5.0 -5.0 translate
39.0 354.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 50 288 OPL
44 288
-5.0 -5.0 translate
30.0 298.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 50 232 OPL
44 232
-5.0 -5.0 translate
30.0 242.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.4) show
Q
5.0 5.0 translate
Q
q
1 50 176 OPL
44 176
-5.0 -5.0 translate
30.0 186.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.6) show
Q
5.0 5.0 translate
Q
q
1 50 120 OPL
44 120
-5.0 -5.0 translate
30.0 130.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.8) show
Q
5.0 5.0 translate
Q
q
1 50 64 OPL
44 64
-5.0 -5.0 translate
30.0 74.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.0) show
Q
5.0 5.0 translate
Q
q
1 50 8 OPL
44 8
-5.0 -5.0 translate
30.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1.2) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 782 1886 a
  {
 782 1886 a Ff(f)853
1843 y Fe(t)782 1886 y
  } 0/Place PSfrag
 782 1886 a 704 2103 a
  {
 704 2103
a Ff(\014)777 2059 y Fd(\000)p Fb(1)704 2103 y
  } 1/Place PSfrag
 704 2103
a 0 2426 a Fu(Figure)c(12:)41 b(The)29 b(temp)s(erature)g(dep)s
(endence)i(of)c(the)i(critical)g(force)f(for)g(the)g(three)h
(dimensional)h(mo)s(del)0 2642 y(in)j(the)g Fr(n)28 b
Fq(!)f(1)32 b Fu(limit)h(when)h(the)f(force)g(is)g(applied)g(in)g(the)g
Fr(xy)t Fu(-plane)f(at)g(45)2856 2606 y Fp(o)2927 2642
y Fu(to)g(the)h Fr(x)p Fu(-axis.)0 2927 y(Co)s(ok)m(e)g(I)g(R)f(and)h
(Williams)h(D)e(R)g(M)h(2003)f Fs(Eur)-5 b(ophys.)44
b(L)-5 b(ett.)44 b Fa(64)33 b Fu(267-273)0 3108 y(Grassb)s(erger)g(p)g
(and)f(Hsu)i(H-P)e(2002)g Fs(Phys.)45 b(R)-5 b(ev.)44
b(E)h Fa(65)32 b Fu(031807)0 3288 y(Gunari)g(N,)h(Balazs)g(A)g(C)g(and)
f(W)-8 b(alk)m(er)34 b(G)e(C)h(2007)f Fs(J.)i(A)n(m.)45
b(Chem.)f(So)-5 b(c.)42 b Fa(129)33 b Fu(10046-10047)0
3469 y(Halp)s(erin)g(A)g(and)f(Zh)m(ulina)h(E)g(B)g(1991)e
Fs(Eur)-5 b(ophys.)45 b(L)-5 b(ett.)44 b Fa(15)33 b Fu(417-421)0
3649 y(Haupt)g(B)f(J,)h(Senden)h(T)f(J)g(and)f(Sevic)m(k)j(E)e(M)g
(2002)f Fs(L)-5 b(angmuir)42 b Fa(18)33 b Fu(2174-2182)0
3829 y(Janse)c(v)-5 b(an)29 b(Rensburg)g(E)g(J)g(2000)f
Fs(Statistic)-5 b(al)31 b(Me)-5 b(chanics)30 b(of)h(Inter)-5
b(acting)30 b(Walks,)i(Polygons,)f(A)n(nimals)0 3950
y(and)j(V)-7 b(esicles)32 b Fu(\(Oxford:)43 b(Oxford)33
b(Univ)m(ersit)m(y)i(Press\))0 4130 y(Janse)e(v)-5 b(an)33
b(Rensburg)g(E)g(J)g(2003)f Fs(J.)i(Phys.)45 b(A:)35
b(Math.)46 b(Gen.)d Fa(36)32 b Fu(R11-R61)0 4311 y(Kumar)h(S)f(and)h
(Giri)f(D)g(2007)g Fs(Phys.)45 b(R)-5 b(ev.)44 b(L)-5
b(ett.)44 b Fa(98)33 b Fu(048101)0 4491 y(Ow)m(czarek)h(A)f(L)g(1993)e
Fs(J.)k(Phys.)45 b(A.:)g(Math.)g(Gen.)88 b Fa(26)33 b
Fu(L647{L653)0 4671 y(Ow)m(czarek)h(A)f(L)g(and)f(Prellb)s(erg)i(T)e
(2007)g Fs(J.)j(Stat.)45 b(Me)-5 b(ch.)43 b Fu(P11010)0
4852 y(Ow)m(czarek)34 b(A)f(L,)g(Prellb)s(erg)g(T)g(and)g(Brak)f(R)h
(1993)e Fs(J.)k(Stat.)45 b(Phys.)f Fa(72)32 b Fu(737-772)0
5032 y(Prellb)s(erg)h(T)g(1995)f Fs(J.)j(Phys.)45 b(A:)35
b(Math.)45 b(Gen.)e Fa(28)33 b Fu(1289-1304)0 5212 y(Prellb)s(erg)f(T,)
f(Ow)m(czarek)i(A)e(L,)g(Brak)g(R)f(and)h(Guttmann)g(A)g(J)g(1992)f
Fs(Phys.)44 b(R)-5 b(ev.)44 b(E.)p Fu(,)32 b Fa(48)p
Fu(,)f(2386{2396)0 5393 y(Rosa)h(A,)h(Marenduzzo)h(D,)e(Maritan)h(A)f
(and)h(Seno)g(F)f(2003)g Fs(Phys.)45 b(R)-5 b(ev.)44
b(E)h Fa(67)33 b Fu(141802)1901 5682 y(32)p eop end
%%Page: 33 33
TeXDict begin 33 32 bop 887 2126 a
 /PSfrag where{pop(z)[[0(Bl)1 0]](w)[[1(Bl)1 0]]2 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 887 2126 a @beginspecial
20 @llx 118 @lly 575 @urx 673 @ury 2551 @rwi @setspecial
%%BeginDocument: new_figs/3d_yy_zc.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Saturday, 5 July 2008 02:30:00 PM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
5.0 5.0 translate
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.0 w
[ 2.0 5.0 ] 0.0 d
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
18 206 4 OPL
214 19
216 24
219 30
226 42
230 47
236 57
245 70
246 71
248 74
256 84
259 87
266 96
272 102
276 106
285 115
286 116
289 119
296 125
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2.0 w
0.752941 0.752941 0.752941 RG
44.0 5.017699 344.994812 336.9823 rc
20 296 125 OPL
298 126
306 133
309 135
315 140
320 144
324 147
331 151
334 153
342 158
343 159
350 163
353 165
353 165
362 170
364 171
372 175
374 176
381 180
385 181
390 184
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
1.0 0.0 0.0 RG
94.0 28.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-94.0 -28.0 translate
98.0 30.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-98.0 -30.0 translate
108.0 34.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-108.0 -34.0 translate
118.0 39.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-118.0 -39.0 translate
128.0 43.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-128.0 -43.0 translate
137.0 47.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-137.0 -47.0 translate
147.0 51.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-147.0 -51.0 translate
157.0 56.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-157.0 -56.0 translate
166.0 60.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-166.0 -60.0 translate
176.0 64.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-176.0 -64.0 translate
186.0 69.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-186.0 -69.0 translate
196.0 73.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-196.0 -73.0 translate
205.0 77.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-205.0 -77.0 translate
215.0 82.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-215.0 -82.0 translate
225.0 86.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-225.0 -86.0 translate
234.0 91.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-234.0 -91.0 translate
244.0 96.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-244.0 -96.0 translate
254.0 101.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-254.0 -101.0 translate
264.0 105.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-264.0 -105.0 translate
273.0 111.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-273.0 -111.0 translate
283.0 116.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-283.0 -116.0 translate
295.0 124.0 translate
newpath
4.0 2.0 m
4.0 3.104569 3.104569 4.0 2.0 4.0  c
0.895430 4.0 0.0 3.104569 0.0 2.0  c
0.0 0.895430 0.895430 0.0 2.0 0.0  c
3.104569 0.0 4.0 0.895430 4.0 2.0  c
h
S
-295.0 -124.0 translate
Q
q
1.0 0.0 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 29 OPL
97 30
99 31
103 33
107 34
111 36
115 38
119 40
124 42
128 43
132 45
136 47
141 49
145 51
149 53
153 55
158 57
162 58
166 60
170 62
175 64
179 66
183 68
187 70
192 72
196 74
200 76
204 78
209 80
213 81
217 83
222 86
226 87
230 90
234 91
239 94
243 96
247 98
251 100
255 102
260 104
264 106
268 109
272 111
277 113
281 115
286 118
291 122
296 125
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
0.0 0.0 1.0 RG
93.0 61.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-93.0 -61.0 translate
97.0 63.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-97.0 -63.0 translate
107.0 66.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-107.0 -66.0 translate
117.0 69.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-117.0 -69.0 translate
127.0 72.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-127.0 -72.0 translate
136.0 76.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-136.0 -76.0 translate
146.0 79.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-146.0 -79.0 translate
156.0 82.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-156.0 -82.0 translate
165.0 86.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-165.0 -86.0 translate
175.0 89.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-175.0 -89.0 translate
185.0 92.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-185.0 -92.0 translate
195.0 96.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-195.0 -96.0 translate
204.0 99.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-204.0 -99.0 translate
214.0 102.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-214.0 -102.0 translate
224.0 106.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-224.0 -106.0 translate
233.0 109.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-233.0 -109.0 translate
243.0 113.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-243.0 -113.0 translate
253.0 117.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-253.0 -117.0 translate
263.0 120.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-263.0 -120.0 translate
272.0 124.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-272.0 -124.0 translate
282.0 128.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-282.0 -128.0 translate
292.0 132.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-292.0 -132.0 translate
301.0 136.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-301.0 -136.0 translate
311.0 140.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-311.0 -140.0 translate
321.0 145.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-321.0 -145.0 translate
326.0 147.0 translate
6.0 3.0 0.0 3.0 L
3.0 6.0 3.0 0.0 L
-326.0 -147.0 translate
Q
q
0.0 0.0 1.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 63 OPL
97 64
100 65
105 67
110 68
115 70
120 72
125 73
130 75
135 77
141 78
145 80
150 82
156 84
161 85
165 87
171 89
175 90
181 92
186 94
191 96
196 97
201 99
206 101
211 103
216 105
221 106
226 108
231 110
236 112
241 114
247 116
252 117
257 119
262 121
267 123
272 125
277 127
282 129
287 131
292 133
297 135
302 137
307 139
312 142
317 144
322 146
325 148
328 149
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
q
2 J
0 j
0.0 0.392157 0.0 RG
94.0 101.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-94.0 -101.0 translate
98.0 102.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-98.0 -102.0 translate
108.0 104.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-108.0 -104.0 translate
118.0 106.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-118.0 -106.0 translate
128.0 109.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-128.0 -109.0 translate
137.0 111.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-137.0 -111.0 translate
147.0 113.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-147.0 -113.0 translate
157.0 116.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-157.0 -116.0 translate
166.0 118.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-166.0 -118.0 translate
176.0 120.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-176.0 -120.0 translate
186.0 123.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-186.0 -123.0 translate
196.0 125.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-196.0 -125.0 translate
205.0 127.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-205.0 -127.0 translate
215.0 130.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-215.0 -130.0 translate
225.0 132.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-225.0 -132.0 translate
234.0 135.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-234.0 -135.0 translate
244.0 137.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-244.0 -137.0 translate
254.0 140.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-254.0 -140.0 translate
264.0 142.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-264.0 -142.0 translate
273.0 145.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-273.0 -145.0 translate
283.0 148.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-283.0 -148.0 translate
293.0 150.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-293.0 -150.0 translate
302.0 153.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-302.0 -153.0 translate
312.0 156.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-312.0 -156.0 translate
322.0 158.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-322.0 -158.0 translate
332.0 161.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-332.0 -161.0 translate
341.0 164.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-341.0 -164.0 translate
351.0 167.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-351.0 -167.0 translate
361.0 170.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-361.0 -170.0 translate
373.0 175.0 translate
newpath
0.0 0.0 m
4.0 0.0 l
4.0 4.0 l
0.0 4.0 l
0.0 0.0 l
h
S
-373.0 -175.0 translate
Q
q
0.0 0.392157 0.0 RG
45.0 6.017699 342.994812 334.9823 rc
48 95 102 OPL
98 103
102 103
107 105
113 106
119 107
125 109
131 110
137 111
143 113
149 114
154 116
160 117
166 119
172 120
177 121
184 123
189 124
195 126
201 127
207 129
213 130
219 132
224 133
230 135
237 136
242 138
248 139
254 141
260 142
266 144
272 145
278 147
284 149
289 150
295 152
301 153
307 155
313 156
319 158
324 160
330 162
336 163
342 165
348 167
354 169
360 171
366 173
374 176
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
Q
q
q
1 313 340 OPL
313 342
1 362 340 OPL
362 342
1 216 340 OPL
216 342
1 265 340 OPL
265 342
1 119 340 OPL
119 342
1 167 340 OPL
167 342
1 70 340 OPL
70 342
1 46 340 OPL
386 340
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
204 363 22 27 rc
208.0 385.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -293 1042 1010 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -293 1042 1010
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0 def
		/quotedbl 713.0 def
		/numbersign 500.0 def
		/dollar 549.0 def
		/percent 833.0 def
		/ampersand 778.0 def
		/quoteright 439.0 def
		/parenleft 333.0 def
		/parenright 333.0 def
		/asterisk 500.0 def
		/plus 549.0 def
		/comma 250.0 def
		/hyphen 584.0 def
		/period 250.0 def
		/slash 278.0 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 278.0 def
		/semicolon 278.0 def
		/less 549.0 def
		/equal 549.0 def
		/greater 549.0 def
		/question 444.0 def
		/at 549.0 def
		/A 722.0 def
		/B 667.0 def
		/C 722.0 def
		/D 612.0 def
		/E 611.0 def
		/F 763.0 def
		/G 603.0 def
		/H 722.0 def
		/I 333.0 def
		/J 631.0 def
		/K 722.0 def
		/L 686.0 def
		/M 889.0 def
		/N 722.0 def
		/O 722.0 def
		/P 768.0 def
		/Q 741.0 def
		/R 556.0 def
		/S 592.0 def
		/T 611.0 def
		/U 690.0 def
		/V 439.0 def
		/W 768.0 def
		/X 645.0 def
		/Y 795.0 def
		/Z 611.0 def
		/bracketleft 333.0 def
		/backslash 863.0 def
		/bracketright 333.0 def
		/asciicircum 658.0 def
		/underscore 500.0 def
		/quoteleft 500.0 def
		/a 631.0 def
		/b 549.0 def
		/c 549.0 def
		/d 494.0 def
		/e 439.0 def
		/f 521.0 def
		/g 411.0 def
		/h 603.0 def
		/i 329.0 def
		/j 603.0 def
		/k 549.0 def
		/l 549.0 def
		/m 576.0 def
		/n 521.0 def
		/o 549.0 def
		/p 549.0 def
		/q 521.0 def
		/r 549.0 def
		/s 603.0 def
		/t 439.0 def
		/u 576.0 def
		/v 713.0 def
		/w 686.0 def
		/x 493.0 def
		/y 686.0 def
		/z 494.0 def
		/braceleft 480.0 def
		/bar 200.0 def
		/braceright 480.0 def
		/asciitilde 549.0 def
		/exclamdown 620.0 def
		/cent 247.0 def
		/sterling 549.0 def
		/fraction 584.0 def
		/yen 713.0 def
		/florin 584.0 def
		/section 753.0 def
		/currency 167.0 def
		/quotesingle 439.0 def
		/quotedblleft 584.0 def
		/guillemotleft 1042.0 def
		/guilsinglleft 584.0 def
		/guilsinglright 584.0 def
		/fi 584.0 def
		/fl 584.0 def
		/endash 584.0 def
		/dagger 584.0 def
		/daggerdbl 584.0 def
		/periodcentered 460.0 def
		/paragraph 494.0 def
		/bullet 584.0 def
		/quotesinglbase 584.0 def
		/quotedblbase 584.0 def
		/quotedblright 584.0 def
		/guillemotright 549.0 def
		/ellipsis 584.0 def
		/perthousand 584.0 def
		/questiondown 658.0 def
		/grave 500.0 def
		/acute 584.0 def
		/circumflex 584.0 def
		/tilde 584.0 def
		/macron 603.0 def
		/breve 584.0 def
		/dotaccent 584.0 def
		/dieresis 753.0 def
		/ring 584.0 def
		/cedilla 549.0 def
		/hungarumlaut 584.0 def
		/ogonek 584.0 def
		/caron 584.0 def
		/emdash 584.0 def
		/AE 823.0 def
		/ordfeminine 753.0 def
		/Lslash 584.0 def
		/Oslash 713.0 def
		/OE 584.0 def
		/ordmasculine 549.0 def
		/ae 384.0 def
		/dotlessi 584.0 def
		/lslash 584.0 def
		/oslash 384.0 def
		/oe 584.0 def
		/germandbls 603.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
240 39 moveto
240 23 234 10 223 0  curveto
212 -11 199 -17 184 -17  curveto
168 -17 155 -11 144 0  curveto
133 10 128 23 128 39  curveto
128 54 133 67 144 78  curveto
155 89 168 95 184 95  curveto
199 95 212 89 223 78  curveto
234 67 240 54 240 39  curveto
closepath
240 580 moveto
240 571 239 562 238 552  curveto
237 542 236 532 234 523  curveto
232 513 231 504 230 496  curveto
228 488 227 481 227 476  curveto
194 209 lineto
193 205 192 200 191 196  curveto
189 192 187 190 184 190  curveto
180 190 178 192 177 196  curveto
175 200 174 205 174 209  curveto
141 475 lineto
140 479 139 486 138 494  curveto
136 502 135 511 133 521  curveto
131 531 130 541 129 551  curveto
128 561 128 570 128 579  curveto
128 604 131 626 139 644  curveto
147 662 162 672 184 672  curveto
200 672 214 665 224 651  curveto
234 637 240 614 240 580  curveto
closepath
fill
		} def

	/quotedbl
		{
199 447 moveto
361 70 lineto
517 447 lineto
199 447 lineto
closepath
388 0 moveto
329 0 lineto
31 705 lineto
88 705 lineto
175 502 lineto
540 502 lineto
624 705 lineto
681 705 lineto
388 0 lineto
closepath
fill
		} def

	/numbersign
		{
201 420 moveto
176 238 lineto
301 238 lineto
325 420 lineto
201 420 lineto
closepath
475 420 moveto
372 420 lineto
348 238 lineto
451 238 lineto
445 192 lineto
341 192 lineto
313 -16 lineto
266 -16 lineto
294 192 lineto
170 192 lineto
141 -16 lineto
94 -16 lineto
123 192 lineto
20 192 lineto
26 238 lineto
129 238 lineto
154 420 lineto
54 420 lineto
60 466 lineto
160 466 lineto
189 673 lineto
236 673 lineto
207 466 lineto
332 466 lineto
360 673 lineto
407 673 lineto
379 466 lineto
481 466 lineto
475 420 lineto
closepath
fill
		} def

	/dollar
		{
25 0 moveto
25 55 lineto
423 55 lineto
423 342 lineto
69 342 lineto
69 397 lineto
423 397 lineto
423 652 lineto
25 652 lineto
25 707 lineto
478 707 lineto
478 0 lineto
25 0 lineto
closepath
fill
		} def

	/percent
		{
741 212 moveto
741 222 739 233 736 244  curveto
732 254 727 264 721 272  curveto
715 280 707 287 698 292  curveto
688 297 678 300 666 300  curveto
652 300 641 297 632 291  curveto
622 285 613 277 603 267  curveto
599 263 595 258 591 254  curveto
587 249 583 244 579 238  curveto
575 232 570 224 566 215  curveto
561 206 555 195 549 183  curveto
539 163 531 144 525 125  curveto
518 105 515 88 515 74  curveto
515 46 521 26 533 16  curveto
545 5 559 0 575 0  curveto
591 0 605 2 617 8  curveto
628 14 639 22 651 34  curveto
666 49 679 66 691 85  curveto
702 103 711 121 719 138  curveto
726 155 731 170 735 184  curveto
739 197 741 206 741 212  curveto
closepath
365 536 moveto
365 542 364 549 363 557  curveto
362 565 361 572 360 579  curveto
340 587 325 595 317 601  curveto
308 607 301 611 296 615  curveto
294 615 293 615 291 615  curveto
289 615 288 616 287 616  curveto
280 616 273 614 267 612  curveto
260 609 252 603 243 594  curveto
238 589 233 583 227 576  curveto
221 568 215 560 209 552  curveto
203 544 198 535 193 526  curveto
187 517 183 509 179 501  curveto
169 478 160 457 153 438  curveto
146 419 143 399 143 379  curveto
143 355 148 339 158 329  curveto
168 319 183 314 201 314  curveto
217 314 232 317 246 325  curveto
260 332 272 341 284 353  curveto
296 364 306 376 315 390  curveto
323 403 331 415 337 427  curveto
347 448 355 469 359 490  curveto
363 510 365 526 365 536  curveto
closepath
771 226 moveto
771 207 768 188 763 168  curveto
757 148 750 128 741 109  curveto
732 90 722 72 710 55  curveto
698 38 686 23 674 11  curveto
656 -6 638 -18 620 -25  curveto
601 -32 581 -36 560 -36  curveto
523 -36 493 -24 469 -1  curveto
445 22 434 52 434 90  curveto
434 119 438 146 448 170  curveto
457 194 469 216 484 236  curveto
499 256 516 273 535 287  curveto
554 301 573 314 593 324  curveto
603 329 614 333 626 335  curveto
638 337 649 338 660 338  curveto
698 338 726 328 744 309  curveto
762 289 771 262 771 226  curveto
closepath
229 -28 moveto
174 -28 lineto
563 583 lineto
551 578 540 574 531 571  curveto
522 568 514 566 506 564  curveto
498 562 489 560 481 559  curveto
473 558 463 558 453 558  curveto
441 558 431 558 423 560  curveto
415 561 404 565 390 573  curveto
390 567 391 560 392 550  curveto
393 540 394 530 394 520  curveto
394 502 392 485 389 470  curveto
385 455 379 439 371 422  curveto
355 392 338 365 320 343  curveto
301 320 282 304 263 295  curveto
251 289 238 285 222 281  curveto
206 277 192 276 179 276  curveto
162 276 146 279 132 286  curveto
118 292 105 302 95 314  curveto
85 326 77 340 71 356  curveto
65 372 63 389 63 408  curveto
63 424 65 440 69 458  curveto
73 476 79 492 87 506  curveto
95 522 106 538 118 553  curveto
130 567 142 580 154 592  curveto
166 603 177 612 188 620  curveto
199 628 208 633 215 637  curveto
228 643 240 648 250 650  curveto
260 652 270 653 282 653  curveto
303 653 319 650 330 646  curveto
340 641 348 637 353 633  curveto
355 630 359 626 365 621  curveto
371 615 378 610 386 605  curveto
394 600 405 596 417 592  curveto
429 588 442 586 458 586  curveto
472 586 487 588 503 592  curveto
519 596 533 601 547 607  curveto
561 613 573 621 583 629  curveto
593 637 599 646 602 655  curveto
657 655 lineto
229 -28 lineto
closepath
fill
		} def

	/ampersand
		{
400 108 moveto
364 150 333 193 308 235  curveto
282 277 262 312 246 340  curveto
224 327 206 314 192 301  curveto
177 288 165 275 157 262  curveto
148 248 142 234 138 220  curveto
134 206 133 191 133 176  curveto
133 158 136 141 143 125  curveto
150 108 160 93 172 80  curveto
184 67 197 57 213 49  curveto
228 41 244 37 260 37  curveto
282 37 305 43 330 55  curveto
355 67 378 85 400 108  curveto
closepath
433 548 moveto
433 576 425 595 410 607  curveto
395 619 378 625 359 625  curveto
345 625 334 623 325 619  curveto
315 615 307 609 300 602  curveto
292 594 287 584 284 571  curveto
280 558 279 545 279 532  curveto
279 510 283 490 291 470  curveto
299 450 307 430 317 411  curveto
330 418 343 425 357 433  curveto
371 441 383 450 395 460  curveto
406 470 415 483 422 497  curveto
429 511 433 528 433 548  curveto
closepath
750 100 moveto
744 86 737 74 729 64  curveto
721 54 713 44 706 35  curveto
694 19 678 7 657 -3  curveto
635 -13 613 -18 589 -18  curveto
571 -18 553 -14 535 -6  curveto
517 1 501 10 487 21  curveto
472 31 459 42 448 53  curveto
436 63 428 72 422 78  curveto
409 64 394 52 378 41  curveto
362 29 345 19 327 10  curveto
309 1 290 -5 271 -10  curveto
252 -15 234 -18 216 -18  curveto
191 -18 166 -14 141 -6  curveto
116 2 97 12 84 26  curveto
70 39 60 56 52 76  curveto
44 96 41 119 41 143  curveto
41 174 48 202 64 227  curveto
79 252 97 274 118 293  curveto
138 312 159 328 181 342  curveto
202 355 219 366 232 374  curveto
228 387 224 399 220 409  curveto
216 419 212 429 209 438  curveto
206 447 204 456 202 466  curveto
200 475 199 485 199 497  curveto
199 523 203 547 212 567  curveto
220 587 231 604 245 618  curveto
259 632 275 643 293 650  curveto
310 657 330 661 354 661  curveto
378 661 398 658 416 652  curveto
433 646 450 635 466 619  curveto
474 611 480 601 484 590  curveto
488 578 491 567 491 555  curveto
491 539 486 521 477 499  curveto
468 477 456 458 440 442  curveto
427 429 412 418 396 410  curveto
379 401 358 391 332 380  curveto
336 372 342 361 351 345  curveto
359 329 369 312 381 293  curveto
393 274 406 255 420 235  curveto
434 215 448 198 462 182  curveto
472 194 483 207 494 221  curveto
505 235 515 249 524 264  curveto
533 279 540 294 546 310  curveto
551 325 554 340 554 354  curveto
554 368 550 379 543 388  curveto
535 397 519 402 495 402  curveto
495 420 lineto
706 420 lineto
706 402 lineto
681 402 663 397 651 388  curveto
639 378 629 365 619 349  curveto
609 333 600 317 590 299  curveto
580 281 569 264 558 246  curveto
547 228 536 210 524 192  curveto
512 174 500 158 487 144  curveto
493 136 502 128 514 118  curveto
526 108 538 98 552 89  curveto
566 80 579 73 593 67  curveto
606 61 618 58 630 58  curveto
646 58 662 62 677 71  curveto
691 80 710 94 734 114  curveto
750 100 lineto
750 100 lineto
closepath
fill
		} def

	/quoteright
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/parenleft
		{
290 -191 moveto
283 -191 272 -185 256 -173  curveto
240 -161 222 -146 204 -128  curveto
186 -110 168 -89 150 -67  curveto
132 -45 117 -23 107 -2  curveto
71 70 53 151 53 241  curveto
53 285 57 327 66 368  curveto
74 408 87 445 104 478  curveto
116 504 132 528 151 552  curveto
170 576 189 596 208 614  curveto
226 632 243 646 258 657  curveto
273 667 284 673 290 673  curveto
300 656 lineto
276 636 256 617 241 600  curveto
225 583 212 566 202 549  curveto
192 532 183 515 177 497  curveto
171 479 165 460 160 440  curveto
156 424 152 408 149 394  curveto
146 379 144 364 142 348  curveto
140 332 138 316 138 299  curveto
137 281 137 262 137 241  curveto
137 199 138 162 142 132  curveto
146 102 151 73 159 46  curveto
163 32 167 17 172 1  curveto
176 -15 183 -32 193 -50  curveto
202 -68 215 -88 232 -109  curveto
249 -129 272 -151 300 -174  curveto
290 -191 lineto
closepath
fill
		} def

	/parenright
		{
277 241 moveto
277 151 259 70 223 -2  curveto
212 -23 198 -45 180 -67  curveto
162 -89 143 -110 125 -128  curveto
107 -146 90 -161 74 -173  curveto
58 -185 46 -191 40 -191  curveto
30 -174 lineto
58 -151 80 -129 97 -109  curveto
114 -88 127 -68 137 -50  curveto
146 -32 153 -15 158 1  curveto
162 17 167 32 171 46  curveto
178 73 183 102 187 132  curveto
191 162 193 199 193 241  curveto
193 262 192 281 192 299  curveto
191 316 190 332 188 348  curveto
186 364 183 379 180 394  curveto
177 408 174 424 170 440  curveto
164 460 158 479 152 497  curveto
146 515 137 532 127 549  curveto
117 566 104 583 89 600  curveto
73 617 54 636 30 656  curveto
40 673 lineto
46 673 56 667 71 657  curveto
86 646 103 632 122 614  curveto
140 596 159 576 178 552  curveto
196 528 212 504 226 478  curveto
242 445 255 408 264 368  curveto
272 327 277 285 277 241  curveto
closepath
fill
		} def

	/asterisk
		{
427 253 moveto
427 244 424 237 418 231  curveto
412 225 404 223 392 223  curveto
380 223 370 226 363 234  curveto
358 238 353 244 348 252  curveto
342 259 335 267 326 277  curveto
314 289 301 299 287 309  curveto
273 319 265 324 261 324  curveto
256 324 254 318 254 308  curveto
254 289 255 274 258 263  curveto
261 251 264 241 268 233  curveto
272 224 275 216 278 208  curveto
281 200 283 190 283 178  curveto
283 164 278 153 270 146  curveto
261 138 253 135 246 135  curveto
239 135 231 138 222 145  curveto
213 151 209 162 209 177  curveto
209 189 210 200 213 208  curveto
216 216 219 224 223 232  curveto
227 240 230 250 233 262  curveto
236 273 238 288 238 308  curveto
238 311 237 314 237 318  curveto
236 322 234 324 231 324  curveto
229 324 225 322 221 320  curveto
216 317 211 313 205 309  curveto
199 305 192 300 185 294  curveto
178 288 172 283 166 277  curveto
156 267 149 259 144 252  curveto
138 244 133 238 129 234  curveto
121 226 112 223 100 223  curveto
88 223 79 225 73 231  curveto
67 237 65 244 65 253  curveto
65 259 66 266 69 274  curveto
72 282 78 288 87 292  curveto
90 294 97 296 109 299  curveto
120 302 132 305 146 309  curveto
159 313 172 316 184 320  curveto
196 324 204 327 210 330  curveto
212 331 215 333 219 335  curveto
222 337 224 340 224 344  curveto
224 348 220 352 214 355  curveto
195 364 179 370 167 374  curveto
155 378 144 380 135 382  curveto
126 383 118 384 112 385  curveto
105 386 98 388 92 392  curveto
88 394 82 398 76 405  curveto
69 412 66 420 66 429  curveto
66 437 68 445 73 452  curveto
77 459 86 463 100 463  curveto
106 463 114 461 122 458  curveto
130 455 137 450 144 444  curveto
148 439 153 433 157 426  curveto
161 418 168 410 178 401  curveto
186 392 196 384 208 378  curveto
220 371 228 368 232 368  curveto
236 368 238 372 238 381  curveto
238 400 236 416 233 428  curveto
230 440 227 451 224 461  curveto
220 471 217 480 214 488  curveto
211 496 210 506 210 518  curveto
210 526 212 533 216 540  curveto
220 547 230 551 246 551  curveto
261 551 271 547 275 540  curveto
279 532 282 525 282 517  curveto
282 506 280 496 277 488  curveto
274 480 271 471 268 462  curveto
264 452 261 441 258 429  curveto
255 416 254 400 254 381  curveto
254 372 256 368 260 368  curveto
264 368 271 371 283 378  curveto
295 384 305 392 314 401  curveto
323 410 330 418 334 426  curveto
338 433 343 439 348 444  curveto
354 450 362 455 370 458  curveto
378 461 385 463 392 463  curveto
405 463 414 459 419 452  curveto
423 445 426 437 426 429  curveto
426 420 422 412 416 405  curveto
409 398 404 394 400 392  curveto
392 388 385 386 379 385  curveto
373 384 365 383 356 382  curveto
347 380 336 378 324 374  curveto
312 370 296 364 278 355  curveto
271 352 268 348 268 344  curveto
268 340 269 337 273 335  curveto
276 333 279 331 282 330  curveto
286 327 295 324 307 320  curveto
319 316 332 313 346 309  curveto
359 305 371 302 383 299  curveto
394 296 401 294 405 292  curveto
413 288 419 282 422 274  curveto
425 266 427 259 427 253  curveto
closepath
fill
		} def

	/plus
		{
302 243 moveto
302 0 lineto
247 0 lineto
247 243 lineto
10 243 lineto
10 298 lineto
247 298 lineto
247 533 lineto
302 533 lineto
302 298 lineto
539 298 lineto
539 243 lineto
302 243 lineto
closepath
fill
		} def

	/comma
		{
194 20 moveto
194 0 190 -20 182 -41  curveto
174 -61 161 -81 142 -101  curveto
137 -105 131 -111 125 -117  curveto
118 -123 111 -128 104 -134  curveto
97 -139 90 -143 84 -147  curveto
77 -151 71 -153 67 -153  curveto
64 -153 61 -152 59 -151  curveto
57 -149 56 -147 56 -145  curveto
56 -139 57 -135 60 -132  curveto
62 -129 66 -126 71 -124  curveto
124 -91 151 -55 151 -16  curveto
151 -5 147 0 139 0  curveto
135 0 130 -1 124 -3  curveto
118 -5 112 -6 108 -6  curveto
91 -6 78 -1 69 8  curveto
60 17 56 30 56 46  curveto
56 62 61 76 72 87  curveto
83 98 97 104 115 104  curveto
127 104 137 101 146 97  curveto
155 92 164 86 172 78  curveto
180 70 185 62 189 54  curveto
192 46 194 34 194 20  curveto
closepath
fill
		} def

	/hyphen
		{
fill
		} def

	/period
		{
181 39 moveto
181 23 175 10 164 0  curveto
153 -11 140 -17 125 -17  curveto
109 -17 96 -11 85 0  curveto
74 10 69 23 69 39  curveto
69 54 74 67 85 78  curveto
96 89 109 95 125 95  curveto
140 95 153 89 164 78  curveto
175 67 181 54 181 39  curveto
closepath
fill
		} def

	/slash
		{
44 -18 moveto
0 -18 lineto
210 646 lineto
254 646 lineto
44 -18 lineto
closepath
fill
		} def

	/zero
		{
377 332 moveto
377 352 376 375 375 400  curveto
373 424 371 448 369 471  curveto
366 494 363 515 359 535  curveto
355 555 350 570 344 582  curveto
334 600 321 615 304 628  curveto
286 641 267 648 247 648  curveto
227 648 209 641 191 629  curveto
173 617 159 601 150 582  curveto
144 572 140 558 136 540  curveto
132 522 128 502 126 480  curveto
123 458 121 434 119 408  curveto
117 382 117 357 117 331  curveto
117 285 119 241 125 197  curveto
130 153 140 117 156 87  curveto
166 67 179 51 195 39  curveto
211 26 228 20 248 20  curveto
265 20 282 26 299 39  curveto
315 52 328 68 338 86  curveto
347 104 354 125 360 149  curveto
365 172 369 195 371 218  curveto
373 241 375 263 376 283  curveto
376 303 377 320 377 332  curveto
closepath
471 340 moveto
471 305 467 267 461 227  curveto
454 187 439 144 417 99  curveto
405 74 391 54 377 39  curveto
362 24 347 12 332 4  curveto
317 -3 302 -9 288 -12  curveto
273 -15 260 -17 248 -17  curveto
206 -17 171 -6 144 15  curveto
116 37 94 65 77 99  curveto
41 171 23 251 23 340  curveto
23 372 25 403 31 433  curveto
36 463 43 491 52 517  curveto
60 543 70 566 82 586  curveto
93 606 105 623 117 635  curveto
134 652 154 665 177 673  curveto
199 681 222 685 245 685  curveto
253 685 263 684 274 683  curveto
285 681 297 679 309 675  curveto
321 671 333 666 345 659  curveto
357 652 368 643 380 632  curveto
389 622 399 608 410 590  curveto
420 572 430 550 439 525  curveto
448 499 456 471 462 440  curveto
468 408 471 375 471 340  curveto
closepath
fill
		} def

	/one
		{
120 0 moveto
120 18 lineto
128 18 137 18 148 20  curveto
159 22 169 25 179 30  curveto
188 35 196 42 203 52  curveto
209 62 213 74 213 90  curveto
213 563 lineto
213 573 211 580 207 584  curveto
203 588 198 590 191 590  curveto
184 590 174 587 162 583  curveto
149 578 134 572 117 566  curveto
117 584 lineto
279 673 lineto
297 673 lineto
297 91 lineto
297 75 300 62 307 52  curveto
313 42 321 35 331 30  curveto
341 25 351 22 362 20  curveto
372 18 382 18 390 18  curveto
390 0 lineto
120 0 lineto
closepath
fill
		} def

	/two
		{
416 0 moveto
25 0 lineto
27 15 lineto
207 206 lineto
224 224 240 244 256 266  curveto
271 287 284 309 296 331  curveto
307 353 316 374 323 396  curveto
329 417 333 436 333 454  curveto
333 499 321 536 298 564  curveto
275 592 241 606 195 606  curveto
161 606 131 595 107 574  curveto
83 553 65 521 53 479  curveto
32 479 lineto
34 510 42 538 54 562  curveto
66 586 79 606 95 622  curveto
119 646 143 662 167 672  curveto
191 681 217 686 245 686  curveto
265 686 286 682 310 674  curveto
333 666 355 651 377 630  curveto
385 620 393 610 399 599  curveto
405 587 409 575 413 563  curveto
416 550 418 538 420 526  curveto
421 514 422 503 422 493  curveto
422 473 418 453 410 431  curveto
402 409 391 387 378 365  curveto
365 343 350 321 333 300  curveto
316 278 299 258 282 240  curveto
124 73 lineto
353 73 lineto
370 73 384 74 395 78  curveto
405 81 414 86 421 92  curveto
427 98 433 104 438 112  curveto
442 120 448 128 454 136  curveto
475 136 lineto
416 0 lineto
closepath
fill
		} def

	/three
		{
435 206 moveto
435 164 423 126 401 94  curveto
379 62 350 37 314 19  curveto
290 7 265 -1 237 -7  curveto
209 -13 178 -17 144 -17  curveto
124 -17 109 -14 97 -10  curveto
85 -5 75 0 69 7  curveto
62 14 57 21 55 28  curveto
53 35 52 41 52 47  curveto
52 55 55 62 61 70  curveto
67 77 78 81 94 81  curveto
105 81 115 78 124 72  curveto
133 66 141 60 149 54  curveto
158 46 167 38 177 32  curveto
186 26 202 23 226 23  curveto
246 23 264 26 280 34  curveto
296 41 310 51 322 63  curveto
334 75 343 90 349 107  curveto
355 123 359 141 359 161  curveto
359 173 357 185 355 198  curveto
352 211 348 224 344 236  curveto
339 248 333 260 327 271  curveto
320 281 313 290 306 298  curveto
296 308 285 316 275 322  curveto
264 328 253 332 242 335  curveto
231 338 220 340 208 342  curveto
196 343 183 344 171 345  curveto
165 345 159 347 155 349  curveto
151 351 149 354 149 358  curveto
149 361 150 364 154 366  curveto
157 368 161 370 165 372  curveto
211 387 247 407 272 432  curveto
288 448 299 463 304 477  curveto
309 491 312 507 312 526  curveto
312 538 309 550 305 562  curveto
300 574 293 584 284 594  curveto
274 603 262 610 248 616  curveto
234 622 217 625 198 625  curveto
169 625 144 617 123 601  curveto
102 585 80 560 58 524  curveto
39 524 lineto
45 548 53 569 64 589  curveto
75 609 89 626 106 640  curveto
122 654 142 665 165 673  curveto
188 681 215 685 245 685  curveto
267 685 288 681 306 675  curveto
324 668 339 659 352 648  curveto
365 636 375 623 382 608  curveto
389 592 393 576 393 559  curveto
393 536 386 512 372 488  curveto
358 464 335 440 302 418  curveto
316 412 328 405 339 399  curveto
349 393 359 386 367 378  curveto
375 370 382 362 389 352  curveto
395 342 402 330 409 317  curveto
426 282 435 245 435 206  curveto
closepath
fill
		} def

	/four
		{
298 562 moveto
60 229 lineto
298 229 lineto
298 562 lineto
closepath
382 159 moveto
382 0 lineto
298 0 lineto
298 159 lineto
16 159 lineto
16 230 lineto
332 685 lineto
382 685 lineto
382 229 lineto
469 229 lineto
469 159 lineto
382 159 lineto
closepath
fill
		} def

	/five
		{
401 583 moveto
183 583 lineto
143 501 lineto
216 487 lineto
244 481 270 472 294 458  curveto
318 444 339 428 359 409  curveto
378 389 394 364 407 333  curveto
419 302 426 261 426 211  curveto
426 193 424 178 421 166  curveto
418 153 412 138 404 121  curveto
396 105 385 89 371 73  curveto
357 57 340 42 320 29  curveto
299 15 274 4 246 -4  curveto
218 -12 186 -17 150 -17  curveto
133 -17 117 -15 102 -13  curveto
87 -11 74 -7 63 -2  curveto
52 2 43 8 37 16  curveto
31 24 28 33 28 45  curveto
28 55 31 64 38 72  curveto
44 80 55 85 69 85  curveto
82 85 95 81 107 75  curveto
119 69 132 62 144 54  curveto
156 46 168 38 181 32  curveto
194 26 208 23 224 23  curveto
246 23 267 30 287 46  curveto
307 62 322 81 334 103  curveto
340 116 345 129 348 143  curveto
350 157 352 172 352 188  curveto
352 229 341 265 321 297  curveto
300 328 272 353 236 371  curveto
212 383 186 392 159 398  curveto
131 404 98 409 59 413  curveto
180 673 lineto
369 673 lineto
372 673 376 672 381 672  curveto
385 672 390 672 396 672  curveto
404 672 410 673 415 676  curveto
419 678 425 681 431 685  curveto
443 680 lineto
401 583 lineto
closepath
fill
		} def

	/six
		{
376 186 moveto
376 223 371 256 363 285  curveto
354 314 343 336 329 350  curveto
316 362 303 371 289 375  curveto
275 379 262 381 249 381  curveto
223 381 201 376 182 368  curveto
162 359 148 350 139 342  curveto
137 331 136 316 134 296  curveto
132 276 132 256 132 236  curveto
132 226 132 214 133 199  curveto
134 183 137 167 141 150  curveto
145 132 150 115 157 98  curveto
164 81 174 67 186 55  curveto
197 43 210 34 226 28  curveto
241 22 256 19 271 19  curveto
288 19 304 23 319 33  curveto
334 42 347 57 357 77  curveto
362 88 366 103 370 123  curveto
374 142 376 163 376 186  curveto
closepath
467 211 moveto
467 165 459 128 444 99  curveto
429 69 411 46 389 29  curveto
367 11 343 0 319 -7  curveto
295 -14 274 -18 256 -18  curveto
242 -18 226 -16 210 -12  curveto
193 -8 176 -2 160 7  curveto
143 16 127 29 111 45  curveto
95 61 80 81 68 107  curveto
57 128 49 151 44 177  curveto
38 203 36 233 36 269  curveto
36 306 39 339 45 369  curveto
51 398 60 423 70 443  curveto
93 490 121 530 153 563  curveto
185 596 223 624 269 647  curveto
293 659 319 668 349 675  curveto
378 681 411 685 447 685  curveto
446 668 lineto
419 664 390 656 360 644  curveto
330 632 301 615 273 593  curveto
245 571 219 543 197 510  curveto
174 477 157 438 146 392  curveto
162 398 177 404 190 409  curveto
203 414 215 418 226 421  curveto
237 424 247 426 257 428  curveto
267 429 277 430 288 430  curveto
307 430 328 425 350 417  curveto
372 408 392 394 411 376  curveto
427 359 441 337 451 310  curveto
461 282 467 249 467 211  curveto
closepath
fill
		} def

	/seven
		{
234 -16 moveto
175 -16 lineto
370 583 lineto
143 583 lineto
129 583 117 580 107 576  curveto
97 571 89 565 82 558  curveto
74 550 68 542 63 533  curveto
57 523 52 514 46 504  curveto
24 513 lineto
85 673 lineto
448 673 lineto
448 641 lineto
234 -16 lineto
closepath
fill
		} def

	/eight
		{
364 128 moveto
364 149 360 169 352 187  curveto
344 205 334 220 322 233  curveto
314 240 307 246 300 252  curveto
292 258 284 264 276 270  curveto
267 276 258 282 248 288  curveto
238 294 228 302 216 312  curveto
204 306 193 298 183 288  curveto
172 277 163 265 155 252  curveto
147 238 140 224 136 210  curveto
131 195 129 181 129 168  curveto
129 150 131 132 136 114  curveto
141 96 149 80 159 66  curveto
169 52 182 40 198 31  curveto
213 22 231 18 253 18  curveto
269 18 284 20 299 26  curveto
313 31 325 38 335 48  curveto
344 57 351 68 356 81  curveto
361 94 364 110 364 128  curveto
closepath
352 548 moveto
352 562 349 575 345 586  curveto
341 596 335 606 327 615  curveto
307 637 278 648 242 648  curveto
222 648 206 645 195 640  curveto
183 635 173 628 164 619  curveto
152 608 145 597 141 586  curveto
137 575 135 564 135 552  curveto
135 534 141 512 154 488  curveto
167 464 187 443 215 425  curveto
257 397 lineto
282 412 304 432 323 458  curveto
342 484 352 514 352 548  curveto
closepath
441 153 moveto
441 131 437 110 430 90  curveto
422 70 411 52 397 38  curveto
379 20 357 7 330 -3  curveto
303 -13 275 -18 247 -18  curveto
221 -18 197 -14 174 -6  curveto
151 2 131 13 113 27  curveto
95 41 80 59 70 79  curveto
59 99 54 121 54 145  curveto
54 161 57 179 63 197  curveto
69 215 77 232 88 250  curveto
99 267 112 283 128 299  curveto
143 314 160 328 180 340  curveto
125 397 lineto
110 412 97 431 85 453  curveto
73 475 67 503 67 535  curveto
67 558 71 579 81 598  curveto
91 616 104 632 120 645  curveto
136 658 155 668 177 675  curveto
199 681 222 685 247 685  curveto
269 685 289 682 307 678  curveto
325 674 341 668 355 661  curveto
379 649 396 632 408 612  curveto
419 592 425 571 425 549  curveto
425 512 413 479 390 451  curveto
367 422 334 395 290 370  curveto
303 362 317 351 332 339  curveto
347 326 362 312 378 297  curveto
396 279 411 257 423 233  curveto
435 209 441 182 441 153  curveto
closepath
fill
		} def

	/nine
		{
361 377 moveto
361 387 360 400 360 417  curveto
359 433 357 451 355 470  curveto
353 489 349 508 345 528  curveto
341 547 335 564 328 580  curveto
318 598 304 614 286 628  curveto
267 642 247 650 226 650  curveto
207 650 190 644 175 634  curveto
159 623 148 610 141 595  curveto
133 581 128 566 126 548  curveto
124 530 123 509 123 486  curveto
123 416 134 364 156 332  curveto
178 299 206 283 241 283  curveto
257 283 276 286 298 294  curveto
320 301 340 314 359 334  curveto
360 339 361 345 361 352  curveto
361 359 361 367 361 377  curveto
closepath
460 393 moveto
460 358 456 325 448 293  curveto
440 261 430 232 416 204  curveto
383 138 336 85 276 46  curveto
215 7 144 -14 64 -18  curveto
62 1 lineto
97 9 131 21 164 37  curveto
197 52 226 72 251 98  curveto
261 109 272 122 284 138  curveto
296 153 306 169 316 187  curveto
326 204 334 222 341 240  curveto
347 258 352 275 354 291  curveto
330 275 305 263 279 253  curveto
252 243 228 239 207 239  curveto
183 239 160 244 139 254  curveto
117 264 99 278 83 296  curveto
67 314 54 335 45 361  curveto
35 386 31 414 31 444  curveto
31 480 37 514 51 547  curveto
64 579 81 606 102 627  curveto
121 646 141 660 162 670  curveto
183 680 207 685 235 685  curveto
255 685 279 680 306 671  curveto
333 661 359 644 385 619  curveto
396 607 406 593 416 576  curveto
425 558 433 539 439 519  curveto
445 498 450 477 454 455  curveto
458 433 460 413 460 393  curveto
closepath
fill
		} def

	/colon
		{
193 39 moveto
193 23 187 10 176 0  curveto
165 -11 152 -17 137 -17  curveto
121 -17 108 -11 97 0  curveto
86 10 81 23 81 39  curveto
81 54 86 67 97 78  curveto
108 89 121 95 137 95  curveto
152 95 165 89 176 78  curveto
187 67 193 54 193 39  curveto
closepath
193 404 moveto
193 388 187 375 176 364  curveto
165 353 152 348 137 348  curveto
121 348 108 353 97 364  curveto
86 375 81 388 81 404  curveto
81 419 86 432 97 443  curveto
108 454 121 460 137 460  curveto
152 460 165 454 176 443  curveto
187 432 193 419 193 404  curveto
closepath
fill
		} def

	/semicolon
		{
221 20 moveto
221 0 217 -20 209 -41  curveto
201 -61 188 -81 169 -101  curveto
164 -105 158 -111 152 -117  curveto
145 -123 138 -128 131 -134  curveto
124 -139 117 -143 111 -147  curveto
104 -151 98 -153 94 -153  curveto
91 -153 88 -152 86 -151  curveto
84 -149 83 -147 83 -145  curveto
83 -139 84 -135 87 -132  curveto
89 -129 93 -126 98 -124  curveto
151 -91 178 -55 178 -16  curveto
178 -5 174 0 166 0  curveto
162 0 157 -1 151 -3  curveto
145 -5 139 -6 135 -6  curveto
118 -6 105 -1 96 8  curveto
87 17 83 30 83 46  curveto
83 62 88 76 99 87  curveto
110 98 124 104 142 104  curveto
154 104 164 101 173 97  curveto
182 92 191 86 199 78  curveto
207 70 212 62 216 54  curveto
219 46 221 34 221 20  curveto
closepath
204 404 moveto
204 388 198 375 187 364  curveto
176 353 163 348 148 348  curveto
132 348 119 353 108 364  curveto
97 375 92 388 92 404  curveto
92 419 97 432 108 443  curveto
119 454 132 460 148 460  curveto
163 460 176 454 187 443  curveto
198 432 204 419 204 404  curveto
closepath
fill
		} def

	/less
		{
26 230 moveto
26 292 lineto
523 522 lineto
523 460 lineto
90 261 lineto
523 62 lineto
523 0 lineto
26 230 lineto
closepath
fill
		} def

	/equal
		{
11 141 moveto
11 196 lineto
537 196 lineto
537 141 lineto
11 141 lineto
closepath
11 335 moveto
11 390 lineto
537 390 lineto
537 335 lineto
11 335 lineto
closepath
fill
		} def

	/greater
		{
26 0 moveto
26 62 lineto
459 261 lineto
26 460 lineto
26 522 lineto
523 292 lineto
523 230 lineto
26 0 lineto
closepath
fill
		} def

	/question
		{
286 39 moveto
286 23 280 10 269 0  curveto
258 -11 245 -17 230 -17  curveto
214 -17 201 -11 190 0  curveto
179 10 174 23 174 39  curveto
174 54 179 67 190 78  curveto
201 89 214 95 230 95  curveto
245 95 258 89 269 78  curveto
280 67 286 54 286 39  curveto
closepath
412 514 moveto
412 488 403 462 387 434  curveto
370 406 351 379 330 355  curveto
324 347 316 339 308 329  curveto
299 319 291 307 283 293  curveto
275 278 267 260 260 240  curveto
253 220 248 195 245 167  curveto
224 167 lineto
229 211 237 249 247 282  curveto
257 314 268 344 278 372  curveto
288 400 296 426 304 451  curveto
312 475 316 501 316 529  curveto
316 545 313 560 308 576  curveto
303 591 296 604 287 616  curveto
278 627 267 636 254 643  curveto
241 650 227 654 211 654  curveto
201 654 190 652 179 648  curveto
168 644 158 640 149 634  curveto
139 628 132 621 126 613  curveto
120 605 117 596 117 587  curveto
117 579 119 573 123 568  curveto
127 563 131 558 136 553  curveto
141 548 146 543 150 538  curveto
154 533 157 527 157 520  curveto
157 506 152 495 144 486  curveto
135 477 126 473 117 473  curveto
103 473 92 478 83 488  curveto
74 498 70 515 70 538  curveto
70 558 73 577 81 595  curveto
88 613 98 629 112 643  curveto
140 671 179 686 228 686  curveto
284 686 331 668 367 632  curveto
376 622 386 608 396 588  curveto
406 568 412 544 412 514  curveto
closepath
fill
		} def

	/at
		{
11 0 moveto
11 55 lineto
537 55 lineto
537 0 lineto
11 0 lineto
closepath
11 194 moveto
11 249 lineto
537 249 lineto
537 194 lineto
11 194 lineto
closepath
530 451 moveto
526 440 519 430 510 421  curveto
501 411 491 403 479 396  curveto
467 389 454 384 440 380  curveto
426 376 411 374 397 374  curveto
375 374 354 376 334 382  curveto
314 387 294 393 275 400  curveto
255 406 236 412 218 418  curveto
199 423 180 426 161 426  curveto
137 426 118 421 104 412  curveto
90 402 74 388 58 370  curveto
18 396 lineto
30 414 43 428 56 438  curveto
69 448 82 456 95 462  curveto
108 467 121 470 133 472  curveto
145 473 157 474 168 474  curveto
188 474 208 471 226 465  curveto
244 459 263 453 281 447  curveto
299 441 316 435 334 429  curveto
352 423 371 421 391 421  curveto
413 421 432 425 448 434  curveto
464 443 479 457 493 475  curveto
530 451 lineto
530 451 lineto
closepath
fill
		} def

	/A
		{
317 528 moveto
204 260 lineto
430 260 lineto
317 528 lineto
closepath
434 0 moveto
434 18 lineto
451 18 466 20 479 25  curveto
492 29 499 40 499 58  curveto
499 65 497 74 493 86  curveto
444 218 lineto
185 218 lineto
140 94 lineto
134 78 131 66 131 58  curveto
131 44 136 34 146 28  curveto
156 21 172 18 196 18  curveto
196 0 lineto
4 0 lineto
4 18 lineto
18 18 29 19 37 23  curveto
45 26 52 30 58 36  curveto
63 42 67 49 71 57  curveto
74 65 78 74 82 84  curveto
330 673 lineto
356 673 lineto
606 84 lineto
610 74 613 66 617 58  curveto
620 50 624 43 630 37  curveto
635 31 642 26 650 23  curveto
658 19 670 18 684 18  curveto
684 0 lineto
434 0 lineto
closepath
fill
		} def

	/B
		{
478 177 moveto
478 198 475 216 470 231  curveto
465 245 459 258 451 268  curveto
443 278 435 287 425 293  curveto
415 299 405 305 395 311  curveto
379 318 364 323 348 325  curveto
332 327 316 328 301 328  curveto
223 328 lineto
223 84 lineto
223 72 225 62 230 54  curveto
234 46 245 42 263 42  curveto
327 42 lineto
353 42 376 45 395 53  curveto
414 61 430 71 442 84  curveto
454 96 463 111 469 127  curveto
475 143 478 159 478 177  curveto
closepath
460 497 moveto
460 521 455 542 445 560  curveto
435 577 421 591 403 602  curveto
385 612 365 620 341 625  curveto
317 629 292 632 265 632  curveto
245 632 233 631 229 630  curveto
225 628 223 626 223 622  curveto
223 370 lineto
305 370 lineto
327 370 347 372 366 377  curveto
384 381 401 389 415 399  curveto
429 409 440 422 448 438  curveto
456 454 460 473 460 497  curveto
closepath
592 185 moveto
592 168 589 152 583 136  curveto
577 120 570 105 561 91  curveto
552 77 542 64 531 53  curveto
519 42 508 34 496 28  curveto
488 24 478 20 468 17  curveto
457 13 446 10 435 8  curveto
423 5 412 3 401 2  curveto
390 0 380 0 371 0  curveto
29 0 lineto
29 18 lineto
59 18 82 22 97 31  curveto
111 39 119 57 119 84  curveto
119 590 lineto
119 612 112 629 100 639  curveto
88 649 64 655 29 655  curveto
29 673 lineto
300 673 lineto
389 673 455 659 498 631  curveto
541 603 563 559 563 497  curveto
563 463 552 434 532 410  curveto
512 386 480 367 436 354  curveto
436 352 lineto
486 340 525 320 552 290  curveto
578 260 592 225 592 185  curveto
closepath
fill
		} def

	/C
		{
404 0 moveto
404 18 lineto
434 18 454 20 465 26  curveto
476 32 482 38 482 46  curveto
482 53 479 60 474 68  curveto
469 76 464 84 459 93  curveto
332 292 lineto
170 83 lineto
166 77 162 72 160 67  curveto
157 62 156 57 156 51  curveto
156 41 160 33 169 27  curveto
178 21 195 18 221 18  curveto
221 0 lineto
-9 0 lineto
-9 18 lineto
6 18 19 19 30 22  curveto
40 24 50 28 58 33  curveto
66 37 73 43 80 50  curveto
86 57 93 65 101 75  curveto
305 333 lineto
108 609 lineto
96 625 84 636 70 644  curveto
56 651 38 655 15 655  curveto
15 673 lineto
315 673 lineto
315 655 lineto
285 655 264 652 253 648  curveto
242 643 237 636 237 627  curveto
237 621 238 617 240 613  curveto
242 609 244 604 248 599  curveto
369 413 lineto
506 590 lineto
511 596 516 603 520 610  curveto
524 616 526 622 526 628  curveto
526 636 521 643 511 648  curveto
501 652 482 655 455 655  curveto
455 673 lineto
687 673 lineto
687 655 lineto
669 655 655 653 643 650  curveto
631 647 621 643 613 637  curveto
605 631 597 623 590 615  curveto
582 607 574 597 566 587  curveto
396 375 lineto
607 70 lineto
617 54 629 42 643 32  curveto
656 22 676 18 704 18  curveto
704 0 lineto
404 0 lineto
closepath
fill
		} def

	/D
		{
290 517 moveto
72 49 lineto
484 49 lineto
290 517 lineto
closepath
6 0 moveto
326 688 lineto
608 0 lineto
6 0 lineto
closepath
fill
		} def

	/E
		{
571 0 moveto
32 0 lineto
32 18 lineto
46 18 58 18 70 20  curveto
81 22 90 25 98 30  curveto
106 34 112 41 116 50  curveto
120 58 122 70 122 84  curveto
122 590 lineto
122 614 115 631 102 641  curveto
88 650 65 655 32 655  curveto
32 673 lineto
563 673 lineto
563 525 lineto
536 525 lineto
532 537 529 550 527 562  curveto
525 574 521 584 515 594  curveto
509 603 500 610 489 616  curveto
477 622 461 625 439 625  curveto
226 625 lineto
226 375 lineto
385 375 lineto
405 375 421 377 434 382  curveto
446 386 456 393 464 401  curveto
472 409 477 419 480 431  curveto
482 442 484 455 484 469  curveto
507 469 lineto
507 239 lineto
484 239 lineto
484 253 482 265 480 277  curveto
477 289 472 299 464 307  curveto
456 315 446 321 433 326  curveto
420 330 404 333 384 333  curveto
226 333 lineto
226 87 lineto
226 71 229 60 235 53  curveto
241 45 251 42 267 42  curveto
270 42 276 42 284 42  curveto
292 42 299 43 304 43  curveto
430 46 lineto
453 46 473 50 490 57  curveto
506 64 521 73 533 85  curveto
545 96 555 109 563 124  curveto
571 138 578 154 586 170  curveto
617 170 lineto
571 0 lineto
closepath
fill
		} def

	/F
		{
334 534 moveto
306 534 281 528 258 518  curveto
235 508 215 494 199 477  curveto
183 459 170 439 161 417  curveto
151 394 147 370 147 346  curveto
147 302 153 267 165 241  curveto
177 215 192 194 211 180  curveto
229 165 250 155 272 150  curveto
294 145 314 143 334 143  curveto
334 534 lineto
closepath
623 343 moveto
623 371 618 396 608 420  curveto
598 443 584 463 567 480  curveto
550 497 530 510 508 520  curveto
485 529 461 534 436 534  curveto
436 143 lineto
458 143 481 146 503 152  curveto
525 158 545 168 563 184  curveto
581 199 595 219 606 245  curveto
617 271 623 303 623 343  curveto
closepath
741 331 moveto
741 285 730 247 708 217  curveto
686 187 658 163 624 146  curveto
588 128 554 117 524 113  curveto
493 109 464 108 436 108  curveto
436 74 444 51 460 38  curveto
476 25 502 18 538 18  curveto
538 0 lineto
232 0 lineto
232 18 lineto
267 18 293 25 309 38  curveto
325 50 334 74 334 108  curveto
308 108 286 108 268 110  curveto
249 112 232 114 218 118  curveto
203 121 190 125 178 130  curveto
166 134 154 140 143 146  curveto
103 165 74 191 55 223  curveto
35 255 26 292 26 333  curveto
26 358 30 385 40 413  curveto
50 441 65 465 87 487  curveto
106 506 126 521 148 532  curveto
169 542 190 550 212 555  curveto
234 560 255 563 276 564  curveto
296 564 316 565 334 565  curveto
334 597 326 620 310 634  curveto
294 647 269 654 233 655  curveto
233 673 lineto
537 673 lineto
537 655 lineto
501 654 475 647 459 634  curveto
443 620 436 597 436 565  curveto
454 565 474 564 495 563  curveto
516 562 537 559 558 554  curveto
579 549 600 541 621 531  curveto
641 520 661 505 681 486  curveto
701 466 716 442 726 415  curveto
736 388 741 360 741 331  curveto
closepath
fill
		} def

	/G
		{
584 511 moveto
581 535 576 555 568 570  curveto
560 585 545 598 522 610  curveto
508 616 493 621 477 624  curveto
460 626 440 628 417 628  curveto
229 628 lineto
229 80 lineto
229 66 231 55 236 47  curveto
240 39 247 32 255 28  curveto
263 24 273 21 284 20  curveto
295 18 307 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
47 18 58 18 69 19  curveto
79 20 89 23 97 27  curveto
105 31 112 38 117 46  curveto
122 54 125 66 125 81  curveto
125 550 lineto
125 570 122 586 117 600  curveto
112 613 105 623 96 631  curveto
87 639 76 644 64 648  curveto
52 651 38 653 24 653  curveto
24 673 lineto
592 673 lineto
609 511 lineto
584 511 lineto
closepath
fill
		} def

	/H
		{
445 0 moveto
445 18 lineto
459 18 471 18 483 20  curveto
494 22 503 25 511 30  curveto
519 34 525 41 529 49  curveto
533 57 535 68 535 82  curveto
535 323 lineto
233 323 lineto
233 83 lineto
233 57 240 39 255 31  curveto
269 22 292 18 323 18  curveto
323 0 lineto
39 0 lineto
39 18 lineto
69 18 91 22 106 30  curveto
121 38 129 55 129 83  curveto
129 590 lineto
129 614 122 631 109 641  curveto
95 650 72 655 39 655  curveto
39 673 lineto
323 673 lineto
323 655 lineto
289 655 265 650 252 640  curveto
239 630 233 613 233 589  curveto
233 365 lineto
535 365 lineto
535 591 lineto
535 616 528 633 514 642  curveto
500 650 477 655 445 655  curveto
445 673 lineto
729 673 lineto
729 655 lineto
697 655 674 650 660 641  curveto
646 632 639 615 639 590  curveto
639 84 lineto
639 56 646 38 662 30  curveto
677 22 699 18 729 18  curveto
729 0 lineto
445 0 lineto
closepath
fill
		} def

	/I
		{
32 0 moveto
32 18 lineto
50 18 65 19 77 22  curveto
89 24 98 28 105 34  curveto
111 40 116 47 118 55  curveto
120 63 122 73 122 85  curveto
122 593 lineto
122 607 119 618 114 626  curveto
109 634 102 641 94 645  curveto
85 649 75 652 65 653  curveto
54 654 43 655 32 655  curveto
32 673 lineto
316 673 lineto
316 655 lineto
283 655 260 650 246 641  curveto
232 631 226 615 226 591  curveto
226 85 lineto
226 61 232 44 244 34  curveto
256 23 280 18 316 18  curveto
316 0 lineto
32 0 lineto
closepath
fill
		} def

	/J
		{
470 380 moveto
468 394 466 409 464 427  curveto
462 445 460 463 458 481  curveto
455 499 452 517 448 533  curveto
444 549 440 563 435 575  curveto
423 597 410 614 395 628  curveto
380 642 363 649 344 649  curveto
334 649 325 646 318 641  curveto
310 636 304 630 299 623  curveto
293 615 289 607 287 598  curveto
284 588 283 579 283 571  curveto
283 557 287 541 295 523  curveto
303 505 318 485 340 464  curveto
359 444 380 428 402 414  curveto
424 400 447 389 470 380  curveto
closepath
549 309 moveto
547 279 543 247 538 212  curveto
533 177 523 144 508 113  curveto
494 87 480 65 466 48  curveto
452 31 436 18 420 8  curveto
403 -1 385 -8 367 -12  curveto
348 -16 328 -18 308 -18  curveto
290 -18 274 -17 261 -15  curveto
248 -13 237 -11 227 -7  curveto
217 -3 209 0 201 6  curveto
193 11 186 18 178 26  curveto
159 44 146 66 140 91  curveto
134 115 131 138 131 159  curveto
131 163 132 175 134 193  curveto
136 211 139 231 142 252  curveto
145 273 148 293 150 311  curveto
152 329 154 341 154 347  curveto
154 355 152 362 150 368  curveto
147 374 144 380 140 384  curveto
136 388 131 391 127 393  curveto
123 395 119 396 117 396  curveto
104 396 93 393 85 389  curveto
76 384 69 378 63 371  curveto
57 364 51 357 47 349  curveto
42 341 38 333 34 327  curveto
18 332 lineto
64 419 lineto
69 429 79 439 93 449  curveto
107 459 125 464 146 464  curveto
173 464 194 456 210 441  curveto
219 431 227 419 233 404  curveto
239 389 242 374 242 359  curveto
242 353 240 342 238 326  curveto
236 309 233 290 231 269  curveto
228 248 225 227 223 206  curveto
221 184 220 166 220 152  curveto
220 133 222 115 226 98  curveto
230 81 236 66 244 53  curveto
252 40 263 30 277 22  curveto
290 14 306 10 324 10  curveto
332 10 341 11 351 14  curveto
361 16 370 20 380 26  curveto
390 32 399 39 407 48  curveto
415 56 423 66 429 78  curveto
434 88 439 100 444 113  curveto
449 125 454 140 458 157  curveto
462 173 465 192 468 213  curveto
470 233 472 257 472 284  curveto
472 286 472 289 472 294  curveto
472 299 471 304 471 310  curveto
471 316 471 321 471 326  curveto
471 331 471 335 471 337  curveto
457 343 443 350 429 358  curveto
415 366 401 374 387 382  curveto
373 390 361 399 350 407  curveto
338 415 329 422 322 430  curveto
298 453 280 476 268 500  curveto
255 523 249 548 249 574  curveto
249 595 252 613 260 627  curveto
268 641 276 652 285 661  curveto
294 670 303 677 313 682  curveto
323 686 335 689 350 689  curveto
378 689 406 678 434 656  curveto
462 634 487 601 509 558  curveto
521 532 531 503 537 472  curveto
543 441 547 401 549 353  curveto
623 326 lineto
623 273 lineto
549 309 lineto
closepath
fill
		} def

	/K
		{
418 0 moveto
418 18 lineto
448 18 469 20 479 26  curveto
489 32 495 38 495 46  curveto
495 54 492 62 487 70  curveto
481 78 476 85 471 91  curveto
262 327 lineto
229 297 lineto
229 82 lineto
229 56 236 39 250 31  curveto
264 22 287 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
68 18 91 22 105 32  curveto
118 41 125 58 125 83  curveto
125 589 lineto
125 612 118 629 106 639  curveto
94 649 70 655 35 655  curveto
35 673 lineto
319 673 lineto
319 655 lineto
283 655 259 650 247 640  curveto
235 630 229 612 229 588  curveto
229 360 lineto
280 402 325 442 365 479  curveto
405 516 438 549 466 578  curveto
475 588 482 597 487 606  curveto
491 615 492 623 488 631  curveto
484 638 476 644 463 648  curveto
450 652 431 655 405 655  curveto
405 673 lineto
665 673 lineto
665 655 lineto
652 655 641 654 631 652  curveto
621 650 612 648 603 644  curveto
594 640 585 634 576 627  curveto
567 620 557 611 547 600  curveto
527 579 510 561 495 546  curveto
480 530 465 515 450 500  curveto
434 485 418 469 400 452  curveto
382 435 360 415 336 392  curveto
593 102 lineto
605 87 617 75 628 65  curveto
638 55 649 46 659 40  curveto
669 33 679 28 689 24  curveto
699 20 710 18 722 18  curveto
722 0 lineto
418 0 lineto
closepath
fill
		} def

	/L
		{
408 0 moveto
408 18 lineto
414 18 422 18 430 19  curveto
438 20 446 22 454 26  curveto
461 30 467 35 472 41  curveto
476 47 479 55 479 65  curveto
479 72 478 79 476 85  curveto
474 91 471 101 466 114  curveto
310 496 lineto
166 107 lineto
162 98 159 89 157 80  curveto
155 70 154 63 154 58  curveto
154 40 160 29 172 25  curveto
184 20 200 18 221 18  curveto
221 0 lineto
6 0 lineto
6 18 lineto
14 18 24 19 35 23  curveto
45 27 56 32 66 38  curveto
76 44 85 51 93 60  curveto
101 68 107 78 111 89  curveto
336 688 lineto
584 98 lineto
588 88 592 78 598 69  curveto
604 59 611 51 619 43  curveto
627 35 636 29 646 25  curveto
656 20 667 18 680 18  curveto
680 0 lineto
408 0 lineto
closepath
fill
		} def

	/M
		{
603 0 moveto
603 18 lineto
621 18 636 19 648 22  curveto
660 24 669 28 676 34  curveto
682 40 687 47 689 55  curveto
691 63 693 73 693 85  curveto
693 572 lineto
448 0 lineto
430 0 lineto
170 543 lineto
170 85 lineto
170 63 177 46 191 35  curveto
205 23 228 18 260 18  curveto
260 0 lineto
31 0 lineto
31 18 lineto
91 18 121 40 121 84  curveto
121 582 lineto
121 597 119 609 117 618  curveto
115 627 110 634 104 639  curveto
98 644 88 648 76 650  curveto
64 652 48 653 28 655  curveto
28 673 lineto
229 673 lineto
463 163 lineto
687 673 lineto
885 673 lineto
885 655 lineto
880 655 875 655 871 655  curveto
866 655 862 656 858 656  curveto
834 656 818 650 810 640  curveto
801 630 797 615 797 597  curveto
797 85 lineto
797 73 798 63 800 55  curveto
802 47 807 40 813 35  curveto
819 29 828 25 840 22  curveto
852 19 867 18 887 18  curveto
887 0 lineto
603 0 lineto
closepath
fill
		} def

	/N
		{
720 655 moveto
700 655 685 653 673 650  curveto
661 647 651 643 645 637  curveto
639 631 635 623 633 615  curveto
631 606 630 596 630 586  curveto
630 -8 lineto
608 -8 lineto
168 539 lineto
168 84 lineto
168 60 175 43 191 33  curveto
207 23 229 18 258 18  curveto
258 0 lineto
29 0 lineto
29 18 lineto
58 18 80 23 96 34  curveto
111 44 119 61 119 84  curveto
119 602 lineto
111 613 104 622 98 629  curveto
92 636 86 642 81 646  curveto
75 650 70 652 64 654  curveto
58 655 52 656 46 656  curveto
44 656 41 655 39 655  curveto
37 655 34 655 31 655  curveto
31 673 lineto
198 673 lineto
581 185 lineto
581 590 lineto
581 613 574 630 562 640  curveto
549 650 525 655 491 655  curveto
491 673 lineto
720 673 lineto
720 655 lineto
720 655 lineto
closepath
fill
		} def

	/O
		{
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 485 171 448  curveto
162 411 158 371 158 328  curveto
158 292 160 258 165 227  curveto
170 195 180 164 196 133  curveto
203 118 213 104 225 91  curveto
237 77 250 65 266 55  curveto
281 45 298 37 317 31  curveto
336 25 356 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/P
		{
461 0 moveto
461 18 lineto
497 18 521 23 533 33  curveto
545 43 551 60 551 84  curveto
551 632 lineto
218 632 lineto
219 90 lineto
219 78 220 67 222 58  curveto
224 49 228 42 234 36  curveto
240 30 249 25 261 22  curveto
273 19 289 18 309 18  curveto
309 0 lineto
25 0 lineto
25 18 lineto
45 18 61 19 73 22  curveto
85 25 94 30 100 36  curveto
106 42 110 49 112 58  curveto
114 66 115 76 115 88  curveto
115 576 lineto
115 585 113 594 111 604  curveto
109 613 104 621 98 629  curveto
91 637 82 643 71 648  curveto
59 652 45 655 27 655  curveto
27 673 lineto
742 673 lineto
742 655 lineto
724 655 709 652 698 648  curveto
686 643 677 637 671 630  curveto
665 623 660 615 658 606  curveto
655 596 654 587 654 578  curveto
655 89 lineto
655 76 656 65 658 56  curveto
660 47 665 40 672 34  curveto
678 28 687 24 699 22  curveto
711 19 726 18 745 18  curveto
745 0 lineto
461 0 lineto
closepath
fill
		} def

	/Q
		{
508 251 moveto
501 271 492 285 480 293  curveto
468 300 456 304 442 304  curveto
317 304 lineto
301 304 288 300 276 293  curveto
264 286 255 272 248 251  curveto
233 252 lineto
234 263 235 276 237 292  curveto
238 307 239 322 239 338  curveto
239 353 238 368 237 382  curveto
235 396 234 410 233 423  curveto
248 424 lineto
254 402 264 388 276 381  curveto
288 374 300 371 314 371  curveto
442 371 lineto
474 371 496 388 508 424  curveto
523 423 lineto
521 413 520 400 519 384  curveto
517 368 517 353 517 338  curveto
517 322 517 307 519 292  curveto
520 276 521 263 523 252  curveto
508 251 lineto
closepath
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 487 170 453  curveto
161 419 157 377 157 328  curveto
157 292 159 258 165 226  curveto
170 194 181 162 197 130  curveto
205 114 215 100 227 87  curveto
239 73 253 62 269 52  curveto
285 42 302 35 320 30  curveto
338 24 358 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/R
		{
455 477 moveto
455 502 452 525 447 545  curveto
441 565 432 581 420 594  curveto
406 607 388 617 366 624  curveto
343 631 320 635 298 635  curveto
281 635 268 634 258 633  curveto
248 632 240 630 235 628  curveto
229 626 226 623 224 619  curveto
222 615 222 611 222 607  curveto
222 353 lineto
226 349 233 347 243 345  curveto
252 343 265 342 282 342  curveto
286 342 293 342 303 343  curveto
313 343 325 344 337 346  curveto
349 347 361 349 373 351  curveto
385 353 394 356 402 360  curveto
417 367 430 380 440 399  curveto
450 418 455 444 455 477  curveto
closepath
563 486 moveto
563 474 561 460 559 446  curveto
556 432 551 417 543 403  curveto
535 389 525 375 512 361  curveto
498 347 481 335 460 325  curveto
422 306 374 297 316 297  curveto
303 297 288 297 271 298  curveto
253 298 237 299 222 300  curveto
222 81 lineto
222 56 229 39 243 31  curveto
257 22 280 18 312 18  curveto
312 0 lineto
28 0 lineto
28 18 lineto
46 18 62 19 74 22  curveto
86 25 95 29 101 35  curveto
107 41 112 48 114 56  curveto
116 64 118 74 118 86  curveto
118 588 lineto
118 614 111 631 97 641  curveto
83 650 60 655 28 655  curveto
28 673 lineto
303 673 lineto
340 673 373 670 403 665  curveto
433 660 459 652 481 641  curveto
508 627 528 606 542 577  curveto
556 548 563 518 563 486  curveto
closepath
fill
		} def

	/S
		{
552 0 moveto
5 0 lineto
286 327 lineto
17 673 lineto
535 673 lineto
545 522 lineto
526 522 lineto
517 560 502 587 482 603  curveto
462 619 435 627 402 627  curveto
180 627 lineto
381 369 lineto
145 94 lineto
446 94 lineto
478 94 503 102 522 118  curveto
541 134 557 163 569 205  curveto
589 205 lineto
552 0 lineto
closepath
fill
		} def

	/T
		{
581 500 moveto
581 526 576 547 568 564  curveto
559 580 548 594 535 604  curveto
521 614 506 621 489 625  curveto
471 629 454 631 438 632  curveto
372 634 lineto
372 85 lineto
372 59 378 41 392 32  curveto
406 22 429 18 462 18  curveto
462 0 lineto
178 0 lineto
178 18 lineto
210 18 233 22 247 31  curveto
261 40 268 58 268 85  curveto
268 634 lineto
202 632 lineto
176 631 154 627 136 620  curveto
118 613 103 604 91 592  curveto
79 580 71 567 66 551  curveto
61 535 59 518 59 500  curveto
33 502 lineto
38 673 lineto
602 673 lineto
607 502 lineto
581 500 lineto
closepath
fill
		} def

	/U
		{
694 655 moveto
678 655 665 654 655 652  curveto
644 650 635 648 627 644  curveto
619 640 612 634 606 628  curveto
600 622 594 614 588 605  curveto
398 313 lineto
398 83 lineto
398 57 405 40 419 31  curveto
433 22 456 18 488 18  curveto
488 0 lineto
204 0 lineto
204 18 lineto
235 18 258 22 272 31  curveto
286 39 294 57 294 83  curveto
294 300 lineto
86 603 lineto
70 625 55 639 40 645  curveto
25 651 9 655 -8 655  curveto
-8 673 lineto
289 673 lineto
289 655 lineto
267 655 249 653 234 649  curveto
218 645 211 637 211 626  curveto
211 621 212 616 215 611  curveto
217 605 222 597 230 587  curveto
376 363 lineto
517 596 lineto
521 603 524 609 526 613  curveto
528 617 529 623 529 629  curveto
529 639 523 645 513 649  curveto
502 653 485 655 462 655  curveto
462 673 lineto
694 673 lineto
694 655 lineto
694 655 lineto
closepath
fill
		} def

	/V
		{
437 -52 moveto
437 -63 435 -75 433 -87  curveto
430 -99 426 -112 421 -124  curveto
416 -136 410 -147 403 -159  curveto
395 -170 387 -180 379 -189  curveto
365 -202 349 -213 331 -221  curveto
313 -229 294 -233 275 -233  curveto
247 -233 226 -226 213 -214  curveto
199 -201 193 -188 193 -174  curveto
193 -164 195 -156 199 -150  curveto
203 -144 209 -140 215 -137  curveto
221 -134 228 -132 235 -132  curveto
241 -131 247 -131 253 -131  curveto
266 -131 279 -133 291 -139  curveto
303 -144 314 -147 325 -147  curveto
343 -147 359 -140 373 -127  curveto
387 -114 395 -96 395 -73  curveto
395 -53 390 -39 381 -30  curveto
372 -21 360 -17 345 -17  curveto
317 -17 295 -17 279 -17  curveto
262 -17 249 -18 239 -18  curveto
229 -18 222 -19 218 -19  curveto
213 -19 209 -20 206 -20  curveto
183 -20 161 -14 141 -4  curveto
121 6 103 21 88 41  curveto
73 61 61 85 52 113  curveto
43 141 39 172 39 207  curveto
39 245 46 282 62 320  curveto
77 358 100 392 130 422  curveto
157 449 184 469 212 481  curveto
240 493 273 500 312 500  curveto
326 500 340 498 352 495  curveto
364 491 375 487 384 482  curveto
393 477 400 471 405 465  curveto
410 458 413 451 413 445  curveto
413 430 407 420 397 414  curveto
387 408 374 405 358 405  curveto
338 405 319 407 300 413  curveto
280 419 260 422 239 422  curveto
210 422 185 415 165 401  curveto
145 387 128 370 115 350  curveto
102 330 93 308 87 286  curveto
81 263 78 243 78 227  curveto
78 205 82 184 91 162  curveto
100 140 112 122 126 108  curveto
135 98 146 92 158 88  curveto
170 84 183 82 197 82  curveto
216 82 236 82 257 84  curveto
277 86 295 87 311 87  curveto
327 87 341 84 355 80  curveto
369 75 381 67 393 56  curveto
406 42 417 25 425 5  curveto
433 -15 437 -34 437 -52  curveto
closepath
fill
		} def

	/W
		{
441 0 moveto
457 152 lineto
469 156 482 162 495 169  curveto
507 175 519 184 529 194  curveto
552 217 569 247 581 283  curveto
593 319 599 360 599 404  curveto
599 450 592 489 579 523  curveto
566 557 551 582 534 600  curveto
516 617 496 631 473 641  curveto
450 651 421 656 385 656  curveto
348 656 318 651 296 641  curveto
273 631 253 617 236 600  curveto
216 580 200 552 188 517  curveto
176 481 171 445 171 407  curveto
171 359 177 317 189 281  curveto
201 245 219 215 242 193  curveto
251 183 261 175 273 169  curveto
285 163 298 157 313 152  curveto
329 0 lineto
34 0 lineto
34 162 lineto
49 162 lineto
55 134 63 117 73 111  curveto
83 104 97 101 115 101  curveto
273 101 lineto
271 129 lineto
236 139 209 150 189 160  curveto
169 170 151 184 135 201  curveto
107 228 87 259 74 294  curveto
60 329 54 365 54 401  curveto
54 435 60 470 74 504  curveto
87 538 106 567 132 593  curveto
160 621 195 643 239 661  curveto
282 679 331 688 385 688  curveto
437 688 484 679 528 662  curveto
572 645 609 622 639 592  curveto
663 568 681 538 695 504  curveto
709 469 716 434 716 400  curveto
716 367 709 333 697 298  curveto
685 262 664 230 634 200  curveto
618 184 599 170 578 159  curveto
557 148 531 138 499 129  curveto
497 101 lineto
654 101 lineto
666 101 676 102 684 105  curveto
692 107 698 111 703 117  curveto
707 122 711 128 713 136  curveto
715 143 718 152 721 162  curveto
736 162 lineto
736 0 lineto
441 0 lineto
closepath
fill
		} def

	/X
		{
40 0 moveto
40 194 lineto
58 194 lineto
60 172 63 155 67 142  curveto
71 128 76 118 83 111  curveto
90 103 99 98 110 96  curveto
120 94 134 93 150 93  curveto
485 93 lineto
501 93 514 94 525 96  curveto
536 98 545 102 553 109  curveto
561 116 567 126 571 140  curveto
575 153 579 171 581 194  curveto
599 194 lineto
599 0 lineto
40 0 lineto
closepath
474 250 moveto
472 271 468 286 462 294  curveto
455 302 442 306 423 306  curveto
217 306 lineto
195 306 181 301 176 293  curveto
170 284 167 270 165 250  curveto
147 250 lineto
147 457 lineto
165 457 lineto
166 435 170 421 177 413  curveto
183 405 196 401 216 401  curveto
422 401 lineto
437 401 449 403 458 409  curveto
467 415 472 431 474 457  curveto
492 457 lineto
492 250 lineto
474 250 lineto
closepath
561 522 moveto
559 545 553 561 542 570  curveto
530 578 514 583 494 583  curveto
146 583 lineto
119 583 101 577 93 566  curveto
84 554 79 540 79 522  curveto
62 522 lineto
62 673 lineto
577 673 lineto
577 522 lineto
561 522 lineto
closepath
fill
		} def

	/Y
		{
781 666 moveto
770 662 762 657 756 653  curveto
750 649 745 644 742 638  curveto
738 632 736 625 735 617  curveto
733 609 732 599 732 588  curveto
725 464 lineto
723 436 714 410 697 388  curveto
680 366 659 348 635 336  curveto
621 329 609 323 597 319  curveto
585 315 573 311 559 308  curveto
545 305 529 303 512 302  curveto
494 300 474 300 450 300  curveto
450 86 lineto
450 61 456 43 468 33  curveto
480 23 504 18 540 18  curveto
540 0 lineto
256 0 lineto
256 18 lineto
291 18 315 23 327 33  curveto
339 43 346 60 346 85  curveto
346 300 lineto
322 300 301 300 284 302  curveto
266 303 251 305 237 308  curveto
223 311 210 315 198 319  curveto
186 323 173 329 161 336  curveto
136 348 115 366 98 388  curveto
81 410 72 436 71 464  curveto
64 588 lineto
63 599 62 609 61 617  curveto
59 625 57 632 54 638  curveto
50 644 46 649 40 653  curveto
34 657 25 662 15 666  curveto
15 684 lineto
32 682 47 681 59 679  curveto
71 677 81 675 90 672  curveto
98 669 106 665 112 661  curveto
118 657 125 652 131 646  curveto
143 634 153 618 162 600  curveto
171 582 176 567 178 555  curveto
186 469 lineto
188 441 194 418 203 402  curveto
211 385 223 372 237 363  curveto
251 353 267 347 285 344  curveto
303 341 324 340 346 340  curveto
346 587 lineto
346 612 339 630 326 640  curveto
313 650 290 655 256 655  curveto
256 673 lineto
540 673 lineto
540 655 lineto
505 655 481 650 469 640  curveto
456 630 450 612 450 588  curveto
450 340 lineto
472 340 492 341 510 344  curveto
528 347 545 353 559 363  curveto
573 372 584 385 593 402  curveto
601 418 607 441 610 469  curveto
618 555 lineto
619 567 624 582 633 600  curveto
642 618 653 634 665 646  curveto
671 652 677 657 683 661  curveto
689 665 697 669 706 672  curveto
714 675 725 677 737 679  curveto
749 681 763 682 781 684  curveto
781 666 lineto
781 666 lineto
closepath
fill
		} def

	/Z
		{
611 0 moveto
44 0 lineto
44 19 lineto
473 631 lineto
243 631 lineto
211 631 187 627 169 619  curveto
151 611 137 601 127 589  curveto
117 577 110 563 106 547  curveto
102 531 97 514 93 498  curveto
68 498 lineto
83 673 lineto
605 673 lineto
605 646 lineto
192 42 lineto
440 42 lineto
469 42 493 45 513 52  curveto
532 58 548 68 560 80  curveto
572 92 582 106 589 123  curveto
595 140 601 159 607 181  curveto
636 181 lineto
611 0 lineto
closepath
fill
		} def

	/bracketleft
		{
86 -155 moveto
86 674 lineto
299 674 lineto
299 649 lineto
221 649 lineto
199 649 184 645 176 637  curveto
167 629 163 616 163 598  curveto
163 -81 lineto
163 -96 167 -108 175 -117  curveto
183 -125 198 -130 220 -130  curveto
299 -130 lineto
299 -155 lineto
86 -155 lineto
closepath
fill
		} def

	/backslash
		{
293 65 moveto
293 47 286 31 274 19  curveto
261 6 246 0 228 0  curveto
210 0 194 6 182 19  curveto
169 31 163 47 163 65  curveto
163 82 169 97 181 110  curveto
193 123 209 130 228 130  curveto
247 130 263 123 275 110  curveto
287 97 293 82 293 65  curveto
closepath
701 65 moveto
701 47 694 31 681 19  curveto
668 6 653 0 636 0  curveto
618 0 603 6 590 19  curveto
577 31 571 47 571 65  curveto
571 82 577 97 589 110  curveto
601 123 617 130 636 130  curveto
655 130 671 123 683 110  curveto
695 97 701 82 701 65  curveto
closepath
497 413 moveto
497 395 490 379 477 367  curveto
464 354 449 348 432 348  curveto
414 348 399 354 386 367  curveto
373 379 367 395 367 413  curveto
367 430 373 445 385 458  curveto
397 471 413 478 432 478  curveto
451 478 467 471 479 458  curveto
491 445 497 430 497 413  curveto
closepath
fill
		} def

	/bracketright
		{
33 -155 moveto
33 -130 lineto
112 -130 lineto
133 -130 148 -125 156 -117  curveto
164 -108 169 -96 169 -81  curveto
169 598 lineto
169 616 164 629 156 637  curveto
147 645 132 649 111 649  curveto
33 649 lineto
33 674 lineto
246 674 lineto
246 -155 lineto
33 -155 lineto
closepath
fill
		} def

	/asciicircum
		{
15 0 moveto
15 55 lineto
306 55 lineto
306 674 lineto
361 674 lineto
361 55 lineto
652 55 lineto
652 0 lineto
15 0 lineto
closepath
fill
		} def

	/underscore
		{
-2 -252 moveto
-2 -206 lineto
502 -206 lineto
502 -252 lineto
-2 -252 lineto
closepath
fill
		} def

	/quoteleft
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/a
		{
407 223 moveto
403 249 399 273 395 294  curveto
391 314 387 332 382 348  curveto
377 363 371 377 365 389  curveto
358 401 350 412 340 422  curveto
326 436 311 446 296 452  curveto
280 458 265 461 249 461  curveto
232 461 217 454 205 442  curveto
193 430 183 416 176 401  curveto
165 379 157 354 152 326  curveto
147 298 145 269 145 241  curveto
145 209 147 179 151 149  curveto
155 119 162 95 172 77  curveto
181 57 193 42 209 32  curveto
224 21 240 16 256 16  curveto
266 16 277 18 289 24  curveto
301 29 312 37 322 47  curveto
332 57 343 72 353 91  curveto
363 110 372 129 380 149  curveto
407 223 lineto
407 223 lineto
closepath
620 79 moveto
620 69 618 58 614 47  curveto
610 36 605 26 599 17  curveto
593 7 585 0 577 -6  curveto
568 -12 559 -15 549 -15  curveto
537 -15 527 -10 517 -1  curveto
507 7 499 18 491 32  curveto
483 46 475 61 469 77  curveto
462 93 456 109 451 124  curveto
445 113 438 100 431 86  curveto
423 71 412 56 396 40  curveto
378 22 355 8 327 -2  curveto
298 -12 270 -18 243 -18  curveto
217 -18 192 -13 168 -3  curveto
144 7 123 20 107 37  curveto
63 81 41 145 41 229  curveto
41 274 46 313 56 347  curveto
66 380 83 409 109 435  curveto
121 447 132 457 144 465  curveto
155 473 167 479 179 485  curveto
191 490 203 494 217 496  curveto
231 498 246 500 263 500  curveto
283 500 302 496 320 488  curveto
338 480 355 468 370 452  curveto
385 436 398 416 409 392  curveto
420 368 428 341 433 309  curveto
435 309 lineto
499 487 lineto
587 487 lineto
472 170 lineto
474 157 477 144 481 130  curveto
485 116 491 104 498 93  curveto
504 82 512 73 521 66  curveto
530 59 540 56 552 56  curveto
556 56 561 57 566 60  curveto
571 63 575 66 579 70  curveto
584 75 589 82 594 92  curveto
598 101 602 116 604 137  curveto
622 137 lineto
620 79 lineto
closepath
fill
		} def

	/b
		{
412 188 moveto
412 232 405 271 392 305  curveto
378 339 363 366 345 384  curveto
337 392 330 397 325 399  curveto
319 401 313 402 307 402  curveto
301 402 294 401 286 400  curveto
277 398 269 398 261 398  curveto
245 398 234 401 228 407  curveto
221 413 218 419 218 425  curveto
218 433 221 441 229 449  curveto
236 457 247 461 263 461  curveto
271 461 280 459 291 457  curveto
302 455 310 454 314 454  curveto
320 454 327 457 335 465  curveto
342 473 348 482 354 494  curveto
358 502 361 512 364 526  curveto
366 539 368 552 368 565  curveto
368 587 364 607 358 625  curveto
351 643 342 658 332 670  curveto
322 682 310 691 296 697  curveto
282 703 269 707 255 707  curveto
239 707 225 703 213 695  curveto
201 687 190 678 182 667  curveto
173 656 166 644 162 632  curveto
157 620 155 609 155 599  curveto
155 93 lineto
158 89 161 86 164 84  curveto
167 81 170 78 174 75  curveto
188 60 206 49 228 41  curveto
250 33 271 30 293 30  curveto
307 30 322 32 336 38  curveto
350 44 361 51 371 61  curveto
382 72 392 87 400 106  curveto
408 124 412 152 412 188  curveto
closepath
515 199 moveto
515 167 510 137 500 111  curveto
490 85 477 62 460 43  curveto
443 23 422 8 398 -2  curveto
374 -12 347 -18 319 -18  curveto
291 -18 264 -14 240 -6  curveto
215 1 188 15 158 37  curveto
156 -149 lineto
156 -160 155 -172 153 -185  curveto
151 -197 149 -210 148 -223  curveto
61 -223 lineto
63 -199 67 -173 71 -147  curveto
75 -121 77 -94 77 -67  curveto
77 588 lineto
77 614 84 638 99 660  curveto
114 682 140 703 176 721  curveto
188 727 201 731 215 735  curveto
229 739 245 741 263 741  curveto
298 741 332 732 366 716  curveto
394 702 418 683 436 659  curveto
454 635 463 609 463 580  curveto
463 566 460 551 456 537  curveto
452 522 447 510 442 501  curveto
438 493 433 486 427 479  curveto
421 471 416 465 410 459  curveto
404 453 398 447 392 443  curveto
386 438 382 434 379 432  curveto
425 412 459 381 481 339  curveto
503 297 515 250 515 199  curveto
closepath
fill
		} def

	/c
		{
522 -50 moveto
518 -84 511 -114 503 -140  curveto
495 -165 483 -185 468 -201  curveto
458 -210 447 -217 435 -223  curveto
423 -228 410 -231 396 -231  curveto
363 -231 336 -209 315 -167  curveto
310 -157 305 -145 301 -129  curveto
296 -113 291 -96 287 -76  curveto
283 -56 279 -34 275 -12  curveto
271 10 268 33 265 57  curveto
263 57 lineto
115 -216 lineto
13 -216 lineto
232 185 lineto
220 229 211 267 205 298  curveto
198 329 191 352 184 368  curveto
176 383 166 395 154 405  curveto
141 415 126 420 110 420  curveto
86 420 68 410 56 390  curveto
44 370 35 347 30 321  curveto
12 321 lineto
19 379 31 423 49 454  curveto
67 484 90 500 119 500  curveto
145 500 167 490 184 472  curveto
201 453 213 429 221 399  curveto
259 236 lineto
392 480 lineto
494 479 lineto
290 105 lineto
294 89 298 70 304 47  curveto
310 24 316 1 323 -21  curveto
329 -43 336 -64 344 -83  curveto
351 -101 358 -114 365 -121  curveto
374 -130 382 -136 389 -138  curveto
396 -140 404 -142 414 -142  curveto
436 -142 455 -134 471 -118  curveto
478 -110 484 -101 489 -91  curveto
494 -81 499 -67 503 -50  curveto
522 -50 lineto
522 -50 lineto
closepath
fill
		} def

	/d
		{
385 194 moveto
385 216 382 239 378 262  curveto
373 285 366 306 357 324  curveto
347 342 337 358 326 374  curveto
314 389 301 404 286 418  curveto
258 412 236 402 218 390  curveto
200 378 186 363 176 346  curveto
165 329 157 310 153 289  curveto
149 268 147 246 147 222  curveto
147 202 149 180 153 158  curveto
157 136 163 116 171 100  curveto
175 90 179 81 185 73  curveto
191 65 197 57 205 50  curveto
213 43 222 38 232 34  curveto
242 30 254 28 268 28  curveto
282 28 295 30 308 36  curveto
320 42 331 49 341 59  curveto
355 73 365 92 373 116  curveto
381 140 385 166 385 194  curveto
closepath
481 228 moveto
481 199 477 173 469 150  curveto
461 126 451 105 438 86  curveto
424 67 409 50 391 36  curveto
373 22 355 10 335 0  curveto
321 -6 307 -11 292 -14  curveto
276 -17 262 -19 248 -19  curveto
238 -19 226 -17 211 -15  curveto
195 -13 182 -9 170 -3  curveto
150 6 131 18 113 34  curveto
95 49 78 71 64 101  curveto
54 120 48 138 45 156  curveto
41 173 40 189 40 203  curveto
40 232 46 261 58 290  curveto
70 319 86 344 107 365  curveto
142 400 191 427 255 447  curveto
141 551 lineto
126 564 115 579 108 597  curveto
101 614 98 629 98 643  curveto
98 653 99 662 102 670  curveto
105 678 111 686 121 696  curveto
125 700 132 706 140 712  curveto
148 718 155 722 162 726  curveto
173 731 185 735 199 737  curveto
213 739 227 740 243 740  curveto
247 740 252 739 260 739  curveto
268 739 276 738 285 737  curveto
293 736 302 735 311 734  curveto
319 733 327 732 333 730  curveto
371 718 398 705 415 690  curveto
431 674 440 657 440 639  curveto
440 627 435 618 425 610  curveto
415 602 405 599 395 599  curveto
385 599 376 601 368 606  curveto
360 610 352 616 344 623  curveto
336 629 329 636 322 644  curveto
314 652 308 659 302 665  curveto
287 679 271 689 255 693  curveto
239 697 227 700 219 700  curveto
206 700 195 697 185 693  curveto
175 688 167 682 160 675  curveto
150 665 146 654 146 640  curveto
146 630 148 621 153 613  curveto
158 605 164 597 172 590  curveto
187 574 203 561 221 549  curveto
239 537 257 525 277 513  curveto
287 507 296 501 306 495  curveto
316 489 326 483 336 476  curveto
346 469 356 461 367 452  curveto
378 443 390 433 402 421  curveto
425 397 444 369 459 337  curveto
473 304 481 268 481 228  curveto
closepath
fill
		} def

	/e
		{
427 107 moveto
425 83 418 63 405 46  curveto
391 29 375 16 356 7  curveto
346 2 336 -1 325 -5  curveto
314 -8 303 -11 292 -13  curveto
280 -15 269 -17 258 -18  curveto
247 -19 238 -20 230 -20  curveto
194 -20 160 -14 129 -3  curveto
98 7 75 20 60 36  curveto
34 61 22 91 22 126  curveto
22 154 31 180 49 203  curveto
67 226 95 242 133 252  curveto
120 257 108 263 96 269  curveto
84 275 74 282 65 290  curveto
56 298 49 308 44 320  curveto
38 332 36 346 36 363  curveto
36 385 42 405 55 425  curveto
67 445 88 462 118 477  curveto
133 484 151 490 171 495  curveto
191 499 215 502 241 502  curveto
260 502 277 500 292 498  curveto
307 496 324 490 342 481  curveto
360 471 373 460 382 448  curveto
391 435 396 423 396 412  curveto
396 398 391 387 382 378  curveto
373 369 363 365 351 365  curveto
331 365 318 370 311 382  curveto
303 394 297 407 293 422  curveto
289 433 281 443 269 452  curveto
257 461 241 466 222 466  curveto
208 466 196 463 184 458  curveto
172 452 162 445 154 437  curveto
136 419 127 393 127 361  curveto
127 335 134 314 148 297  curveto
162 280 184 272 215 272  curveto
225 272 238 273 254 275  curveto
270 277 283 278 293 278  curveto
306 278 316 275 322 271  curveto
328 266 331 261 331 256  curveto
331 249 325 242 315 235  curveto
305 228 293 225 279 225  curveto
269 225 259 226 247 228  curveto
235 230 225 232 215 232  curveto
189 232 167 223 151 206  curveto
135 188 127 164 127 132  curveto
127 115 128 102 132 93  curveto
136 83 142 74 152 65  curveto
163 53 179 44 200 37  curveto
220 29 244 26 272 26  curveto
302 26 329 31 352 43  curveto
374 55 391 78 401 114  curveto
427 107 lineto
427 107 lineto
closepath
fill
		} def

	/f
		{
235 464 moveto
214 460 196 452 182 440  curveto
167 428 155 414 146 396  curveto
136 378 129 358 125 335  curveto
121 312 119 287 119 261  curveto
119 235 121 208 127 182  curveto
132 156 140 131 152 109  curveto
157 98 163 88 170 78  curveto
177 68 184 60 192 52  curveto
200 44 208 37 216 32  curveto
224 26 232 23 240 23  curveto
235 464 lineto
closepath
402 214 moveto
402 242 399 270 393 298  curveto
387 326 380 351 370 371  curveto
359 391 347 409 335 423  curveto
322 437 303 450 279 464  curveto
282 24 lineto
309 27 330 36 344 50  curveto
358 64 370 82 380 102  curveto
387 117 392 134 396 154  curveto
400 173 402 193 402 214  curveto
closepath
490 244 moveto
490 197 482 156 467 122  curveto
451 88 434 61 414 41  curveto
396 23 377 11 355 4  curveto
333 -3 309 -9 282 -13  curveto
283 -224 lineto
243 -212 lineto
241 -14 lineto
217 -8 192 -1 167 8  curveto
141 17 119 31 101 50  curveto
77 73 59 101 46 134  curveto
33 167 27 201 27 236  curveto
27 254 29 272 33 292  curveto
37 311 42 330 49 348  curveto
56 366 64 384 74 400  curveto
84 416 95 430 107 442  curveto
142 477 185 497 235 501  curveto
233 671 lineto
278 656 lineto
279 498 lineto
309 492 334 485 355 477  curveto
376 468 396 454 415 436  curveto
441 410 460 380 472 348  curveto
484 315 490 280 490 244  curveto
closepath
fill
		} def

	/g
		{
280 58 moveto
284 31 288 5 292 -19  curveto
296 -43 298 -69 298 -95  curveto
298 -115 296 -133 293 -149  curveto
289 -165 285 -178 280 -190  curveto
274 -202 267 -210 260 -216  curveto
252 -222 243 -225 231 -225  curveto
213 -225 200 -218 192 -204  curveto
183 -190 179 -174 179 -155  curveto
179 -137 181 -119 185 -99  curveto
189 -79 195 -60 201 -41  curveto
207 -21 214 -3 221 14  curveto
227 32 233 47 239 60  curveto
235 93 230 125 224 157  curveto
218 188 212 217 205 245  curveto
198 272 191 297 183 319  curveto
175 341 168 361 160 377  curveto
152 392 142 403 130 410  curveto
117 417 105 421 95 421  curveto
78 421 63 414 49 400  curveto
38 389 31 377 28 364  curveto
24 351 22 335 22 317  curveto
5 317 lineto
5 344 lineto
5 370 7 392 12 412  curveto
17 431 22 445 27 454  curveto
34 469 44 480 58 488  curveto
72 495 87 499 105 499  curveto
125 499 142 494 156 485  curveto
169 476 181 461 192 440  curveto
201 420 208 401 214 381  curveto
219 361 225 337 232 307  curveto
237 283 243 257 249 227  curveto
255 197 261 169 265 142  curveto
267 142 lineto
380 494 lineto
484 494 lineto
280 58 lineto
closepath
fill
		} def

	/h
		{
438 -202 moveto
435 -186 432 -172 429 -158  curveto
426 -144 424 -126 424 -103  curveto
411 347 lineto
410 380 402 404 387 420  curveto
378 428 368 435 356 439  curveto
344 443 333 445 322 445  curveto
308 445 296 442 285 438  curveto
273 433 263 427 254 420  curveto
244 412 236 404 228 395  curveto
220 385 212 376 206 366  curveto
206 0 lineto
121 0 lineto
121 349 lineto
121 358 120 369 119 383  curveto
117 397 114 409 109 421  curveto
104 430 98 437 92 443  curveto
85 449 77 452 68 452  curveto
60 452 54 450 48 447  curveto
42 443 37 437 33 428  curveto
29 420 26 411 24 399  curveto
21 387 19 374 18 360  curveto
0 360 lineto
0 383 2 400 5 412  curveto
8 423 12 434 18 446  curveto
28 467 42 482 59 492  curveto
76 501 94 506 114 506  curveto
130 506 144 502 158 495  curveto
172 487 182 477 189 464  curveto
193 456 196 448 199 439  curveto
201 430 204 420 207 408  curveto
227 438 250 464 274 484  curveto
298 504 328 514 364 514  curveto
376 514 388 512 401 510  curveto
413 507 425 502 435 495  curveto
440 491 446 486 454 480  curveto
461 474 468 467 475 458  curveto
481 448 487 437 492 423  curveto
496 409 499 391 500 371  curveto
511 -126 lineto
511 -141 514 -155 518 -169  curveto
522 -182 525 -193 527 -202  curveto
438 -202 lineto
closepath
fill
		} def

	/i
		{
301 101 moveto
297 77 292 58 285 43  curveto
278 28 270 16 260 7  curveto
250 -1 239 -7 227 -11  curveto
215 -15 204 -17 192 -17  curveto
175 -17 161 -14 150 -10  curveto
138 -5 128 1 119 11  curveto
110 19 103 30 97 42  curveto
91 54 88 66 88 78  curveto
88 309 lineto
88 335 86 357 82 373  curveto
78 389 73 401 67 409  curveto
60 417 52 423 44 426  curveto
36 428 27 430 19 430  curveto
0 430 lineto
0 450 lineto
27 455 55 462 83 471  curveto
111 479 141 490 173 503  curveto
173 118 lineto
173 102 174 88 178 78  curveto
182 67 186 59 191 54  curveto
198 45 203 39 207 36  curveto
211 32 216 31 223 31  curveto
229 31 235 31 241 33  curveto
247 35 253 38 259 43  curveto
264 48 268 55 272 64  curveto
276 73 279 85 281 101  curveto
301 101 lineto
301 101 lineto
closepath
fill
		} def

	/j
		{
502 214 moveto
502 242 499 267 494 291  curveto
488 314 482 334 474 350  curveto
470 357 465 365 459 374  curveto
453 382 446 390 438 398  curveto
430 405 423 411 415 416  curveto
407 421 399 424 392 424  curveto
386 424 379 422 373 420  curveto
367 418 362 415 358 411  curveto
351 404 345 392 341 374  curveto
337 356 335 335 335 310  curveto
335 305 335 298 335 290  curveto
335 282 336 277 336 275  curveto
347 23 lineto
383 27 411 38 433 58  curveto
455 77 471 97 481 117  curveto
488 132 493 147 497 163  curveto
500 179 502 196 502 214  curveto
closepath
587 247 moveto
587 213 580 179 566 146  curveto
552 112 535 86 515 66  curveto
505 56 495 47 483 38  curveto
471 29 459 21 445 13  curveto
431 5 417 0 403 -5  curveto
388 -9 374 -12 360 -12  curveto
347 -12 lineto
347 -224 lineto
284 -224 lineto
284 -13 lineto
272 -11 258 -8 244 -5  curveto
230 -2 215 1 200 7  curveto
185 13 170 20 155 29  curveto
139 37 125 49 111 63  curveto
101 73 91 85 82 100  curveto
72 114 64 130 58 147  curveto
51 164 46 182 42 202  curveto
38 221 36 241 36 261  curveto
36 291 41 321 52 350  curveto
62 378 77 402 97 422  curveto
116 441 138 457 162 471  curveto
186 485 215 492 248 492  curveto
248 474 lineto
227 464 210 453 196 439  curveto
182 425 171 409 163 391  curveto
155 373 149 353 146 332  curveto
142 310 141 288 141 265  curveto
141 234 143 205 149 179  curveto
155 152 162 130 171 113  curveto
185 85 202 63 223 49  curveto
243 35 264 27 284 26  curveto
275 311 lineto
275 315 274 321 274 329  curveto
274 336 274 343 274 350  curveto
274 363 276 378 280 395  curveto
284 412 290 428 300 444  curveto
310 459 322 472 338 483  curveto
354 493 373 499 397 499  curveto
415 499 433 495 451 489  curveto
469 482 489 468 511 446  curveto
532 424 550 396 565 362  curveto
579 327 587 289 587 247  curveto
closepath
fill
		} def

	/k
		{
323 0 moveto
323 18 lineto
340 18 352 19 358 23  curveto
364 26 368 30 368 36  curveto
368 42 365 47 361 52  curveto
356 57 351 63 346 71  curveto
194 258 lineto
194 0 lineto
119 0 lineto
119 344 lineto
119 362 117 378 114 390  curveto
110 402 105 411 98 417  curveto
91 423 82 428 71 430  curveto
60 432 47 434 33 434  curveto
33 455 lineto
43 457 54 459 65 461  curveto
76 463 88 465 101 468  curveto
113 471 127 475 142 481  curveto
157 486 174 493 194 501  curveto
194 284 lineto
215 305 236 326 258 346  curveto
280 366 300 385 319 402  curveto
338 419 355 434 370 446  curveto
385 458 397 467 406 473  curveto
411 478 421 484 436 490  curveto
450 496 466 500 484 500  curveto
508 500 527 494 539 482  curveto
551 470 557 459 557 447  curveto
557 435 552 423 543 411  curveto
534 399 520 394 501 394  curveto
491 394 483 395 477 399  curveto
470 403 464 407 458 411  curveto
452 415 447 418 442 422  curveto
437 426 432 428 426 428  curveto
418 428 407 424 395 416  curveto
383 408 370 397 356 385  curveto
342 373 328 359 314 345  curveto
300 331 286 317 274 305  curveto
461 70 lineto
478 48 494 34 508 28  curveto
522 21 538 18 558 18  curveto
558 0 lineto
323 0 lineto
closepath
fill
		} def

	/l
		{
547 153 moveto
547 127 545 105 542 88  curveto
538 70 533 55 527 42  curveto
515 20 502 4 487 -4  curveto
471 -12 457 -17 444 -17  curveto
425 -17 408 -10 393 1  curveto
377 13 365 28 357 46  curveto
353 53 349 64 345 79  curveto
340 94 335 111 331 130  curveto
326 149 321 170 317 192  curveto
313 214 309 235 305 256  curveto
301 277 298 297 295 316  curveto
292 335 290 351 289 365  curveto
287 365 lineto
116 0 lineto
24 0 lineto
255 498 lineto
249 524 243 547 237 568  curveto
231 589 224 607 217 623  curveto
210 636 201 646 189 653  curveto
177 659 166 663 154 663  curveto
142 663 132 660 122 656  curveto
112 651 103 645 96 638  curveto
86 628 80 617 77 605  curveto
74 593 71 581 68 570  curveto
49 570 lineto
54 622 64 664 79 694  curveto
93 724 116 739 146 739  curveto
168 739 187 732 205 719  curveto
222 705 235 691 243 675  curveto
252 656 261 631 271 600  curveto
280 569 289 536 299 501  curveto
303 484 307 462 313 436  curveto
319 410 325 382 331 352  curveto
337 322 343 293 349 264  curveto
355 234 360 208 366 186  curveto
370 169 375 152 382 135  curveto
388 118 397 104 408 94  curveto
423 78 440 71 460 71  curveto
470 71 481 73 491 79  curveto
501 85 509 94 516 108  curveto
519 114 522 121 524 131  curveto
526 140 527 147 529 153  curveto
547 153 lineto
547 153 lineto
closepath
fill
		} def

	/m
		{
566 101 moveto
563 79 557 61 549 46  curveto
540 31 530 19 518 10  curveto
506 0 494 -6 482 -10  curveto
469 -14 457 -17 446 -17  curveto
428 -17 413 -12 399 -4  curveto
385 4 374 16 367 32  curveto
363 38 361 46 360 54  curveto
358 62 357 71 355 81  curveto
349 73 345 68 343 64  curveto
340 60 335 55 329 49  curveto
307 27 286 11 265 0  curveto
243 -11 219 -17 193 -17  curveto
174 -17 158 -12 144 -4  curveto
130 3 115 15 97 31  curveto
97 10 lineto
97 -5 98 -19 102 -32  curveto
105 -45 109 -58 113 -70  curveto
117 -82 120 -95 124 -108  curveto
127 -121 129 -135 129 -151  curveto
129 -172 124 -189 115 -203  curveto
106 -216 95 -223 81 -223  curveto
69 -223 58 -217 48 -205  curveto
38 -193 33 -176 33 -153  curveto
33 -137 34 -123 37 -111  curveto
40 -99 43 -87 47 -75  curveto
50 -63 53 -51 56 -38  curveto
59 -25 61 -10 61 7  curveto
61 500 lineto
147 500 lineto
147 164 lineto
147 125 157 96 177 76  curveto
185 67 196 61 208 57  curveto
220 53 231 51 243 51  curveto
252 51 262 53 273 57  curveto
284 61 295 67 306 74  curveto
316 81 326 89 334 99  curveto
342 108 349 118 354 128  curveto
354 500 lineto
440 500 lineto
440 116 lineto
440 92 444 72 454 56  curveto
464 40 477 32 494 32  curveto
512 32 526 41 536 61  curveto
538 66 540 72 542 79  curveto
543 86 544 93 546 101  curveto
566 101 lineto
566 101 lineto
closepath
fill
		} def

	/n
		{
475 439 moveto
475 435 473 428 471 418  curveto
468 408 464 397 460 385  curveto
456 372 451 358 445 344  curveto
439 330 433 316 427 304  curveto
412 274 396 243 379 210  curveto
361 177 345 146 330 116  curveto
314 86 301 59 290 35  curveto
278 11 271 -5 269 -16  curveto
232 -16 lineto
64 414 lineto
60 424 56 432 53 437  curveto
50 442 46 446 41 449  curveto
34 452 25 454 15 455  curveto
4 455 -3 456 -9 457  curveto
-9 476 lineto
9 478 23 479 34 480  curveto
45 481 55 483 64 485  curveto
72 487 81 489 89 493  curveto
97 496 108 501 122 507  curveto
280 103 lineto
358 253 lineto
364 265 369 276 373 285  curveto
377 294 379 302 381 309  curveto
383 315 384 321 384 326  curveto
384 330 385 334 385 338  curveto
385 357 382 376 376 396  curveto
370 416 368 433 368 448  curveto
368 452 369 457 371 463  curveto
373 469 376 474 380 480  curveto
384 486 389 490 395 494  curveto
401 498 409 500 419 500  curveto
431 500 443 495 456 485  curveto
468 475 475 460 475 439  curveto
closepath
fill
		} def

	/o
		{
404 223 moveto
404 258 401 289 395 316  curveto
389 342 381 365 372 385  curveto
358 412 341 433 320 447  curveto
299 461 277 469 255 469  curveto
225 469 199 457 175 433  curveto
163 421 152 401 144 375  curveto
135 349 131 315 131 273  curveto
131 249 133 222 138 192  curveto
143 162 154 131 170 99  curveto
181 76 197 57 217 43  curveto
237 29 259 22 283 22  curveto
307 22 329 29 347 45  curveto
365 61 378 82 388 110  curveto
393 125 397 142 400 161  curveto
402 180 404 201 404 223  curveto
closepath
501 241 moveto
501 229 499 215 497 199  curveto
495 183 491 167 485 150  curveto
479 132 470 114 459 96  curveto
448 77 434 59 417 42  curveto
399 24 378 10 353 -1  curveto
328 -13 300 -19 268 -19  curveto
246 -19 226 -16 207 -10  curveto
188 -4 171 1 156 9  curveto
117 37 87 70 66 110  curveto
45 149 35 194 35 244  curveto
35 274 40 305 51 336  curveto
61 366 76 394 96 418  curveto
116 442 140 461 168 476  curveto
196 491 228 499 264 499  curveto
294 499 323 492 352 480  curveto
380 467 407 448 433 423  curveto
449 407 464 383 479 353  curveto
493 323 501 285 501 241  curveto
closepath
fill
		} def

	/p
		{
530 151 moveto
530 131 527 112 522 92  curveto
516 72 509 54 499 38  curveto
489 22 476 9 461 -1  curveto
446 -11 429 -16 410 -16  curveto
391 -16 374 -8 359 8  curveto
343 24 331 48 322 80  curveto
320 84 319 90 318 98  curveto
317 105 316 113 316 121  curveto
315 129 314 136 314 144  curveto
314 152 314 158 314 164  curveto
314 202 316 241 322 281  curveto
327 321 331 361 335 401  curveto
222 401 lineto
215 326 208 263 202 212  curveto
195 160 188 114 181 74  curveto
179 63 177 53 175 44  curveto
173 34 170 26 167 20  curveto
159 4 150 -5 140 -11  curveto
129 -16 119 -19 110 -19  curveto
94 -19 82 -13 72 -2  curveto
62 8 57 20 57 33  curveto
57 47 60 58 68 68  curveto
75 77 83 87 93 99  curveto
101 109 109 119 117 130  curveto
125 141 130 155 132 172  curveto
161 401 lineto
114 401 lineto
103 401 91 398 79 393  curveto
66 387 55 379 47 367  curveto
27 338 lineto
10 338 lineto
24 384 43 421 65 447  curveto
87 473 116 487 152 487  curveto
522 487 lineto
522 401 lineto
396 401 lineto
394 381 392 361 390 340  curveto
388 318 387 297 386 276  curveto
385 255 384 235 384 217  curveto
384 198 384 182 384 169  curveto
384 157 385 146 387 135  curveto
389 124 393 114 399 106  curveto
404 97 411 90 419 84  curveto
427 78 438 76 450 76  curveto
457 76 466 78 476 84  curveto
486 89 494 98 500 110  curveto
502 115 504 121 505 128  curveto
506 135 507 143 508 151  curveto
530 151 lineto
530 151 lineto
closepath
fill
		} def

	/q
		{
144 316 moveto
150 212 lineto
151 187 155 163 162 140  curveto
169 117 178 97 188 79  curveto
198 61 210 47 224 37  curveto
237 26 251 21 265 21  curveto
279 21 292 26 306 38  curveto
319 50 331 65 341 83  curveto
351 101 359 121 366 144  curveto
372 166 376 189 378 211  curveto
384 316 lineto
144 316 lineto
closepath
379 463 moveto
378 471 377 481 375 493  curveto
373 504 370 515 367 527  curveto
364 538 361 549 358 560  curveto
354 570 351 579 347 587  curveto
337 607 324 623 308 636  curveto
292 649 277 656 263 656  curveto
252 656 238 650 222 638  curveto
206 626 193 611 184 593  curveto
179 583 175 573 171 562  curveto
167 550 163 539 160 527  curveto
157 515 155 504 153 493  curveto
151 481 149 472 149 464  curveto
143 368 lineto
385 368 lineto
379 463 lineto
closepath
485 351 moveto
485 296 481 248 473 208  curveto
465 168 455 135 443 110  curveto
435 93 424 77 412 62  curveto
400 46 386 33 370 21  curveto
354 9 338 0 320 -6  curveto
302 -13 284 -17 265 -17  curveto
230 -17 196 -6 164 16  curveto
132 38 106 69 86 109  curveto
72 137 61 170 54 210  curveto
46 250 43 297 43 351  curveto
43 396 46 434 52 465  curveto
58 495 68 523 81 549  curveto
91 569 102 588 116 605  curveto
130 622 145 637 161 650  curveto
177 662 193 672 211 679  curveto
229 686 247 690 265 690  curveto
279 690 294 687 310 681  curveto
326 675 343 667 359 655  curveto
375 643 391 628 407 610  curveto
422 592 436 570 449 546  curveto
461 520 470 491 476 459  curveto
482 427 485 391 485 351  curveto
closepath
fill
		} def

	/r
		{
401 214 moveto
401 248 394 281 382 313  curveto
370 345 353 371 332 393  curveto
298 427 262 444 224 444  curveto
212 444 202 442 194 439  curveto
186 435 179 430 172 423  curveto
158 409 148 395 144 381  curveto
140 367 138 354 138 343  curveto
138 336 138 328 138 320  curveto
138 312 139 305 139 300  curveto
144 116 lineto
144 110 146 102 151 92  curveto
155 82 162 72 172 62  curveto
182 52 194 43 208 36  curveto
222 28 238 25 258 25  curveto
302 25 336 42 362 76  curveto
388 110 401 156 401 214  curveto
closepath
490 252 moveto
490 226 486 201 479 176  curveto
471 151 463 129 454 110  curveto
442 88 429 68 414 52  curveto
399 36 383 22 367 12  curveto
351 2 334 -5 317 -11  curveto
299 -16 283 -19 269 -19  curveto
246 -19 223 -13 199 -3  curveto
175 6 158 21 147 40  curveto
147 -134 lineto
147 -147 146 -162 145 -179  curveto
143 -196 141 -213 137 -230  curveto
50 -230 lineto
51 -217 53 -203 57 -189  curveto
60 -175 62 -157 62 -137  curveto
62 -121 61 -106 61 -92  curveto
61 -78 61 -69 61 -67  curveto
58 200 lineto
58 203 58 208 58 215  curveto
58 221 57 228 57 236  curveto
57 244 57 251 57 259  curveto
57 267 57 274 57 280  curveto
57 308 61 333 70 357  curveto
78 380 92 401 112 421  curveto
123 432 135 442 148 452  curveto
160 462 176 471 194 481  curveto
210 489 223 494 235 496  curveto
247 498 258 499 270 499  curveto
312 499 349 489 383 469  curveto
417 449 445 417 467 373  curveto
474 358 480 340 484 320  curveto
488 300 490 277 490 252  curveto
closepath
fill
		} def

	/s
		{
430 199 moveto
430 239 421 277 405 311  curveto
388 345 359 380 318 414  curveto
288 414 lineto
267 414 247 410 227 402  curveto
207 394 190 383 176 369  curveto
164 357 154 340 146 319  curveto
138 297 134 274 134 248  curveto
134 212 140 177 153 145  curveto
165 113 184 85 208 61  curveto
217 51 229 42 245 33  curveto
261 23 277 19 295 19  curveto
325 19 348 25 366 39  curveto
383 52 397 69 407 89  curveto
415 105 420 121 424 139  curveto
428 156 430 176 430 199  curveto
closepath
371 414 moveto
371 412 lineto
383 408 397 400 411 390  curveto
425 380 439 368 453 355  curveto
466 342 478 328 489 314  curveto
500 300 509 287 515 275  curveto
521 261 526 248 528 236  curveto
530 224 532 211 532 199  curveto
532 179 529 160 523 141  curveto
517 122 509 104 499 87  curveto
488 70 475 54 459 40  curveto
443 26 426 14 407 4  curveto
397 0 387 -4 376 -7  curveto
364 -10 353 -13 341 -15  curveto
329 -17 318 -18 307 -19  curveto
296 -20 287 -21 279 -21  curveto
249 -21 220 -14 193 -2  curveto
165 10 142 26 123 46  curveto
91 78 67 112 52 149  curveto
37 186 30 223 30 261  curveto
30 289 36 317 48 344  curveto
60 370 75 392 93 410  curveto
107 424 124 437 143 448  curveto
162 459 182 468 203 476  curveto
224 484 245 490 267 494  curveto
288 498 308 500 327 500  curveto
588 500 lineto
588 414 lineto
371 414 lineto
closepath
fill
		} def

	/t
		{
264 408 moveto
262 384 261 360 259 334  curveto
257 308 255 284 253 262  curveto
251 239 250 219 249 202  curveto
247 185 247 174 247 170  curveto
247 158 248 147 251 136  curveto
254 124 258 114 264 105  curveto
270 96 277 89 285 83  curveto
293 77 302 74 312 74  curveto
329 74 342 79 352 91  curveto
361 103 367 123 371 152  curveto
390 152 lineto
390 130 389 112 387 98  curveto
385 83 382 70 379 60  curveto
375 49 371 40 366 32  curveto
360 24 355 18 349 12  curveto
337 0 325 -8 312 -12  curveto
299 -16 288 -19 279 -19  curveto
270 -19 261 -17 251 -14  curveto
241 -10 233 -5 226 2  curveto
206 21 194 44 189 72  curveto
184 100 182 127 182 153  curveto
182 187 183 224 187 264  curveto
190 304 195 351 203 407  curveto
113 407 lineto
97 407 82 398 67 381  curveto
52 363 39 340 28 311  curveto
10 311 lineto
19 349 29 379 41 402  curveto
53 425 66 444 82 460  curveto
97 475 114 485 133 491  curveto
151 497 168 500 183 500  curveto
418 500 lineto
418 408 lineto
264 408 lineto
closepath
fill
		} def

	/u
		{
535 243 moveto
535 225 533 208 531 190  curveto
528 172 524 154 518 136  curveto
512 118 505 100 496 84  curveto
486 68 475 53 462 40  curveto
444 22 422 8 395 -2  curveto
368 -12 340 -18 311 -18  curveto
291 -18 271 -15 252 -10  curveto
233 -5 215 5 199 22  curveto
193 27 188 33 184 40  curveto
180 46 175 53 171 61  curveto
160 78 152 96 148 116  curveto
144 136 141 157 141 180  curveto
141 192 141 206 141 224  curveto
141 242 140 260 140 279  curveto
139 298 138 317 137 335  curveto
136 353 135 368 133 382  curveto
128 411 116 426 97 426  curveto
82 426 69 420 58 409  curveto
52 403 47 395 42 384  curveto
36 372 32 363 30 356  curveto
7 356 lineto
9 366 12 377 16 389  curveto
20 401 24 412 28 423  curveto
32 433 37 443 41 452  curveto
45 460 50 467 56 473  curveto
64 481 74 488 86 494  curveto
98 500 111 503 126 503  curveto
134 503 142 501 152 498  curveto
161 495 170 491 178 485  curveto
186 479 192 472 198 464  curveto
204 456 207 446 209 436  curveto
211 422 213 405 215 385  curveto
217 364 219 342 221 318  curveto
223 294 224 269 225 243  curveto
226 217 227 193 227 171  curveto
227 158 228 144 231 130  curveto
233 115 238 101 246 87  curveto
253 71 264 57 278 43  curveto
292 29 307 23 324 23  curveto
335 23 347 25 359 30  curveto
371 35 381 42 390 51  curveto
400 61 410 75 418 91  curveto
426 107 432 124 438 143  curveto
443 162 447 182 450 203  curveto
452 223 454 243 454 263  curveto
454 281 453 300 451 321  curveto
449 341 444 362 436 382  curveto
428 402 417 422 402 441  curveto
386 459 365 476 339 490  curveto
345 507 lineto
371 497 396 484 419 470  curveto
442 455 462 437 479 416  curveto
496 395 510 370 520 342  curveto
530 314 535 281 535 243  curveto
closepath
fill
		} def

	/v
		{
573 221 moveto
573 243 571 262 569 279  curveto
567 296 564 311 560 324  curveto
556 336 552 347 548 357  curveto
544 367 540 376 536 384  curveto
526 402 517 416 508 427  curveto
498 437 489 446 479 453  curveto
469 460 459 466 449 471  curveto
439 476 428 482 418 490  curveto
294 489 lineto
289 486 283 483 276 480  curveto
269 476 262 473 254 469  curveto
246 465 238 460 230 455  curveto
222 449 214 443 208 437  curveto
200 429 192 418 184 406  curveto
176 394 168 379 162 361  curveto
156 343 151 322 147 298  curveto
143 274 141 246 141 214  curveto
141 186 143 161 147 137  curveto
151 113 156 93 164 78  curveto
171 64 180 51 190 40  curveto
200 29 215 24 233 24  curveto
249 24 264 29 279 39  curveto
294 49 306 63 315 81  curveto
319 90 323 101 325 113  curveto
327 125 329 137 331 147  curveto
322 167 315 188 311 209  curveto
307 230 305 254 305 280  curveto
305 308 307 333 311 355  curveto
313 369 319 381 329 392  curveto
339 403 348 409 358 409  curveto
366 409 372 406 378 400  curveto
384 394 388 386 392 376  curveto
396 366 398 356 400 344  curveto
402 332 403 321 403 309  curveto
403 294 402 280 401 268  curveto
399 255 397 243 395 231  curveto
392 219 389 206 386 194  curveto
383 181 380 167 378 152  curveto
378 147 380 138 382 124  curveto
384 110 388 96 395 82  curveto
401 68 411 55 423 44  curveto
435 32 453 27 475 27  curveto
483 27 492 28 502 32  curveto
512 36 520 41 526 47  curveto
530 51 535 58 541 68  curveto
547 77 552 89 557 103  curveto
561 117 565 133 568 153  curveto
571 173 573 195 573 221  curveto
closepath
491 490 moveto
511 483 528 475 543 467  curveto
558 459 571 450 583 440  curveto
594 430 604 418 613 406  curveto
621 393 629 379 637 365  curveto
648 341 656 317 661 291  curveto
666 265 669 240 669 218  curveto
669 193 666 168 661 143  curveto
655 118 648 96 638 76  curveto
629 58 618 44 606 32  curveto
593 20 580 11 566 4  curveto
552 -3 539 -8 525 -12  curveto
511 -15 498 -17 487 -17  curveto
469 -17 452 -13 435 -6  curveto
417 1 403 10 392 22  curveto
385 28 379 37 373 48  curveto
367 58 361 69 356 80  curveto
345 60 334 44 322 32  curveto
310 19 297 9 285 2  curveto
272 -5 260 -10 248 -13  curveto
236 -16 226 -18 216 -18  curveto
196 -18 176 -14 157 -6  curveto
137 1 121 12 107 26  curveto
81 51 63 80 52 113  curveto
40 145 35 184 35 228  curveto
35 242 36 259 38 277  curveto
40 295 44 313 49 331  curveto
54 349 61 366 70 383  curveto
78 400 89 415 101 427  curveto
112 438 125 448 139 458  curveto
153 468 166 477 180 487  curveto
158 485 140 484 127 482  curveto
113 480 101 478 91 475  curveto
81 471 71 467 62 461  curveto
52 455 41 447 28 437  curveto
12 436 lineto
18 455 27 473 38 490  curveto
48 506 60 521 72 534  curveto
84 546 98 556 112 564  curveto
126 571 140 575 154 575  curveto
670 583 lineto
671 495 lineto
491 490 lineto
closepath
fill
		} def

	/w
		{
683 216 moveto
683 187 680 162 675 142  curveto
669 121 662 102 653 84  curveto
637 52 616 27 590 9  curveto
564 -8 536 -17 505 -17  curveto
495 -17 486 -16 476 -14  curveto
466 -12 457 -9 448 -4  curveto
428 5 412 16 399 30  curveto
386 44 374 61 363 82  curveto
350 57 336 38 321 25  curveto
305 12 291 2 278 -4  curveto
267 -9 258 -12 251 -14  curveto
244 -16 234 -17 222 -17  curveto
194 -17 168 -10 146 2  curveto
124 15 105 33 90 55  curveto
74 77 62 102 54 130  curveto
46 158 42 188 42 220  curveto
42 232 42 244 44 258  curveto
45 271 47 284 49 298  curveto
51 312 55 325 59 338  curveto
63 350 67 362 73 373  curveto
84 395 99 416 117 436  curveto
135 455 154 470 176 481  curveto
192 489 210 494 231 496  curveto
252 498 274 500 297 500  curveto
297 483 lineto
280 477 266 471 254 465  curveto
242 459 231 452 222 445  curveto
213 438 205 430 198 421  curveto
191 411 184 400 178 388  curveto
169 370 161 349 155 323  curveto
148 297 145 265 145 227  curveto
145 215 145 203 146 189  curveto
147 175 149 162 151 148  curveto
153 134 155 121 159 109  curveto
162 96 166 85 171 77  curveto
178 61 187 49 199 41  curveto
210 32 224 28 240 28  curveto
256 28 271 32 285 41  curveto
299 50 310 62 318 78  curveto
323 87 327 98 330 110  curveto
333 122 336 135 339 151  curveto
334 165 330 178 326 190  curveto
322 201 319 212 317 222  curveto
315 232 313 243 312 254  curveto
311 264 311 276 311 290  curveto
311 305 311 320 313 335  curveto
315 349 318 362 322 374  curveto
326 386 331 395 338 402  curveto
344 409 353 413 363 413  curveto
373 413 381 409 388 402  curveto
394 395 400 386 404 375  curveto
408 363 410 350 412 336  curveto
414 322 415 307 415 293  curveto
415 279 414 267 413 256  curveto
412 245 410 234 408 223  curveto
406 212 403 201 399 189  curveto
395 177 391 165 387 151  curveto
389 136 392 121 396 107  curveto
400 92 406 79 414 67  curveto
421 55 431 46 443 39  curveto
455 31 471 28 489 28  curveto
501 28 512 31 524 39  curveto
536 47 546 59 554 75  curveto
563 93 570 115 574 143  curveto
578 170 581 199 581 231  curveto
581 283 574 326 560 360  curveto
546 394 531 419 517 434  curveto
504 446 489 457 471 465  curveto
453 473 439 479 429 483  curveto
429 500 lineto
453 500 473 499 490 497  curveto
507 495 522 491 535 487  curveto
548 482 560 476 571 468  curveto
582 460 594 450 606 438  curveto
630 414 648 384 662 350  curveto
676 315 683 270 683 216  curveto
closepath
fill
		} def

	/x
		{
469 -35 moveto
469 -48 467 -63 464 -80  curveto
460 -96 455 -112 448 -126  curveto
430 -160 410 -185 386 -201  curveto
362 -217 337 -225 313 -225  curveto
309 -225 302 -224 293 -223  curveto
283 -222 274 -220 264 -216  curveto
254 -212 246 -207 239 -199  curveto
231 -191 228 -181 228 -168  curveto
228 -160 229 -153 232 -148  curveto
235 -143 239 -139 243 -136  curveto
247 -133 252 -131 257 -130  curveto
261 -129 265 -129 269 -129  curveto
273 -129 279 -129 287 -130  curveto
294 -131 302 -132 310 -133  curveto
318 -134 326 -135 334 -136  curveto
342 -137 350 -138 358 -138  curveto
370 -138 381 -135 391 -129  curveto
401 -123 408 -115 413 -106  curveto
417 -96 420 -85 420 -72  curveto
420 -64 419 -56 417 -48  curveto
415 -40 411 -32 406 -26  curveto
401 -19 394 -14 385 -10  curveto
375 -6 364 -4 350 -4  curveto
342 -4 328 -4 306 -5  curveto
284 -5 259 -6 231 -6  curveto
199 -6 171 -1 146 8  curveto
121 18 102 29 89 43  curveto
69 62 54 86 43 114  curveto
32 142 27 169 27 196  curveto
27 218 30 240 37 262  curveto
44 284 53 306 65 330  curveto
74 348 87 364 103 378  curveto
119 392 136 406 153 420  curveto
137 437 125 454 115 470  curveto
105 486 100 503 100 523  curveto
100 545 103 564 109 579  curveto
115 594 124 607 137 618  curveto
128 620 119 623 111 627  curveto
103 631 95 635 89 641  curveto
82 646 76 653 72 661  curveto
68 669 66 679 66 691  curveto
66 703 69 713 75 722  curveto
81 731 88 739 97 745  curveto
106 751 116 756 126 760  curveto
136 763 145 765 153 765  curveto
156 765 159 765 162 765  curveto
165 765 168 764 171 764  curveto
173 748 lineto
151 740 137 732 129 724  curveto
121 716 117 706 117 695  curveto
117 685 122 675 132 666  curveto
142 657 155 652 171 652  curveto
197 673 222 692 244 708  curveto
266 724 290 732 318 732  curveto
332 732 342 729 349 724  curveto
355 718 359 711 359 702  curveto
359 688 353 676 343 666  curveto
333 656 320 647 304 639  curveto
294 634 285 630 277 627  curveto
269 624 260 622 252 620  curveto
243 618 234 617 225 616  curveto
215 615 205 614 193 614  curveto
171 599 156 583 148 567  curveto
139 550 135 533 135 517  curveto
135 505 138 493 146 482  curveto
154 470 168 456 190 440  curveto
217 453 242 463 265 471  curveto
288 479 312 483 338 483  curveto
358 483 375 480 389 475  curveto
402 470 409 461 409 448  curveto
409 438 405 430 399 424  curveto
392 417 383 411 371 407  curveto
359 403 346 399 331 397  curveto
315 395 299 394 283 394  curveto
267 394 254 395 242 397  curveto
230 399 216 402 202 406  curveto
188 399 175 391 162 381  curveto
148 371 137 362 127 352  curveto
111 336 98 315 88 291  curveto
78 267 73 244 73 223  curveto
73 212 74 202 77 192  curveto
79 182 83 173 88 164  curveto
96 146 109 131 127 118  curveto
144 104 170 97 204 96  curveto
347 91 lineto
369 90 387 86 403 78  curveto
418 70 431 60 441 48  curveto
451 36 458 22 462 8  curveto
466 -6 469 -21 469 -35  curveto
closepath
fill
		} def

	/y
		{
701 470 moveto
687 467 676 464 668 462  curveto
659 459 652 456 647 453  curveto
642 450 638 447 635 444  curveto
632 440 630 436 628 432  curveto
622 422 619 404 619 380  curveto
619 355 617 324 613 286  curveto
611 274 610 260 608 245  curveto
606 230 604 215 601 200  curveto
598 185 595 170 591 156  curveto
587 141 582 128 577 118  curveto
560 84 536 56 505 32  curveto
473 8 434 -7 388 -17  curveto
388 -228 lineto
325 -228 lineto
325 -17 lineto
234 2 171 47 136 118  curveto
128 132 122 149 118 168  curveto
113 187 109 207 106 227  curveto
103 247 101 268 99 289  curveto
97 310 96 330 95 348  curveto
93 368 92 386 92 400  curveto
91 414 89 425 85 433  curveto
80 442 73 449 63 454  curveto
53 459 36 464 12 470  curveto
12 488 lineto
24 493 35 496 47 498  curveto
58 499 69 500 79 500  curveto
105 500 127 493 144 479  curveto
160 465 173 449 182 432  curveto
186 423 189 411 193 397  curveto
196 383 199 367 201 351  curveto
203 334 206 317 208 299  curveto
210 281 212 265 214 250  curveto
218 210 222 177 224 151  curveto
226 125 230 105 238 90  curveto
245 74 256 60 271 48  curveto
285 36 303 27 325 22  curveto
325 487 lineto
388 487 lineto
388 22 lineto
411 28 429 37 443 49  curveto
456 61 466 74 474 88  curveto
482 104 487 123 489 147  curveto
491 171 494 201 498 237  curveto
500 253 502 270 504 289  curveto
506 308 508 327 511 345  curveto
513 363 516 380 520 396  curveto
523 411 527 423 531 432  curveto
541 451 554 467 572 480  curveto
589 493 610 500 634 500  curveto
644 500 654 499 666 498  curveto
677 496 689 493 701 488  curveto
701 470 lineto
701 470 lineto
closepath
fill
		} def

	/z
		{
468 -51 moveto
468 -64 465 -80 461 -100  curveto
456 -120 447 -139 435 -157  curveto
422 -175 405 -191 384 -205  curveto
362 -218 335 -225 303 -225  curveto
293 -225 284 -224 276 -223  curveto
267 -221 259 -219 252 -216  curveto
242 -211 234 -205 227 -197  curveto
220 -189 217 -181 217 -173  curveto
217 -161 221 -150 230 -140  curveto
239 -130 252 -125 270 -125  curveto
276 -125 283 -126 291 -128  curveto
299 -130 308 -132 317 -134  curveto
325 -136 333 -138 341 -140  curveto
349 -142 355 -143 360 -143  curveto
380 -143 396 -134 408 -118  curveto
419 -102 425 -84 425 -66  curveto
425 -50 419 -35 407 -23  curveto
395 -10 376 -4 351 -4  curveto
339 -4 325 -5 308 -7  curveto
291 -9 270 -11 245 -11  curveto
226 -11 208 -7 191 -1  curveto
174 5 159 13 145 23  curveto
131 33 119 43 109 54  curveto
99 65 92 75 88 84  curveto
83 93 79 104 75 116  curveto
71 128 68 141 66 154  curveto
64 166 62 178 61 190  curveto
60 202 60 212 60 220  curveto
60 240 60 258 62 275  curveto
63 291 65 307 68 322  curveto
71 337 75 352 79 366  curveto
83 380 88 395 94 411  curveto
100 430 107 447 114 462  curveto
120 476 128 490 136 503  curveto
144 516 152 529 161 543  curveto
170 556 181 571 193 587  curveto
185 589 176 592 165 596  curveto
154 600 145 603 138 607  curveto
126 612 117 619 111 629  curveto
105 639 102 650 102 664  curveto
102 676 104 687 110 698  curveto
116 708 124 718 134 727  curveto
144 735 155 742 169 747  curveto
182 752 196 755 212 756  curveto
214 738 lineto
194 730 181 720 173 709  curveto
165 698 161 687 161 676  curveto
161 660 165 647 175 636  curveto
185 625 199 618 219 614  curveto
232 626 244 638 255 648  curveto
265 658 276 668 286 676  curveto
296 684 307 691 317 698  curveto
327 704 339 711 352 717  curveto
362 722 370 725 376 727  curveto
382 729 388 730 395 730  curveto
404 730 413 727 421 722  curveto
429 717 433 709 433 697  curveto
433 683 425 669 411 654  curveto
396 638 379 626 359 616  curveto
351 612 344 608 338 605  curveto
331 602 324 599 316 597  curveto
308 595 299 593 289 591  curveto
279 589 268 587 254 586  curveto
238 572 221 552 203 528  curveto
185 504 169 478 155 450  curveto
141 422 129 391 121 359  curveto
112 327 108 292 108 254  curveto
108 233 108 216 110 203  curveto
112 190 116 178 122 166  curveto
133 142 148 124 168 112  curveto
187 100 206 94 226 94  curveto
234 94 244 94 258 95  curveto
272 95 285 96 299 96  curveto
329 96 354 92 376 84  curveto
398 76 416 65 431 51  curveto
445 37 454 20 460 2  curveto
465 -15 468 -33 468 -51  curveto
closepath
fill
		} def

	/braceleft
		{
279 -183 moveto
249 -183 226 -176 210 -163  curveto
194 -150 186 -124 186 -84  curveto
186 121 lineto
186 143 182 161 175 175  curveto
168 188 159 198 147 206  curveto
135 213 122 218 107 222  curveto
91 226 75 229 58 232  curveto
58 258 lineto
76 260 92 263 108 267  curveto
124 271 137 276 149 284  curveto
160 292 169 302 176 316  curveto
182 329 186 347 186 370  curveto
186 571 lineto
186 591 188 608 192 622  curveto
196 635 202 645 210 653  curveto
218 661 228 666 240 669  curveto
252 671 266 673 282 673  curveto
397 673 lineto
397 648 lineto
346 648 lineto
320 648 300 643 284 633  curveto
268 623 261 603 261 574  curveto
261 370 lineto
261 344 254 324 242 309  curveto
229 294 214 282 198 273  curveto
182 264 165 257 149 253  curveto
133 249 121 245 114 242  curveto
124 239 137 236 154 232  curveto
170 228 186 221 202 213  curveto
218 205 231 193 243 179  curveto
255 164 261 144 261 120  curveto
261 -83 lineto
261 -112 268 -132 284 -142  curveto
299 -152 319 -158 345 -158  curveto
397 -158 lineto
397 -183 lineto
279 -183 lineto
closepath
fill
		} def

	/bar
		{
65 -177 moveto
65 673 lineto
135 673 lineto
135 -177 lineto
65 -177 lineto
closepath
fill
		} def

	/braceright
		{
418 232 moveto
400 229 384 226 369 222  curveto
353 218 340 213 328 206  curveto
316 198 307 188 300 175  curveto
293 161 290 143 290 121  curveto
290 -84 lineto
290 -124 282 -150 266 -163  curveto
250 -176 227 -183 197 -183  curveto
79 -183 lineto
79 -158 lineto
131 -158 lineto
156 -158 176 -152 192 -142  curveto
207 -132 215 -112 215 -83  curveto
215 120 lineto
215 144 220 164 232 179  curveto
244 193 257 205 273 213  curveto
289 221 305 228 322 232  curveto
338 236 352 239 362 242  curveto
354 245 342 249 326 253  curveto
310 257 293 264 277 273  curveto
261 282 246 294 234 309  curveto
221 324 215 344 215 370  curveto
215 574 lineto
215 603 207 623 191 633  curveto
175 643 155 648 130 648  curveto
79 648 lineto
79 673 lineto
194 673 lineto
210 673 224 671 236 669  curveto
248 666 258 661 266 653  curveto
274 645 280 635 284 622  curveto
288 608 290 591 290 571  curveto
290 370 lineto
290 347 293 329 300 316  curveto
306 302 315 292 327 284  curveto
338 276 351 271 367 267  curveto
383 263 400 260 418 258  curveto
418 232 lineto
418 232 lineto
closepath
fill
		} def

	/asciitilde
		{
529 283 moveto
516 259 498 241 475 227  curveto
452 213 426 206 396 206  curveto
374 206 353 208 333 214  curveto
313 219 293 225 274 232  curveto
254 238 235 244 217 250  curveto
198 255 179 258 160 258  curveto
148 258 137 256 128 254  curveto
119 252 111 248 103 244  curveto
95 240 88 234 81 227  curveto
74 220 66 212 58 203  curveto
17 228 lineto
29 246 41 260 54 270  curveto
67 280 80 288 93 294  curveto
106 299 119 302 132 304  curveto
144 305 156 306 167 306  curveto
187 306 207 303 225 297  curveto
243 291 262 285 280 279  curveto
298 273 315 267 333 261  curveto
351 255 370 253 390 253  curveto
412 253 431 257 447 266  curveto
463 275 478 289 492 307  curveto
529 283 lineto
529 283 lineto
closepath
fill
		} def

	/exclamdown
		{
610 587 moveto
610 572 608 559 604 549  curveto
600 538 594 529 588 522  curveto
581 515 574 510 566 506  curveto
558 502 551 501 545 501  curveto
537 501 531 502 525 506  curveto
519 510 514 514 510 519  curveto
506 524 502 530 500 536  curveto
498 542 497 547 497 552  curveto
497 562 498 570 502 576  curveto
506 582 510 587 515 592  curveto
519 596 523 601 527 605  curveto
531 609 533 615 533 622  curveto
533 630 528 635 518 639  curveto
508 642 499 644 490 644  curveto
475 644 458 636 438 622  curveto
418 607 401 586 387 558  curveto
379 543 373 528 368 512  curveto
362 496 358 478 354 458  curveto
350 438 348 415 346 391  curveto
344 366 344 338 344 307  curveto
344 297 344 282 344 264  curveto
344 245 344 225 344 203  curveto
344 181 345 160 345 139  curveto
345 117 345 99 345 85  curveto
345 59 351 41 365 32  curveto
378 22 401 18 435 18  curveto
435 0 lineto
151 0 lineto
151 18 lineto
185 18 209 23 222 33  curveto
234 43 241 60 241 84  curveto
241 105 241 125 241 143  curveto
241 161 240 178 240 196  curveto
240 214 240 232 240 251  curveto
240 269 240 290 240 313  curveto
240 325 239 340 238 359  curveto
236 378 234 398 231 419  curveto
228 439 224 460 219 480  curveto
214 500 208 517 201 532  curveto
190 553 177 572 161 589  curveto
145 606 124 619 99 627  curveto
15 654 lineto
3 658 -2 662 -2 667  curveto
-2 667 -1 669 -1 671  curveto
0 673 1 674 5 676  curveto
8 678 13 679 21 681  curveto
29 682 39 683 53 683  curveto
88 683 122 676 155 663  curveto
187 649 218 628 247 600  curveto
260 586 272 567 284 541  curveto
295 515 306 481 318 438  curveto
322 455 327 474 332 494  curveto
336 514 344 536 356 560  curveto
364 576 373 591 383 606  curveto
393 621 404 634 418 646  curveto
431 658 446 667 463 674  curveto
479 681 499 685 521 685  curveto
532 685 543 682 553 676  curveto
563 670 574 662 584 652  curveto
592 644 598 634 603 624  curveto
607 613 610 601 610 587  curveto
closepath
fill
		} def

	/cent
		{
229 679 moveto
229 675 226 671 222 665  curveto
67 469 lineto
65 467 63 464 60 462  curveto
57 459 54 458 51 458  curveto
45 458 39 459 34 463  curveto
29 467 27 471 27 477  curveto
27 481 29 487 33 495  curveto
134 720 lineto
136 724 138 727 142 730  curveto
145 733 152 735 164 735  curveto
172 735 180 733 188 731  curveto
196 729 203 725 209 719  curveto
213 714 217 708 222 700  curveto
226 692 229 685 229 679  curveto
closepath
fill
		} def

	/sterling
		{
29 0 moveto
29 55 lineto
526 55 lineto
526 0 lineto
29 0 lineto
closepath
29 347 moveto
29 409 lineto
526 639 lineto
526 577 lineto
93 378 lineto
526 179 lineto
526 117 lineto
29 347 lineto
closepath
fill
		} def

	/fraction
		{
fill
		} def

	/yen
		{
324 264 moveto
296 287 270 307 244 325  curveto
218 343 192 352 166 352  curveto
151 352 138 349 127 343  curveto
115 337 106 329 99 320  curveto
91 310 86 300 82 290  curveto
78 279 76 269 76 261  curveto
76 235 85 214 103 198  curveto
121 181 144 173 170 173  curveto
181 173 192 174 202 177  curveto
212 179 223 184 237 191  curveto
252 198 267 209 281 223  curveto
295 237 310 250 324 264  curveto
closepath
638 261 moveto
638 271 635 282 631 293  curveto
627 303 621 313 613 322  curveto
605 330 596 337 585 343  curveto
574 349 562 352 550 352  curveto
534 352 519 349 505 343  curveto
491 337 477 330 464 322  curveto
451 313 438 303 426 293  curveto
414 283 402 273 390 264  curveto
407 246 423 231 437 219  curveto
451 206 466 196 480 189  curveto
489 184 499 180 510 177  curveto
520 174 531 173 543 173  curveto
569 173 591 181 610 198  curveto
628 214 638 235 638 261  curveto
closepath
688 267 moveto
688 248 684 230 677 213  curveto
670 195 661 180 649 167  curveto
637 154 622 144 606 136  curveto
590 128 572 125 554 125  curveto
540 125 525 126 511 129  curveto
496 132 481 138 465 146  curveto
449 154 432 164 414 178  curveto
396 192 377 209 357 231  curveto
344 217 333 206 323 197  curveto
313 188 303 180 295 174  curveto
286 168 278 162 270 158  curveto
262 153 255 149 247 145  curveto
235 139 221 134 205 130  curveto
189 126 174 124 161 124  curveto
141 124 123 128 107 136  curveto
91 144 77 154 65 168  curveto
53 181 43 196 36 213  curveto
29 229 26 247 26 265  curveto
26 285 29 303 37 320  curveto
45 336 55 351 68 364  curveto
80 376 95 386 112 393  curveto
129 400 147 404 166 404  curveto
194 404 222 395 252 379  curveto
282 363 317 335 357 297  curveto
369 307 379 317 389 326  curveto
399 334 408 342 417 349  curveto
426 356 435 362 444 368  curveto
452 374 462 379 473 385  curveto
498 397 523 404 548 404  curveto
568 404 586 400 604 392  curveto
621 384 636 374 648 362  curveto
660 349 670 334 677 318  curveto
684 302 688 285 688 267  curveto
closepath
fill
		} def

	/florin
		{
fill
		} def

	/section
		{
660 179 moveto
660 141 650 112 632 91  curveto
613 69 588 59 556 59  curveto
537 59 519 63 503 71  curveto
487 79 473 90 463 102  curveto
453 112 444 121 436 130  curveto
428 138 420 143 414 143  curveto
408 143 403 138 401 129  curveto
399 120 398 108 398 93  curveto
398 79 398 68 399 58  curveto
400 48 402 38 405 29  curveto
408 20 412 11 417 3  curveto
422 -5 429 -15 437 -26  curveto
309 -26 lineto
317 -15 323 -5 328 3  curveto
333 11 337 20 340 29  curveto
343 38 345 48 346 58  curveto
347 68 348 79 348 93  curveto
348 106 347 117 345 127  curveto
343 137 340 142 334 142  curveto
328 142 320 137 310 129  curveto
300 120 292 111 285 103  curveto
275 91 262 81 246 72  curveto
229 63 210 59 190 59  curveto
160 59 135 69 115 89  curveto
95 109 86 139 86 177  curveto
86 195 88 215 94 235  curveto
99 255 107 270 118 281  curveto
126 289 136 296 149 302  curveto
161 308 176 311 194 311  curveto
210 311 224 308 236 304  curveto
248 299 259 294 269 288  curveto
279 282 288 276 296 272  curveto
304 267 313 265 321 265  curveto
326 265 330 266 333 268  curveto
335 270 337 274 337 282  curveto
337 288 335 293 331 297  curveto
327 301 323 304 318 308  curveto
312 312 307 315 301 319  curveto
295 323 289 327 284 333  curveto
274 343 264 356 256 372  curveto
248 388 244 404 244 422  curveto
244 434 246 447 251 461  curveto
256 474 264 486 275 497  curveto
285 507 299 516 315 523  curveto
331 529 351 533 374 533  curveto
396 533 416 529 432 522  curveto
448 515 462 506 472 495  curveto
482 484 490 472 495 459  curveto
499 446 502 434 502 423  curveto
502 413 500 403 498 394  curveto
495 385 492 377 488 369  curveto
484 361 479 355 475 349  curveto
471 343 467 338 464 335  curveto
457 328 450 322 444 318  curveto
437 314 431 310 426 307  curveto
421 303 417 300 414 296  curveto
410 292 409 286 409 280  curveto
409 270 414 265 425 265  curveto
433 265 441 267 450 272  curveto
458 276 467 282 477 288  curveto
487 294 498 299 510 304  curveto
522 308 535 311 551 311  curveto
567 311 582 308 595 302  curveto
608 296 619 289 628 281  curveto
638 270 646 255 652 235  curveto
657 215 660 196 660 179  curveto
closepath
fill
		} def

	/currency
		{
-124 -12 moveto
-180 -12 lineto
284 677 lineto
340 677 lineto
-124 -12 lineto
closepath
fill
		} def

	/quotesingle
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/quotedblleft
		{
fill
		} def

	/guillemotleft
		{
1024 248 moveto
984 212 944 174 904 132  curveto
864 90 821 41 775 -15  curveto
738 17 lineto
756 43 773 66 789 86  curveto
805 106 820 125 834 141  curveto
848 157 861 172 873 185  curveto
885 198 897 210 909 222  curveto
139 222 lineto
161 200 179 180 195 163  curveto
210 146 224 130 236 115  curveto
248 99 260 84 272 68  curveto
283 52 296 35 310 17  curveto
273 -15 lineto
241 23 204 64 164 110  curveto
124 156 77 202 24 248  curveto
56 276 84 303 108 327  curveto
132 351 153 373 172 394  curveto
191 415 209 435 225 454  curveto
241 473 257 492 273 511  curveto
310 479 lineto
296 458 282 440 270 424  curveto
258 408 245 392 233 377  curveto
220 361 206 345 191 329  curveto
176 313 159 294 139 274  curveto
909 274 lineto
897 286 885 299 873 311  curveto
861 323 848 337 834 353  curveto
820 369 806 387 790 407  curveto
774 427 757 451 738 479  curveto
775 511 lineto
795 486 815 462 834 440  curveto
853 418 872 396 892 375  curveto
912 354 932 333 954 312  curveto
975 291 998 270 1024 248  curveto
closepath
fill
		} def

	/guilsinglleft
		{
fill
		} def

	/guilsinglright
		{
fill
		} def

	/fi
		{
fill
		} def

	/fl
		{
fill
		} def

	/endash
		{
fill
		} def

	/dagger
		{
fill
		} def

	/daggerdbl
		{
fill
		} def

	/periodcentered
		{
411 293 moveto
411 267 406 244 397 222  curveto
387 200 374 181 358 165  curveto
342 149 323 136 301 127  curveto
279 117 255 113 231 113  curveto
205 113 182 117 160 127  curveto
138 136 119 149 103 165  curveto
87 181 74 200 65 222  curveto
55 244 51 267 51 293  curveto
51 317 55 341 65 363  curveto
74 385 87 404 103 420  curveto
119 436 138 449 160 459  curveto
182 468 205 473 231 473  curveto
255 473 279 468 301 459  curveto
323 449 342 436 358 420  curveto
374 404 387 385 397 363  curveto
406 341 411 317 411 293  curveto
closepath
fill
		} def

	/paragraph
		{
366 299 moveto
352 316 338 331 322 344  curveto
306 356 285 363 261 363  curveto
233 363 210 354 190 338  curveto
170 322 153 300 140 273  curveto
128 249 121 227 117 206  curveto
113 185 112 164 112 144  curveto
112 127 113 112 115 98  curveto
117 84 121 71 127 60  curveto
134 44 144 32 158 23  curveto
171 13 186 9 204 9  curveto
221 9 240 15 261 29  curveto
281 42 299 63 313 91  curveto
325 115 335 145 344 181  curveto
353 217 360 256 366 299  curveto
closepath
462 395 moveto
462 379 461 359 459 336  curveto
457 313 453 289 448 263  curveto
443 237 437 212 429 186  curveto
421 160 412 136 402 114  curveto
393 96 385 81 377 69  curveto
369 56 360 45 350 35  curveto
335 20 316 7 292 -4  curveto
268 -15 243 -21 215 -21  curveto
196 -21 178 -18 161 -13  curveto
144 -7 128 0 114 9  curveto
99 18 86 29 75 41  curveto
63 53 54 67 48 81  curveto
33 110 26 141 26 174  curveto
26 204 32 235 44 267  curveto
56 298 74 325 98 349  curveto
114 365 132 378 151 388  curveto
169 397 192 402 219 402  curveto
239 402 257 399 273 395  curveto
288 390 301 384 313 377  curveto
325 370 335 363 345 355  curveto
355 347 364 340 374 334  curveto
377 351 380 370 382 391  curveto
384 412 385 432 385 451  curveto
385 462 384 475 382 491  curveto
380 506 377 521 374 537  curveto
370 553 366 567 362 581  curveto
358 595 354 606 350 615  curveto
344 626 336 638 325 652  curveto
313 666 299 677 281 687  curveto
271 691 260 695 248 697  curveto
236 699 223 700 210 700  curveto
188 700 170 696 154 689  curveto
138 681 122 674 104 667  curveto
65 717 lineto
97 730 124 738 147 741  curveto
169 743 186 745 196 745  curveto
239 745 280 733 320 709  curveto
360 685 394 646 422 591  curveto
428 579 433 566 438 550  curveto
442 534 446 518 450 501  curveto
454 483 457 465 459 447  curveto
461 429 462 411 462 395  curveto
closepath
fill
		} def

	/bullet
		{
fill
		} def

	/quotesinglbase
		{
fill
		} def

	/quotedblbase
		{
fill
		} def

	/quotedblright
		{
fill
		} def

	/guillemotright
		{
527 219 moveto
519 205 509 193 498 183  curveto
486 173 474 164 462 158  curveto
449 152 436 147 424 144  curveto
411 141 399 140 387 140  curveto
373 140 359 142 345 146  curveto
206 186 lineto
195 189 187 191 181 192  curveto
175 193 166 194 156 194  curveto
131 194 112 189 98 179  curveto
84 169 71 154 57 135  curveto
14 162 lineto
32 185 52 204 76 219  curveto
99 233 127 241 160 241  curveto
168 241 177 240 187 238  curveto
197 236 205 235 213 233  curveto
356 193 lineto
362 191 366 190 370 190  curveto
373 189 378 189 385 189  curveto
405 189 425 193 444 203  curveto
463 213 478 226 490 243  curveto
527 219 lineto
527 219 lineto
closepath
527 370 moveto
519 356 509 344 498 334  curveto
486 324 474 315 462 309  curveto
449 303 436 298 424 295  curveto
411 292 399 291 387 291  curveto
373 291 359 293 345 297  curveto
206 337 lineto
195 340 187 342 181 343  curveto
175 344 166 345 156 345  curveto
131 345 112 340 98 330  curveto
84 320 71 305 57 286  curveto
14 313 lineto
32 336 52 355 76 370  curveto
99 384 127 392 160 392  curveto
168 392 177 391 187 389  curveto
197 387 205 386 213 384  curveto
356 344 lineto
362 342 366 341 370 341  curveto
373 340 378 340 385 340  curveto
405 340 425 344 444 354  curveto
463 364 478 377 490 394  curveto
527 370 lineto
527 370 lineto
closepath
fill
		} def

	/ellipsis
		{
fill
		} def

	/perthousand
		{
fill
		} def

	/questiondown
		{
181 68 moveto
181 -16 lineto
15 96 lineto
181 207 lineto
181 123 lineto
547 123 lineto
547 629 lineto
602 629 lineto
602 68 lineto
181 68 lineto
closepath
fill
		} def

	/grave
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/acute
		{
fill
		} def

	/circumflex
		{
fill
		} def

	/tilde
		{
fill
		} def

	/macron
		{
571 229 moveto
523 189 476 147 432 104  curveto
388 60 346 18 308 -22  curveto
267 20 224 63 180 107  curveto
135 150 90 191 45 229  curveto
80 264 lineto
92 253 108 240 126 226  curveto
144 211 163 196 182 180  curveto
201 164 219 148 237 133  curveto
254 117 268 104 280 93  curveto
280 888 lineto
336 888 lineto
336 93 lineto
346 104 360 117 378 133  curveto
395 148 413 164 432 180  curveto
451 196 470 211 488 226  curveto
506 240 522 253 536 264  curveto
571 229 lineto
571 229 lineto
closepath
fill
		} def

	/breve
		{
fill
		} def

	/dotaccent
		{
fill
		} def

	/dieresis
		{
374 -36 moveto
142 257 lineto
374 550 lineto
600 257 lineto
374 -36 lineto
closepath
fill
		} def

	/ring
		{
fill
		} def

	/cedilla
		{
324 127 moveto
324 111 318 98 307 87  curveto
296 76 283 71 268 71  curveto
252 71 239 76 228 87  curveto
217 98 212 111 212 127  curveto
212 142 217 155 228 166  curveto
239 177 252 183 268 183  curveto
283 183 296 177 307 166  curveto
318 155 324 142 324 127  curveto
closepath
10 236 moveto
10 291 lineto
536 291 lineto
536 236 lineto
10 236 lineto
closepath
324 400 moveto
324 384 318 371 307 360  curveto
296 349 283 344 268 344  curveto
252 344 239 349 228 360  curveto
217 371 212 384 212 400  curveto
212 415 217 428 228 439  curveto
239 450 252 456 268 456  curveto
283 456 296 450 307 439  curveto
318 428 324 415 324 400  curveto
closepath
fill
		} def

	/hungarumlaut
		{
fill
		} def

	/ogonek
		{
fill
		} def

	/caron
		{
fill
		} def

	/emdash
		{
fill
		} def

	/AE
		{
726 350 moveto
726 388 719 425 706 460  curveto
692 494 674 526 650 554  curveto
212 112 lineto
239 88 270 70 304 57  curveto
338 44 374 38 414 38  curveto
456 38 497 46 535 62  curveto
573 78 606 101 634 129  curveto
662 157 685 190 701 228  curveto
717 266 726 306 726 350  curveto
closepath
614 589 moveto
587 611 556 629 522 642  curveto
488 655 452 662 414 662  curveto
370 662 330 653 292 637  curveto
254 621 221 598 193 570  curveto
165 542 142 509 126 471  curveto
110 433 102 392 102 350  curveto
102 312 108 276 121 242  curveto
133 208 151 178 175 150  curveto
614 589 lineto
614 589 lineto
closepath
781 350 moveto
781 299 771 251 752 207  curveto
732 162 706 123 673 90  curveto
640 57 601 31 557 12  curveto
512 -7 464 -17 414 -17  curveto
367 -17 323 -9 283 7  curveto
242 23 205 45 173 74  curveto
76 -24 lineto
39 13 lineto
136 111 lineto
108 143 86 180 70 220  curveto
54 260 47 304 47 350  curveto
47 400 56 448 76 493  curveto
95 537 121 576 155 609  curveto
188 642 227 668 271 688  curveto
315 707 363 717 414 717  curveto
464 717 508 708 548 692  curveto
587 675 622 654 654 628  curveto
744 719 lineto
780 684 lineto
689 593 lineto
717 561 740 524 756 482  curveto
772 440 781 396 781 350  curveto
closepath
fill
		} def

	/ordfeminine
		{
629 134 moveto
629 121 627 108 623 95  curveto
619 81 614 69 606 59  curveto
598 48 588 39 576 32  curveto
564 25 549 22 533 22  curveto
513 22 497 27 486 39  curveto
474 50 465 63 458 77  curveto
451 91 445 103 441 115  curveto
436 126 430 132 422 132  curveto
416 132 410 127 405 118  curveto
400 109 398 95 398 76  curveto
398 57 400 38 406 20  curveto
411 1 421 -17 437 -36  curveto
305 -36 lineto
320 -17 330 1 336 20  curveto
341 38 344 57 344 76  curveto
344 95 341 109 336 118  curveto
331 127 326 132 320 132  curveto
312 132 305 126 301 115  curveto
296 103 290 91 283 77  curveto
276 63 267 50 256 39  curveto
244 27 229 22 209 22  curveto
192 22 178 25 166 32  curveto
154 39 144 48 136 59  curveto
128 69 122 81 118 95  curveto
114 108 113 121 113 134  curveto
113 147 114 160 118 174  curveto
122 188 126 200 132 212  curveto
137 222 147 238 163 258  curveto
178 278 197 302 219 331  curveto
241 359 265 392 291 428  curveto
317 464 343 504 371 548  curveto
397 504 424 464 450 428  curveto
476 392 501 359 523 331  curveto
545 302 563 278 579 258  curveto
594 238 604 222 610 212  curveto
615 200 619 188 623 174  curveto
627 160 629 147 629 134  curveto
closepath
fill
		} def

	/Lslash
		{
fill
		} def

	/Oslash
		{
625 0 moveto
625 233 lineto
15 233 lineto
15 288 lineto
680 288 lineto
680 0 lineto
625 0 lineto
closepath
fill
		} def

	/OE
		{
fill
		} def

	/ordmasculine
		{
14 82 moveto
14 137 lineto
538 137 lineto
538 82 lineto
14 82 lineto
closepath
14 235 moveto
14 290 lineto
538 290 lineto
538 235 lineto
14 235 lineto
closepath
14 388 moveto
14 443 lineto
538 443 lineto
538 388 lineto
14 388 lineto
closepath
fill
		} def

	/ae
		{
436 916 moveto
416 904 397 890 378 874  curveto
358 858 341 843 325 827  curveto
309 811 293 792 277 771  curveto
261 750 245 727 231 703  curveto
216 678 202 652 189 625  curveto
176 597 165 569 156 541  curveto
145 509 136 475 128 440  curveto
120 405 113 370 108 335  curveto
102 300 98 266 96 232  curveto
93 198 92 166 92 136  curveto
92 -293 lineto
40 -293 lineto
40 134 lineto
40 192 42 245 47 294  curveto
52 343 59 388 68 430  curveto
77 471 88 509 100 544  curveto
112 578 126 611 142 642  curveto
160 678 178 710 198 738  curveto
218 766 239 792 262 815  curveto
284 837 309 858 336 876  curveto
362 894 391 910 423 926  curveto
436 916 lineto
436 916 lineto
closepath
fill
		} def

	/dotlessi
		{
fill
		} def

	/lslash
		{
fill
		} def

	/oslash
		{
450 503 moveto
450 441 447 386 442 336  curveto
437 286 430 240 421 199  curveto
412 157 401 120 389 86  curveto
376 52 362 20 348 -9  curveto
326 -52 304 -89 282 -119  curveto
259 -149 236 -174 212 -196  curveto
188 -218 164 -236 140 -251  curveto
116 -266 91 -280 67 -293  curveto
54 -283 lineto
72 -271 91 -257 111 -242  curveto
131 -226 151 -208 171 -187  curveto
191 -166 210 -142 230 -114  curveto
250 -86 269 -54 288 -17  curveto
306 21 321 56 333 90  curveto
344 124 354 161 364 203  curveto
368 225 373 248 377 273  curveto
381 298 385 323 388 349  curveto
391 374 393 399 395 424  curveto
397 448 398 472 398 494  curveto
398 926 lineto
450 926 lineto
450 503 lineto
450 503 lineto
closepath
fill
		} def

	/oe
		{
fill
		} def

	/germandbls
		{
572 230 moveto
540 205 513 182 489 161  curveto
465 139 442 119 422 99  curveto
402 79 382 60 364 41  curveto
346 21 327 1 308 -19  curveto
268 23 228 65 187 105  curveto
146 145 98 186 44 230  curveto
77 271 lineto
175 194 lineto
175 890 lineto
228 890 lineto
228 146 lineto
308 65 lineto
388 146 lineto
388 890 lineto
441 890 lineto
441 194 lineto
539 271 lineto
572 230 lineto
572 230 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/MaplePi exch definefont pop
/MaplePi findfont 20.0 scalefont setfont
(w) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
46 345
-5.0 -5.0 translate
48.0 364.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 95 340 OPL
95 345
-5.0 -5.0 translate
96.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1) show
Q
5.0 5.0 translate
Q
q
1 143 340 OPL
143 345
-5.0 -5.0 translate
145.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 192 340 OPL
192 345
-5.0 -5.0 translate
193.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
5.0 5.0 translate
Q
q
1 240 340 OPL
240 345
-5.0 -5.0 translate
242.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 289 340 OPL
289 345
-5.0 -5.0 translate
290.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(5) show
Q
5.0 5.0 translate
Q
q
1 337 340 OPL
337 345
-5.0 -5.0 translate
339.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(6) show
Q
5.0 5.0 translate
Q
q
1 386 340 OPL
386 345
-5.0 -5.0 translate
387.0 364.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(7) show
Q
5.0 5.0 translate
Q
Q
q
1 46 63 OPL
43 63
1 46 174 OPL
43 174
1 46 285 OPL
43 285
1 46 340 OPL
46 8
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
0 163 16 23 rc
4.0 182.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 20.0 scalefont setfont
(z) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
390.0 390.0 l
390.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 46 340 OPL
40 340
-5.0 -5.0 translate
35.0 350.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 46 229 OPL
40 229
-5.0 -5.0 translate
26.0 239.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.1) show
Q
5.0 5.0 translate
Q
q
1 46 119 OPL
40 119
-5.0 -5.0 translate
26.0 128.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.2) show
Q
5.0 5.0 translate
Q
q
1 46 8 OPL
40 8
-5.0 -5.0 translate
26.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0.3) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 887 2126 a
 /End PSfrag
 887 2126 a 887 1584 a
 /Hide PSfrag
 887 1584
a 18 1653 a Fu(PSfrag)32 b(replacemen)m(ts)p 18 1689
869 4 v 887 1693 a
 /Unhide PSfrag
 887 1693 a 815 1909 a
  {
 815 1909 a Fi(z)815
1909 y
  } 0/Place PSfrag
 815 1909 a 794 2126 a
  {
 794 2126 a Fi(!)794 2126
y
  } 1/Place PSfrag
 794 2126 a 0 2426 a Fu(Figure)38 b(13:)54 b(The)39
b(b)s(oundary)g(of)e(con)m(v)m(ergence)k(of)d(the)h(generating)f
(function)h(as)f(a)g(function)g(of)g Fr(!)j Fu(for)0
2642 y(the)34 b(three)h(dimensional)g(mo)s(del)g(when)g(the)f(force)g
(is)g(applied)h(in)f(the)h Fr(xy)t Fu(-plane)e(at)h(45)3258
2606 y Fp(o)3329 2642 y Fu(to)g(the)g Fr(x)p Fu(-axis.)0
2859 y(The)39 b(rectangular)f(h)m(yp)s(erb)s(ola)h(is)f(indep)s(enden)m
(t)i(of)e(the)g(v)-5 b(alue)39 b(of)e Fr(h)2568 2874
y Fp(x)2649 2859 y Fu(=)g Fr(h)2818 2874 y Fp(y)2859
2859 y Fu(.)60 b(The)39 b(three)f(curv)m(es)i(with)0
3076 y(p)s(oin)m(ts)33 b(mark)m(ed)h(corresp)s(ond)f(to)g
Fr(h)1312 3091 y Fp(x)1383 3076 y Fu(=)28 b Fr(h)1543
3091 y Fp(y)1612 3076 y Fu(=)g(1)k(\(top)g(curv)m(e\),)j
Fr(h)2390 3091 y Fp(x)2461 3076 y Fu(=)28 b Fr(h)2621
3091 y Fp(y)2690 3076 y Fu(=)g(1)p Fr(:)p Fu(2)k(and)g
Fr(h)3196 3091 y Fp(x)3268 3076 y Fu(=)c Fr(h)3428 3091
y Fp(y)3497 3076 y Fu(=)f(1)p Fr(:)p Fu(5.)0 3369 y(T)-8
b(emp)s(erley)35 b(H)d(N)h(V)g(1956)e Fs(Phys.)45 b(R)-5
b(ev.)43 b Fa(103)33 b Fu(1-16)1901 5682 y(33)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
